2020-01-13 03:56:46      Execution started.
2020-01-13 03:56:46      Qlik Sense Server Version     12.334.4
2020-01-13 03:56:46      CPU Target                    x64
2020-01-13 03:56:46      Operating System              Windows Server 2012 R2 Standard  (64 bit edition)
2020-01-13 03:56:46      Wow64 mode                    Not using Wow64
2020-01-13 03:56:46      Language                      0409 English English
2020-01-13 03:56:46      Country                       USA United States United States
2020-01-13 03:56:46      MDAC Version                  6.3.9600.16384
2020-01-13 03:56:46      MDAC Full Install Version     6.3.9600.16384
2020-01-13 03:56:46      PreferredCompression          2
2020-01-13 03:56:46      EnableParallelReload          1
2020-01-13 03:56:46      ParallelizeQvdLoads           1
2020-01-13 03:56:46      AutoSaveAfterReload           0
2020-01-13 03:56:46      BackupBeforeReload            0
2020-01-13 03:56:46      EnableFlushLog                0
2020-01-13 03:56:46      UserLogfileCharset            65001
2020-01-13 03:56:46      OdbcLoginTimeout              -1
2020-01-13 03:56:46      OdbcConnectionTimeout         -1
2020-01-13 03:56:46      LongestPossibleLine           1048576
2020-01-13 03:56:46      MaxCoreMask                   -1
2020-01-13 03:56:46      WebFileTimeout                0
2020-01-13 03:56:46      WebFileUserAgent              Mozilla/5.0
2020-01-13 03:56:46      DontUseInternetCache          1
2020-01-13 03:56:46      ScriptWantsDbWrite            false
2020-01-13 03:56:46      ScriptWantsExe                false
2020-01-13 03:56:46      ICU_FOR_CHARACTER_CLASSIFICATION true
2020-01-13 03:56:46      ICU_FOR_CODE_PAGES            true
2020-01-13 03:56:46      ICU_FOR_COLLATION             true
2020-01-13 03:56:46      ICU_FOR_LOCALE_INFO           true
2020-01-13 03:56:46      ICU_FOR_SUPPORT_INFO          true
2020-01-13 03:56:46      ICU_FOR_TIME_ZONE_INFO        true
2020-01-13 03:56:46      LogFile CodePage Used:        65001
2020-01-13 03:56:46      UseMemoryFillPattern          1
2020-01-13 03:56:46      ScriptMode                    Standard (limits system access)
2020-01-13 03:56:46      SequentialThreadCount         170
2020-01-13 03:56:46      NumberOfCores (effective)     56
2020-01-13 03:56:46      ReloadCodebase                Bnf
2020-01-13 03:56:47      Reload ID                     00d21521-2e06-48ea-9a34-3e948128cb83
2020-01-13 03:56:47      Reload Executed By            UserDirectory=INTERNAL; UserId=sa_scheduler
2020-01-13 03:56:47      Process Executing             Qlik Sense Server
2020-01-13 03:56:47      Process ID                    6380
2020-01-13 03:56:47      Grpc version                  5.0.0
2020-01-13 03:56:47      Protobuf version              3.4.0
2020-01-13 03:56:47 0004 Binary [lib://Apps/81157f91-e5c3-44a1-9119-35fc9d44aa2b]
2020-01-13 03:56:51 0009 SET vSiteName = 'sp5_il_nil_qlik'
2020-01-13 03:56:51 0012 SET vSVNConnection = 'qliksense'
2020-01-13 03:56:51 0013 SET vSVNSiteFolder = 'SiteInformation'
2020-01-13 03:56:51 0014 SET vSVNFolder = 'BETA_SECURITY_TEST\Security'
2020-01-13 03:56:51 0015 SET vDBname = 'sp5_il_nil_qlik'
2020-01-13 03:56:51 0014 SET vConnection = ['sp5_il_nil_qlik']
2020-01-13 03:56:51 0002 LET vStartTime = now()
2020-01-13 03:56:51 0003 SET ThousandSep=','
2020-01-13 03:56:51 0002 SET DecimalSep='.'
2020-01-13 03:56:51 0003 SET MoneyThousandSep=','
2020-01-13 03:56:51 0004 SET MoneyDecimalSep='.'
2020-01-13 03:56:51 0005 SET MoneyFormat='$#,##0.00;($#,##0.00)'
2020-01-13 03:56:51 0006 SET TimeFormat='h:mm:ss TT'
2020-01-13 03:56:51 0007 SET DateFormat='M/D/YYYY'
2020-01-13 03:56:51 0008 SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT'
2020-01-13 03:56:51 0009 SET FirstWeekDay=6
2020-01-13 03:56:51 0010 SET BrokenWeeks=1
2020-01-13 03:56:51 0011 SET ReferenceDay=0
2020-01-13 03:56:51 0012 SET FirstMonthOfYear=1
2020-01-13 03:56:51 0013 SET CollationLocale='en-US'
2020-01-13 03:56:51 0015 SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec'
2020-01-13 03:56:51 0016 SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December'
2020-01-13 03:56:51 0017 SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun'
2020-01-13 03:56:51 0018 SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday'
2020-01-13 03:56:51 0025 LIB CONNECT TO 'sp5_il_nil_qlik'
2020-01-13 03:56:54 0027 SET vConnection = 'SPData_Beta'
2020-01-13 03:56:54 0028 SET vQVDType = 'Extract'
2020-01-13 03:56:54 0029 LET vQVDTypePrefix = left(vQVDType, 1)
2020-01-13 03:56:54 0030 LET vFilenamePrefix = vQVDTypePrefix & '_' & upper(vDBname)
2020-01-13 03:56:54 0031 SET vQVDTransformType = 'Transform'
2020-01-13 03:56:54 0032 SET vStoreConnection = 'SPData_Beta'
2020-01-13 03:56:54 0033 SET vQVDStoreType = 'Security'
2020-01-13 03:56:54 0034 LET vStoreQVDTypePrefix = left(vQVDStoreType, 1)
2020-01-13 03:56:54 0036 LET vNumDateSet = num('2019-01-01')
2020-01-13 03:56:54 0038 LET vEntryExitDate = ('2019-01-01')
2020-01-13 03:56:54 0040 LET vCallRecordDate = ('2019-01-01')
2020-01-13 03:56:54 0004 USER:
2020-01-13 03:56:54 0005 select DISTINCT u1.username,e.user_id, p.provider_id from sp_user_eda_group e JOIN sp_eda_group_provider_tree p ON (e.eda_group_id = p.eda_group_id)
2020-01-13 03:56:54 0006 join sp_user u1 on e.user_id = u1.user_id
2020-01-13 03:56:54 0007 where u1.active = true
2020-01-13 03:56:54 0008   AND u1.username <> 'SVPDELETED'
2020-01-13 03:56:54 0009   and length(trim(u1.username)) > 0
2020-01-13 03:56:54 0010 UNION 
2020-01-13 03:56:54 0011 select DISTINCT u.username,u.user_id, u.provider_id from sp_user u
2020-01-13 03:56:54 0012 where u.active = true
2020-01-13 03:56:54 0013   AND u.username <> 'SVPDELETED'
2020-01-13 03:56:54 0014   and length(trim(u.username)) > 0
2020-01-13 03:56:55      	3 fields found: username, user_id, provider_id, 
2020-01-13 03:56:55      175,105 lines fetched
2020-01-13 03:56:55 0013 visibility_group_provider:
2020-01-13 03:56:55 0014 LEFT JOIN(USER)
2020-01-13 03:56:55 0015 LOAD
2020-01-13 03:56:55 0016     visibility_group_id,
2020-01-13 03:56:55 0017     provider_id
2020-01-13 03:56:55 0018 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_VISIBILITY_GROUP_PROVIDER_TREE.qvd]
2020-01-13 03:56:55 0019 (qvd)
2020-01-13 03:56:55      	2 fields found: visibility_group_id, provider_id, 
2020-01-13 03:56:55      36,026 lines fetched
2020-01-13 03:56:55      Joining/Keeping
2020-01-13 03:56:55 0021 USER_GROUP:
2020-01-13 03:56:55 0022 LOAD Distinct
2020-01-13 03:56:55 0023 	user_id,
2020-01-13 03:56:55 0024 	UPPER('ICOUNT' & '\' & username & '_' & user_id & '_' & provider_id) AS USERID,
2020-01-13 03:56:55 0025 	
2020-01-13 03:56:55 0026     provider_id,
2020-01-13 03:56:55 0027     visibility_group_id
2020-01-13 03:56:55 0028 RESIDENT USER
2020-01-13 03:56:57      	4 fields found: user_id, USERID, provider_id, visibility_group_id, 
2020-01-13 03:56:57      1,164,199 lines fetched
2020-01-13 03:56:57 0029 DROP TABLE USER
2020-01-13 03:56:57 0005 RECENT_CLIENT_tmp:
2020-01-13 03:56:57 0006 SELECT DISTINCT ee.client_id FROM sp_entry_exit ee
2020-01-13 03:56:57 0007   WHERE ((ee.exit_date IS NULL) OR (ee.exit_date >= '01/01/2019'))
2020-01-13 03:56:57 0008 UNION
2020-01-13 03:56:57 0009 SELECT distinct srv.client_id FROM sp_need_service srv
2020-01-13 03:56:57 0010   where (srv.client_id IS NOT NULL) AND
2020-01-13 03:56:57 0011         ((srv.provide_start_date >= '01/01/2019')
2020-01-13 03:56:57 0012           OR (srv.provide_end_date >= '01/01/2019')
2020-01-13 03:56:57 0013           OR ((srv.provide_end_date IS NULL) AND (srv.shelter_item = TRUE))
2020-01-13 03:56:57 0014           OR (srv.refer_date >= '01/01/2019')
2020-01-13 03:56:57 0015         )
2020-01-13 03:56:57 0016 UNION
2020-01-13 03:56:57 0017 SELECT DISTINCT n.client_id FROM sp_need n WHERE (n.client_id IS NOT NULL) and (n.date_set >= '01/01/2019')
2020-01-13 03:56:57 0018 UNION
2020-01-13 03:56:57 0019 SELECT DISTINCT g.client_id FROM sp_goal g WHERE (g.date_set >= '01/01/2019')
2020-01-13 03:56:57 0020 UNION
2020-01-13 03:56:57 0021 SELECT DISTINCT g.client_id FROM sp_goal_actionstep g WHERE (g.date_set >= '01/01/2019')
2020-01-13 03:56:57 0022 UNION
2020-01-13 03:56:57 0023 SELECT DISTINCT a.client_id FROM da_answer a WHERE (a.date_effective >= '01/01/2019')
2020-01-13 03:56:57 0024 UNION
2020-01-13 03:56:57 0025 SELECT DISTINCT a.client_id FROM da_recordset a WHERE (a.date_effective >= '01/01/2019')
2020-01-13 03:56:57 0026 UNION
2020-01-13 03:56:57 0027 SELECT DISTINCT c.client_id FROM sp_call_record c 
2020-01-13 03:56:57 0028   WHERE (c.client_id IS NOT NULL) AND ((c.end_date IS NULL) OR (c.end_date >= '01/01/2019'))
2020-01-13 03:57:01      	1 fields found: client_id, 
2020-01-13 03:57:01      43,825 lines fetched
2020-01-13 03:57:01 0006 Client_Group:
2020-01-13 03:57:01 0007 LOAD DISTINCT 
2020-01-13 03:57:01 0008  	provider_id,
2020-01-13 03:57:01 0009     visibility_group_id
2020-01-13 03:57:01 0010 RESIDENT USER_GROUP
2020-01-13 03:57:02      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:57:02      36,026 lines fetched
2020-01-13 03:57:02 0009 Client_tmp:
2020-01-13 03:57:02 0010 LOAD
2020-01-13 03:57:02 0011     client_id,
2020-01-13 03:57:02 0012     active
2020-01-13 03:57:02 0013 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT.qvd]
2020-01-13 03:57:02 0014 (qvd)
2020-01-13 03:57:02      	2 fields found: client_id, active, 
2020-01-13 03:57:02      223,634 lines fetched
2020-01-13 03:57:02 0016 Client:
2020-01-13 03:57:02 0017 NOCONCATENATE
2020-01-13 03:57:02 0018 LOAD
2020-01-13 03:57:02 0019 	client_id
2020-01-13 03:57:02 0020 RESIDENT Client_tmp
2020-01-13 03:57:02 0021 WHERE match(active, 1)
2020-01-13 03:57:02      	1 fields found: client_id, 
2020-01-13 03:57:02      211,232 lines fetched
2020-01-13 03:57:02 0023 DROP TABLE Client_tmp
2020-01-13 03:57:02 0026 keep_only_recent_clients_tmp:
2020-01-13 03:57:02 0027 INNER JOIN (Client)
2020-01-13 03:57:02 0028 LOAD
2020-01-13 03:57:02 0029 	client_id
2020-01-13 03:57:02 0030 RESIDENT RECENT_CLIENT_tmp
2020-01-13 03:57:02      	1 fields found: client_id, 
2020-01-13 03:57:02      43,825 lines fetched
2020-01-13 03:57:02      Joining/Keeping
2020-01-13 03:57:02 0034 client_visibility_tmp:
2020-01-13 03:57:02 0035 INNER JOIN (Client)
2020-01-13 03:57:02 0036 LOAD
2020-01-13 03:57:02 0037 
2020-01-13 03:57:02 0038     client_id,
2020-01-13 03:57:02 0039     visibility_group_id,
2020-01-13 03:57:02 0040     visible
2020-01-13 03:57:02 0041 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENTVISIBILITY.qvd]
2020-01-13 03:57:02 0042 (qvd)
2020-01-13 03:57:03      	3 fields found: client_id, visibility_group_id, visible, 
2020-01-13 03:57:03      245,844 lines fetched
2020-01-13 03:57:03      Joining/Keeping
2020-01-13 03:57:03 0044 Client_visibility:
2020-01-13 03:57:03 0045 LEFT JOIN (Client_Group)
2020-01-13 03:57:03 0046 LOAD DISTINCT
2020-01-13 03:57:03 0047     visibility_group_id,
2020-01-13 03:57:03 0048     visible,
2020-01-13 03:57:03 0049     client_id
2020-01-13 03:57:03 0050 RESIDENT Client
2020-01-13 03:57:03      	3 fields found: visibility_group_id, visible, client_id, 
2020-01-13 03:57:03      48,654 lines fetched
2020-01-13 03:57:03      Joining/Keeping
2020-01-13 03:57:05 0052 DROP TABLE Client
2020-01-13 03:57:05 0054 Visible:
2020-01-13 03:57:05 0055 Load DISTINCT
2020-01-13 03:57:05 0056 	provider_id,
2020-01-13 03:57:05 0057     client_id,
2020-01-13 03:57:05 0058     1 AS Visible
2020-01-13 03:57:05 0059 RESIDENT Client_Group
2020-01-13 03:57:05 0060 WHERE visible = 1
2020-01-13 03:57:13      	3 fields found: provider_id, client_id, Visible, 
2020-01-13 03:57:13      40,784,788 lines fetched
2020-01-13 03:57:13 0062 not_Visible:
2020-01-13 03:57:13 0063 LEFT JOIN(Visible)
2020-01-13 03:57:13 0064 Load DISTINCT
2020-01-13 03:57:13 0065 	provider_id,
2020-01-13 03:57:13 0066     client_id,
2020-01-13 03:57:13 0067     1 AS not_Visible
2020-01-13 03:57:13 0068 RESIDENT Client_Group
2020-01-13 03:57:13 0069 WHERE visible = 0
2020-01-13 03:57:40      	3 fields found: provider_id, client_id, not_Visible, 
2020-01-13 03:57:40      27,664 lines fetched
2020-01-13 03:57:40      Joining/Keeping
2020-01-13 03:57:49 0071 DROP TABLE Client_Group
2020-01-13 03:57:49 0073 client_visibility:
2020-01-13 03:57:49 0074 NOCONCATENATE
2020-01-13 03:57:49 0075 LOAD DISTINCT
2020-01-13 03:57:49 0076 	provider_id,
2020-01-13 03:57:49 0077 	client_id AS [Client Id]
2020-01-13 03:57:49 0078 RESIDENT Visible
2020-01-13 03:57:49 0079 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 03:57:57      	2 fields found: provider_id, Client Id, 
2020-01-13 03:57:57      40,780,438 lines fetched
2020-01-13 03:57:57 0081 DROP TABLE Visible
2020-01-13 03:57:57 0083 client_tmp:
2020-01-13 03:57:57 0084 LEFT JOIN(client_visibility)
2020-01-13 03:57:57 0085 LOAD
2020-01-13 03:57:57 0086     [Client Id],
2020-01-13 03:57:57 0087     [Client Provider Created By Id]
2020-01-13 03:57:57 0088 FROM [lib://SPData_Beta/Transform/sp5_il_nil_qlik/E_DIM_Client.qvd]
2020-01-13 03:57:57 0089 (qvd)
2020-01-13 03:57:57      	2 fields found: Client Id, Client Provider Created By Id, 
2020-01-13 03:57:57      229,794 lines fetched
2020-01-13 03:57:57      Joining/Keeping
2020-01-13 03:58:12 0007 Entry_Exit_Group:
2020-01-13 03:58:12 0008 LOAD DISTINCT 
2020-01-13 03:58:12 0009  	provider_id,
2020-01-13 03:58:12 0010     visibility_group_id
2020-01-13 03:58:12 0011 RESIDENT USER_GROUP
2020-01-13 03:58:13      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:58:13      36,026 lines fetched
2020-01-13 03:58:13 0007 Entry_Exit_tmp:
2020-01-13 03:58:13 0008 LOAD
2020-01-13 03:58:13 0009     entry_exit_id,
2020-01-13 03:58:13 0010     active
2020-01-13 03:58:13 0011 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_ENTRY_EXIT.qvd]
2020-01-13 03:58:13 0012 (qvd)
2020-01-13 03:58:13 0013 WHERE (isNull(num(exit_date)) OR (num(exit_date) >= '43466')) AND (covered_by_roi = 1)
2020-01-13 03:58:13      	2 fields found: entry_exit_id, active, 
2020-01-13 03:58:13      31,827 lines fetched
2020-01-13 03:58:13 0015 Entry_Exit:
2020-01-13 03:58:13 0016 NOCONCATENATE
2020-01-13 03:58:13 0017 LOAD
2020-01-13 03:58:13 0018 	entry_exit_id
2020-01-13 03:58:13 0019 RESIDENT Entry_Exit_tmp
2020-01-13 03:58:13 0020 WHERE match(active, 1)
2020-01-13 03:58:13      	1 fields found: entry_exit_id, 
2020-01-13 03:58:13      31,827 lines fetched
2020-01-13 03:58:13 0025 INNER JOIN(Entry_Exit_tmp)
2020-01-13 03:58:13 0026 LOAD
2020-01-13 03:58:13 0027     entry_exit_id,
2020-01-13 03:58:13 0028     visibility_group_id,
2020-01-13 03:58:13 0029     visible
2020-01-13 03:58:13 0030 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_ENTRY_EXITVISIBILITY.qvd]
2020-01-13 03:58:13 0031 (qvd)
2020-01-13 03:58:13      	3 fields found: entry_exit_id, visibility_group_id, visible, 
2020-01-13 03:58:13      151,363 lines fetched
2020-01-13 03:58:13      Joining/Keeping
2020-01-13 03:58:13 0033 RENAME table Entry_Exit_tmp to Entry_Exit_VIS
2020-01-13 03:58:13 0035 enrty_exit_visibility_tmp:
2020-01-13 03:58:13 0036 INNER JOIN (Entry_Exit)
2020-01-13 03:58:13 0037 LOAD
2020-01-13 03:58:13 0038     entry_exit_id,
2020-01-13 03:58:13 0039     visibility_group_id,
2020-01-13 03:58:13 0040     visible
2020-01-13 03:58:13 0041 RESIDENT Entry_Exit_VIS
2020-01-13 03:58:13      	3 fields found: entry_exit_id, visibility_group_id, visible, 
2020-01-13 03:58:13      23,362 lines fetched
2020-01-13 03:58:13      Joining/Keeping
2020-01-13 03:58:13 0042 DROP TABLE Entry_Exit_VIS
2020-01-13 03:58:13 0044 Entry_Exit_visibility:
2020-01-13 03:58:13 0045 LEFT JOIN (Entry_Exit_Group)
2020-01-13 03:58:13 0046 LOAD DISTINCT
2020-01-13 03:58:13 0047     visibility_group_id,
2020-01-13 03:58:13 0048     visible,
2020-01-13 03:58:13 0049     entry_exit_id
2020-01-13 03:58:13 0050 RESIDENT Entry_Exit
2020-01-13 03:58:13      	3 fields found: visibility_group_id, visible, entry_exit_id, 
2020-01-13 03:58:13      23,357 lines fetched
2020-01-13 03:58:13      Joining/Keeping
2020-01-13 03:58:14 0052 DROP TABLE Entry_Exit
2020-01-13 03:58:14 0054 Visible:
2020-01-13 03:58:14 0055 Load DISTINCT
2020-01-13 03:58:14 0056 	provider_id,
2020-01-13 03:58:14 0057     entry_exit_id,
2020-01-13 03:58:14 0058     1 AS Visible
2020-01-13 03:58:14 0059 RESIDENT Entry_Exit_Group
2020-01-13 03:58:14 0060 WHERE visible = 1
2020-01-13 03:58:15      	3 fields found: provider_id, entry_exit_id, Visible, 
2020-01-13 03:58:15      6,915,168 lines fetched
2020-01-13 03:58:16 0062 not_Visible:
2020-01-13 03:58:16 0063 LEFT JOIN(Visible)
2020-01-13 03:58:16 0064 Load DISTINCT
2020-01-13 03:58:16 0065 	provider_id,
2020-01-13 03:58:16 0066     entry_exit_id,
2020-01-13 03:58:16 0067     1 AS not_Visible
2020-01-13 03:58:16 0068 RESIDENT Entry_Exit_Group
2020-01-13 03:58:16 0069 WHERE visible = 0
2020-01-13 03:58:20      	3 fields found: provider_id, entry_exit_id, not_Visible, 
2020-01-13 03:58:20      175,812 lines fetched
2020-01-13 03:58:20      Joining/Keeping
2020-01-13 03:58:22 0071 DROP TABLE Entry_Exit_Group
2020-01-13 03:58:22 0073 Entry_Exit_visibility:
2020-01-13 03:58:22 0074 NOCONCATENATE
2020-01-13 03:58:22 0075 LOAD DISTINCT
2020-01-13 03:58:22 0076 	provider_id,
2020-01-13 03:58:22 0077 	entry_exit_id AS [Entry Exit Id]
2020-01-13 03:58:22 0078 RESIDENT Visible
2020-01-13 03:58:22 0079 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 03:58:23      	2 fields found: provider_id, Entry Exit Id, 
2020-01-13 03:58:23      6,915,168 lines fetched
2020-01-13 03:58:24 0081 DROP TABLE Visible
2020-01-13 03:58:24 0084 LEFT JOIN(Entry_Exit_visibility)
2020-01-13 03:58:24 0085 LOAD
2020-01-13 03:58:24 0086     [Entry Exit Id],
2020-01-13 03:58:24 0087     [Entry Exit Provider Created By Id],
2020-01-13 03:58:24 0088 	%EEClientId
2020-01-13 03:58:24 0089 FROM [lib://SPData_Beta/Transform/sp5_il_nil_qlik/E_DIM_Entry_Exit.qvd]
2020-01-13 03:58:24 0090 (qvd)
2020-01-13 03:58:24      	3 fields found: Entry Exit Id, Entry Exit Provider Created By Id, %EEClientId, 
2020-01-13 03:58:24      306,978 lines fetched
2020-01-13 03:58:24      Joining/Keeping
2020-01-13 03:58:34 0008 Case_Manager_Group:
2020-01-13 03:58:34 0009 LOAD DISTINCT 
2020-01-13 03:58:34 0010  	provider_id,
2020-01-13 03:58:34 0011     visibility_group_id
2020-01-13 03:58:34 0012 RESIDENT USER_GROUP
2020-01-13 03:58:34      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:58:34      36,026 lines fetched
2020-01-13 03:58:34 0007 Case_Manager_tmp:
2020-01-13 03:58:34 0008 LOAD
2020-01-13 03:58:34 0009     case_manager_id,
2020-01-13 03:58:34 0010     active,
2020-01-13 03:58:34 0011 	client_id
2020-01-13 03:58:34 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CASE_MANAGER.qvd]
2020-01-13 03:58:34 0013 (qvd)
2020-01-13 03:58:34 0014 WHERE (isNull(num(date_ended)) OR (num(date_ended) >= '43466'))
2020-01-13 03:58:34      	3 fields found: case_manager_id, active, client_id, 
2020-01-13 03:58:34      38,968 lines fetched
2020-01-13 03:58:34 0016 Case_Manager:
2020-01-13 03:58:34 0017 NOCONCATENATE
2020-01-13 03:58:34 0018 LOAD
2020-01-13 03:58:34 0019 	case_manager_id,
2020-01-13 03:58:34 0020 	client_id
2020-01-13 03:58:34 0021 RESIDENT Case_Manager_tmp
2020-01-13 03:58:34 0022 WHERE match(active, 1)
2020-01-13 03:58:34      	2 fields found: case_manager_id, client_id, 
2020-01-13 03:58:34      38,968 lines fetched
2020-01-13 03:58:34 0024 DROP TABLE Case_Manager_tmp
2020-01-13 03:58:34 0026 INNER JOIN (Case_Manager)
2020-01-13 03:58:34 0027 LOAD
2020-01-13 03:58:34 0028     case_manager_id,
2020-01-13 03:58:34 0029     visibility_group_id,
2020-01-13 03:58:34 0030     visible
2020-01-13 03:58:34 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CASE_MANAGERVISIBILITY.qvd]
2020-01-13 03:58:34 0032 (qvd)
2020-01-13 03:58:34      	3 fields found: case_manager_id, visibility_group_id, visible, 
2020-01-13 03:58:34      72,532 lines fetched
2020-01-13 03:58:34      Joining/Keeping
2020-01-13 03:58:35 0034 Case_Manager_visibility:
2020-01-13 03:58:35 0035 LEFT JOIN (Case_Manager_Group)
2020-01-13 03:58:35 0036 LOAD DISTINCT
2020-01-13 03:58:35 0037     visibility_group_id,
2020-01-13 03:58:35 0038     visible,
2020-01-13 03:58:35 0039     case_manager_id,
2020-01-13 03:58:35 0040 	client_id
2020-01-13 03:58:35 0041 RESIDENT Case_Manager
2020-01-13 03:58:35      	4 fields found: visibility_group_id, visible, case_manager_id, client_id, 
2020-01-13 03:58:35      33,331 lines fetched
2020-01-13 03:58:35      Joining/Keeping
2020-01-13 03:58:35 0043 DROP TABLE Case_Manager
2020-01-13 03:58:35 0045 Visible:
2020-01-13 03:58:35 0046 Load DISTINCT
2020-01-13 03:58:35 0047 	provider_id,
2020-01-13 03:58:35 0048     case_manager_id,
2020-01-13 03:58:35 0049     1 AS Visible,
2020-01-13 03:58:35 0050 	client_id
2020-01-13 03:58:35 0051 RESIDENT Case_Manager_Group
2020-01-13 03:58:35 0052 WHERE visible = 1
2020-01-13 03:58:37      	4 fields found: provider_id, case_manager_id, Visible, client_id, 
2020-01-13 03:58:37      4,745,474 lines fetched
2020-01-13 03:58:37 0054 not_Visible:
2020-01-13 03:58:37 0055 LEFT JOIN(Visible)
2020-01-13 03:58:37 0056 Load DISTINCT
2020-01-13 03:58:37 0057 	provider_id,
2020-01-13 03:58:37 0058     case_manager_id,
2020-01-13 03:58:37 0059     1 AS not_Visible,
2020-01-13 03:58:37 0060 	client_id
2020-01-13 03:58:37 0061 RESIDENT Case_Manager_Group
2020-01-13 03:58:37 0062 WHERE visible = 0
2020-01-13 03:58:40      	4 fields found: provider_id, case_manager_id, not_Visible, client_id, 
2020-01-13 03:58:40      172,181 lines fetched
2020-01-13 03:58:40      Joining/Keeping
2020-01-13 03:58:41 0064 DROP TABLE Case_Manager_Group
2020-01-13 03:58:41 0066 Case_Manager_visibility:
2020-01-13 03:58:41 0067 NOCONCATENATE
2020-01-13 03:58:41 0068 LOAD DISTINCT
2020-01-13 03:58:41 0069 	provider_id,
2020-01-13 03:58:41 0070 	case_manager_id AS [Case Manager Id],
2020-01-13 03:58:41 0071 	client_id AS %casemanagerclientid
2020-01-13 03:58:41 0072 RESIDENT Visible
2020-01-13 03:58:41 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 03:58:43      	3 fields found: provider_id, Case Manager Id, %casemanagerclientid, 
2020-01-13 03:58:43      4,573,526 lines fetched
2020-01-13 03:58:43 0075 DROP TABLE Visible
2020-01-13 03:58:43 0077 Case_Manager_visibility_tmp:
2020-01-13 03:58:43 0078 LEFT JOIN(Case_Manager_visibility)
2020-01-13 03:58:43 0079 LOAD
2020-01-13 03:58:43 0080     [Case Manager Id]
2020-01-13 03:58:43 0081 RESIDENt DIM_Case_Manager
2020-01-13 03:58:43      	1 fields found: Case Manager Id, 
2020-01-13 03:58:43      38,968 lines fetched
2020-01-13 03:58:43      Joining/Keeping
2020-01-13 03:58:44 0009 Goal_Group:
2020-01-13 03:58:44 0010 LOAD DISTINCT 
2020-01-13 03:58:44 0011  	provider_id,
2020-01-13 03:58:44 0012     visibility_group_id
2020-01-13 03:58:44 0013 RESIDENT USER_GROUP
2020-01-13 03:58:44      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:58:44      36,026 lines fetched
2020-01-13 03:58:45 0007 Goal_tmp:
2020-01-13 03:58:45 0008 LOAD
2020-01-13 03:58:45 0009     goal_id,
2020-01-13 03:58:45 0010     active,
2020-01-13 03:58:45 0011 	client_id
2020-01-13 03:58:45 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOAL.qvd]
2020-01-13 03:58:45 0013 (qvd)
2020-01-13 03:58:45 0014 WHERE num(date_set) >= '43466'
2020-01-13 03:58:45      	3 fields found: goal_id, active, client_id, 
2020-01-13 03:58:45      6,449 lines fetched
2020-01-13 03:58:45 0016 Goal:
2020-01-13 03:58:45 0017 NOCONCATENATE
2020-01-13 03:58:45 0018 LOAD
2020-01-13 03:58:45 0019 	goal_id,
2020-01-13 03:58:45 0020 	client_id
2020-01-13 03:58:45 0021 RESIDENT Goal_tmp
2020-01-13 03:58:45 0022 WHERE match(active, 1)
2020-01-13 03:58:45      	2 fields found: goal_id, client_id, 
2020-01-13 03:58:45      6,449 lines fetched
2020-01-13 03:58:45 0024 DROP TABLE Goal_tmp
2020-01-13 03:58:45 0026 INNER JOIN (Goal)
2020-01-13 03:58:45 0027 LOAD
2020-01-13 03:58:45 0028     goal_id,
2020-01-13 03:58:45 0029     visibility_group_id,
2020-01-13 03:58:45 0030     visible
2020-01-13 03:58:45 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOALVISIBILITY.qvd]
2020-01-13 03:58:45 0032 (qvd)
2020-01-13 03:58:45      	3 fields found: goal_id, visibility_group_id, visible, 
2020-01-13 03:58:45      126,459 lines fetched
2020-01-13 03:58:45      Joining/Keeping
2020-01-13 03:58:45 0034 Goal_visibility:
2020-01-13 03:58:45 0035 LEFT JOIN (Goal_Group)
2020-01-13 03:58:45 0036 LOAD DISTINCT
2020-01-13 03:58:45 0037     visibility_group_id,
2020-01-13 03:58:45 0038     visible,
2020-01-13 03:58:45 0039     goal_id,
2020-01-13 03:58:45 0040 	client_id
2020-01-13 03:58:45 0041 RESIDENT Goal
2020-01-13 03:58:45      	4 fields found: visibility_group_id, visible, goal_id, client_id, 
2020-01-13 03:58:45      3,808 lines fetched
2020-01-13 03:58:45      Joining/Keeping
2020-01-13 03:58:45 0043 DROP TABLE Goal
2020-01-13 03:58:45 0045 Visible:
2020-01-13 03:58:45 0046 Load DISTINCT
2020-01-13 03:58:45 0047 	provider_id,
2020-01-13 03:58:45 0048     goal_id,
2020-01-13 03:58:45 0049     1 AS Visible,
2020-01-13 03:58:45 0050 	client_id
2020-01-13 03:58:45 0051 RESIDENT Goal_Group
2020-01-13 03:58:45 0052 WHERE visible = 1
2020-01-13 03:58:45      	4 fields found: provider_id, goal_id, Visible, client_id, 
2020-01-13 03:58:45      118,936 lines fetched
2020-01-13 03:58:45 0054 not_Visible:
2020-01-13 03:58:45 0055 LEFT JOIN(Visible)
2020-01-13 03:58:45 0056 Load DISTINCT
2020-01-13 03:58:45 0057 	provider_id,
2020-01-13 03:58:45 0058     goal_id,
2020-01-13 03:58:45 0059     1 AS not_Visible,
2020-01-13 03:58:45 0060 	client_id
2020-01-13 03:58:45 0061 RESIDENT Goal_Group
2020-01-13 03:58:45 0062 WHERE visible = 0
2020-01-13 03:58:45      	4 fields found: provider_id, goal_id, not_Visible, client_id, 
2020-01-13 03:58:45      0 lines fetched
2020-01-13 03:58:45      Joining/Keeping
2020-01-13 03:58:45 0064 DROP TABLE Goal_Group
2020-01-13 03:58:45 0066 Goal_visibility:
2020-01-13 03:58:45 0067 NOCONCATENATE
2020-01-13 03:58:45 0068 LOAD DISTINCT
2020-01-13 03:58:45 0069 	provider_id,
2020-01-13 03:58:45 0070 	goal_id AS [Goal Id],
2020-01-13 03:58:45 0071 	client_id AS %goalclientid
2020-01-13 03:58:45 0072 RESIDENT Visible
2020-01-13 03:58:45 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 03:58:46      	3 fields found: provider_id, Goal Id, %goalclientid, 
2020-01-13 03:58:46      118,936 lines fetched
2020-01-13 03:58:46 0075 DROP TABLE Visible
2020-01-13 03:58:46 0077 Goal_visibility_tmp:
2020-01-13 03:58:46 0078 LEFT JOIN(Goal_visibility)
2020-01-13 03:58:46 0079 LOAD
2020-01-13 03:58:46 0080     [Goal Id]
2020-01-13 03:58:46 0081 RESIDENt DIM_Goal
2020-01-13 03:58:46      	1 fields found: Goal Id, 
2020-01-13 03:58:46      6,449 lines fetched
2020-01-13 03:58:46      Joining/Keeping
2020-01-13 03:58:46 0010 Goal_Actionstep_Group:
2020-01-13 03:58:46 0011 LOAD DISTINCT 
2020-01-13 03:58:46 0012  	provider_id,
2020-01-13 03:58:46 0013     visibility_group_id
2020-01-13 03:58:46 0014 RESIDENT USER_GROUP
2020-01-13 03:58:46      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:58:46      36,026 lines fetched
2020-01-13 03:58:46 0007 Goal_Actionstep_tmp:
2020-01-13 03:58:46 0008 LOAD
2020-01-13 03:58:46 0009     goal_actionstep_id,
2020-01-13 03:58:46 0010     active,
2020-01-13 03:58:46 0011 	goal_id
2020-01-13 03:58:46 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOAL_ACTIONSTEP.qvd]
2020-01-13 03:58:46 0013 (qvd)
2020-01-13 03:58:46 0014 WHERE num(date_set) >= '43466'
2020-01-13 03:58:46      	3 fields found: goal_actionstep_id, active, goal_id, 
2020-01-13 03:58:46      198 lines fetched
2020-01-13 03:58:46 0016 Goal_Actionstep:
2020-01-13 03:58:46 0017 NOCONCATENATE
2020-01-13 03:58:46 0018 LOAD
2020-01-13 03:58:46 0019 	goal_actionstep_id,
2020-01-13 03:58:46 0020 	goal_id
2020-01-13 03:58:46 0021 RESIDENT Goal_Actionstep_tmp
2020-01-13 03:58:46 0022 WHERE match(active, 1)
2020-01-13 03:58:46      	2 fields found: goal_actionstep_id, goal_id, 
2020-01-13 03:58:46      198 lines fetched
2020-01-13 03:58:46 0024 DROP TABLE Goal_Actionstep_tmp
2020-01-13 03:58:46 0026 INNER JOIN (Goal_Actionstep)
2020-01-13 03:58:46 0027 LOAD
2020-01-13 03:58:46 0028     goal_actionstep_id,
2020-01-13 03:58:46 0029     visibility_group_id,
2020-01-13 03:58:46 0030     visible
2020-01-13 03:58:46 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOAL_ACTIONSTEPVISIBILITY.qvd]
2020-01-13 03:58:46 0032 (qvd)
2020-01-13 03:58:46      	3 fields found: goal_actionstep_id, visibility_group_id, visible, 
2020-01-13 03:58:46      6,514 lines fetched
2020-01-13 03:58:46      Joining/Keeping
2020-01-13 03:58:46 0034 Goal_Actionstep_visibility:
2020-01-13 03:58:46 0035 LEFT JOIN (Goal_Actionstep_Group)
2020-01-13 03:58:46 0036 LOAD DISTINCT
2020-01-13 03:58:46 0037     visibility_group_id,
2020-01-13 03:58:46 0038     visible,
2020-01-13 03:58:46 0039     goal_actionstep_id,
2020-01-13 03:58:46 0040 	goal_id
2020-01-13 03:58:46 0041 RESIDENT Goal_Actionstep
2020-01-13 03:58:46      	4 fields found: visibility_group_id, visible, goal_actionstep_id, goal_id, 
2020-01-13 03:58:46      27 lines fetched
2020-01-13 03:58:46      Joining/Keeping
2020-01-13 03:58:46 0043 DROP TABLE Goal_Actionstep
2020-01-13 03:58:46 0045 Visible:
2020-01-13 03:58:46 0046 Load DISTINCT
2020-01-13 03:58:46 0047 	provider_id,
2020-01-13 03:58:46 0048     goal_actionstep_id,
2020-01-13 03:58:46 0049     1 AS Visible,
2020-01-13 03:58:46 0050 	goal_id
2020-01-13 03:58:46 0051 RESIDENT Goal_Actionstep_Group
2020-01-13 03:58:46 0052 WHERE visible = 1
2020-01-13 03:58:46      	4 fields found: provider_id, goal_actionstep_id, Visible, goal_id, 
2020-01-13 03:58:46      1,795 lines fetched
2020-01-13 03:58:46 0054 not_Visible:
2020-01-13 03:58:46 0055 LEFT JOIN(Visible)
2020-01-13 03:58:46 0056 Load DISTINCT
2020-01-13 03:58:46 0057 	provider_id,
2020-01-13 03:58:46 0058     goal_actionstep_id,
2020-01-13 03:58:46 0059     1 AS not_Visible,
2020-01-13 03:58:46 0060 	goal_id
2020-01-13 03:58:46 0061 RESIDENT Goal_Actionstep_Group
2020-01-13 03:58:46 0062 WHERE visible = 0
2020-01-13 03:58:47      	4 fields found: provider_id, goal_actionstep_id, not_Visible, goal_id, 
2020-01-13 03:58:47      644 lines fetched
2020-01-13 03:58:47      Joining/Keeping
2020-01-13 03:58:47 0064 DROP TABLE Goal_Actionstep_Group
2020-01-13 03:58:47 0066 Goal_Actionstep_visibility:
2020-01-13 03:58:47 0067 NOCONCATENATE
2020-01-13 03:58:47 0068 LOAD DISTINCT
2020-01-13 03:58:47 0069 	provider_id,
2020-01-13 03:58:47 0070 	goal_actionstep_id AS [Goal Actionstep Id],
2020-01-13 03:58:47 0071 	goal_id AS %goalactionstepgoalid
2020-01-13 03:58:47 0072 RESIDENT Visible
2020-01-13 03:58:47 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 03:58:47      	3 fields found: provider_id, Goal Actionstep Id, %goalactionstepgoalid, 
2020-01-13 03:58:47      1,151 lines fetched
2020-01-13 03:58:47 0075 DROP TABLE Visible
2020-01-13 03:58:47 0077 Goal_Actionstep_visibility_tmp:
2020-01-13 03:58:47 0078 LEFT JOIN(Goal_Actionstep_visibility)
2020-01-13 03:58:47 0079 LOAD
2020-01-13 03:58:47 0080     [Goal Actionstep Id]
2020-01-13 03:58:47 0081 RESIDENt DIM_Goal_Actionstep
2020-01-13 03:58:47      	1 fields found: Goal Actionstep Id, 
2020-01-13 03:58:47      198 lines fetched
2020-01-13 03:58:47      Joining/Keeping
2020-01-13 03:58:47 0011 Need_Group:
2020-01-13 03:58:47 0012 LOAD DISTINCT 
2020-01-13 03:58:47 0013  	provider_id,
2020-01-13 03:58:47 0014     visibility_group_id
2020-01-13 03:58:47 0015 RESIDENT USER_GROUP
2020-01-13 03:58:47      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 03:58:47      36,026 lines fetched
2020-01-13 03:58:47 0007 Need_tmp:
2020-01-13 03:58:47 0008 LOAD
2020-01-13 03:58:47 0009     need_id,
2020-01-13 03:58:47 0010     active,
2020-01-13 03:58:47 0011 	client_id
2020-01-13 03:58:47 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_NEED.qvd]
2020-01-13 03:58:47 0013 (qvd)
2020-01-13 03:58:47 0014 WHERE num(date_set) >= '43466'
2020-01-13 03:58:48      	3 fields found: need_id, active, client_id, 
2020-01-13 03:58:48      459,008 lines fetched
2020-01-13 03:58:48 0016 Need:
2020-01-13 03:58:48 0017 NOCONCATENATE
2020-01-13 03:58:48 0018 LOAD
2020-01-13 03:58:48 0019 	need_id,
2020-01-13 03:58:48 0020 	client_id
2020-01-13 03:58:48 0021 RESIDENT Need_tmp
2020-01-13 03:58:48 0022 WHERE match(active, 1)
2020-01-13 03:58:48      	2 fields found: need_id, client_id, 
2020-01-13 03:58:48      459,008 lines fetched
2020-01-13 03:58:48 0024 DROP TABLE Need_tmp
2020-01-13 03:58:48 0026 INNER JOIN (Need)
2020-01-13 03:58:48 0027 LOAD
2020-01-13 03:58:48 0028     need_id,
2020-01-13 03:58:48 0029     visibility_group_id,
2020-01-13 03:58:48 0030     visible
2020-01-13 03:58:48 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_NEEDVISIBILITY.qvd]
2020-01-13 03:58:48 0032 (qvd)
2020-01-13 03:58:52      	3 fields found: need_id, visibility_group_id, visible, 
2020-01-13 03:58:52      10,917,931 lines fetched
2020-01-13 03:58:52      Joining/Keeping
2020-01-13 03:58:54 0034 Need_visibility:
2020-01-13 03:58:54 0035 LEFT JOIN (Need_Group)
2020-01-13 03:58:54 0036 LOAD DISTINCT
2020-01-13 03:58:54 0037     visibility_group_id,
2020-01-13 03:58:54 0038     visible,
2020-01-13 03:58:54 0039     need_id,
2020-01-13 03:58:54 0040 	client_id
2020-01-13 03:58:54 0041 RESIDENT Need
2020-01-13 03:58:54      	4 fields found: visibility_group_id, visible, need_id, client_id, 
2020-01-13 03:58:54      338,745 lines fetched
2020-01-13 03:58:54      Joining/Keeping
2020-01-13 03:58:59 0043 DROP TABLE Need
2020-01-13 03:58:59 0045 Visible:
2020-01-13 03:58:59 0046 Load DISTINCT
2020-01-13 03:58:59 0047 	provider_id,
2020-01-13 03:58:59 0048     need_id,
2020-01-13 03:58:59 0049     1 AS Visible,
2020-01-13 03:58:59 0050 	client_id
2020-01-13 03:58:59 0051 RESIDENT Need_Group
2020-01-13 03:58:59 0052 WHERE visible = 1
2020-01-13 03:59:12      	4 fields found: provider_id, need_id, Visible, client_id, 
2020-01-13 03:59:12      51,125,384 lines fetched
2020-01-13 03:59:12 0054 not_Visible:
2020-01-13 03:59:12 0055 LEFT JOIN(Visible)
2020-01-13 03:59:12 0056 Load DISTINCT
2020-01-13 03:59:12 0057 	provider_id,
2020-01-13 03:59:12 0058     need_id,
2020-01-13 03:59:12 0059     1 AS not_Visible,
2020-01-13 03:59:12 0060 	client_id
2020-01-13 03:59:12 0061 RESIDENT Need_Group
2020-01-13 03:59:12 0062 WHERE visible = 0
2020-01-13 03:59:46      	4 fields found: provider_id, need_id, not_Visible, client_id, 
2020-01-13 03:59:46      4,545,352 lines fetched
2020-01-13 03:59:46      Joining/Keeping
2020-01-13 04:00:00 0064 DROP TABLE Need_Group
2020-01-13 04:00:00 0066 Need_visibility:
2020-01-13 04:00:00 0067 NOCONCATENATE
2020-01-13 04:00:00 0068 LOAD DISTINCT
2020-01-13 04:00:00 0069 	provider_id,
2020-01-13 04:00:00 0070 	need_id AS [Need Id],
2020-01-13 04:00:00 0071 	client_id AS %needclientid
2020-01-13 04:00:00 0072 RESIDENT Visible
2020-01-13 04:00:00 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:00:11      	3 fields found: provider_id, Need Id, %needclientid, 
2020-01-13 04:00:11      51,125,384 lines fetched
2020-01-13 04:00:11 0075 DROP TABLE Visible
2020-01-13 04:00:11 0077 Need_visibility_tmp:
2020-01-13 04:00:11 0078 LEFT JOIN(Need_visibility)
2020-01-13 04:00:11 0079 LOAD
2020-01-13 04:00:11 0080     [Need Id]
2020-01-13 04:00:11 0081 RESIDENt FACT_Need_Service
2020-01-13 04:00:12      	1 fields found: Need Id, 
2020-01-13 04:00:12      602,994 lines fetched
2020-01-13 04:00:12      Joining/Keeping
2020-01-13 04:00:30 0012 Client_Infraction_Group:
2020-01-13 04:00:30 0013 LOAD DISTINCT 
2020-01-13 04:00:30 0014  	provider_id,
2020-01-13 04:00:30 0015     visibility_group_id
2020-01-13 04:00:30 0016 RESIDENT USER_GROUP
2020-01-13 04:00:30      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 04:00:30      36,026 lines fetched
2020-01-13 04:00:31 0007 Client_Infraction_tmp:
2020-01-13 04:00:31 0008 LOAD
2020-01-13 04:00:31 0009     client_infraction_id,
2020-01-13 04:00:31 0010     active,
2020-01-13 04:00:31 0011 	client_id
2020-01-13 04:00:31 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT_INFRACTION.qvd]
2020-01-13 04:00:31 0013 (qvd)
2020-01-13 04:00:31 0014 WHERE (isNull(num(bar_end_date)) OR (num(bar_end_date) >= '43466'))
2020-01-13 04:00:31      	3 fields found: client_infraction_id, active, client_id, 
2020-01-13 04:00:31      998 lines fetched
2020-01-13 04:00:31 0016 Client_Infraction:
2020-01-13 04:00:31 0017 NOCONCATENATE
2020-01-13 04:00:31 0018 LOAD
2020-01-13 04:00:31 0019 	client_infraction_id,
2020-01-13 04:00:31 0020 	client_id
2020-01-13 04:00:31 0021 RESIDENT Client_Infraction_tmp
2020-01-13 04:00:31 0022 WHERE match(active, 1)
2020-01-13 04:00:31      	2 fields found: client_infraction_id, client_id, 
2020-01-13 04:00:31      998 lines fetched
2020-01-13 04:00:31 0024 DROP TABLE Client_Infraction_tmp
2020-01-13 04:00:31 0026 client_infraction_visibility_tmp:
2020-01-13 04:00:31 0027 INNER JOIN (Client_Infraction)
2020-01-13 04:00:31 0028 LOAD
2020-01-13 04:00:31 0029     client_infraction_id,
2020-01-13 04:00:31 0030     visibility_group_id,
2020-01-13 04:00:31 0031     visible
2020-01-13 04:00:31 0032 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT_INFRACTIONVISIBILITY.qvd]
2020-01-13 04:00:31 0033 (qvd)
2020-01-13 04:00:31      	3 fields found: client_infraction_id, visibility_group_id, visible, 
2020-01-13 04:00:31      2,083 lines fetched
2020-01-13 04:00:31      Joining/Keeping
2020-01-13 04:00:31 0036 LEFT JOIN (Client_Infraction_Group)
2020-01-13 04:00:31 0037 LOAD DISTINCT
2020-01-13 04:00:31 0038     visibility_group_id,
2020-01-13 04:00:31 0039     visible,
2020-01-13 04:00:31 0040     client_infraction_id,
2020-01-13 04:00:31 0041 	client_id
2020-01-13 04:00:31 0042 RESIDENT Client_Infraction
2020-01-13 04:00:31      	4 fields found: visibility_group_id, visible, client_infraction_id, client_id, 
2020-01-13 04:00:31      869 lines fetched
2020-01-13 04:00:31      Joining/Keeping
2020-01-13 04:00:31 0044 DROP TABLE Client_Infraction
2020-01-13 04:00:31 0046 Visible:
2020-01-13 04:00:31 0047 Load DISTINCT
2020-01-13 04:00:31 0048 	provider_id,
2020-01-13 04:00:31 0049     client_infraction_id,
2020-01-13 04:00:31 0050     1 AS Visible,
2020-01-13 04:00:31 0051 	client_id
2020-01-13 04:00:31 0052 RESIDENT Client_Infraction_Group
2020-01-13 04:00:31 0053 WHERE visible = 1
2020-01-13 04:00:31      	4 fields found: provider_id, client_infraction_id, Visible, client_id, 
2020-01-13 04:00:31      199,634 lines fetched
2020-01-13 04:00:31 0055 not_Visible:
2020-01-13 04:00:31 0056 LEFT JOIN(Visible)
2020-01-13 04:00:31 0057 Load DISTINCT
2020-01-13 04:00:31 0058 	provider_id,
2020-01-13 04:00:31 0059     client_infraction_id,
2020-01-13 04:00:31 0060     1 AS not_Visible,
2020-01-13 04:00:31 0061 	client_id
2020-01-13 04:00:31 0062 RESIDENT Client_Infraction_Group
2020-01-13 04:00:31 0063 WHERE visible = 0
2020-01-13 04:00:31      	4 fields found: provider_id, client_infraction_id, not_Visible, client_id, 
2020-01-13 04:00:31      39,655 lines fetched
2020-01-13 04:00:31      Joining/Keeping
2020-01-13 04:00:31 0065 DROP TABLE Client_Infraction_Group
2020-01-13 04:00:31 0067 Client_Infraction_visibility:
2020-01-13 04:00:31 0068 NOCONCATENATE
2020-01-13 04:00:31 0069 LOAD DISTINCT
2020-01-13 04:00:31 0070 	provider_id,
2020-01-13 04:00:31 0071 	client_infraction_id AS [Client Incident Id],
2020-01-13 04:00:31 0072 	client_id AS %clientinfractionclientid
2020-01-13 04:00:31 0073 RESIDENT Visible
2020-01-13 04:00:31 0074 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:00:32      	3 fields found: provider_id, Client Incident Id, %clientinfractionclientid, 
2020-01-13 04:00:32      195,282 lines fetched
2020-01-13 04:00:32 0076 DROP TABLE Visible
2020-01-13 04:00:32 0079 LEFT JOIN(Client_Infraction_visibility)
2020-01-13 04:00:32 0080 LOAD
2020-01-13 04:00:32 0081     [Client Incident Id]
2020-01-13 04:00:32 0082 RESIDENt DIM_Client_Infraction
2020-01-13 04:00:32      	1 fields found: Client Incident Id, 
2020-01-13 04:00:32      998 lines fetched
2020-01-13 04:00:32      Joining/Keeping
2020-01-13 04:00:32 0013 Matrix_Group_Group:
2020-01-13 04:00:32 0014 LOAD DISTINCT 
2020-01-13 04:00:32 0015  	provider_id,
2020-01-13 04:00:32 0016     visibility_group_id
2020-01-13 04:00:32 0017 RESIDENT USER_GROUP
2020-01-13 04:00:32      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 04:00:32      36,026 lines fetched
2020-01-13 04:00:32 0007 Matrix_Group_tmp:
2020-01-13 04:00:32 0008 LOAD
2020-01-13 04:00:32 0009     matrix_group_id,
2020-01-13 04:00:32 0010 	client_id
2020-01-13 04:00:32 0011 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_MATRIX_GROUP.qvd]
2020-01-13 04:00:32 0012 (qvd)
2020-01-13 04:00:32 0013 WHERE num(date_created) >= '43466'
2020-01-13 04:00:32      	2 fields found: matrix_group_id, client_id, 
2020-01-13 04:00:32      224 lines fetched
2020-01-13 04:00:32 0015 Matrix_Group:
2020-01-13 04:00:32 0016 NOCONCATENATE
2020-01-13 04:00:32 0017 LOAD
2020-01-13 04:00:32 0018 	matrix_group_id,
2020-01-13 04:00:32 0019 	client_id
2020-01-13 04:00:32 0020 RESIDENT Matrix_Group_tmp
2020-01-13 04:00:32      	2 fields found: matrix_group_id, client_id, 
2020-01-13 04:00:32      224 lines fetched
2020-01-13 04:00:32 0023 DROP TABLE Matrix_Group_tmp
2020-01-13 04:00:32 0025 INNER JOIN (Matrix_Group)
2020-01-13 04:00:32 0026 LOAD
2020-01-13 04:00:32 0027     matrix_group_id,
2020-01-13 04:00:32 0028     visibility_group_id,
2020-01-13 04:00:32 0029     visible
2020-01-13 04:00:32 0030 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_MATRIX_GROUPVISIBILITY.qvd]
2020-01-13 04:00:32 0031 (qvd)
2020-01-13 04:00:32      	3 fields found: matrix_group_id, visibility_group_id, visible, 
2020-01-13 04:00:32      2,683 lines fetched
2020-01-13 04:00:32      Joining/Keeping
2020-01-13 04:00:33 0033 Matrix_Group_visibility:
2020-01-13 04:00:33 0034 LEFT JOIN (Matrix_Group_Group)
2020-01-13 04:00:33 0035 LOAD DISTINCT
2020-01-13 04:00:33 0036     visibility_group_id,
2020-01-13 04:00:33 0037     visible,
2020-01-13 04:00:33 0038     matrix_group_id,
2020-01-13 04:00:33 0039 	client_id
2020-01-13 04:00:33 0040 RESIDENT Matrix_Group
2020-01-13 04:00:33      	4 fields found: visibility_group_id, visible, matrix_group_id, client_id, 
2020-01-13 04:00:33      0 lines fetched
2020-01-13 04:00:33      Joining/Keeping
2020-01-13 04:00:33 0042 DROP TABLE Matrix_Group
2020-01-13 04:00:33 0044 Visible:
2020-01-13 04:00:33 0045 Load DISTINCT
2020-01-13 04:00:33 0046 	provider_id,
2020-01-13 04:00:33 0047     matrix_group_id,
2020-01-13 04:00:33 0048     1 AS Visible,
2020-01-13 04:00:33 0049 	client_id
2020-01-13 04:00:33 0050 RESIDENT Matrix_Group_Group
2020-01-13 04:00:33 0051 WHERE visible = 1
2020-01-13 04:00:33      	4 fields found: provider_id, matrix_group_id, Visible, client_id, 
2020-01-13 04:00:33      0 lines fetched
2020-01-13 04:00:33 0053 not_Visible:
2020-01-13 04:00:33 0054 LEFT JOIN(Visible)
2020-01-13 04:00:33 0055 Load DISTINCT
2020-01-13 04:00:33 0056 	provider_id,
2020-01-13 04:00:33 0057     matrix_group_id,
2020-01-13 04:00:33 0058     1 AS not_Visible,
2020-01-13 04:00:33 0059 	client_id
2020-01-13 04:00:33 0060 RESIDENT Matrix_Group_Group
2020-01-13 04:00:33 0061 WHERE visible = 0
2020-01-13 04:00:33      	4 fields found: provider_id, matrix_group_id, not_Visible, client_id, 
2020-01-13 04:00:33      0 lines fetched
2020-01-13 04:00:33      Joining/Keeping
2020-01-13 04:00:33 0063 DROP TABLE Matrix_Group_Group
2020-01-13 04:00:33 0065 Matrix_Group_visibility:
2020-01-13 04:00:33 0066 NOCONCATENATE
2020-01-13 04:00:33 0067 LOAD DISTINCT
2020-01-13 04:00:33 0068 	provider_id,
2020-01-13 04:00:33 0069 	matrix_group_id AS [Matrix Group Id],
2020-01-13 04:00:33 0070 	client_id AS %matrixgroupclientid
2020-01-13 04:00:33 0071 RESIDENT Visible
2020-01-13 04:00:33 0072 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:00:33      	3 fields found: provider_id, Matrix Group Id, %matrixgroupclientid, 
2020-01-13 04:00:33      0 lines fetched
2020-01-13 04:00:33 0074 DROP TABLE Visible
2020-01-13 04:00:33 0076 Matrix_Group_visibility_tmp:
2020-01-13 04:00:33 0077 LEFT JOIN(Matrix_Group_visibility)
2020-01-13 04:00:33 0078 LOAD
2020-01-13 04:00:33 0079     [Measurement Group Id] AS [Matrix Group Id]
2020-01-13 04:00:33 0080 RESIDENT DIM_Measurement_Answer
2020-01-13 04:00:33      	1 fields found: Matrix Group Id, 
2020-01-13 04:00:33      154,091 lines fetched
2020-01-13 04:00:33      Joining/Keeping
2020-01-13 04:00:33 0014 Call_Record_Group:
2020-01-13 04:00:33 0015 LOAD DISTINCT 
2020-01-13 04:00:33 0016  	provider_id,
2020-01-13 04:00:33 0017     visibility_group_id
2020-01-13 04:00:33 0018 RESIDENT USER_GROUP
2020-01-13 04:00:33      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 04:00:33      36,026 lines fetched
2020-01-13 04:00:33 0007 Call_Record_tmp:
2020-01-13 04:00:33 0008 LOAD
2020-01-13 04:00:33 0009     call_record_id,
2020-01-13 04:00:33 0010     active,
2020-01-13 04:00:33 0011 	client_id
2020-01-13 04:00:33 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CALL_RECORD.qvd]
2020-01-13 04:00:33 0013 (qvd)
2020-01-13 04:00:33 0014 WHERE (isNull(num(end_date)) OR (num(end_date) >= '43466'))
2020-01-13 04:00:34      	3 fields found: call_record_id, active, client_id, 
2020-01-13 04:00:34      37,481 lines fetched
2020-01-13 04:00:34 0016 Call_Record:
2020-01-13 04:00:34 0017 NOCONCATENATE
2020-01-13 04:00:34 0018 LOAD
2020-01-13 04:00:34 0019 	call_record_id,
2020-01-13 04:00:34 0020 	client_id
2020-01-13 04:00:34 0021 RESIDENT Call_Record_tmp
2020-01-13 04:00:34 0022 WHERE match(active, 1)
2020-01-13 04:00:34      	2 fields found: call_record_id, client_id, 
2020-01-13 04:00:34      37,481 lines fetched
2020-01-13 04:00:34 0024 DROP TABLE Call_Record_tmp
2020-01-13 04:00:34 0027 call_record_visibility_tmp:
2020-01-13 04:00:34 0028 INNER JOIN (Call_Record)
2020-01-13 04:00:34 0029 LOAD
2020-01-13 04:00:34 0030     callrecord_id AS call_record_id,
2020-01-13 04:00:34 0031     visibility_group_id,
2020-01-13 04:00:34 0032     visible
2020-01-13 04:00:34 0033 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CALLRECORDVISIBILITY.qvd]
2020-01-13 04:00:34 0034 (qvd)
2020-01-13 04:00:34      	3 fields found: call_record_id, visibility_group_id, visible, 
2020-01-13 04:00:34      331,682 lines fetched
2020-01-13 04:00:34      Joining/Keeping
2020-01-13 04:00:34 0036 Call_Record_visibility:
2020-01-13 04:00:34 0037 LEFT JOIN (Call_Record_Group)
2020-01-13 04:00:34 0038 LOAD DISTINCT
2020-01-13 04:00:34 0039     visibility_group_id,
2020-01-13 04:00:34 0040     visible,
2020-01-13 04:00:34 0041     call_record_id,
2020-01-13 04:00:34 0042 	client_id
2020-01-13 04:00:34 0043 RESIDENT Call_Record
2020-01-13 04:00:34      	4 fields found: visibility_group_id, visible, call_record_id, client_id, 
2020-01-13 04:00:34      37,530 lines fetched
2020-01-13 04:00:34      Joining/Keeping
2020-01-13 04:00:37 0045 DROP TABLE Call_Record
2020-01-13 04:00:37 0047 Visible:
2020-01-13 04:00:37 0048 Load DISTINCT
2020-01-13 04:00:37 0049 	provider_id,
2020-01-13 04:00:37 0050     call_record_id,
2020-01-13 04:00:37 0051     1 AS Visible,
2020-01-13 04:00:37 0052 	client_id
2020-01-13 04:00:37 0053 RESIDENT Call_Record_Group
2020-01-13 04:00:37 0054 WHERE visible = 1
2020-01-13 04:00:45      	4 fields found: provider_id, call_record_id, Visible, client_id, 
2020-01-13 04:00:45      34,278,392 lines fetched
2020-01-13 04:00:45 0056 not_Visible:
2020-01-13 04:00:45 0057 LEFT JOIN(Visible)
2020-01-13 04:00:45 0058 Load DISTINCT
2020-01-13 04:00:45 0059 	provider_id,
2020-01-13 04:00:45 0060     call_record_id,
2020-01-13 04:00:45 0061     1 AS not_Visible,
2020-01-13 04:00:45 0062 	client_id
2020-01-13 04:00:45 0063 RESIDENT Call_Record_Group
2020-01-13 04:00:45 0064 WHERE visible = 0
2020-01-13 04:01:04      	4 fields found: provider_id, call_record_id, not_Visible, client_id, 
2020-01-13 04:01:04      0 lines fetched
2020-01-13 04:01:04      Joining/Keeping
2020-01-13 04:01:13 0066 DROP TABLE Call_Record_Group
2020-01-13 04:01:13 0068 Call_Record_visibility:
2020-01-13 04:01:13 0069 NOCONCATENATE
2020-01-13 04:01:13 0070 LOAD DISTINCT
2020-01-13 04:01:13 0071 	provider_id,
2020-01-13 04:01:13 0072 	call_record_id AS [Call Record Id],
2020-01-13 04:01:13 0073 	client_id AS %callrecordclientid
2020-01-13 04:01:13 0074 RESIDENT Visible
2020-01-13 04:01:13 0075 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:01:19      	3 fields found: provider_id, Call Record Id, %callrecordclientid, 
2020-01-13 04:01:19      34,278,392 lines fetched
2020-01-13 04:01:19 0077 DROP TABLE Visible
2020-01-13 04:01:20 0080 LEFT JOIN(Call_Record_visibility)
2020-01-13 04:01:20 0081 LOAD
2020-01-13 04:01:20 0082     [Call Record Id]
2020-01-13 04:01:20 0083 FROM [lib://SPData_Beta/Transform/sp5_il_nil_qlik/E_FACT_Call_Record.qvd]
2020-01-13 04:01:20 0084 (qvd)
2020-01-13 04:01:20      	1 fields found: Call Record Id, 
2020-01-13 04:01:20      37,440 lines fetched
2020-01-13 04:01:20      Joining/Keeping
2020-01-13 04:01:30 0015 Call_Record_Answer_Group:
2020-01-13 04:01:30 0016 LOAD DISTINCT 
2020-01-13 04:01:30 0017  	provider_id,
2020-01-13 04:01:30 0018     visibility_group_id
2020-01-13 04:01:30 0019 RESIDENT USER_GROUP
2020-01-13 04:01:30      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 04:01:30      36,026 lines fetched
2020-01-13 04:01:31 0007 Call_Record_Answer_tmp:
2020-01-13 04:01:31 0008 LOAD
2020-01-13 04:01:31 0009     call_answer_id,
2020-01-13 04:01:31 0010     active,
2020-01-13 04:01:31 0011 	call_record_id
2020-01-13 04:01:31 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_CALL_ANSWER.qvd]
2020-01-13 04:01:31 0013 (qvd)
2020-01-13 04:01:31 0014 WHERE num(date_effective) >= '43466'
2020-01-13 04:01:31      	3 fields found: call_answer_id, active, call_record_id, 
2020-01-13 04:01:31      527,450 lines fetched
2020-01-13 04:01:31 0016 Call_Record_Answer:
2020-01-13 04:01:31 0017 NOCONCATENATE
2020-01-13 04:01:31 0018 LOAD
2020-01-13 04:01:31 0019 	call_answer_id,
2020-01-13 04:01:31 0020 	call_record_id
2020-01-13 04:01:31 0021 RESIDENT Call_Record_Answer_tmp
2020-01-13 04:01:31 0022 WHERE match(active, 1)
2020-01-13 04:01:32      	2 fields found: call_answer_id, call_record_id, 
2020-01-13 04:01:32      527,450 lines fetched
2020-01-13 04:01:32 0024 DROP TABLE Call_Record_Answer_tmp
2020-01-13 04:01:32 0026 INNER JOIN (Call_Record_Answer)
2020-01-13 04:01:32 0027 LOAD
2020-01-13 04:01:32 0028     call_answer_id,
2020-01-13 04:01:32 0029     visibility_group_id,
2020-01-13 04:01:32 0030     visible
2020-01-13 04:01:32 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CALL_ANSWERVISIBILITY.qvd]
2020-01-13 04:01:32 0032 (qvd)
2020-01-13 04:01:34      	3 fields found: call_answer_id, visibility_group_id, visible, 
2020-01-13 04:01:34      3,381,412 lines fetched
2020-01-13 04:01:34      Joining/Keeping
2020-01-13 04:01:35 0034 Call_Record_Answer_visibility:
2020-01-13 04:01:35 0035 LEFT JOIN (Call_Record_Answer_Group)
2020-01-13 04:01:35 0036 LOAD DISTINCT
2020-01-13 04:01:35 0037     visibility_group_id,
2020-01-13 04:01:35 0038     visible,
2020-01-13 04:01:35 0039     call_record_id,
2020-01-13 04:01:35 0040 	call_answer_id
2020-01-13 04:01:35 0041 RESIDENT Call_Record_Answer
2020-01-13 04:01:35      	4 fields found: visibility_group_id, visible, call_record_id, call_answer_id, 
2020-01-13 04:01:35      465,818 lines fetched
2020-01-13 04:01:35      Joining/Keeping
2020-01-13 04:02:13 0043 DROP TABLE Call_Record_Answer
2020-01-13 04:02:13 0045 Visible:
2020-01-13 04:02:13 0046 Load DISTINCT
2020-01-13 04:02:13 0047 	provider_id,
2020-01-13 04:02:13 0048     call_answer_id,
2020-01-13 04:02:13 0049     1 AS Visible,
2020-01-13 04:02:13 0050 	call_record_id
2020-01-13 04:02:13 0051 RESIDENT Call_Record_Answer_Group
2020-01-13 04:02:13 0052 WHERE visible = 1
2020-01-13 04:03:51      	4 fields found: provider_id, call_answer_id, Visible, call_record_id, 
2020-01-13 04:03:51      455,056,170 lines fetched
2020-01-13 04:03:51 0054 not_Visible:
2020-01-13 04:03:51 0055 LEFT JOIN(Visible)
2020-01-13 04:03:51 0056 Load DISTINCT
2020-01-13 04:03:51 0057 	provider_id,
2020-01-13 04:03:51 0058     call_answer_id,
2020-01-13 04:03:51 0059     1 AS not_Visible,
2020-01-13 04:03:51 0060 	call_record_id
2020-01-13 04:03:51 0061 RESIDENT Call_Record_Answer_Group
2020-01-13 04:03:51 0062 WHERE visible = 0
2020-01-13 04:08:32      	4 fields found: provider_id, call_answer_id, not_Visible, call_record_id, 
2020-01-13 04:08:32      0 lines fetched
2020-01-13 04:08:32      Joining/Keeping
2020-01-13 04:10:04 0064 DROP TABLE Call_Record_Answer_Group
2020-01-13 04:10:06 0066 Call_Record_Answer_visibility:
2020-01-13 04:10:06 0067 NOCONCATENATE
2020-01-13 04:10:06 0068 LOAD DISTINCT
2020-01-13 04:10:06 0069 	provider_id,
2020-01-13 04:10:06 0070 	call_answer_id,
2020-01-13 04:10:06 0071 	call_record_id
2020-01-13 04:10:06 0072 RESIDENT Visible
2020-01-13 04:10:06 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:11:07      	3 fields found: provider_id, call_answer_id, call_record_id, 
2020-01-13 04:11:07      455,056,170 lines fetched
2020-01-13 04:11:07 0075 DROP TABLE Visible
2020-01-13 04:11:08 0016 Call_Recordset_Group:
2020-01-13 04:11:08 0017 LOAD DISTINCT 
2020-01-13 04:11:08 0018  	provider_id,
2020-01-13 04:11:08 0019     visibility_group_id
2020-01-13 04:11:08 0020 RESIDENT USER_GROUP
2020-01-13 04:11:09      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 04:11:09      36,026 lines fetched
2020-01-13 04:11:09 0007 Call_Recordset_tmp:
2020-01-13 04:11:09 0008 LOAD
2020-01-13 04:11:09 0009     call_recordset_id,
2020-01-13 04:11:09 0010     active,
2020-01-13 04:11:09 0011 	call_record_id
2020-01-13 04:11:09 0012 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_CALL_RECORDSET.qvd]
2020-01-13 04:11:09 0013 (qvd)
2020-01-13 04:11:09      	3 fields found: call_recordset_id, active, call_record_id, 
2020-01-13 04:11:09      10,645 lines fetched
2020-01-13 04:11:09 0016 Call_Recordset:
2020-01-13 04:11:09 0017 NOCONCATENATE
2020-01-13 04:11:09 0018 LOAD
2020-01-13 04:11:09 0019 	call_recordset_id,
2020-01-13 04:11:09 0020 	call_record_id
2020-01-13 04:11:09 0021 RESIDENT Call_Recordset_tmp
2020-01-13 04:11:09 0022 WHERE match(active, 1)
2020-01-13 04:11:09      	2 fields found: call_recordset_id, call_record_id, 
2020-01-13 04:11:09      10,645 lines fetched
2020-01-13 04:11:09 0024 DROP TABLE Call_Recordset_tmp
2020-01-13 04:11:09 0026 INNER JOIN (Call_Recordset)
2020-01-13 04:11:09 0027 LOAD
2020-01-13 04:11:09 0028     recordset_id as call_recordset_id,
2020-01-13 04:11:09 0029     visibility_group_id,
2020-01-13 04:11:09 0030     visible
2020-01-13 04:11:09 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CALL_RECORDSETVISIBILITY.qvd]
2020-01-13 04:11:09 0032 (qvd)
2020-01-13 04:11:09      	3 fields found: call_recordset_id, visibility_group_id, visible, 
2020-01-13 04:11:09      190,049 lines fetched
2020-01-13 04:11:09      Joining/Keeping
2020-01-13 04:11:10 0034 Call_Recordset_visibility:
2020-01-13 04:11:10 0035 LEFT JOIN (Call_Recordset_Group)
2020-01-13 04:11:10 0036 LOAD DISTINCT
2020-01-13 04:11:10 0037     visibility_group_id,
2020-01-13 04:11:10 0038     visible,
2020-01-13 04:11:10 0039     call_record_id,
2020-01-13 04:11:10 0040 	call_recordset_id
2020-01-13 04:11:10 0041 RESIDENT Call_Recordset
2020-01-13 04:11:10      	4 fields found: visibility_group_id, visible, call_record_id, call_recordset_id, 
2020-01-13 04:11:10      10,603 lines fetched
2020-01-13 04:11:10      Joining/Keeping
2020-01-13 04:11:11 0043 DROP TABLE Call_Recordset
2020-01-13 04:11:12 0045 Visible:
2020-01-13 04:11:12 0046 Load DISTINCT
2020-01-13 04:11:12 0047 	provider_id,
2020-01-13 04:11:12 0048     call_recordset_id,
2020-01-13 04:11:12 0049     1 AS Visible,
2020-01-13 04:11:12 0050 	call_record_id
2020-01-13 04:11:12 0051 RESIDENT Call_Recordset_Group
2020-01-13 04:11:12 0052 WHERE visible = 1
2020-01-13 04:11:14      	4 fields found: provider_id, call_recordset_id, Visible, call_record_id, 
2020-01-13 04:11:14      11,536,064 lines fetched
2020-01-13 04:11:14 0054 not_Visible:
2020-01-13 04:11:14 0055 LEFT JOIN(Visible)
2020-01-13 04:11:14 0056 Load DISTINCT
2020-01-13 04:11:14 0057 	provider_id,
2020-01-13 04:11:14 0058     call_recordset_id,
2020-01-13 04:11:14 0059     1 AS not_Visible,
2020-01-13 04:11:14 0060 	call_record_id
2020-01-13 04:11:14 0061 RESIDENT Call_Recordset_Group
2020-01-13 04:11:14 0062 WHERE visible = 0
2020-01-13 04:11:21      	4 fields found: provider_id, call_recordset_id, not_Visible, call_record_id, 
2020-01-13 04:11:21      0 lines fetched
2020-01-13 04:11:21      Joining/Keeping
2020-01-13 04:11:25 0064 DROP TABLE Call_Recordset_Group
2020-01-13 04:11:26 0066 Call_Recordset_visibility:
2020-01-13 04:11:26 0067 NOCONCATENATE
2020-01-13 04:11:26 0068 LOAD DISTINCT
2020-01-13 04:11:26 0069 	provider_id,
2020-01-13 04:11:26 0070 	call_recordset_id AS [Call Recordset Id],
2020-01-13 04:11:26 0071 	call_record_id AS %callrecordid
2020-01-13 04:11:26 0072 RESIDENT Visible
2020-01-13 04:11:26 0073 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 04:11:28      	3 fields found: provider_id, Call Recordset Id, %callrecordid, 
2020-01-13 04:11:28      11,536,064 lines fetched
2020-01-13 04:11:28 0075 DROP TABLE Visible
2020-01-13 04:11:29 0017 SP_SETTING_DIRECTORY:
2020-01-13 04:11:29 0018 NOCONCATENATE
2020-01-13 04:11:29 0019 LOAD 
2020-01-13 04:11:29 0020     val_varchar
2020-01-13 04:11:29 0021 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_SETTING.qvd](qvd)
2020-01-13 04:11:29 0022 WHERE name = 'QLIK_TICKET_HOMEDIR'
2020-01-13 04:11:29      	1 fields found: val_varchar, 
2020-01-13 04:11:29      1 lines fetched
2020-01-13 04:11:29 0013 LET vSiteDirectory = Peek('val_varchar',0,'SP_SETTING_DIRECTORY')
2020-01-13 04:11:29 0014 SET vUserDirectory = nil_qlik
2020-01-13 04:11:29 0015 SET vBowmanDirectory = 'BOWMANSYSTEMS'
2020-01-13 04:11:29 0017 DROP TABLE SP_SETTING_DIRECTORY
2020-01-13 04:11:29 0020 USER_ACCESS:
2020-01-13 04:11:29 0021 LOAD * INLINE [
2020-01-13 04:11:29 0022     ACCESS, USERID
2020-01-13 04:11:29 0023     ADMIN, QLIK-PILOT\QSERVICE
2020-01-13 04:11:29 0024     ADMIN, INTERNAL\SA_SCHEDULER
2020-01-13 04:11:29 0025 	ADMIN, BOWMANSYSTEMS\LREMALA
2020-01-13 04:11:29 0026 	ADMIN, BOWMANSYSTEMS\TPIDGEON
2020-01-13 04:11:29 0027 	ADMIN, BOWMANSYSTEMS\JMILLER
2020-01-13 04:11:29 0028 	ADMIN, BOWMANSYSTEMS\KSOBERS
2020-01-13 04:11:29 0029 ]
2020-01-13 04:11:29      	2 fields found: ACCESS, USERID, 
2020-01-13 04:11:29      6 lines fetched
2020-01-13 04:11:29 0018 USER_ACCESS_tmp:
2020-01-13 04:11:29 0019 SELECT
2020-01-13 04:11:29 0020 u.user_id, u.username, u.provider_id,
2020-01-13 04:11:29 0021 CASE WHEN (SELECT true
2020-01-13 04:11:29 0022            FROM sp_action_in_role AS ar2
2020-01-13 04:11:29 0023            JOIN "action" AS a2 ON ar2.action_id = a2.action_id
2020-01-13 04:11:29 0024            JOIN sp_role AS r2 ON ar2.role_id = r2.role_id
2020-01-13 04:11:29 0025            JOIN sp_user AS u2 ON r2.role_id = u2.role_id 
2020-01-13 04:11:29 0026            WHERE (u2.user_id = u.user_id) AND (a2.name = 'VISIBILITY_BYPASSSECURITY')) THEN 1
2020-01-13 04:11:29 0027      WHEN (SELECT true
2020-01-13 04:11:29 0028            FROM sp_action_in_role AS ar2
2020-01-13 04:11:29 0029            JOIN "action" AS a2 ON ar2.action_id = a2.action_id
2020-01-13 04:11:29 0030            JOIN sp_role AS r2 ON ar2.role_id = r2.role_id
2020-01-13 04:11:29 0031            JOIN sp_user AS u2 ON r2.role_id = u2.role_id 
2020-01-13 04:11:29 0032            WHERE (u2.user_id = u.user_id) AND (a2.name = 'VISIBILITY_BYPASSSECURITY_TREE')) THEN 2
2020-01-13 04:11:29 0033      ELSE 3
2020-01-13 04:11:29 0034 END as user_access_tier
2020-01-13 04:11:29 0035 , r.name
2020-01-13 04:11:29 0036 FROM sp_user u
2020-01-13 04:11:29 0037 INNER JOIN sp_role r on r.role_id = u.role_id
2020-01-13 04:11:29 0038 UNION
2020-01-13 04:11:29 0039 select DISTINCT e.user_id,u1.username,p.provider_id, 
2020-01-13 04:11:29 0040 CASE WHEN (SELECT true
2020-01-13 04:11:29 0041            FROM sp_action_in_role AS ar2
2020-01-13 04:11:29 0042            JOIN "action" AS a2 ON ar2.action_id = a2.action_id
2020-01-13 04:11:29 0043            JOIN sp_role AS r2 ON ar2.role_id = r2.role_id
2020-01-13 04:11:29 0044            JOIN sp_user AS u2 ON r2.role_id = u2.role_id 
2020-01-13 04:11:29 0045            WHERE (u2.user_id = u1.user_id) AND (a2.name = 'VISIBILITY_BYPASSSECURITY')) THEN 1
2020-01-13 04:11:29 0046      WHEN (SELECT true
2020-01-13 04:11:29 0047            FROM sp_action_in_role AS ar2
2020-01-13 04:11:29 0048            JOIN "action" AS a2 ON ar2.action_id = a2.action_id
2020-01-13 04:11:29 0049            JOIN sp_role AS r2 ON ar2.role_id = r2.role_id
2020-01-13 04:11:29 0050            JOIN sp_user AS u2 ON r2.role_id = u2.role_id 
2020-01-13 04:11:29 0051            WHERE (u2.user_id = u1.user_id) AND (a2.name = 'VISIBILITY_BYPASSSECURITY_TREE')) THEN 2
2020-01-13 04:11:29 0052      ELSE 3
2020-01-13 04:11:29 0053 END as user_access_tier
2020-01-13 04:11:29 0054 ,r1.name 
2020-01-13 04:11:29 0055 from sp_user_eda_group e JOIN sp_eda_group_provider_tree p ON (e.eda_group_id = p.eda_group_id)
2020-01-13 04:11:29 0056 join sp_user u1 on e.user_id = u1.user_id
2020-01-13 04:11:29 0057 INNER JOIN sp_role r1 on r1.role_id = u1.role_id
2020-01-13 04:11:29 0058 WHERE u1.active = true
2020-01-13 04:11:29 0059 ORDER BY 1,2,3
2020-01-13 04:11:38      	5 fields found: user_id, username, provider_id, user_access_tier, name, 
2020-01-13 04:11:38      177,567 lines fetched
2020-01-13 04:11:38 0046 CONCATENATE(USER_ACCESS)
2020-01-13 04:11:38 0047 LOAD DISTINCT 
2020-01-13 04:11:38 0048 	'USER' AS ACCESS,
2020-01-13 04:11:38 0049 	user_id AS %_USER_ID,
2020-01-13 04:11:38 0050 	UPPER('nil_qlik' & '\' & username & '_' & user_id & '_' & provider_id) AS USERID,
2020-01-13 04:11:38 0051 	
2020-01-13 04:11:38 0052     user_access_tier & '|' & provider_id AS TIER_LINK
2020-01-13 04:11:38 0053 RESIDENT USER_ACCESS_tmp
2020-01-13 04:11:38      	4 fields found: ACCESS, %_USER_ID, USERID, TIER_LINK, 
2020-01-13 04:11:38      177,573 lines fetched
2020-01-13 04:11:38 0056 DROP TABLE USER_ACCESS_tmp
2020-01-13 04:11:38 0019 SECURITY_TABLE:
2020-01-13 04:11:38 0020 NOCONCATENATE
2020-01-13 04:11:38 0021 LOAD *
2020-01-13 04:11:38 0022 RESIDENT USER_ACCESS
2020-01-13 04:11:38      	4 fields found: ACCESS, USERID, %_USER_ID, TIER_LINK, 
2020-01-13 04:11:38      177,573 lines fetched
2020-01-13 04:11:39 0020 DROP TABLE USER_ACCESS
2020-01-13 04:11:39 0021 INHERENT_SECURITY_tmp:
2020-01-13 04:11:39 0022 
2020-01-13 04:11:39 0023 	SELECT DISTINCT 1 as user_access_tier, u.provider_id as user_provider_id, p.provider_id as provider_id
2020-01-13 04:11:39 0024   FROM sp_action_in_role AS ar
2020-01-13 04:11:39 0025   JOIN "action" AS a ON ar.action_id = a.action_id
2020-01-13 04:11:39 0026   JOIN sp_role AS r ON ar.role_id = r.role_id
2020-01-13 04:11:39 0027 	  JOIN sp_user AS u ON r.role_id = u.role_id
2020-01-13 04:11:39 0028           inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:39 0029           inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:39 0030           inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id,
2020-01-13 04:11:39 0031   sp_provider p
2020-01-13 04:11:39 0032 	WHERE (u.active = true) AND p.active = true AND(a.name = 'VISIBILITY_BYPASSSECURITY') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:39 0033 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:39      	3 fields found: user_access_tier, user_provider_id, provider_id, 
2020-01-13 04:11:39      9,776 lines fetched
2020-01-13 04:11:39 0018 CONCATENATE(INHERENT_SECURITY_tmp)
2020-01-13 04:11:39 0019 
2020-01-13 04:11:39 0020 
2020-01-13 04:11:39 0021 SELECT distinct 2 as user_access_tier, uap.user_provider_id, dp.provider_id as provider_id
2020-01-13 04:11:39 0022 FROM
2020-01-13 04:11:39 0023 (
2020-01-13 04:11:39 0024   SELECT DISTINCT u.provider_id as user_provider_id, egpt.provider_id as provider_id
2020-01-13 04:11:39 0025   FROM sp_user_eda_group ueg
2020-01-13 04:11:39 0026     JOIN sp_user AS u ON ueg.user_id=u.user_id
2020-01-13 04:11:39 0027 		join sp_user_eda_group e5 on u.user_id = e5.user_id  
2020-01-13 04:11:39 0028     JOIN sp_eda_group_provider_tree egpt ON egpt.eda_group_id = ueg.eda_group_id
2020-01-13 04:11:39 0029     JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:39 0030     JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:39 0031             inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:39 0032             inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:39 0033             inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:39 0034     WHERE (u.active = true) AND (a.name = 'VISIBILITY_BYPASSSECURITY_TREE') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:39 0035 	    and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:39 0036 ) uap
2020-01-13 04:11:39 0037 JOIN sp_provider_tree dp ON ancestor_provider_id = uap.provider_id
2020-01-13 04:11:39 0038 WHERE ancestor_provider_id = uap.user_provider_id
2020-01-13 04:11:39      	3 fields found: user_access_tier, user_provider_id, provider_id, 
2020-01-13 04:11:39      10,652 lines fetched
2020-01-13 04:11:39 0041 CONCATENATE(INHERENT_SECURITY_tmp)
2020-01-13 04:11:39 0042 
2020-01-13 04:11:39 0043 
2020-01-13 04:11:39 0044 SELECT distinct 2 as user_access_tier, u.provider_id as user_provider_id, spt.ancestor_provider_id as provider_id
2020-01-13 04:11:39 0045 FROM sp_user u
2020-01-13 04:11:39 0046 JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:39 0047 JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:39 0048 INNER JOIN sp_provider_tree spt on (spt.provider_id = u.provider_id)
2020-01-13 04:11:39 0049         inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:39 0050         inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:39 0051         inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:39 0052 	WHERE (u.active = true) AND (a.name = 'VISIBILITY_BYPASSSECURITY_TREE') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:39 0053 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:39      	3 fields found: user_access_tier, user_provider_id, provider_id, 
2020-01-13 04:11:39      10,669 lines fetched
2020-01-13 04:11:39 0057 CONCATENATE(INHERENT_SECURITY_tmp)
2020-01-13 04:11:39 0058 
2020-01-13 04:11:39 0059 
2020-01-13 04:11:39 0060 
2020-01-13 04:11:39 0061 SELECT distinct 3 as user_access_tier, u.provider_id as user_provider_id, spt.ancestor_provider_id as provider_id
2020-01-13 04:11:39 0062 FROM sp_user u
2020-01-13 04:11:39 0063 JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:39 0064 JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:39 0065 INNER JOIN sp_provider_tree spt on (spt.provider_id = u.provider_id)
2020-01-13 04:11:39 0066         inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:39 0067         inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:39 0068         inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:39 0069 WHERE (u.active = true) AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:39 0070 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:39 0071 AND u.user_id NOT IN (SELECT DISTINCT u2.user_id
2020-01-13 04:11:39 0072                       FROM sp_user u2
2020-01-13 04:11:39 0073                       JOIN sp_action_in_role aic2 ON aic2.role_id = u2.role_id
2020-01-13 04:11:39 0074                       JOIN action a2 ON a2.action_id = aic2.action_id
2020-01-13 04:11:39 0075                       WHERE (u2.active = true) AND (a2.name in ( 'VISIBILITY_BYPASSSECURITY_TREE', 'VISIBILITY_BYPASSSECURITY')) AND ((u2.last_login > (now()::DATE + interval '-6 months')) or (u2.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:39 0076 )
2020-01-13 04:11:39 0077 	ORDER BY 1,2
2020-01-13 04:11:40      	3 fields found: user_access_tier, user_provider_id, provider_id, 
2020-01-13 04:11:40      10,671 lines fetched
2020-01-13 04:11:40 0079 CONCATENATE(INHERENT_SECURITY_tmp)	
2020-01-13 04:11:40 0080 	SELECT DISTINCT 1 as user_access_tier, p1.provider_id as user_provider_id, p.provider_id as provider_id
2020-01-13 04:11:40 0081   FROM sp_action_in_role AS ar
2020-01-13 04:11:40 0082   JOIN "action" AS a ON ar.action_id = a.action_id
2020-01-13 04:11:40 0083   JOIN sp_role AS r ON ar.role_id = r.role_id
2020-01-13 04:11:40 0084 	  JOIN sp_user AS u ON r.role_id = u.role_id
2020-01-13 04:11:40 0085 	  join sp_user_eda_group e1 on u.user_id = e1.user_id
2020-01-13 04:11:40 0086 	  JOIN sp_eda_group_provider_tree p1 ON (e1.eda_group_id = p1.eda_group_id)
2020-01-13 04:11:40 0087           inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:40 0088           inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:40 0089           inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id,        
2020-01-13 04:11:40 0090           sp_provider p
2020-01-13 04:11:40 0091 	WHERE (u.active = true)AND p.active = true AND(a.name = 'VISIBILITY_BYPASSSECURITY') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:40 0092 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:40 0093  
2020-01-13 04:11:40 0094  UNION
2020-01-13 04:11:40 0095 --CONCATENATE(INHERENT_SECURITY_tmp)
2020-01-13 04:11:40 0096 
2020-01-13 04:11:40 0097 SELECT distinct 2 as user_access_tier, uap.user_provider_id, dp.provider_id as provider_id
2020-01-13 04:11:40 0098 FROM
2020-01-13 04:11:40 0099 (
2020-01-13 04:11:40 0100   SELECT DISTINCT egpt.provider_id as user_provider_id, egpt.provider_id as provider_id
2020-01-13 04:11:40 0101   FROM sp_user_eda_group ueg
2020-01-13 04:11:40 0102     JOIN sp_user AS u ON ueg.user_id=u.user_id
2020-01-13 04:11:40 0103     JOIN sp_eda_group_provider_tree egpt ON egpt.eda_group_id = ueg.eda_group_id
2020-01-13 04:11:40 0104     JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:40 0105     JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:40 0106             inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:40 0107             inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:40 0108             inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:40 0109     WHERE (u.active = true) AND (a.name = 'VISIBILITY_BYPASSSECURITY_TREE') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:40 0110 	    and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:40 0111 ) uap
2020-01-13 04:11:40 0112 JOIN sp_provider_tree dp ON ancestor_provider_id = uap.provider_id
2020-01-13 04:11:40 0113 WHERE ancestor_provider_id = uap.user_provider_id
2020-01-13 04:11:40 0114  
2020-01-13 04:11:40 0115 UNION
2020-01-13 04:11:40 0116 
2020-01-13 04:11:40 0117 
2020-01-13 04:11:40 0118 SELECT distinct 2 as user_access_tier, p2.provider_id as user_provider_id, spt.ancestor_provider_id as provider_id
2020-01-13 04:11:40 0119 FROM sp_user u
2020-01-13 04:11:40 0120   join sp_user_eda_group e2 on u.user_id = e2.user_id
2020-01-13 04:11:40 0121 	  JOIN sp_eda_group_provider_tree p2 ON (e2.eda_group_id = p2.eda_group_id)
2020-01-13 04:11:40 0122 JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:40 0123 JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:40 0124 INNER JOIN sp_provider_tree spt on (spt.provider_id = u.provider_id)
2020-01-13 04:11:40 0125         inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:40 0126         inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:40 0127         inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:40 0128 	WHERE (u.active = true) AND (a.name = 'VISIBILITY_BYPASSSECURITY_TREE') AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:40 0129 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:40 0130  
2020-01-13 04:11:40 0131 UNION
2020-01-13 04:11:40 0132 
2020-01-13 04:11:40 0133 SELECT distinct 3 as user_access_tier, p3.provider_id as user_provider_id, spt.ancestor_provider_id as provider_id
2020-01-13 04:11:40 0134 FROM sp_user u
2020-01-13 04:11:40 0135   join sp_user_eda_group e3 on u.user_id = e3.user_id
2020-01-13 04:11:40 0136 	  JOIN sp_eda_group_provider_tree p3 ON (e3.eda_group_id = p3.eda_group_id)
2020-01-13 04:11:40 0137 JOIN sp_action_in_role aic ON aic.role_id = u.role_id
2020-01-13 04:11:40 0138 JOIN action a ON a.action_id = aic.action_id
2020-01-13 04:11:40 0139 INNER JOIN sp_provider_tree spt on (spt.provider_id = u.provider_id)
2020-01-13 04:11:40 0140         inner join sp_boxi_license_allocation bla on bla.user_id = u.user_id
2020-01-13 04:11:40 0141         inner join sp_boxi_license bl on bl.license_id = bla.license_id
2020-01-13 04:11:40 0142         inner join boxi_license_type blt on blt.license_type_id = bl.license_type_id
2020-01-13 04:11:40 0143 WHERE (u.active = true) AND ((u.last_login > (now()::DATE + interval '-6 months')) or (u.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:40 0144 	and ((bla.active = true) and (bl.active = true) and (blt.name = 'ART-AR'))
2020-01-13 04:11:40 0145 AND u.user_id NOT IN (SELECT DISTINCT u2.user_id
2020-01-13 04:11:40 0146                       FROM sp_user u2
2020-01-13 04:11:40 0147                       JOIN sp_action_in_role aic2 ON aic2.role_id = u2.role_id
2020-01-13 04:11:40 0148                       JOIN action a2 ON a2.action_id = aic2.action_id
2020-01-13 04:11:40 0149                       WHERE (u2.active = true) AND (a2.name in ( 'VISIBILITY_BYPASSSECURITY_TREE', 'VISIBILITY_BYPASSSECURITY')) AND ((u2.last_login > (now()::DATE + interval '-6 months')) or (u2.date_added > (now()::DATE + interval '-1 months')))
2020-01-13 04:11:40 0150 )
2020-01-13 04:11:40 0151 	ORDER BY 1,2
2020-01-13 04:14:27      	3 fields found: user_access_tier, user_provider_id, provider_id, 
2020-01-13 04:14:27      13,859,494 lines fetched
2020-01-13 04:14:27 0153 INHERENT_SECURITY:
2020-01-13 04:14:27 0154 NOCONCATENATE
2020-01-13 04:14:27 0155 LOAD 
2020-01-13 04:14:27 0156 	user_access_tier & '|' & user_provider_id AS TIER_LINK,
2020-01-13 04:14:27 0157     user_provider_id AS provider_id,
2020-01-13 04:14:27 0158     user_access_tier,
2020-01-13 04:14:27 0159 
2020-01-13 04:14:27 0160     provider_id AS [Client Provider Created By Id]
2020-01-13 04:14:27 0161 RESIDENT INHERENT_SECURITY_tmp
2020-01-13 04:14:32      	4 fields found: TIER_LINK, provider_id, user_access_tier, Client Provider Created By Id, 
2020-01-13 04:14:32      13,859,494 lines fetched
2020-01-13 04:14:32 0165 USER_ACCESS:
2020-01-13 04:14:32 0166 LOAD 0 as %_Access_Key
2020-01-13 04:14:32 0167 AutoGenerate 0
2020-01-13 04:14:32      	1 fields found: %_Access_Key, 
2020-01-13 04:14:32      0 lines fetched
2020-01-13 04:14:32 0022 Client_Access:
2020-01-13 04:14:32 0023 NOCONCATENATE
2020-01-13 04:14:32 0024 LOAD DISTINCT
2020-01-13 04:14:32 0025 	TIER_LINK,
2020-01-13 04:14:32 0026     [Client Provider Created By Id]
2020-01-13 04:14:32 0027 RESIDENT INHERENT_SECURITY
2020-01-13 04:14:34      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 04:14:34      13,848,823 lines fetched
2020-01-13 04:14:35 0008 client_security:
2020-01-13 04:14:35 0009 LOAD
2020-01-13 04:14:35 0010     [Client Id],
2020-01-13 04:14:35 0011     [Client Is Active],
2020-01-13 04:14:35 0012     [Client Provider Created By Id]
2020-01-13 04:14:35 0013 FROM [lib://SPData_Beta/Transform/sp5_il_nil_qlik/E_DIM_Client.qvd]
2020-01-13 04:14:35 0014 (qvd)
2020-01-13 04:14:35      	3 fields found: Client Id, Client Is Active, Client Provider Created By Id, 
2020-01-13 04:14:35      229,794 lines fetched
2020-01-13 04:14:35 0018 keep_only_recent_clients_tmp:
2020-01-13 04:14:35 0019 INNER JOIN (client_security)
2020-01-13 04:14:35 0020 LOAD
2020-01-13 04:14:35 0021 	client_id AS [Client Id]
2020-01-13 04:14:35 0022 RESIDENT RECENT_CLIENT_tmp
2020-01-13 04:14:35      	1 fields found: Client Id, 
2020-01-13 04:14:35      43,825 lines fetched
2020-01-13 04:14:35      Joining/Keeping
2020-01-13 04:14:35 0024 DROP TABLE RECENT_CLIENT_tmp
2020-01-13 04:14:35 0027 INNER JOIN(Client_Access)
2020-01-13 04:14:35 0028 LOAD DISTINCT
2020-01-13 04:14:35 0029     'Client' AS %_Access_Type,
2020-01-13 04:14:35 0030     'Client' & ' | ' & [Client Id] AS %_Access_Key,
2020-01-13 04:14:35 0031     [Client Id] AS %DIM_CLIENT_KEY,
2020-01-13 04:14:35 0032     [Client Provider Created By Id],
2020-01-13 04:14:35 0033     1 AS [INHERENT SECURITY]
2020-01-13 04:14:35 0034 RESIDENT client_security
2020-01-13 04:14:35 0035 WHERE match([Client Is Active], 'Yes')
2020-01-13 04:14:35      	5 fields found: %_Access_Type, %_Access_Key, %DIM_CLIENT_KEY, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 04:14:35      43,328 lines fetched
2020-01-13 04:14:35      Joining/Keeping
2020-01-13 04:14:57 0038 DROP TABLE client_security
2020-01-13 04:14:58 0023 explicit_client_security:
2020-01-13 04:14:58 0024 NOCONCATENATE
2020-01-13 04:14:58 0025 LOAD DISTINCT
2020-01-13 04:14:58 0026 	TIER_LINK,
2020-01-13 04:14:58 0027     provider_id
2020-01-13 04:14:58 0028 
2020-01-13 04:14:58 0029 
2020-01-13 04:14:58 0030 RESIDENT INHERENT_SECURITY
2020-01-13 04:15:00      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 04:15:00      6,331 lines fetched
2020-01-13 04:15:00 0010 client_security:
2020-01-13 04:15:00 0011 LOAD
2020-01-13 04:15:00 0012     [Client Id],
2020-01-13 04:15:00 0013     provider_id
2020-01-13 04:15:00 0014 
2020-01-13 04:15:00 0015 RESIDENT client_visibility
2020-01-13 04:15:03      	2 fields found: Client Id, provider_id, 
2020-01-13 04:15:03      40,780,438 lines fetched
2020-01-13 04:15:04 0018 JOIN(explicit_client_security)
2020-01-13 04:15:04 0019 LOAD 
2020-01-13 04:15:04 0020     'Client' AS %_Access_Type,
2020-01-13 04:15:04 0021     'Client' & ' | ' & [Client Id] AS %_Access_Key,
2020-01-13 04:15:04 0022     [Client Id],
2020-01-13 04:15:04 0023     provider_id,
2020-01-13 04:15:04 0024 
2020-01-13 04:15:04 0025     1 AS [EXPLICIT SECURITY]
2020-01-13 04:15:04 0026 RESIDENT client_security
2020-01-13 04:15:11      	5 fields found: %_Access_Type, %_Access_Key, Client Id, provider_id, EXPLICIT SECURITY, 
2020-01-13 04:15:11      40,780,438 lines fetched
2020-01-13 04:15:11      Joining/Keeping
2020-01-13 04:15:32 0028 DROP TABLE client_security
2020-01-13 04:15:32 0030 CONCATENATE(Client_Access)
2020-01-13 04:15:32 0031 LOAD
2020-01-13 04:15:32 0032 	TIER_LINK,
2020-01-13 04:15:32 0033     %_Access_Type,
2020-01-13 04:15:32 0034     %_Access_Key,
2020-01-13 04:15:32 0035     [Client Id] AS %DIM_CLIENT_KEY,
2020-01-13 04:15:32 0036     provider_id,
2020-01-13 04:15:32 0037 
2020-01-13 04:15:32 0038     [EXPLICIT SECURITY]
2020-01-13 04:15:32 0039 RESIDENT explicit_client_security
2020-01-13 04:16:15      	6 fields found: TIER_LINK, %_Access_Type, %_Access_Key, %DIM_CLIENT_KEY, provider_id, EXPLICIT SECURITY, 
2020-01-13 04:16:15      309,537,574 lines fetched
2020-01-13 04:16:15 0041 DROP TABLE explicit_client_security
2020-01-13 04:16:16 0024 INHERENT_SECURITY_tmp_EE:
2020-01-13 04:16:16 0025 NOCONCATENATE
2020-01-13 04:16:16 0026 LOAD 
2020-01-13 04:16:16 0027 	user_access_tier & '|' & user_provider_id AS TIER_LINK,
2020-01-13 04:16:16 0028     user_provider_id AS provider_id,
2020-01-13 04:16:16 0029 	user_provider_id,
2020-01-13 04:16:16 0030     user_access_tier,
2020-01-13 04:16:16 0031     provider_id AS [Client Provider Created By Id]
2020-01-13 04:16:16 0032 RESIDENT INHERENT_SECURITY_tmp
2020-01-13 04:16:21      	5 fields found: TIER_LINK, provider_id, user_provider_id, user_access_tier, Client Provider Created By Id, 
2020-01-13 04:16:21      13,859,494 lines fetched
2020-01-13 04:16:21 0011 JOIN(INHERENT_SECURITY_tmp_EE)
2020-01-13 04:16:21 0012 LOAD
2020-01-13 04:16:21 0013     entry_exit_id,
2020-01-13 04:16:21 0014     provider_id,
2020-01-13 04:16:21 0015 	client_id
2020-01-13 04:16:21 0016 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_ENTRY_EXIT.qvd]
2020-01-13 04:16:21 0017 (qvd)
2020-01-13 04:16:21 0018 WHERE (isNull(num(exit_date)) OR (num(exit_date) >= '43466')) AND (covered_by_roi = 1)
2020-01-13 04:16:21      	3 fields found: entry_exit_id, provider_id, client_id, 
2020-01-13 04:16:21      31,827 lines fetched
2020-01-13 04:16:21      Joining/Keeping
2020-01-13 04:16:32 0020 JOIN(INHERENT_SECURITY_tmp_EE)
2020-01-13 04:16:32 0021 LOAD
2020-01-13 04:16:32 0022     entry_exit_id,
2020-01-13 04:16:32 0023     provider_creating_id as provider_id,
2020-01-13 04:16:32 0024 	client_id
2020-01-13 04:16:32 0025 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_ENTRY_EXIT.qvd]
2020-01-13 04:16:32 0026 (qvd)
2020-01-13 04:16:32 0027 WHERE (isNull(num(exit_date)) OR (num(exit_date) >= '43466')) AND (covered_by_roi = 1)
2020-01-13 04:16:32      	3 fields found: entry_exit_id, provider_id, client_id, 
2020-01-13 04:16:32      31,827 lines fetched
2020-01-13 04:16:32      Joining/Keeping
2020-01-13 04:16:54 0029 ENTRY_EXIT_ACCESS:
2020-01-13 04:16:54 0030 NOCONCATENATE
2020-01-13 04:16:54 0031 LOAD 
2020-01-13 04:16:54 0032 	client_id AS [Client Id],
2020-01-13 04:16:54 0033     entry_exit_id AS [Entry Exit Id],
2020-01-13 04:16:54 0034 	user_access_tier & '|' & user_provider_id AS TIER_LINK
2020-01-13 04:16:54 0035 RESIDENT INHERENT_SECURITY_tmp_EE
2020-01-13 04:17:28      	3 fields found: Client Id, Entry Exit Id, TIER_LINK, 
2020-01-13 04:17:28      90,761,638 lines fetched
2020-01-13 04:17:28 0036 DROP TABLE INHERENT_SECURITY_tmp
2020-01-13 04:17:28 0038 STORE ENTRY_EXIT_ACCESS INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/SENTRY_EXIT_ACCESS.qvd]
2020-01-13 04:17:41 0039 DROP TABLE INHERENT_SECURITY_tmp_EE
2020-01-13 04:17:42 0041 USER_ACCESS:
2020-01-13 04:17:42 0042 LOAD 0 as %_Access_Key
2020-01-13 04:17:42 0043 AutoGenerate 0
2020-01-13 04:17:42      	1 fields found: %_Access_Key, 
2020-01-13 04:17:42      0 lines fetched
2020-01-13 04:17:42 0025 CLIENT_EE_ACCESS:
2020-01-13 04:17:42 0026 LOAD DISTINCT 
2020-01-13 04:17:42 0027     [Entry Exit Id] AS %DIM_EE_KEY_SEC,
2020-01-13 04:17:42 0028 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST,
2020-01-13 04:17:42 0029 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_TEST,
2020-01-13 04:17:42 0030 	
2020-01-13 04:17:42 0031 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_ENTRY_ANSWER,
2020-01-13 04:17:42 0032 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_EXIT_ANSWER
2020-01-13 04:17:42 0033 RESIDENT ENTRY_EXIT_ACCESS
2020-01-13 04:19:13      	5 fields found: %DIM_EE_KEY_SEC, %SA_CLIENT_TEST, %SA_EE_TEST, %SA_EE_ENTRY_ANSWER, %SA_EE_EXIT_ANSWER, 
2020-01-13 04:19:13      85,294 lines fetched
2020-01-13 04:19:14 0010 DROP TABLE ENTRY_EXIT_ACCESS
2020-01-13 04:19:14 0013 explicit_entry_exit_security:
2020-01-13 04:19:14 0014 NOCONCATENATE
2020-01-13 04:19:14 0015 LOAD DISTINCT
2020-01-13 04:19:14 0016 	TIER_LINK,
2020-01-13 04:19:14 0017     provider_id
2020-01-13 04:19:14 0018 RESIDENT INHERENT_SECURITY
2020-01-13 04:19:16      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 04:19:16      6,331 lines fetched
2020-01-13 04:19:17 0020 entry_exit_security:
2020-01-13 04:19:17 0021 NOCONCATENATE
2020-01-13 04:19:17 0022 LOAD
2020-01-13 04:19:17 0023     [Entry Exit Id],
2020-01-13 04:19:17 0024     provider_id,
2020-01-13 04:19:17 0025 	%EEClientId
2020-01-13 04:19:17 0026 RESIDENT Entry_Exit_visibility
2020-01-13 04:19:18      	3 fields found: Entry Exit Id, provider_id, %EEClientId, 
2020-01-13 04:19:18      6,915,168 lines fetched
2020-01-13 04:19:18 0028 DROP TABLE Entry_Exit_visibility
2020-01-13 04:19:18 0030 JOIN(explicit_entry_exit_security)
2020-01-13 04:19:18 0031 LOAD 
2020-01-13 04:19:18 0032     [Entry Exit Id],
2020-01-13 04:19:18 0033     provider_id,
2020-01-13 04:19:18 0034     1 AS [EXPLICIT SECURITY],
2020-01-13 04:19:18 0035 	%EEClientId
2020-01-13 04:19:18 0036 RESIDENT entry_exit_security
2020-01-13 04:19:19      	4 fields found: Entry Exit Id, provider_id, EXPLICIT SECURITY, %EEClientId, 
2020-01-13 04:19:19      6,915,168 lines fetched
2020-01-13 04:19:19      Joining/Keeping
2020-01-13 04:19:22 0038 DROP TABLE entry_exit_security
2020-01-13 04:19:22 0040 CONCATENATE(CLIENT_EE_ACCESS)
2020-01-13 04:19:22 0041 LOAD
2020-01-13 04:19:22 0042 	[TIER_LINK] & '|' & %EEClientId AS %SA_CLIENT_TEST,
2020-01-13 04:19:22 0043 	[Entry Exit Id] AS %DIM_EE_KEY_SEC,
2020-01-13 04:19:22 0044 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_TEST,
2020-01-13 04:19:22 0045 	
2020-01-13 04:19:22 0046 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_ENTRY_ANSWER,
2020-01-13 04:19:22 0047 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_EXIT_ANSWER
2020-01-13 04:19:22 0048 RESIDENT explicit_entry_exit_security
2020-01-13 04:19:42      	5 fields found: %SA_CLIENT_TEST, %DIM_EE_KEY_SEC, %SA_EE_TEST, %SA_EE_ENTRY_ANSWER, %SA_EE_EXIT_ANSWER, 
2020-01-13 04:19:42      9,506,121 lines fetched
2020-01-13 04:19:42 0051 DROP TABLE explicit_entry_exit_security
2020-01-13 04:19:42 0054 STORE CLIENT_EE_ACCESS INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/SCLIENT_EE_ACCESS.qvd]
2020-01-13 04:19:59 0026 NEED_ACCESS:
2020-01-13 04:19:59 0027 NOCONCATENATE
2020-01-13 04:19:59 0028 LOAD DISTINCT
2020-01-13 04:19:59 0029 	TIER_LINK,
2020-01-13 04:19:59 0030 
2020-01-13 04:19:59 0031 
2020-01-13 04:19:59 0032     [Client Provider Created By Id]
2020-01-13 04:19:59 0033 RESIDENT INHERENT_SECURITY
2020-01-13 04:20:02      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 04:20:02      13,848,823 lines fetched
2020-01-13 04:20:03 0010 need_security:
2020-01-13 04:20:03 0011 LOAD
2020-01-13 04:20:03 0012     need_id,
2020-01-13 04:20:03 0013     active,
2020-01-13 04:20:03 0014     client_id,
2020-01-13 04:20:03 0015 
2020-01-13 04:20:03 0016     provider_creating_id,
2020-01-13 04:20:03 0017 	call_record_id
2020-01-13 04:20:03 0018 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_NEED.qvd]
2020-01-13 04:20:03 0019 (qvd)
2020-01-13 04:20:03 0020 WHERE num(date_set) >= '43466'
2020-01-13 04:20:04      	5 fields found: need_id, active, client_id, provider_creating_id, call_record_id, 
2020-01-13 04:20:04      459,008 lines fetched
2020-01-13 04:20:04 0022 INNER JOIN(NEED_ACCESS)
2020-01-13 04:20:04 0023 LOAD
2020-01-13 04:20:04 0024     IF(LEN(client_id) = 0,-(call_record_id),client_id) AS [Client Id],
2020-01-13 04:20:04 0025     need_id AS [Need Id],
2020-01-13 04:20:04 0026 
2020-01-13 04:20:04 0027     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 04:20:04 0028     1 AS [INHERENT SECURITY]
2020-01-13 04:20:04 0029 RESIDENT need_security
2020-01-13 04:20:04 0030 WHERE match(active, 1)
2020-01-13 04:20:04 0031  
2020-01-13 04:20:04 0032   AND need_id > 0
2020-01-13 04:20:04      	4 fields found: Client Id, Need Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 04:20:04      459,008 lines fetched
2020-01-13 04:20:04      Joining/Keeping
2020-01-13 04:26:58 0034 DROP TABLE need_security
2020-01-13 04:26:58 0027 CLIENT_NEED_ACCESS:
2020-01-13 04:26:58 0028 LOAD DISTINCT
2020-01-13 04:26:58 0029     [Need Id] AS %FACT_NEED_KEY_SEC,
2020-01-13 04:26:58 0030 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST
2020-01-13 04:26:58 0031 RESIDENT NEED_ACCESS
2020-01-13 05:00:17      	2 fields found: %FACT_NEED_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:00:17      2,607,758,333 lines fetched
2020-01-13 05:00:17 0008 DROP TABLE NEED_ACCESS
2020-01-13 05:00:21 0010 explicit_need_security:
2020-01-13 05:00:21 0011 NOCONCATENATE
2020-01-13 05:00:21 0012 LOAD DISTINCT
2020-01-13 05:00:21 0013 	TIER_LINK,
2020-01-13 05:00:21 0014     provider_id
2020-01-13 05:00:21 0015 RESIDENT INHERENT_SECURITY
2020-01-13 05:00:25      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:00:25      6,331 lines fetched
2020-01-13 05:00:25 0017 need_security:
2020-01-13 05:00:25 0018 NOCONCATENATE
2020-01-13 05:00:25 0019 LOAD
2020-01-13 05:00:25 0020     [Need Id],
2020-01-13 05:00:25 0021     provider_id,
2020-01-13 05:00:25 0022 	%needclientid
2020-01-13 05:00:25 0023 RESIDENT Need_visibility
2020-01-13 05:00:34      	3 fields found: Need Id, provider_id, %needclientid, 
2020-01-13 05:00:34      51,125,384 lines fetched
2020-01-13 05:00:34 0024 DROP TABLE Need_visibility
2020-01-13 05:00:35 0026 JOIN(explicit_need_security)
2020-01-13 05:00:35 0027 LOAD 
2020-01-13 05:00:35 0028     [Need Id],
2020-01-13 05:00:35 0029     provider_id,
2020-01-13 05:00:35 0030 	%needclientid
2020-01-13 05:00:35 0031 RESIDENT need_security
2020-01-13 05:00:38      	3 fields found: Need Id, provider_id, %needclientid, 
2020-01-13 05:00:38      51,125,384 lines fetched
2020-01-13 05:00:38      Joining/Keeping
2020-01-13 05:00:59 0033 DROP TABLE need_security
2020-01-13 05:00:59 0035 CONCATENATE(CLIENT_NEED_ACCESS)
2020-01-13 05:00:59 0036 LOAD
2020-01-13 05:00:59 0037 	[Need Id] AS %FACT_NEED_KEY_SEC,
2020-01-13 05:00:59 0038 	[TIER_LINK] & '|' & %needclientid AS %SA_CLIENT_TEST
2020-01-13 05:00:59 0039 RESIDENT explicit_need_security
2020-01-13 05:08:53      	2 fields found: %FACT_NEED_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:08:53      2,633,499,848 lines fetched
2020-01-13 05:08:53 0041 DROP TABLE explicit_need_security
2020-01-13 05:08:53 0028 GOAL_ACCESS:
2020-01-13 05:08:53 0029 NOCONCATENATE
2020-01-13 05:08:53 0030 LOAD DISTINCT
2020-01-13 05:08:53 0031 	TIER_LINK,
2020-01-13 05:08:53 0032     [Client Provider Created By Id]
2020-01-13 05:08:53 0033 RESIDENT INHERENT_SECURITY
2020-01-13 05:08:56      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:08:56      13,848,823 lines fetched
2020-01-13 05:08:56 0008 goal_security:
2020-01-13 05:08:56 0009 LOAD
2020-01-13 05:08:56 0010     goal_id,
2020-01-13 05:08:56 0011     active,
2020-01-13 05:08:56 0012     client_id,
2020-01-13 05:08:56 0013 
2020-01-13 05:08:56 0014     provider_creating_id
2020-01-13 05:08:56 0015 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOAL.qvd]
2020-01-13 05:08:56 0016 (qvd)
2020-01-13 05:08:56 0017 WHERE num(date_set) >= '43466'
2020-01-13 05:08:56      	4 fields found: goal_id, active, client_id, provider_creating_id, 
2020-01-13 05:08:56      6,449 lines fetched
2020-01-13 05:08:56 0019 INNER JOIN(GOAL_ACCESS)
2020-01-13 05:08:56 0020 LOAD
2020-01-13 05:08:56 0021     client_id AS [Client Id],
2020-01-13 05:08:56 0022     goal_id AS [Goal Id],
2020-01-13 05:08:56 0023     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:08:56 0024     1 AS [INHERENT SECURITY]
2020-01-13 05:08:56 0025 RESIDENT goal_security
2020-01-13 05:08:56 0026 WHERE match(active, 1)
2020-01-13 05:08:56 0027   AND client_id > 0
2020-01-13 05:08:56 0028   AND goal_id > 0
2020-01-13 05:08:56      	4 fields found: Client Id, Goal Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:08:56      6,449 lines fetched
2020-01-13 05:08:56      Joining/Keeping
2020-01-13 05:09:06 0030 DROP TABLE goal_security
2020-01-13 05:09:06 0029 CLIENT_GOAL_ACCESS:
2020-01-13 05:09:06 0030 LOAD DISTINCT 
2020-01-13 05:09:06 0031     [Goal Id] AS %GOAL_KEY_SEC,
2020-01-13 05:09:06 0032 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST,
2020-01-13 05:09:06 0033 	[TIER_LINK] & '|' & [Goal Id] AS %SA_GOAL_ACTIONSTEP
2020-01-13 05:09:06 0034 RESIDENT GOAL_ACCESS
2020-01-13 05:10:49      	3 fields found: %GOAL_KEY_SEC, %SA_CLIENT_TEST, %SA_GOAL_ACTIONSTEP, 
2020-01-13 05:10:49      36,613,448 lines fetched
2020-01-13 05:10:49 0008 DROP TABLE GOAL_ACCESS
2020-01-13 05:10:50 0011 explicit_goal_security:
2020-01-13 05:10:50 0012 NOCONCATENATE
2020-01-13 05:10:50 0013 LOAD DISTINCT
2020-01-13 05:10:50 0014 	TIER_LINK,
2020-01-13 05:10:50 0015     provider_id
2020-01-13 05:10:50 0016 RESIDENT INHERENT_SECURITY
2020-01-13 05:10:52      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:10:52      6,331 lines fetched
2020-01-13 05:10:53 0018 goal_security:
2020-01-13 05:10:53 0019 NOCONCATENATE
2020-01-13 05:10:53 0020 LOAD
2020-01-13 05:10:53 0021     [Goal Id],
2020-01-13 05:10:53 0022     provider_id,
2020-01-13 05:10:53 0023 	%goalclientid
2020-01-13 05:10:53 0024 RESIDENT Goal_visibility
2020-01-13 05:10:53      	3 fields found: Goal Id, provider_id, %goalclientid, 
2020-01-13 05:10:53      118,936 lines fetched
2020-01-13 05:10:53 0025 DROP TABLE Goal_visibility
2020-01-13 05:10:53 0028 JOIN(explicit_goal_security)
2020-01-13 05:10:53 0029 LOAD 
2020-01-13 05:10:53 0030     [Goal Id],
2020-01-13 05:10:53 0031     provider_id,
2020-01-13 05:10:53 0032 	%goalclientid
2020-01-13 05:10:53 0033 RESIDENT goal_security
2020-01-13 05:10:53      	3 fields found: Goal Id, provider_id, %goalclientid, 
2020-01-13 05:10:53      118,936 lines fetched
2020-01-13 05:10:53      Joining/Keeping
2020-01-13 05:10:53 0035 DROP TABLE goal_security
2020-01-13 05:10:53 0037 CONCATENATE(CLIENT_GOAL_ACCESS)
2020-01-13 05:10:53 0038 LOAD
2020-01-13 05:10:53 0039 	[Goal Id] AS %GOAL_KEY_SEC,
2020-01-13 05:10:53 0040 	[TIER_LINK] & '|' & %goalclientid AS %SA_CLIENT_TEST,
2020-01-13 05:10:53 0041 	[TIER_LINK] & '|' & [Goal Id] AS %SA_GOAL_ACTIONSTEP
2020-01-13 05:10:53 0042 RESIDENT explicit_goal_security
2020-01-13 05:11:46      	3 fields found: %GOAL_KEY_SEC, %SA_CLIENT_TEST, %SA_GOAL_ACTIONSTEP, 
2020-01-13 05:11:46      36,645,494 lines fetched
2020-01-13 05:11:46 0044 DROP TABLE explicit_goal_security
2020-01-13 05:11:46 0030 GOAL_ACTIONSTEP_ACCESS:
2020-01-13 05:11:46 0031 NOCONCATENATE
2020-01-13 05:11:46 0032 LOAD DISTINCT
2020-01-13 05:11:46 0033 	TIER_LINK,
2020-01-13 05:11:46 0034 
2020-01-13 05:11:46 0035 
2020-01-13 05:11:46 0036     [Client Provider Created By Id]
2020-01-13 05:11:46 0037 RESIDENT INHERENT_SECURITY
2020-01-13 05:11:49      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:11:49      13,848,823 lines fetched
2020-01-13 05:11:50 0021 goal_actionstep_security:
2020-01-13 05:11:50 0022 LOAD
2020-01-13 05:11:50 0023     goal_actionstep_id,
2020-01-13 05:11:50 0024     active,
2020-01-13 05:11:50 0025     client_id,
2020-01-13 05:11:50 0026     goal_id,
2020-01-13 05:11:50 0027 
2020-01-13 05:11:50 0028     provider_creating_id
2020-01-13 05:11:50 0029 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_GOAL_ACTIONSTEP.qvd]
2020-01-13 05:11:50 0030 (qvd)
2020-01-13 05:11:50 0031 WHERE num(date_set) >= '43466'
2020-01-13 05:11:50      	5 fields found: goal_actionstep_id, active, client_id, goal_id, provider_creating_id, 
2020-01-13 05:11:50      198 lines fetched
2020-01-13 05:11:50 0033 INNER JOIN(GOAL_ACTIONSTEP_ACCESS)
2020-01-13 05:11:50 0034 LOAD
2020-01-13 05:11:50 0035     client_id AS [Client Id],
2020-01-13 05:11:50 0036     goal_id AS [Goal Id],
2020-01-13 05:11:50 0037     goal_actionstep_id AS [Goal Actionstep Id],
2020-01-13 05:11:50 0038 
2020-01-13 05:11:50 0039     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:11:50 0040     1 AS [INHERENT SECURITY]
2020-01-13 05:11:50 0041 RESIDENT goal_actionstep_security
2020-01-13 05:11:50 0042 WHERE 
2020-01-13 05:11:50 0043   exists([Goal Id], goal_id)
2020-01-13 05:11:50 0044   AND match(active, 1)
2020-01-13 05:11:50 0045   AND goal_id > 0
2020-01-13 05:11:50 0046   AND goal_actionstep_id > 0
2020-01-13 05:11:50      	5 fields found: Client Id, Goal Id, Goal Actionstep Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:11:50      179 lines fetched
2020-01-13 05:11:50      Joining/Keeping
2020-01-13 05:11:52 0048 DROP TABLE goal_actionstep_security
2020-01-13 05:11:52 0031 CLIENT_ACTIONSTEP_ACCESS:  
2020-01-13 05:11:52 0032 LOAD DISTINCT
2020-01-13 05:11:52 0033     [Goal Actionstep Id] AS %GOAL_ACTIONSTEP_KEY_SEC,    
2020-01-13 05:11:52 0034     [TIER_LINK] & '|' & [Goal Id] AS %SA_GOAL_ACTIONSTEP
2020-01-13 05:11:52 0035 RESIDENT GOAL_ACTIONSTEP_ACCESS
2020-01-13 05:12:02      	2 fields found: %GOAL_ACTIONSTEP_KEY_SEC, %SA_GOAL_ACTIONSTEP, 
2020-01-13 05:12:02      1,015,807 lines fetched
2020-01-13 05:12:02 0007 DROP TABLE GOAL_ACTIONSTEP_ACCESS
2020-01-13 05:12:02 0011 explicit_goal_actionstep_security:
2020-01-13 05:12:02 0012 NOCONCATENATE
2020-01-13 05:12:02 0013 LOAD DISTINCT
2020-01-13 05:12:02 0014 	TIER_LINK,
2020-01-13 05:12:02 0015     provider_id
2020-01-13 05:12:02 0016 RESIDENT INHERENT_SECURITY
2020-01-13 05:12:05      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:12:05      6,331 lines fetched
2020-01-13 05:12:05 0018 goal_actionstep_security:
2020-01-13 05:12:05 0019 NOCONCATENATE
2020-01-13 05:12:05 0020 LOAD
2020-01-13 05:12:05 0021     [Goal Actionstep Id],
2020-01-13 05:12:05 0022     provider_id,
2020-01-13 05:12:05 0023 	%goalactionstepgoalid
2020-01-13 05:12:05 0024 RESIDENT Goal_Actionstep_visibility
2020-01-13 05:12:05      	3 fields found: Goal Actionstep Id, provider_id, %goalactionstepgoalid, 
2020-01-13 05:12:05      1,151 lines fetched
2020-01-13 05:12:05 0025 DROP TABLE Goal_Actionstep_visibility
2020-01-13 05:12:05 0028 JOIN(explicit_goal_actionstep_security)
2020-01-13 05:12:05 0029 LOAD 
2020-01-13 05:12:05 0030     [Goal Actionstep Id],
2020-01-13 05:12:05 0031     provider_id,
2020-01-13 05:12:05 0032 	%goalactionstepgoalid
2020-01-13 05:12:05 0033 RESIDENT goal_actionstep_security
2020-01-13 05:12:05      	3 fields found: Goal Actionstep Id, provider_id, %goalactionstepgoalid, 
2020-01-13 05:12:05      1,151 lines fetched
2020-01-13 05:12:05      Joining/Keeping
2020-01-13 05:12:05 0035 DROP TABLE goal_actionstep_security
2020-01-13 05:12:05 0037 CONCATENATE(CLIENT_ACTIONSTEP_ACCESS)
2020-01-13 05:12:05 0038 LOAD
2020-01-13 05:12:05 0039 	 [Goal Actionstep Id] AS %GOAL_ACTIONSTEP_KEY_SEC,    
2020-01-13 05:12:05 0040     [TIER_LINK] & '|' & %goalactionstepgoalid AS %SA_GOAL_ACTIONSTEP
2020-01-13 05:12:05 0041 RESIDENT explicit_goal_actionstep_security
2020-01-13 05:12:17      	2 fields found: %GOAL_ACTIONSTEP_KEY_SEC, %SA_GOAL_ACTIONSTEP, 
2020-01-13 05:12:17      1,022,188 lines fetched
2020-01-13 05:12:17 0043 DROP TABLE explicit_goal_actionstep_security
2020-01-13 05:12:17 0032 CASE_MANAGER_ACCESS:
2020-01-13 05:12:17 0033 NOCONCATENATE
2020-01-13 05:12:17 0034 LOAD DISTINCT
2020-01-13 05:12:17 0035 	TIER_LINK,
2020-01-13 05:12:17 0036 
2020-01-13 05:12:17 0037 
2020-01-13 05:12:17 0038     [Client Provider Created By Id]
2020-01-13 05:12:17 0039 RESIDENT INHERENT_SECURITY
2020-01-13 05:12:20      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:12:20      13,848,823 lines fetched
2020-01-13 05:12:20 0010 case_manager_security:
2020-01-13 05:12:20 0011 LOAD
2020-01-13 05:12:20 0012     case_manager_id,
2020-01-13 05:12:20 0013     active,
2020-01-13 05:12:20 0014     client_id,
2020-01-13 05:12:20 0015 
2020-01-13 05:12:20 0016     provider_creating_id
2020-01-13 05:12:20 0017 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CASE_MANAGER.qvd]
2020-01-13 05:12:20 0018 (qvd)
2020-01-13 05:12:20 0019 WHERE (isNull(num(date_ended)) OR (num(date_ended) >= '43466'))
2020-01-13 05:12:20      	4 fields found: case_manager_id, active, client_id, provider_creating_id, 
2020-01-13 05:12:20      38,968 lines fetched
2020-01-13 05:12:20 0021 INNER JOIN(CASE_MANAGER_ACCESS)
2020-01-13 05:12:20 0022 LOAD
2020-01-13 05:12:20 0023     client_id AS [Client Id],
2020-01-13 05:12:20 0024     case_manager_id AS [Case Manager Id],
2020-01-13 05:12:20 0025     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:12:20 0026     1 AS [INHERENT SECURITY]
2020-01-13 05:12:20 0027 RESIDENT case_manager_security
2020-01-13 05:12:20 0028 WHERE match(active, 1)
2020-01-13 05:12:20 0029   AND client_id > 0
2020-01-13 05:12:20 0030   AND case_manager_id > 0
2020-01-13 05:12:20      	4 fields found: Client Id, Case Manager Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:12:20      38,968 lines fetched
2020-01-13 05:12:20      Joining/Keeping
2020-01-13 05:12:54 0032 DROP TABLE case_manager_security
2020-01-13 05:12:54 0033 CLIENT_CASEMANAGER_ACCESS:
2020-01-13 05:12:54 0034 LOAD DISTINCT 
2020-01-13 05:12:54 0035     [Case Manager Id] AS %CASE_MANAGER_KEY_SEC,
2020-01-13 05:12:54 0036 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST
2020-01-13 05:12:54 0037 RESIDENT CASE_MANAGER_ACCESS
2020-01-13 05:18:27      	2 fields found: %CASE_MANAGER_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:18:27      218,158,400 lines fetched
2020-01-13 05:18:28 0007 DROP TABLE CASE_MANAGER_ACCESS
2020-01-13 05:18:28 0010 explicit_case_manager_security:
2020-01-13 05:18:28 0011 NOCONCATENATE
2020-01-13 05:18:28 0012 LOAD DISTINCT
2020-01-13 05:18:28 0013 	TIER_LINK,
2020-01-13 05:18:28 0014     provider_id
2020-01-13 05:18:28 0015 RESIDENT INHERENT_SECURITY
2020-01-13 05:18:31      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:18:31      6,331 lines fetched
2020-01-13 05:18:32 0017 case_manager_security:
2020-01-13 05:18:32 0018 NOCONCATENATE
2020-01-13 05:18:32 0019 LOAD
2020-01-13 05:18:32 0020     [Case Manager Id],
2020-01-13 05:18:32 0021     provider_id,
2020-01-13 05:18:32 0022 	%casemanagerclientid
2020-01-13 05:18:32 0023 RESIDENT Case_Manager_visibility
2020-01-13 05:18:32      	3 fields found: Case Manager Id, provider_id, %casemanagerclientid, 
2020-01-13 05:18:32      4,573,526 lines fetched
2020-01-13 05:18:32 0024 DROP TABLE Case_Manager_visibility
2020-01-13 05:18:32 0026 JOIN(explicit_case_manager_security)
2020-01-13 05:18:32 0027 LOAD 
2020-01-13 05:18:32 0028     [Case Manager Id],
2020-01-13 05:18:32 0029     provider_id,
2020-01-13 05:18:32 0030 	%casemanagerclientid
2020-01-13 05:18:32 0031 RESIDENT case_manager_security
2020-01-13 05:18:33      	3 fields found: Case Manager Id, provider_id, %casemanagerclientid, 
2020-01-13 05:18:33      4,573,526 lines fetched
2020-01-13 05:18:33      Joining/Keeping
2020-01-13 05:18:35 0033 DROP TABLE case_manager_security
2020-01-13 05:18:35 0035 CONCATENATE(CLIENT_CASEMANAGER_ACCESS)
2020-01-13 05:18:35 0036 LOAD
2020-01-13 05:18:35 0037 	[Case Manager Id] AS %CASE_MANAGER_KEY_SEC,
2020-01-13 05:18:35 0038 	[TIER_LINK] & '|' & %casemanagerclientid AS %SA_CLIENT_TEST
2020-01-13 05:18:35 0039 RESIDENT explicit_case_manager_security
2020-01-13 05:20:39      	2 fields found: %CASE_MANAGER_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:20:39      219,614,561 lines fetched
2020-01-13 05:20:39 0041 DROP TABLE explicit_case_manager_security
2020-01-13 05:20:39 0034 CLIENT_INFRACTION_ACCESS:
2020-01-13 05:20:39 0035 NOCONCATENATE
2020-01-13 05:20:39 0036 LOAD DISTINCT
2020-01-13 05:20:39 0037 	TIER_LINK,
2020-01-13 05:20:39 0038 
2020-01-13 05:20:39 0039 
2020-01-13 05:20:39 0040     [Client Provider Created By Id]
2020-01-13 05:20:39 0041 RESIDENT INHERENT_SECURITY
2020-01-13 05:20:42      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:20:42      13,848,823 lines fetched
2020-01-13 05:20:43 0010 client_infraction_security:
2020-01-13 05:20:43 0011 LOAD
2020-01-13 05:20:43 0012     client_infraction_id,
2020-01-13 05:20:43 0013     active,
2020-01-13 05:20:43 0014     client_id,
2020-01-13 05:20:43 0015 
2020-01-13 05:20:43 0016     provider_creating_id
2020-01-13 05:20:43 0017 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT_INFRACTION.qvd]
2020-01-13 05:20:43 0018 (qvd)
2020-01-13 05:20:43 0019 WHERE (isNull(num(bar_end_date)) OR (num(bar_end_date) >= '43466'))
2020-01-13 05:20:43      	4 fields found: client_infraction_id, active, client_id, provider_creating_id, 
2020-01-13 05:20:43      998 lines fetched
2020-01-13 05:20:43 0021 INNER JOIN(CLIENT_INFRACTION_ACCESS)
2020-01-13 05:20:43 0022 LOAD
2020-01-13 05:20:43 0023     client_id AS [Client Id],
2020-01-13 05:20:43 0024     client_infraction_id AS [Client Infraction Id],
2020-01-13 05:20:43 0025 
2020-01-13 05:20:43 0026     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:20:43 0027     1 AS [INHERENT SECURITY]
2020-01-13 05:20:43 0028 RESIDENT client_infraction_security
2020-01-13 05:20:43 0029 WHERE match(active, 1)
2020-01-13 05:20:43 0030   AND client_id > 0
2020-01-13 05:20:43 0031   AND client_infraction_id > 0
2020-01-13 05:20:43      	4 fields found: Client Id, Client Infraction Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:20:43      998 lines fetched
2020-01-13 05:20:43      Joining/Keeping
2020-01-13 05:20:47 0033 DROP TABLE client_infraction_security
2020-01-13 05:20:47 0035 CLIENT_CLIENTINFRACTION_ACCESS:
2020-01-13 05:20:47 0036 LOAD DISTINCT 
2020-01-13 05:20:47 0037     [Client Infraction Id] AS %CLIENT_INFRACTION_KEY_SEC,
2020-01-13 05:20:47 0038 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST
2020-01-13 05:20:47 0039 RESIDENT CLIENT_INFRACTION_ACCESS
2020-01-13 05:21:58      	2 fields found: %CLIENT_INFRACTION_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:21:58      5,586,436 lines fetched
2020-01-13 05:21:58 0007 DROP TABLE CLIENT_INFRACTION_ACCESS
2020-01-13 05:21:58 0009 explicit_client_infraction_security:
2020-01-13 05:21:58 0010 NOCONCATENATE
2020-01-13 05:21:58 0011 LOAD DISTINCT
2020-01-13 05:21:58 0012 	TIER_LINK,
2020-01-13 05:21:58 0013     provider_id
2020-01-13 05:21:58 0014 RESIDENT INHERENT_SECURITY
2020-01-13 05:22:01      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:22:01      6,331 lines fetched
2020-01-13 05:22:02 0016 client_infraction_security:
2020-01-13 05:22:02 0017 NOCONCATENATE
2020-01-13 05:22:02 0018 LOAD
2020-01-13 05:22:02 0019   [Client Incident Id],
2020-01-13 05:22:02 0020     provider_id,
2020-01-13 05:22:02 0021 	%clientinfractionclientid
2020-01-13 05:22:02 0022 RESIDENT Client_Infraction_visibility
2020-01-13 05:22:02      	3 fields found: Client Incident Id, provider_id, %clientinfractionclientid, 
2020-01-13 05:22:02      195,282 lines fetched
2020-01-13 05:22:02 0023 DROP TABLE Client_Infraction_visibility
2020-01-13 05:22:02 0025 JOIN(explicit_client_infraction_security)
2020-01-13 05:22:02 0026 LOAD 
2020-01-13 05:22:02 0027    [Client Incident Id],
2020-01-13 05:22:02 0028     provider_id,
2020-01-13 05:22:02 0029 	%clientinfractionclientid
2020-01-13 05:22:02 0030 RESIDENT client_infraction_security
2020-01-13 05:22:02      	3 fields found: Client Incident Id, provider_id, %clientinfractionclientid, 
2020-01-13 05:22:02      195,282 lines fetched
2020-01-13 05:22:02      Joining/Keeping
2020-01-13 05:22:02 0032 DROP TABLE client_infraction_security
2020-01-13 05:22:02 0034 CONCATENATE(CLIENT_CLIENTINFRACTION_ACCESS)
2020-01-13 05:22:02 0035 LOAD
2020-01-13 05:22:02 0036 	[Client Incident Id] AS %CLIENT_INFRACTION_KEY_SEC,
2020-01-13 05:22:02 0037 	[TIER_LINK] & '|' & %clientinfractionclientid AS %SA_CLIENT_TEST
2020-01-13 05:22:02 0038 RESIDENT explicit_client_infraction_security
2020-01-13 05:23:07      	2 fields found: %CLIENT_INFRACTION_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:23:07      5,691,547 lines fetched
2020-01-13 05:23:07 0040 DROP TABLE explicit_client_infraction_security
2020-01-13 05:23:07 0036 MATRIX_GROUP_ACCESS:
2020-01-13 05:23:07 0037 NOCONCATENATE
2020-01-13 05:23:07 0038 LOAD DISTINCT
2020-01-13 05:23:07 0039 	TIER_LINK,
2020-01-13 05:23:07 0040 
2020-01-13 05:23:07 0041 
2020-01-13 05:23:07 0042     [Client Provider Created By Id]
2020-01-13 05:23:07 0043 RESIDENT INHERENT_SECURITY
2020-01-13 05:23:10      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:23:10      13,848,823 lines fetched
2020-01-13 05:23:10 0010 matrix_group_security:
2020-01-13 05:23:10 0011 LOAD
2020-01-13 05:23:10 0012     matrix_group_id,
2020-01-13 05:23:10 0013     client_id,
2020-01-13 05:23:10 0014 
2020-01-13 05:23:10 0015     provider_creating_id
2020-01-13 05:23:10 0016 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_MATRIX_GROUP.qvd]
2020-01-13 05:23:10 0017 (qvd)
2020-01-13 05:23:10 0018 WHERE num(date_created) >= '43466'
2020-01-13 05:23:10      	3 fields found: matrix_group_id, client_id, provider_creating_id, 
2020-01-13 05:23:10      224 lines fetched
2020-01-13 05:23:10 0020 INNER JOIN(MATRIX_GROUP_ACCESS)
2020-01-13 05:23:10 0021 LOAD
2020-01-13 05:23:10 0022     client_id AS [Client Id],
2020-01-13 05:23:10 0023     matrix_group_id AS [Matrix Group Id],
2020-01-13 05:23:10 0024     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:23:10 0025     1 AS [INHERENT SECURITY]
2020-01-13 05:23:10 0026 RESIDENT matrix_group_security
2020-01-13 05:23:10 0027 WHERE  client_id > 0
2020-01-13 05:23:10 0028   AND matrix_group_id > 0
2020-01-13 05:23:10      	4 fields found: Client Id, Matrix Group Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:23:10      224 lines fetched
2020-01-13 05:23:10      Joining/Keeping
2020-01-13 05:23:13 0030 DROP TABLE matrix_group_security
2020-01-13 05:23:13 0037 CLIENT_MATRIX_ACCESS:
2020-01-13 05:23:13 0038 LOAD DISTINCT 
2020-01-13 05:23:13 0039     [Matrix Group Id] AS %MATRIX_GROUP_KEY_SEC,
2020-01-13 05:23:13 0040 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST
2020-01-13 05:23:13 0041 RESIDENT MATRIX_GROUP_ACCESS
2020-01-13 05:24:44      	2 fields found: %MATRIX_GROUP_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:24:44      1,270,626 lines fetched
2020-01-13 05:24:44 0007 DROP TABLE MATRIX_GROUP_ACCESS
2020-01-13 05:24:45 0009 explicit_matrix_group_security:
2020-01-13 05:24:45 0010 NOCONCATENATE
2020-01-13 05:24:45 0011 LOAD DISTINCT
2020-01-13 05:24:45 0012 	TIER_LINK,
2020-01-13 05:24:45 0013     provider_id
2020-01-13 05:24:45 0014 RESIDENT INHERENT_SECURITY
2020-01-13 05:24:48      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:24:48      6,331 lines fetched
2020-01-13 05:24:48 0016 matrix_group_security:
2020-01-13 05:24:48 0017 NOCONCATENATE
2020-01-13 05:24:48 0018 LOAD
2020-01-13 05:24:48 0019     [Matrix Group Id],
2020-01-13 05:24:48 0020     provider_id,
2020-01-13 05:24:48 0021 	%matrixgroupclientid
2020-01-13 05:24:48 0022 RESIDENT Matrix_Group_visibility
2020-01-13 05:24:48      	3 fields found: Matrix Group Id, provider_id, %matrixgroupclientid, 
2020-01-13 05:24:48      0 lines fetched
2020-01-13 05:24:48 0023 DROP TABLE Matrix_Group_visibility
2020-01-13 05:24:48 0025 JOIN(explicit_matrix_group_security)
2020-01-13 05:24:48 0026 LOAD 
2020-01-13 05:24:48 0027     [Matrix Group Id],
2020-01-13 05:24:48 0028     provider_id,
2020-01-13 05:24:48 0029 	%matrixgroupclientid
2020-01-13 05:24:48 0030 RESIDENT matrix_group_security
2020-01-13 05:24:48      	3 fields found: Matrix Group Id, provider_id, %matrixgroupclientid, 
2020-01-13 05:24:48      0 lines fetched
2020-01-13 05:24:48      Joining/Keeping
2020-01-13 05:24:48 0032 DROP TABLE matrix_group_security
2020-01-13 05:24:48 0034 CONCATENATE(CLIENT_MATRIX_ACCESS)
2020-01-13 05:24:48 0035 LOAD
2020-01-13 05:24:48 0036 	[Matrix Group Id] AS %MATRIX_GROUP_KEY_SEC,
2020-01-13 05:24:48 0037 	[TIER_LINK] & '|' & %matrixgroupclientid AS %SA_CLIENT_TEST
2020-01-13 05:24:48 0038 RESIDENT explicit_matrix_group_security
2020-01-13 05:26:22      	2 fields found: %MATRIX_GROUP_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:26:22      1,276,957 lines fetched
2020-01-13 05:26:22 0040 DROP TABLE explicit_matrix_group_security
2020-01-13 05:26:22 0038 RELEASE_OF_INFO_ACCESS:
2020-01-13 05:26:22 0039 NOCONCATENATE
2020-01-13 05:26:22 0040 LOAD DISTINCT
2020-01-13 05:26:22 0041 	TIER_LINK,
2020-01-13 05:26:22 0042     [Client Provider Created By Id]
2020-01-13 05:26:22 0043 RESIDENT INHERENT_SECURITY
2020-01-13 05:26:22 0044 WHERE match(user_access_tier, 1)
2020-01-13 05:26:26      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:26:26      13,845,260 lines fetched
2020-01-13 05:26:26 0009 release_of_info_security:
2020-01-13 05:26:26 0010 LOAD
2020-01-13 05:26:26 0011     client_id,
2020-01-13 05:26:26 0012     release_of_info_id,
2020-01-13 05:26:26 0013     active,
2020-01-13 05:26:26 0014     provider_creating_id
2020-01-13 05:26:26 0015 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik\E_sp5_il_nil_qlik_SP_RELEASE_OF_INFO.qvd]
2020-01-13 05:26:26 0016 (qvd)
2020-01-13 05:26:26 0017 WHERE num(date_ended) >= '43466'
2020-01-13 05:26:26      	4 fields found: client_id, release_of_info_id, active, provider_creating_id, 
2020-01-13 05:26:26      62,540 lines fetched
2020-01-13 05:26:26 0019 Release_of_Info:
2020-01-13 05:26:26 0020 INNER JOIN(RELEASE_OF_INFO_ACCESS)
2020-01-13 05:26:26 0021 LOAD
2020-01-13 05:26:26 0022     client_id AS [Client Id],
2020-01-13 05:26:26 0023 	release_of_info_id AS [Release of Info Id],
2020-01-13 05:26:26 0024     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:26:26 0025     1 AS [INHERENT SECURITY]
2020-01-13 05:26:26 0026 RESIDENT release_of_info_security
2020-01-13 05:26:26 0027 WHERE match(active, 1)
2020-01-13 05:26:26 0028   AND client_id > 0
2020-01-13 05:26:26 0029   AND release_of_info_id > 0
2020-01-13 05:26:26      	4 fields found: Client Id, Release of Info Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:26:26      62,540 lines fetched
2020-01-13 05:26:26      Joining/Keeping
2020-01-13 05:27:25 0031 DROP TABLE release_of_info_security
2020-01-13 05:27:25 0039 CLIENT_RELEASE_OF_INFO_ACCESS:
2020-01-13 05:27:25 0040 LOAD DISTINCT 
2020-01-13 05:27:25 0041     [Release of Info Id] AS %RELEASE_OF_INFO_KEY_SEC,
2020-01-13 05:27:25 0042 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST
2020-01-13 05:27:25 0043 RESIDENT RELEASE_OF_INFO_ACCESS
2020-01-13 05:32:41      	2 fields found: %RELEASE_OF_INFO_KEY_SEC, %SA_CLIENT_TEST, 
2020-01-13 05:32:41      352,946,495 lines fetched
2020-01-13 05:32:41 0007 DROP TABLE RELEASE_OF_INFO_ACCESS
2020-01-13 05:32:42 0040 CALL_RECORD_ACCESS:
2020-01-13 05:32:42 0041 NOCONCATENATE
2020-01-13 05:32:42 0042 LOAD DISTINCT
2020-01-13 05:32:42 0043 	TIER_LINK,
2020-01-13 05:32:42 0044 
2020-01-13 05:32:42 0045 
2020-01-13 05:32:42 0046     [Client Provider Created By Id]
2020-01-13 05:32:42 0047 RESIDENT INHERENT_SECURITY
2020-01-13 05:32:45      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:32:45      13,848,823 lines fetched
2020-01-13 05:32:45 0010 call_record_security:
2020-01-13 05:32:45 0011 LOAD
2020-01-13 05:32:45 0012     call_record_id,
2020-01-13 05:32:45 0013     client_id,
2020-01-13 05:32:45 0014     active,
2020-01-13 05:32:45 0015     provider_creating_id
2020-01-13 05:32:45 0016 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_sp5_il_nil_qlik_SP_CALL_RECORD.qvd]
2020-01-13 05:32:45 0017 (qvd)
2020-01-13 05:32:45 0018 WHERE (isNull(num(end_date)) OR (num(end_date) >= '43466'))
2020-01-13 05:32:45      	4 fields found: call_record_id, client_id, active, provider_creating_id, 
2020-01-13 05:32:45      37,481 lines fetched
2020-01-13 05:32:45 0020 INNER JOIN(CALL_RECORD_ACCESS)
2020-01-13 05:32:45 0021 LOAD
2020-01-13 05:32:45 0022     IF(LEN(client_id) = 0,-(call_record_id),client_id) AS [Client Id],
2020-01-13 05:32:45 0023     call_record_id AS [Call Record Id],
2020-01-13 05:32:45 0024 	 call_record_id as %call_worksheets_link,
2020-01-13 05:32:45 0025 
2020-01-13 05:32:45 0026     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:32:45 0027     1 AS [INHERENT SECURITY]
2020-01-13 05:32:45 0028 RESIDENT call_record_security
2020-01-13 05:32:45 0029 WHERE match(active, 1)
2020-01-13 05:32:45 0030 
2020-01-13 05:32:45 0031   AND call_record_id > 0
2020-01-13 05:32:45      	5 fields found: Client Id, Call Record Id, %call_worksheets_link, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:32:45      37,481 lines fetched
2020-01-13 05:32:45      Joining/Keeping
2020-01-13 05:33:32 0034 DROP TABLE call_record_security
2020-01-13 05:33:33 0041 CLIENT_CALL_RECORD_ACCESS:
2020-01-13 05:33:33 0042 LOAD DISTINCT 
2020-01-13 05:33:33 0043     [Call Record Id] AS %CALL_RECORD_KEY_SEC,
2020-01-13 05:33:33 0044 	[TIER_LINK] & '|' & [Client Id] AS %SA_CLIENT_TEST,
2020-01-13 05:33:33 0045 	[TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_RECORDSET,
2020-01-13 05:33:33 0046 	[TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_ANSWER
2020-01-13 05:33:33 0047 RESIDENT CALL_RECORD_ACCESS
2020-01-13 05:44:10      	4 fields found: %CALL_RECORD_KEY_SEC, %SA_CLIENT_TEST, %SA_CALL_RECORD_CALL_RECORDSET, %SA_CALL_RECORD_CALL_ANSWER, 
2020-01-13 05:44:10      212,696,663 lines fetched
2020-01-13 05:44:10 0011 explicit_call_record_security:
2020-01-13 05:44:10 0012 NOCONCATENATE
2020-01-13 05:44:10 0013 LOAD DISTINCT
2020-01-13 05:44:10 0014 	TIER_LINK,
2020-01-13 05:44:10 0015     provider_id
2020-01-13 05:44:10 0016 RESIDENT INHERENT_SECURITY
2020-01-13 05:44:15      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 05:44:15      6,331 lines fetched
2020-01-13 05:44:15 0018 call_record_security:
2020-01-13 05:44:15 0019 NOCONCATENATE
2020-01-13 05:44:15 0020 LOAD
2020-01-13 05:44:15 0021     [Call Record Id],
2020-01-13 05:44:15 0022     provider_id,
2020-01-13 05:44:15 0023 	%callrecordclientid
2020-01-13 05:44:15 0024 RESIDENT Call_Record_visibility
2020-01-13 05:44:21      	3 fields found: Call Record Id, provider_id, %callrecordclientid, 
2020-01-13 05:44:21      34,278,392 lines fetched
2020-01-13 05:44:21 0026 DROP TABLE Call_Record_visibility
2020-01-13 05:44:21 0028 JOIN(explicit_call_record_security)
2020-01-13 05:44:21 0029 LOAD 
2020-01-13 05:44:21 0030     [Call Record Id],
2020-01-13 05:44:21 0031     provider_id,
2020-01-13 05:44:21 0032     1 AS [EXPLICIT SECURITY],
2020-01-13 05:44:21 0033 	%callrecordclientid
2020-01-13 05:44:21 0034 RESIDENT call_record_security
2020-01-13 05:44:25      	4 fields found: Call Record Id, provider_id, EXPLICIT SECURITY, %callrecordclientid, 
2020-01-13 05:44:25      34,278,392 lines fetched
2020-01-13 05:44:25      Joining/Keeping
2020-01-13 05:44:41 0036 DROP TABLE call_record_security
2020-01-13 05:44:42 0038 CONCATENATE(CLIENT_CALL_RECORD_ACCESS)
2020-01-13 05:44:42 0039 LOAD
2020-01-13 05:44:42 0040     [Call Record Id] AS %CALL_RECORD_KEY_SEC,
2020-01-13 05:44:42 0041 	[TIER_LINK] & '|' & %callrecordclientid AS %SA_CLIENT_TEST,
2020-01-13 05:44:42 0042 	[TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_RECORDSET,
2020-01-13 05:44:42 0043 	[TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_ANSWER
2020-01-13 05:44:42 0044 RESIDENT explicit_call_record_security
2020-01-13 05:51:21      	4 fields found: %CALL_RECORD_KEY_SEC, %SA_CLIENT_TEST, %SA_CALL_RECORD_CALL_RECORDSET, %SA_CALL_RECORD_CALL_ANSWER, 
2020-01-13 05:51:21      238,385,849 lines fetched
2020-01-13 05:51:21 0046 DROP TABLE explicit_call_record_security
2020-01-13 05:51:22 0042 CALL_ANSWER_ACCESS:
2020-01-13 05:51:22 0043 NOCONCATENATE
2020-01-13 05:51:22 0044 LOAD DISTINCT
2020-01-13 05:51:22 0045 	TIER_LINK,
2020-01-13 05:51:22 0046     [Client Provider Created By Id]
2020-01-13 05:51:22 0047 RESIDENT INHERENT_SECURITY
2020-01-13 05:51:27      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 05:51:27      13,848,823 lines fetched
2020-01-13 05:51:27 0008 call_answer_security:
2020-01-13 05:51:27 0009 LOAD
2020-01-13 05:51:27 0010     call_answer_id,
2020-01-13 05:51:27 0011     active,
2020-01-13 05:51:27 0012     provider_creating_id,
2020-01-13 05:51:27 0013     call_record_id
2020-01-13 05:51:27 0014 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik\E_sp5_il_nil_qlik_CALL_ANSWER.qvd]
2020-01-13 05:51:27 0015 (qvd)
2020-01-13 05:51:27 0016 WHERE num(date_effective) >= '43466'
2020-01-13 05:51:28      	4 fields found: call_answer_id, active, provider_creating_id, call_record_id, 
2020-01-13 05:51:28      527,450 lines fetched
2020-01-13 05:51:28 0019 INNER JOIN(CALL_ANSWER_ACCESS)
2020-01-13 05:51:28 0020 LOAD
2020-01-13 05:51:28 0021     call_answer_id AS [Call Answer Id],
2020-01-13 05:51:28 0022     call_record_id as [Call Record Id],
2020-01-13 05:51:28 0023 	 call_record_id as %call_worksheets_link,
2020-01-13 05:51:28 0024     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 05:51:28 0025     1 AS [INHERENT SECURITY]
2020-01-13 05:51:28 0026 RESIDENT call_answer_security
2020-01-13 05:51:28 0027 WHERE match(active, 1)
2020-01-13 05:51:28 0028   AND call_answer_id > 0
2020-01-13 05:51:28 0029   AND call_record_id > 0
2020-01-13 05:51:29      	5 fields found: Call Answer Id, Call Record Id, %call_worksheets_link, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 05:51:29      527,450 lines fetched
2020-01-13 05:51:29      Joining/Keeping
2020-01-13 05:58:21 0031 DROP TABLE call_answer_security
2020-01-13 05:58:22 0043 INNER JOIN(CALL_ANSWER_ACCESS)
2020-01-13 05:58:22 0044 LOAD 
2020-01-13 05:58:22 0045     TIER_LINK,
2020-01-13 05:58:22 0046     [Call Record Id]
2020-01-13 05:58:22 0047 RESIDENT CALL_RECORD_ACCESS
2020-01-13 05:58:46      	2 fields found: TIER_LINK, Call Record Id, 
2020-01-13 05:58:46      212,696,663 lines fetched
2020-01-13 05:58:46      Joining/Keeping
2020-01-13 06:14:19 0015 CLIENT_CALL_ANSWER_ACCESS:
2020-01-13 06:14:19 0016 LOAD DISTINCT 
2020-01-13 06:14:19 0017     [Call Answer Id] AS %CALL_ANSWER_KEY_SEC,
2020-01-13 06:14:19 0018 	[TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_ANSWER
2020-01-13 06:14:19 0019 RESIDENT CALL_ANSWER_ACCESS
2020-01-13 06:44:35      	2 fields found: %CALL_ANSWER_KEY_SEC, %SA_CALL_RECORD_CALL_ANSWER, 
2020-01-13 06:44:35      2,963,331,659 lines fetched
2020-01-13 06:44:35 0021 DROP TABLE CALL_ANSWER_ACCESS
2020-01-13 06:44:39 0025 explicit_call_record_answer_security:
2020-01-13 06:44:39 0026 NOCONCATENATE
2020-01-13 06:44:39 0027 LOAD DISTINCT
2020-01-13 06:44:39 0028 	TIER_LINK,
2020-01-13 06:44:39 0029     provider_id
2020-01-13 06:44:39 0030 RESIDENT INHERENT_SECURITY
2020-01-13 06:44:43      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 06:44:43      6,331 lines fetched
2020-01-13 06:44:43 0032 call_record_answer_security:
2020-01-13 06:44:43 0033 NOCONCATENATE
2020-01-13 06:44:43 0034 LOAD DISTINCT
2020-01-13 06:44:43 0035     call_answer_id,
2020-01-13 06:44:43 0036     provider_id,
2020-01-13 06:44:43 0037 	call_record_id
2020-01-13 06:44:43 0038 RESIDENT Call_Record_Answer_visibility
2020-01-13 06:46:03      	3 fields found: call_answer_id, provider_id, call_record_id, 
2020-01-13 06:46:03      455,056,170 lines fetched
2020-01-13 06:46:03 0039 DROP TABLE Call_Record_Answer_visibility
2020-01-13 06:46:04 0041 JOIN(explicit_call_record_answer_security)
2020-01-13 06:46:04 0042 LOAD 
2020-01-13 06:46:04 0043     call_answer_id,
2020-01-13 06:46:04 0044     provider_id,
2020-01-13 06:46:04 0045 	call_record_id
2020-01-13 06:46:04 0046 RESIDENT call_record_answer_security
2020-01-13 06:46:34      	3 fields found: call_answer_id, provider_id, call_record_id, 
2020-01-13 06:46:34      455,056,170 lines fetched
2020-01-13 06:46:34      Joining/Keeping
2020-01-13 06:48:23 0048 DROP TABLE call_record_answer_security
2020-01-13 06:48:24 0050 CONCATENATE(CLIENT_CALL_ANSWER_ACCESS)
2020-01-13 06:48:24 0051 LOAD
2020-01-13 06:48:24 0052 	call_answer_id AS %CALL_ANSWER_KEY_SEC,
2020-01-13 06:48:24 0053 	[TIER_LINK] & '|' & call_record_id AS %SA_CALL_RECORD_CALL_ANSWER
2020-01-13 06:48:24 0054 RESIDENT explicit_call_record_answer_security
2020-01-13 06:59:00      	2 fields found: %CALL_ANSWER_KEY_SEC, %SA_CALL_RECORD_CALL_ANSWER, 
2020-01-13 06:59:00      3,241,420,644 lines fetched
2020-01-13 06:59:00 0056 DROP TABLE explicit_call_record_answer_security
2020-01-13 06:59:02 0044 CALL_RECORDSET_ACCESS:
2020-01-13 06:59:02 0045 NOCONCATENATE
2020-01-13 06:59:02 0046 LOAD DISTINCT
2020-01-13 06:59:02 0047 	TIER_LINK,
2020-01-13 06:59:02 0048     [Client Provider Created By Id]
2020-01-13 06:59:02 0049 RESIDENT INHERENT_SECURITY
2020-01-13 06:59:05      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 06:59:05      13,848,823 lines fetched
2020-01-13 06:59:05 0008 call_recordset_security:
2020-01-13 06:59:05 0009 LOAD
2020-01-13 06:59:05 0010     call_record_id,
2020-01-13 06:59:05 0011     active,
2020-01-13 06:59:05 0012     call_recordset_id,
2020-01-13 06:59:05 0013     provider_creating_id
2020-01-13 06:59:05 0014 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik\E_sp5_il_nil_qlik_CALL_RECORDSET.qvd]
2020-01-13 06:59:05 0015 (qvd)
2020-01-13 06:59:05 0016 WHERE num(date_effective) >= '43466'
2020-01-13 06:59:05      	4 fields found: call_record_id, active, call_recordset_id, provider_creating_id, 
2020-01-13 06:59:05      10,645 lines fetched
2020-01-13 06:59:05 0018 INNER JOIN(CALL_RECORDSET_ACCESS)
2020-01-13 06:59:05 0019 LOAD
2020-01-13 06:59:05 0020     call_record_id as [Call Record Id],
2020-01-13 06:59:05 0021 	 call_record_id as %call_worksheets_link,
2020-01-13 06:59:05 0022    call_recordset_id,
2020-01-13 06:59:05 0023     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 06:59:05 0024     1 AS [INHERENT SECURITY]
2020-01-13 06:59:05 0025 RESIDENT call_recordset_security
2020-01-13 06:59:05 0026 WHERE match(active, 1)
2020-01-13 06:59:05 0027   AND call_record_id > 0
2020-01-13 06:59:05 0028   AND call_recordset_id > 0
2020-01-13 06:59:05      	5 fields found: Call Record Id, %call_worksheets_link, call_recordset_id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 06:59:05      10,645 lines fetched
2020-01-13 06:59:05      Joining/Keeping
2020-01-13 06:59:19 0030 DROP TABLE call_recordset_security
2020-01-13 06:59:19 0045 CLIENT_CALL_RECORDSET_ACCESS:
2020-01-13 06:59:19 0046 LOAD DISTINCT 
2020-01-13 06:59:19 0047     call_recordset_id AS %CALL_RECORDSET_KEY_SEC,
2020-01-13 06:59:19 0048     [TIER_LINK] & '|' & [Call Record Id] AS %SA_CALL_RECORD_CALL_RECORDSET
2020-01-13 06:59:19 0049 RESIDENT CALL_RECORDSET_ACCESS
2020-01-13 07:01:18      	2 fields found: %CALL_RECORDSET_KEY_SEC, %SA_CALL_RECORD_CALL_RECORDSET, 
2020-01-13 07:01:18      60,325,215 lines fetched
2020-01-13 07:01:18 0006 DROP TABLE CALL_RECORDSET_ACCESS
2020-01-13 07:01:19 0008 RENAME TABLE CLIENT_CALL_RECORDSET_ACCESS TO CALL_RECORDSET_ACCESS
2020-01-13 07:01:19 0010 explicit_call_recordset_security:
2020-01-13 07:01:19 0011 NOCONCATENATE
2020-01-13 07:01:19 0012 LOAD DISTINCT
2020-01-13 07:01:19 0013 	TIER_LINK,
2020-01-13 07:01:19 0014     provider_id
2020-01-13 07:01:19 0015 RESIDENT INHERENT_SECURITY
2020-01-13 07:01:23      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 07:01:23      6,331 lines fetched
2020-01-13 07:01:23 0017 call_recordset_security:
2020-01-13 07:01:23 0018 NOCONCATENATE
2020-01-13 07:01:23 0019 LOAD DISTINCT
2020-01-13 07:01:23 0020     [Call Recordset Id],
2020-01-13 07:01:23 0021     provider_id,
2020-01-13 07:01:23 0022 	%callrecordid
2020-01-13 07:01:23 0023 RESIDENT Call_Recordset_visibility
2020-01-13 07:01:26      	3 fields found: Call Recordset Id, provider_id, %callrecordid, 
2020-01-13 07:01:26      11,536,064 lines fetched
2020-01-13 07:01:26 0024 DROP TABLE Call_Recordset_visibility
2020-01-13 07:01:26 0026 JOIN(explicit_call_recordset_security)
2020-01-13 07:01:26 0027 LOAD 
2020-01-13 07:01:26 0028     [Call Recordset Id],
2020-01-13 07:01:26 0029     provider_id,
2020-01-13 07:01:26 0030 	%callrecordid
2020-01-13 07:01:26 0031 RESIDENT call_recordset_security
2020-01-13 07:01:28      	3 fields found: Call Recordset Id, provider_id, %callrecordid, 
2020-01-13 07:01:28      11,536,064 lines fetched
2020-01-13 07:01:28      Joining/Keeping
2020-01-13 07:01:31 0033 DROP TABLE call_recordset_security
2020-01-13 07:01:31 0035 CONCATENATE(CALL_RECORDSET_ACCESS)
2020-01-13 07:01:31 0036 LOAD
2020-01-13 07:01:31 0037 	[Call Recordset Id] AS %CALL_RECORDSET_KEY_SEC,
2020-01-13 07:01:31 0038 	[TIER_LINK] & '|' & %callrecordid AS %SA_CALL_RECORD_CALL_RECORDSET
2020-01-13 07:01:31 0039 RESIDENT explicit_call_recordset_security
2020-01-13 07:03:21      	2 fields found: %CALL_RECORDSET_KEY_SEC, %SA_CALL_RECORD_CALL_RECORDSET, 
2020-01-13 07:03:21      67,359,582 lines fetched
2020-01-13 07:03:21 0041 DROP TABLE explicit_call_recordset_security
2020-01-13 07:03:21 0046 ENTRY_ANSWER_ACCESS:
2020-01-13 07:03:21 0047 NOCONCATENATE
2020-01-13 07:03:21 0048 LOAD DISTINCT
2020-01-13 07:03:21 0049 	TIER_LINK,
2020-01-13 07:03:21 0050     [Client Provider Created By Id]
2020-01-13 07:03:21 0051 RESIDENT INHERENT_SECURITY
2020-01-13 07:03:25      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 07:03:25      13,848,823 lines fetched
2020-01-13 07:03:25 0008 Entry_Answer_security:
2020-01-13 07:03:25 0009 LOAD
2020-01-13 07:03:25 0010     answer_id,
2020-01-13 07:03:25 0011     entry_exit_id,
2020-01-13 07:03:25 0012 	answer_id as %answerjoinkey,
2020-01-13 07:03:25 0013 	provider_id
2020-01-13 07:03:25 0014 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_ACCESS_ENTRY.qvd]
2020-01-13 07:03:25 0015 (qvd)
2020-01-13 07:03:25 0016 where entry_exit_id > 0
2020-01-13 07:03:33      	4 fields found: answer_id, entry_exit_id, %answerjoinkey, provider_id, 
2020-01-13 07:03:33      4,544,022 lines fetched
2020-01-13 07:03:33 0018 INNER JOIN(ENTRY_ANSWER_ACCESS)
2020-01-13 07:03:33 0019 LOAD
2020-01-13 07:03:33 0020     entry_exit_id AS [Entry Exit Id],
2020-01-13 07:03:33 0021     answer_id AS [Entry Answer Id], 
2020-01-13 07:03:33 0022     provider_id AS [Client Provider Created By Id],
2020-01-13 07:03:33 0023     1 AS [INHERENT SECURITY]
2020-01-13 07:03:33 0024 RESIDENT Entry_Answer_security
2020-01-13 07:03:33 0025 WHERE 
2020-01-13 07:03:33 0026   answer_id > 0
2020-01-13 07:03:33 0027   AND entry_exit_id > 0
2020-01-13 07:03:38      	4 fields found: Entry Exit Id, Entry Answer Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 07:03:38      4,544,022 lines fetched
2020-01-13 07:03:38      Joining/Keeping
2020-01-13 08:00:51 0029 DROP TABLE Entry_Answer_security
2020-01-13 08:00:51 0047 CLIENT_ENTRY_ANSWER_ACCESS:  
2020-01-13 08:00:51 0048 LOAD DISTINCT
2020-01-13 08:00:51 0049     [Entry Answer Id] AS %ENTRY_ANSWER_KEY_SEC,    
2020-01-13 08:00:51 0050     [TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_ENTRY_ANSWER
2020-01-13 08:00:51 0051 RESIDENT ENTRY_ANSWER_ACCESS
2020-01-13 13:54:14      	2 fields found: %ENTRY_ANSWER_KEY_SEC, %SA_EE_ENTRY_ANSWER, 
2020-01-13 13:54:14      25,458,358,792 lines fetched
2020-01-13 13:54:14 0007 DROP TABLE ENTRY_ANSWER_ACCESS
2020-01-13 13:54:40 0010 explicit_entry_answer_security:
2020-01-13 13:54:40 0011 NOCONCATENATE
2020-01-13 13:54:40 0012 LOAD DISTINCT
2020-01-13 13:54:40 0013 	TIER_LINK,
2020-01-13 13:54:40 0014     provider_id
2020-01-13 13:54:40 0015 RESIDENT INHERENT_SECURITY
2020-01-13 13:54:48      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 13:54:48      6,331 lines fetched
2020-01-13 13:54:48 0017 entry_answer_security:
2020-01-13 13:54:48 0018 NOCONCATENATE
2020-01-13 13:54:48 0019 LOAD
2020-01-13 13:54:48 0020     answer_id as [Entry Answer Id],
2020-01-13 13:54:48 0021 	entry_exit_id as %entryexitidentryanswer,
2020-01-13 13:54:48 0022 	visibility_id as %providerjoinkey
2020-01-13 13:54:48 0023 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_ACCESS_ENTRY.qvd]
2020-01-13 13:54:48 0024 (qvd)
2020-01-13 13:54:58      	3 fields found: Entry Answer Id, %entryexitidentryanswer, %providerjoinkey, 
2020-01-13 13:54:58      7,295,321 lines fetched
2020-01-13 13:54:58 0027 LEFT JOIN(entry_answer_security)
2020-01-13 13:54:58 0028 LOAD
2020-01-13 13:54:58 0029     visibility_id as %providerjoinkey,
2020-01-13 13:54:58 0030     provider_id
2020-01-13 13:54:58 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_VIS_PROVIDER_ENTRY.qvd]
2020-01-13 13:54:58 0032 (qvd)
2020-01-13 13:54:58      	2 fields found: %providerjoinkey, provider_id, 
2020-01-13 13:54:58      30,326 lines fetched
2020-01-13 13:54:58      Joining/Keeping
2020-01-13 14:01:19 0035 JOIN(explicit_entry_answer_security)
2020-01-13 14:01:19 0036 LOAD 
2020-01-13 14:01:19 0037     [Entry Answer Id],
2020-01-13 14:01:19 0038     provider_id,
2020-01-13 14:01:19 0039 	%entryexitidentryanswer
2020-01-13 14:01:19 0040 RESIDENT entry_answer_security
2020-01-13 14:05:37      	3 fields found: Entry Answer Id, provider_id, %entryexitidentryanswer, 
2020-01-13 14:05:37      1,687,721,093 lines fetched
2020-01-13 14:05:37      Joining/Keeping
2020-01-13 14:22:38 0042 DROP TABLE entry_answer_security
2020-01-13 14:22:44 0044 CONCATENATE(CLIENT_ENTRY_ANSWER_ACCESS)
2020-01-13 14:22:44 0045 LOAD
2020-01-13 14:22:44 0046 	[Entry Answer Id] AS %ENTRY_ANSWER_KEY_SEC,    
2020-01-13 14:22:44 0047    [TIER_LINK] & '|' & %entryexitidentryanswer AS %SA_EE_ENTRY_ANSWER
2020-01-13 14:22:44 0048 RESIDENT explicit_entry_answer_security
2020-01-13 15:43:19      	2 fields found: %ENTRY_ANSWER_KEY_SEC, %SA_EE_ENTRY_ANSWER, 
2020-01-13 15:43:19      28,274,403,127 lines fetched
2020-01-13 15:43:20 0050 DROP TABLE explicit_entry_answer_security
2020-01-13 15:43:23 0048 EXIT_ANSWER_ACCESS:
2020-01-13 15:43:23 0049 NOCONCATENATE
2020-01-13 15:43:23 0050 LOAD DISTINCT
2020-01-13 15:43:23 0051 	TIER_LINK,
2020-01-13 15:43:23 0052     [Client Provider Created By Id]
2020-01-13 15:43:23 0053 RESIDENT INHERENT_SECURITY
2020-01-13 15:43:29      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 15:43:29      13,848,823 lines fetched
2020-01-13 15:43:30 0008 Exit_Answer_security:
2020-01-13 15:43:30 0009 LOAD
2020-01-13 15:43:30 0010     answer_id,
2020-01-13 15:43:30 0011     entry_exit_id,
2020-01-13 15:43:30 0012 	answer_id as %answerjoinkey,
2020-01-13 15:43:30 0013 	provider_id
2020-01-13 15:43:30 0014 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_ACCESS_EXIT.qvd]
2020-01-13 15:43:30 0015 (qvd)
2020-01-13 15:43:30 0016 where entry_exit_id > 0
2020-01-13 15:43:39      	4 fields found: answer_id, entry_exit_id, %answerjoinkey, provider_id, 
2020-01-13 15:43:39      2,995,500 lines fetched
2020-01-13 15:43:39 0018 INNER JOIN(EXIT_ANSWER_ACCESS)
2020-01-13 15:43:39 0019 LOAD
2020-01-13 15:43:39 0020     entry_exit_id AS [Entry Exit Id],
2020-01-13 15:43:39 0021     answer_id AS [Exit Answer Id], 
2020-01-13 15:43:39 0022     provider_id AS [Client Provider Created By Id],
2020-01-13 15:43:39 0023     1 AS [INHERENT SECURITY]
2020-01-13 15:43:39 0024 RESIDENT Exit_Answer_security
2020-01-13 15:43:39 0025 WHERE 
2020-01-13 15:43:39 0026    answer_id > 0
2020-01-13 15:43:39 0027   AND entry_exit_id > 0
2020-01-13 15:43:45      	4 fields found: Entry Exit Id, Exit Answer Id, Client Provider Created By Id, INHERENT SECURITY, 
2020-01-13 15:43:45      2,995,500 lines fetched
2020-01-13 15:43:45      Joining/Keeping
2020-01-13 16:40:01 0029 DROP TABLE Exit_Answer_security
2020-01-13 16:40:01 0049 CLIENT_EXIT_ANSWER_ACCESS:  
2020-01-13 16:40:01 0050 LOAD DISTINCT
2020-01-13 16:40:01 0051     [Exit Answer Id] AS %EXIT_ANSWER_KEY_SEC,    
2020-01-13 16:40:01 0052     [TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_EXIT_ANSWER
2020-01-13 16:40:01 0053 RESIDENT EXIT_ANSWER_ACCESS
2020-01-13 20:16:58      	2 fields found: %EXIT_ANSWER_KEY_SEC, %SA_EE_EXIT_ANSWER, 
2020-01-13 20:16:58      16,943,819,912 lines fetched
2020-01-13 20:16:58 0007 DROP TABLE EXIT_ANSWER_ACCESS
2020-01-13 20:17:17 0010 explicit_exit_answer_security:
2020-01-13 20:17:17 0011 NOCONCATENATE
2020-01-13 20:17:17 0012 LOAD DISTINCT
2020-01-13 20:17:17 0013 	TIER_LINK,
2020-01-13 20:17:17 0014     provider_id
2020-01-13 20:17:17 0015 RESIDENT INHERENT_SECURITY
2020-01-13 20:17:20      	2 fields found: TIER_LINK, provider_id, 
2020-01-13 20:17:20      6,331 lines fetched
2020-01-13 20:17:20 0017 exit_answer_security:
2020-01-13 20:17:20 0018 NOCONCATENATE
2020-01-13 20:17:20 0019 LOAD
2020-01-13 20:17:20 0020     answer_id as [Exit Answer Id],
2020-01-13 20:17:20 0021 	entry_exit_id as %entryexitidexitanswer,
2020-01-13 20:17:20 0022 	visibility_id as %providerjoinkey
2020-01-13 20:17:20 0023 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_ACCESS_EXIT.qvd]
2020-01-13 20:17:20 0024 (qvd)
2020-01-13 20:17:26      	3 fields found: Exit Answer Id, %entryexitidexitanswer, %providerjoinkey, 
2020-01-13 20:17:26      7,295,321 lines fetched
2020-01-13 20:17:26 0027 LEFT JOIN(exit_answer_security)
2020-01-13 20:17:26 0028 LOAD
2020-01-13 20:17:26 0029     visibility_id as %providerjoinkey,
2020-01-13 20:17:26 0030     provider_id
2020-01-13 20:17:26 0031 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_QLIK_ANSWER_VIS_PROVIDER_EXIT.qvd]
2020-01-13 20:17:26 0032 (qvd)
2020-01-13 20:17:27      	2 fields found: %providerjoinkey, provider_id, 
2020-01-13 20:17:27      30,326 lines fetched
2020-01-13 20:17:27      Joining/Keeping
2020-01-13 20:19:26 0035 JOIN(explicit_exit_answer_security)
2020-01-13 20:19:26 0036 LOAD 
2020-01-13 20:19:26 0037     [Exit Answer Id],
2020-01-13 20:19:26 0038     provider_id,
2020-01-13 20:19:26 0039 	%entryexitidexitanswer
2020-01-13 20:19:26 0040 RESIDENT exit_answer_security
2020-01-13 20:22:28      	3 fields found: Exit Answer Id, provider_id, %entryexitidexitanswer, 
2020-01-13 20:22:28      1,687,721,093 lines fetched
2020-01-13 20:22:28      Joining/Keeping
2020-01-13 20:37:44 0042 DROP TABLE exit_answer_security
2020-01-13 20:37:49 0044 CONCATENATE(CLIENT_EXIT_ANSWER_ACCESS)
2020-01-13 20:37:49 0045 LOAD
2020-01-13 20:37:49 0046 	[Exit Answer Id] AS %EXIT_ANSWER_KEY_SEC,    
2020-01-13 20:37:49 0047    [TIER_LINK] & '|' & %entryexitidexitanswer AS %SA_EE_EXIT_ANSWER
2020-01-13 20:37:49 0048 RESIDENT explicit_exit_answer_security
2020-01-13 21:48:28      	2 fields found: %EXIT_ANSWER_KEY_SEC, %SA_EE_EXIT_ANSWER, 
2020-01-13 21:48:28      19,918,443,029 lines fetched
2020-01-13 21:48:28 0050 DROP TABLE explicit_exit_answer_security
2020-01-13 21:48:32 0050 LET varDeltaDate = '1/01/2019'
2020-01-13 21:48:32 0008 LET varQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_RUNDATE_V2.qvd'))
2020-01-13 21:48:32 0010 IF -1 THEN
  2020-01-13 21:48:32 0011 DeltaDate:
  2020-01-13 21:48:32 0012   Noconcatenate
  2020-01-13 21:48:32 0013   LOAD
  2020-01-13 21:48:32 0014     DeltaDateVal
  2020-01-13 21:48:32 0015   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_RUNDATE_V2.qvd](qvd)
  2020-01-13 21:48:34      	1 fields found: DeltaDateVal, 
  2020-01-13 21:48:34      1 lines fetched
  2020-01-13 21:48:34 0016 LET varDeltaDate=Peek('DeltaDateVal',0,'DeltaDate')
2020-01-13 21:48:34 0017 ELSE
2020-01-13 21:48:34 0024 DROP TABLE DeltaDate
2020-01-13 21:48:34 0026 Calls_To_Rebuild_Answers_For:
2020-01-13 21:48:34 0027 Noconcatenate
2020-01-13 21:48:34 0028 SELECT DISTINCT cr.call_record_id
2020-01-13 21:48:34 0029 FROM sp_call_record cr
2020-01-13 21:48:34 0030 WHERE (cr.active = TRUE) AND (cr.date_updated > '1/10/2020')
2020-01-13 21:48:34 0031 AND ((cr.end_date IS NULL) OR (cr.end_date >= '2019-01-01'))
2020-01-13 21:48:34 0032 UNION
2020-01-13 21:48:34 0033 SELECT DISTINCT  cr.call_record_id
2020-01-13 21:48:34 0034 FROM sp_call_record cr
2020-01-13 21:48:34 0035 INNER JOIN call_answer ca ON (ca.call_record_id = cr.call_record_id)
2020-01-13 21:48:34 0036 INNER JOIN da_question dq ON (dq.question_id = ca.question_id)
2020-01-13 21:48:34 0037 INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:48:34 0038 WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL) AND (cr.active = TRUE)
2020-01-13 21:48:34 0039 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:48:34 0040 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))             
2020-01-13 21:48:34 0041 AND
2020-01-13 21:48:34 0042 (
2020-01-13 21:48:34 0043   ((ca.date_added > '1/10/2020') AND (ca.active = TRUE))   
2020-01-13 21:48:34 0044   OR
2020-01-13 21:48:34 0045   ((ca.date_inactive > '1/10/2020') AND (ca.active = FALSE))
2020-01-13 21:48:34 0046 )
2020-01-13 21:48:34 0047 AND ((ca.date_effective::DATE <= cr.start_date::DATE) )
2020-01-13 21:48:34 0048 AND ((cr.end_date IS NULL) OR (cr.end_date >= '2019-01-01'))
2020-01-13 21:48:49      	1 fields found: call_record_id, 
2020-01-13 21:48:49      0 lines fetched
2020-01-13 21:48:49 0051 Calls_To_Remove_From_Current_QVD:
2020-01-13 21:48:49 0052 Noconcatenate
2020-01-13 21:48:49 0053 SELECT DISTINCT cr.call_record_id as match_call_id  
2020-01-13 21:48:49 0054 FROM sp_call_record cr
2020-01-13 21:48:49 0055 WHERE (cr.active = false) AND (cr.date_updated > '1/10/2020')
2020-01-13 21:48:49 0056 AND ((cr.end_date IS NULL) OR (cr.end_date >= '2019-01-01'))
2020-01-13 21:48:49      	1 fields found: match_call_id, 
2020-01-13 21:48:49      0 lines fetched
2020-01-13 21:48:49 0059 CONCATENATE(Calls_To_Remove_From_Current_QVD)
2020-01-13 21:48:49 0060 LOAD DISTINCT     
2020-01-13 21:48:49 0061   call_record_id AS match_call_id
2020-01-13 21:48:49 0062 RESIDENT Calls_To_Rebuild_Answers_For
2020-01-13 21:48:49      	1 fields found: match_call_id, 
2020-01-13 21:48:49      0 lines fetched
2020-01-13 21:48:49 0067 LET varTempCallStartAnswerQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_START_ANSWER_V2.qvd'))
2020-01-13 21:48:49 0069 IF -1 THEN
  2020-01-13 21:48:49 0070 Temp_Call_Start_Answer_Table:
  2020-01-13 21:48:49 0071   Noconcatenate
  2020-01-13 21:48:49 0072   LOAD
  2020-01-13 21:48:49 0073     *
  2020-01-13 21:48:49 0074   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_START_ANSWER_V2.qvd](qvd)
  2020-01-13 21:48:49 0075   WHERE NOT EXISTS(match_call_id, %call_record_id_check)
  2020-01-13 21:48:50      	64 fields found: %call_record_id_check, %CALL_ANSWER_KEY_SEC, HUD_MAJORCHANGEHHCOMP_call, CALLSEARCHCRITZIP_call, HUD_HEADOFHHDISABLINGCOND_call, CALLERCONSENTDATE_call, CITY_211_call, TOTALCURRENTMONTHLYIN_call, HUD_CURRENTHHINCOME0_call, MONTHLYRENT_call, WHERESPECIFICALLYDIDY_call, SUBCOOKCEACCESSPOINT_call, CALLSEARCHCRITAREA_call, HUD_SINGLEPARENTWMINORCHILD_call, PHONE1_call, PHONE2_call, PRIMARYLANGUAGESPOKEN_2_call, RHYMISWARDCHILDWELFARE_call, HUD_EXTENTTOFDV2_call, PREGNANT_call, HUD_ONEDEPCHILDUNDER6_call, HUD_HISTLITERALHOMELESS_call, NUMBERINHOUSEHOLD_call, SVPPROFGENDER_call, HUD_CURRENTHOUSINGLOSS_call, NUMBERINHOUSEHOLD_2_call, CALLERCONSENTANDNOTIF_call, SVPPROFRACE_call, HOUSEHOLDINCOME_call, NUMBEROFBEDROOMS_call, HAVEVALIDDRIVERSLICENSE_call, ANYHOUSEHOLDMEMBERAUS_call, HUD_TOTALMONTHLYINCOME_call, HUD_SUDDENDECREASECASH_call, HUD_HPAPPTOTALPTS_call, SVPPROFETH_call, HUD_HH5ORMORE3BEDROOMS_call, PHONE3_call, SVPPROFDOBTYPE_call, IMMINENTRISKOFHOMELES_call, HUD_AMIPERCENT_call, HUD_ANNUALHHGROSSINCOME_call, CHILDRENINHOUSEHOLD_call, HOMELESSDEFINITION_call, HUD_DISABLINGCONDITION_call, EMAILADDRESS_call, MARITALSTATUS_1_call, HUD_RENTALEVICTPAST7YRS_call, TOTALAMOUNTOFABOVEDEBT_call, REFERREDBY_1_call, EXPLAINOTHERPRIMARYRE_call, HUD_CRIMINALRECORD_call, COUNTY_211_call, SVPPROFDOB_call, PRIMARYREASONFORCALL_call, HOUSEHOLDTYPE_call, HUD_REGSEXOFFENDER_call, HUD_RISKLOSINGHOUSINGSUBSIDY_call, DOYOUNEEDASSISTANCEIN_call, ADULTSINHOUSEHOLD_call, DOYOUHAVEAPLACETOSLEE_1_call, IFWORKINGINDUPAGEWHAT_call, IMMEDIATEACTIONTAKEN_call, SVP_ANYSOURCE30DAYINCOME_call, 
  2020-01-13 21:48:50      477,469 lines fetched
  2020-01-13 21:48:50 0076 END IF
2020-01-13 21:48:50 0051 Temp_Call:
2020-01-13 21:48:50 0052 Noconcatenate
2020-01-13 21:48:50 0053 SELECT
2020-01-13 21:48:50 0054 b.call_record_id, b.question_id, dq3.virt_field_name, ca3.call_answer_id,
2020-01-13 21:48:50 0055 CASE WHEN b.code = 'lookup' THEN plv(ca3.val_int)::VARCHAR
2020-01-13 21:48:50 0056      WHEN b.code = 'yes_no' THEN yn(ca3.val_int)::VARCHAR
2020-01-13 21:48:50 0057      WHEN b.code = 'date' THEN (ca3.val_date::DATE)::VARCHAR
2020-01-13 21:48:50 0058      WHEN b.code = 'int' THEN ca3.val_int::VARCHAR
2020-01-13 21:48:50 0059      WHEN b.code = 'textbox' THEN ca3.val_textfield::VARCHAR
2020-01-13 21:48:50 0060      WHEN b.code = 'textarea' THEN ca3.val_textfield::VARCHAR
2020-01-13 21:48:50 0061      WHEN b.code = 'money' THEN ca3.val_float::VARCHAR
2020-01-13 21:48:50 0062      WHEN b.code = 'service_code' THEN ca3.val_int::VARCHAR
2020-01-13 21:48:50 0063      ELSE '' 
2020-01-13 21:48:50 0064 END AS answer_val
2020-01-13 21:48:50 0065 FROM
2020-01-13 21:48:50 0066 (
2020-01-13 21:48:50 0067 	SELECT a.call_record_id, a.question_id, a.code,
2020-01-13 21:48:50 0068 	(select ca2.call_answer_id FROM call_answer ca2 INNER JOIN da_question dq2 on (dq2.question_id = ca2.question_id)
2020-01-13 21:48:50 0069 	        WHERE (ca2.call_record_id = a.call_record_id) AND (ca2.question_id = a.question_id) AND (ca2.date_effective = a.date_effective) 
2020-01-13 21:48:50 0070 	        ORDER BY ca2.call_answer_id DESC LIMIT 1) as answer_id
2020-01-13 21:48:50 0071 	FROM 
2020-01-13 21:48:50 0072 	(
2020-01-13 21:48:50 0073 		SELECT cr.call_record_id, ca.question_id, dqt.code, max(date_effective) as date_effective
2020-01-13 21:48:50 0074 		FROM (
2020-01-13 21:48:50 0075 			SELECT DISTINCT cr2.call_record_id, cr2.start_date
2020-01-13 21:48:50 0076 			FROM sp_call_record cr2
2020-01-13 21:48:50 0077 			WHERE (cr2.active = TRUE) AND (cr2.date_updated > '1/10/2020')
2020-01-13 21:48:50 0078 			AND ((cr2.end_date IS NULL) OR (cr2.end_date >= '2019-01-01'))
2020-01-13 21:48:50 0079 			UNION
2020-01-13 21:48:50 0080 			SELECT DISTINCT  cr3.call_record_id, cr3.start_date
2020-01-13 21:48:50 0081 			FROM sp_call_record cr3
2020-01-13 21:48:50 0082 			INNER JOIN call_answer ca3 ON (ca3.call_record_id = cr3.call_record_id)
2020-01-13 21:48:50 0083 			INNER JOIN da_question dq3 ON (dq3.question_id = ca3.question_id)
2020-01-13 21:48:50 0084 			INNER JOIN da_question_type dqt3 ON (dqt3.question_type_id = dq3.question_type_id)
2020-01-13 21:48:50 0085 			WHERE (dq3.active = TRUE) AND (dq3.parent_id IS NULL) AND (cr3.active = TRUE)
2020-01-13 21:48:50 0086 			AND (dqt3.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:48:50 0087 			AND ((dq3.reportable_flag = TRUE) OR (dq3.ee_reportable_flag = TRUE) OR (dq3.service_reportable_flag = TRUE))             
2020-01-13 21:48:50 0088 			AND
2020-01-13 21:48:50 0089 			(
2020-01-13 21:48:50 0090 			  ((ca3.date_added > '1/10/2020') AND (ca3.active = TRUE))   
2020-01-13 21:48:50 0091 			  OR
2020-01-13 21:48:50 0092 			  ((ca3.date_inactive > '1/10/2020') AND (ca3.active = FALSE))
2020-01-13 21:48:50 0093 			)
2020-01-13 21:48:50 0094 			AND ((ca3.date_effective::DATE <= cr3.start_date::DATE) )
2020-01-13 21:48:50 0095 			AND ((cr3.end_date IS NULL) OR (cr3.end_date >= '2019-01-01'))
2020-01-13 21:48:50 0096 		)cr
2020-01-13 21:48:50 0097 		INNER JOIN call_answer ca ON (ca.call_record_id = cr.call_record_id)
2020-01-13 21:48:50 0098 		INNER JOIN da_question dq ON (dq.question_id = ca.question_id)
2020-01-13 21:48:50 0099 	INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:48:50 0100 		WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 21:48:50 0101                 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:48:50 0102                 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))
2020-01-13 21:48:50 0103 		AND (ca.active = true)
2020-01-13 21:48:50 0104 		--AND (ca.date_effective >= '2019-01-01')
2020-01-13 21:48:50 0105 		AND (ca.date_effective::DATE <= cr.start_date::DATE)
2020-01-13 21:48:50 0106 
2020-01-13 21:48:50 0107 		--AND (((belowtree.provider_id IS NOT NULL) AND (belowtree.provider_id = ca.provider_creating_id)) OR ((abovetree.ancestor_provider_id IS NOT NULL) AND (abovetree.ancestor_provider_id = ca.provider_creating_id)))
2020-01-13 21:48:50 0108 
2020-01-13 21:48:50 0109 		GROUP BY cr.call_record_id, ca.question_id, dqt.code
2020-01-13 21:48:50 0110 	) a
2020-01-13 21:48:50 0111 ) b
2020-01-13 21:48:50 0112 INNER JOIN call_answer ca3 ON (ca3.call_answer_id = b.answer_id)
2020-01-13 21:48:50 0113 INNER JOIN da_question dq3 ON (dq3.question_id = ca3.question_id)
2020-01-13 21:48:52      	5 fields found: call_record_id, question_id, virt_field_name, call_answer_id, answer_val, 
2020-01-13 21:48:52      0 lines fetched
2020-01-13 21:48:52 0066 Call_Overall_Answer:
2020-01-13 21:48:52 0067 LOAD 
2020-01-13 21:48:52 0068 call_record_id									AS %call_record_id_check, 
2020-01-13 21:48:52 0069 
2020-01-13 21:48:52 0070 virt_field_name									AS [Call Answer Virtual Field Name],
2020-01-13 21:48:52 0071 answer_val										AS [Call Answer Value],
2020-01-13 21:48:52 0072 call_answer_id										AS %CALL_ANSWER_KEY_SEC
2020-01-13 21:48:52 0073 RESIDENT Temp_Call
2020-01-13 21:48:52      	4 fields found: %call_record_id_check, Call Answer Virtual Field Name, Call Answer Value, %CALL_ANSWER_KEY_SEC, 
2020-01-13 21:48:52      0 lines fetched
2020-01-13 21:48:52 0074 DROP TABLE Temp_Call
2020-01-13 21:48:52 0077 Call_Question_List:
2020-01-13 21:48:52 0078 Noconcatenate
2020-01-13 21:48:52 0079 LOAD DISTINCT
2020-01-13 21:48:52 0080 [Call Answer Virtual Field Name] as virt_name
2020-01-13 21:48:52 0081 RESIDENT Call_Overall_Answer
2020-01-13 21:48:52      	1 fields found: virt_name, 
2020-01-13 21:48:52      0 lines fetched
2020-01-13 21:48:52 0084 Call_Start_Answer:
2020-01-13 21:48:52 0085 Noconcatenate
2020-01-13 21:48:52 0086 Load Distinct
2020-01-13 21:48:52 0087 
2020-01-13 21:48:52 0088 %call_record_id_check,
2020-01-13 21:48:52 0089 %CALL_ANSWER_KEY_SEC
2020-01-13 21:48:52 0090 RESIDENT Call_Overall_Answer
2020-01-13 21:48:52      	2 fields found: %call_record_id_check, %CALL_ANSWER_KEY_SEC, 
2020-01-13 21:48:52      0 lines fetched
2020-01-13 21:48:52 0094 LET NumRows=NoOfRows('Call_Question_List')
2020-01-13 21:48:52 0095 FOR i=0 to 0-1
2020-01-13 21:48:52 0114 DROP TABLE Call_Overall_Answer
2020-01-13 21:48:54 0115 DROP TABLE Call_Question_List
2020-01-13 21:48:54 0052 DROP TABLE Calls_To_Rebuild_Answers_For
2020-01-13 21:48:54 0003 DROP TABLE Calls_To_Remove_From_Current_QVD
2020-01-13 21:48:54 0006 LET varTempCallStartAnswerQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_START_ANSWER_V2.qvd'))
2020-01-13 21:48:54 0008 IF -1 THEN
  2020-01-13 21:48:54 0009 Concatenate(Temp_Call_Start_Answer_Table)
  2020-01-13 21:48:54 0010 LOAD
  2020-01-13 21:48:54 0011 	*
  2020-01-13 21:48:54 0012 	RESIDENT Call_Start_Answer
  2020-01-13 21:48:54      	2 fields found: %call_record_id_check, %CALL_ANSWER_KEY_SEC, 
  2020-01-13 21:48:54      477,469 lines fetched
  2020-01-13 21:48:54 0013 DROP TABLE Call_Start_Answer
2020-01-13 21:48:55 0015 ELSE
2020-01-13 21:48:55 0024 RENAME TABLE Temp_Call_Start_Answer_Table to Call_Start_Answer
2020-01-13 21:48:55 0025 STORE Call_Start_Answer INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_START_ANSWER_V2.qvd]
2020-01-13 21:50:34 0053 LET varDeltaDate = '1/01/2019'
2020-01-13 21:50:34 0003 LET varQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_CF_RUNDATE_V0.qvd'))
2020-01-13 21:50:34 0005 IF 0 THEN
  2020-01-13 21:50:34 0013 DeltaDate:
  2020-01-13 21:50:34 0014    LOAD * INLINE [
  2020-01-13 21:50:34 0015     DeltaDateVal
  2020-01-13 21:50:34 0016     '9/9/9999']
  2020-01-13 21:50:34      	1 fields found: DeltaDateVal, 
  2020-01-13 21:50:34      1 lines fetched
  2020-01-13 21:50:34 0017 END IF
2020-01-13 21:50:34 0019 DROP TABLE DeltaDate
2020-01-13 21:50:34 0021 Call_Followups_To_Rebuild_Answers_For:
2020-01-13 21:50:34 0022 Noconcatenate
2020-01-13 21:50:34 0023 SELECT DISTINCT cr.call_record_id
2020-01-13 21:50:34 0024 FROM sp_call_record cr
2020-01-13 21:50:34 0025 WHERE (cr.active = TRUE) AND (cr.actual_followup_date IS NOT NULL)
2020-01-13 21:50:34 0026 UNION
2020-01-13 21:50:34 0027 SELECT DISTINCT  cr.call_record_id
2020-01-13 21:50:34 0028 FROM sp_call_record cr
2020-01-13 21:50:34 0029 INNER JOIN call_answer ca ON (ca.call_record_id = cr.call_record_id)
2020-01-13 21:50:34 0030 INNER JOIN da_question dq ON (dq.question_id = ca.question_id)
2020-01-13 21:50:34 0031 INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:50:34 0032 WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL) AND (cr.active = TRUE)
2020-01-13 21:50:34 0033 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:50:34 0034 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))             
2020-01-13 21:50:34 0035 AND
2020-01-13 21:50:34 0036 (
2020-01-13 21:50:34 0037   ((ca.date_added > '1/01/2019') AND (ca.active = TRUE))   
2020-01-13 21:50:34 0038   OR
2020-01-13 21:50:34 0039   ((ca.date_inactive > '1/01/2019') AND (ca.active = FALSE))
2020-01-13 21:50:34 0040 )
2020-01-13 21:50:34 0041 AND ((ca.date_effective::DATE <= cr.actual_followup_date::DATE) )
2020-01-13 21:50:37      	1 fields found: call_record_id, 
2020-01-13 21:50:37      4,490 lines fetched
2020-01-13 21:50:37 0043 Call_Followups_To_Remove_From_Current_QVD:
2020-01-13 21:50:37 0044 Noconcatenate
2020-01-13 21:50:37 0045 SELECT DISTINCT cr.call_record_id as match_call_id  
2020-01-13 21:50:37 0046 FROM sp_call_record cr
2020-01-13 21:50:37 0047 WHERE (cr.active = false) AND (cr.date_updated > '1/01/2019')
2020-01-13 21:50:37 0048 AND ((cr.end_date IS NULL) OR (cr.end_date >= '2019-01-01'))
2020-01-13 21:50:37      	1 fields found: match_call_id, 
2020-01-13 21:50:37      2,707 lines fetched
2020-01-13 21:50:37 0050 CONCATENATE(Call_Followups_To_Remove_From_Current_QVD)
2020-01-13 21:50:37 0051 LOAD DISTINCT     
2020-01-13 21:50:37 0052   call_record_id AS match_call_id
2020-01-13 21:50:37 0053 RESIDENT Call_Followups_To_Rebuild_Answers_For
2020-01-13 21:50:37      	1 fields found: match_call_id, 
2020-01-13 21:50:37      7,197 lines fetched
2020-01-13 21:50:37 0055 LET varTempCallFollowupAnswerQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_FOLLOWUP_ANSWER_V0.qvd'))
2020-01-13 21:50:37 0057 IF -1 THEN
  2020-01-13 21:50:37 0058 Temp_Call_Followup_Answer_Table:
  2020-01-13 21:50:37 0059   Noconcatenate
  2020-01-13 21:50:37 0060   LOAD
  2020-01-13 21:50:37 0061     *
  2020-01-13 21:50:37 0062   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_FOLLOWUP_ANSWER_V0.qvd](qvd)
  2020-01-13 21:50:37 0063   WHERE NOT EXISTS(match_call_id, %Call_Followup_Record_Id)
  2020-01-13 21:50:37      	70 fields found: %Call_Followup_Record_Id, NUMBERINHOUSEHOLD_callfollow, MARITALSTATUS_1_callfollow, ANYHOUSEHOLDMEMBERAUS_callfollow, DOYOUHAVEAPLACETOSLEE_1_callfollow, PRIMARYLANGUAGESPOKEN_2_callfollow, CHILDRENINHOUSEHOLD_callfollow, IMMEDIATEACTIONTAKEN_callfollow, HAVEVALIDDRIVERSLICENSE_callfollow, SVPPROFDOB_callfollow, WHERESPECIFICALLYDIDY_callfollow, SVP_HUD_HOUSINGSTATUS_callfollow, TYPEOFLIVINGSITUATION_callfollow, HUD_LENGTHOFSTAY_callfollow, SVPPROFETH_callfollow, SVPPROFRACE_callfollow, IFWORKINGINDUPAGEWHAT_callfollow, SUBCOOKCEACCESSPOINT_callfollow, CALLERCONSENTANDNOTIF_callfollow, TOTALAMOUNTOFABOVEDEBT_callfollow, HUD_ZIPDATAQUALITY_callfollow, SVPPROFGENDER_callfollow, PRIMARYSERVICENEEDED_callfollow, CALLSEARCHCRITAREA_callfollow, ADULTSINHOUSEHOLD_callfollow, HASTHECLIENTPREVIOUSL_callfollow, SECONDARYREASONFORCALL_1_callfollow, HUD_DISABLINGCONDITION_callfollow, EMAILADDRESS_callfollow, VETERAN_callfollow, REFERREDFROMOTHERCONN_callfollow, NUMBEROFBEDROOMS_callfollow, PREGNANT_callfollow, IMMINENTRISKOFHOMELES_callfollow, EVERBEENARRESTEDBEFORE_callfollow, SVPPROFDOBTYPE_callfollow, TOTALCURRENTMONTHLYIN_callfollow, HUD_ZIPCODELASTPERMADDR_callfollow, IFYESWOULDYOUBEWILLIN_callfollow, PRIMARYREASONFORCALL_callfollow, DOYOUOWNAPET_callfollow, ISCLIENTHOMELESS_callfollow, SVPPROFSECONDARYRACE_callfollow, IFYESEXPLAIN_2_callfollow, HIGHESTLEVELOFEDUCATI_callfollow, IFYESEXPLAIN_callfollow, HOMELESSDEFINITION_callfollow, EXPLAINOTHERPRIMARYRE_callfollow, CITY_211_callfollow, FINALDETERMINATION_callfollow, AMILEVEL_callfollow, CALLSEARCHCRITZIP_callfollow, COUNTY_211_callfollow, PHONE3_callfollow, LOANSTATUS_callfollow, HUD_TOTALMONTHLYINCOME_callfollow, WHEREDIDYOUHEAR_211_callfollow, IFAPPROPRIATEBUTREASON_callfollow, HOUSEHOLDTYPE_callfollow, NUMBERINHOUSEHOLD_2_callfollow, PRIMARYREASONFORHOMLE_callfollow, IFYESEXPLAIN_4_callfollow, REFERREDBY_1_callfollow, CALLUPDATEFROMCASEMAN_callfollow, CALLERCONSENTDATE_callfollow, PHONE1_callfollow, HOUSEHOLDINCOME_callfollow, HUD_ENTERFROMESSH_callfollow, PHONE2_callfollow, MONTHLYRENT_callfollow, 
  2020-01-13 21:50:37      0 lines fetched
  2020-01-13 21:50:37 0064 END IF
2020-01-13 21:50:37 0054 Temp_Call_Followup:
2020-01-13 21:50:37 0055 Noconcatenate
2020-01-13 21:50:37 0056 SELECT
2020-01-13 21:50:37 0057 b.call_record_id, b.question_id, dq3.virt_field_name, --b.code,
2020-01-13 21:50:37 0058 CASE WHEN b.code = 'lookup' THEN plv(ca3.val_int)::VARCHAR
2020-01-13 21:50:37 0059      WHEN b.code = 'yes_no' THEN yn(ca3.val_int)::VARCHAR
2020-01-13 21:50:37 0060      WHEN b.code = 'date' THEN (ca3.val_date::DATE)::VARCHAR
2020-01-13 21:50:37 0061      WHEN b.code = 'int' THEN ca3.val_int::VARCHAR
2020-01-13 21:50:37 0062      WHEN b.code = 'textbox' THEN ca3.val_textfield::VARCHAR
2020-01-13 21:50:37 0063      WHEN b.code = 'textarea' THEN ca3.val_textfield::VARCHAR
2020-01-13 21:50:37 0064      WHEN b.code = 'money' THEN ca3.val_float::VARCHAR
2020-01-13 21:50:37 0065      WHEN b.code = 'service_code' THEN ca3.val_int::VARCHAR
2020-01-13 21:50:37 0066      ELSE '' 
2020-01-13 21:50:37 0067 END AS answer_val
2020-01-13 21:50:37 0068 FROM
2020-01-13 21:50:37 0069 (
2020-01-13 21:50:37 0070 	SELECT a.call_record_id, a.question_id, a.code,
2020-01-13 21:50:37 0071 	(
2020-01-13 21:50:37 0072 		SELECT ca2.call_answer_id 
2020-01-13 21:50:37 0073 		FROM call_answer ca2 
2020-01-13 21:50:37 0074 		INNER JOIN da_question dq2 on (dq2.question_id = ca2.question_id)
2020-01-13 21:50:37 0075 	    WHERE (ca2.call_record_id = a.call_record_id) 
2020-01-13 21:50:37 0076 		AND (ca2.question_id = a.question_id) 
2020-01-13 21:50:37 0077 		AND (ca2.date_effective = a.date_effective) 
2020-01-13 21:50:37 0078 	    ORDER BY ca2.call_answer_id DESC LIMIT 1
2020-01-13 21:50:37 0079 	) as answer_id
2020-01-13 21:50:37 0080 	FROM 
2020-01-13 21:50:37 0081 	(
2020-01-13 21:50:37 0082 		SELECT cr.call_record_id, ca.question_id, dqt.code, max(date_effective) as date_effective
2020-01-13 21:50:37 0083 		FROM 
2020-01-13 21:50:37 0084 		(
2020-01-13 21:50:37 0085 			SELECT DISTINCT cr2.call_record_id, cr2.actual_followup_date
2020-01-13 21:50:37 0086 			FROM sp_call_record cr2
2020-01-13 21:50:37 0087 			WHERE (cr2.active = TRUE) AND (cr2.actual_followup_date IS NOT NULL)
2020-01-13 21:50:37 0088 			UNION
2020-01-13 21:50:37 0089 			SELECT DISTINCT  cr3.call_record_id, cr3.actual_followup_date
2020-01-13 21:50:37 0090 			FROM sp_call_record cr3
2020-01-13 21:50:37 0091 			INNER JOIN call_answer ca3 ON (ca3.call_record_id = cr3.call_record_id)
2020-01-13 21:50:37 0092 			INNER JOIN da_question dq3 ON (dq3.question_id = ca3.question_id)
2020-01-13 21:50:37 0093 			INNER JOIN da_question_type dqt3 ON (dqt3.question_type_id = dq3.question_type_id)
2020-01-13 21:50:37 0094 			WHERE (dq3.active = TRUE) AND (dq3.parent_id IS NULL) AND (cr3.active = TRUE)
2020-01-13 21:50:37 0095 			AND (dqt3.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:50:37 0096 			AND (
2020-01-13 21:50:37 0097 				(dq3.reportable_flag = TRUE) OR (dq3.ee_reportable_flag = TRUE) 
2020-01-13 21:50:37 0098 				OR (dq3.service_reportable_flag = TRUE))             
2020-01-13 21:50:37 0099 			AND
2020-01-13 21:50:37 0100 			(
2020-01-13 21:50:37 0101 			  ((ca3.date_added > '1/01/2019') AND (ca3.active = TRUE))   
2020-01-13 21:50:37 0102 			  OR
2020-01-13 21:50:37 0103 			  ((ca3.date_inactive > '1/01/2019') AND (ca3.active = FALSE))
2020-01-13 21:50:37 0104 			)
2020-01-13 21:50:37 0105 			AND ((ca3.date_effective::DATE <= cr3.actual_followup_date::DATE) )
2020-01-13 21:50:37 0106 		) cr
2020-01-13 21:50:37 0107 		INNER JOIN call_answer ca ON (ca.call_record_id = cr.call_record_id)
2020-01-13 21:50:37 0108 		INNER JOIN da_question dq ON (dq.question_id = ca.question_id)
2020-01-13 21:50:37 0109 		INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:50:37 0110 		WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 21:50:37 0111             AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 21:50:37 0112             AND (
2020-01-13 21:50:37 0113 				(dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) 
2020-01-13 21:50:37 0114 				OR (dq.service_reportable_flag = TRUE))
2020-01-13 21:50:37 0115 		AND (ca.active = true)
2020-01-13 21:50:37 0116 		AND (ca.date_effective::DATE <= cr.actual_followup_date::DATE)
2020-01-13 21:50:37 0117 		GROUP BY cr.call_record_id, ca.question_id, dqt.code
2020-01-13 21:50:37 0118 	) a
2020-01-13 21:50:37 0119 ) b
2020-01-13 21:50:37 0120 INNER JOIN call_answer ca3 ON (ca3.call_answer_id = b.answer_id)
2020-01-13 21:50:37 0121 INNER JOIN da_question dq3 ON (dq3.question_id = ca3.question_id)
2020-01-13 21:50:51      	4 fields found: call_record_id, question_id, virt_field_name, answer_val, 
2020-01-13 21:50:51      24,615 lines fetched
2020-01-13 21:50:51 0070 Call_Followup_Overall_Answer:
2020-01-13 21:50:51 0071 LOAD 
2020-01-13 21:50:51 0072 call_record_id									AS [Call Followup Record Id],
2020-01-13 21:50:51 0073 virt_field_name									AS [Call Followup Answer Virtual Field Name],
2020-01-13 21:50:51 0074 answer_val										AS [Call Followup Answer Value]
2020-01-13 21:50:51 0075 RESIDENT Temp_Call_Followup
2020-01-13 21:50:51      	3 fields found: Call Followup Record Id, Call Followup Answer Virtual Field Name, Call Followup Answer Value, 
2020-01-13 21:50:51      24,615 lines fetched
2020-01-13 21:50:51 0076 DROP TABLE Temp_Call_Followup
2020-01-13 21:50:51 0078 Call_Followup_Question_List:
2020-01-13 21:50:51 0079 Noconcatenate
2020-01-13 21:50:51 0080 LOAD DISTINCT
2020-01-13 21:50:51 0081 [Call Followup Answer Virtual Field Name] as virt_name
2020-01-13 21:50:51 0082 RESIDENT Call_Followup_Overall_Answer
2020-01-13 21:50:52      	1 fields found: virt_name, 
2020-01-13 21:50:52      69 lines fetched
2020-01-13 21:50:52 0084 Call_Followup_Answer:
2020-01-13 21:50:52 0085 Noconcatenate
2020-01-13 21:50:52 0086 Load Distinct
2020-01-13 21:50:52 0087 
2020-01-13 21:50:52 0088 [Call Followup Record Id]				AS %Call_Followup_Record_Id
2020-01-13 21:50:52 0089 RESIDENT Call_Followup_Overall_Answer
2020-01-13 21:50:52      	1 fields found: %Call_Followup_Record_Id, 
2020-01-13 21:50:52      3,917 lines fetched
2020-01-13 21:50:52 0093 LET NumRows=NoOfRows('Call_Followup_Question_List')
2020-01-13 21:50:52 0094 FOR i=0 to 69-1
  2020-01-13 21:50:52 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',0,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:52 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',0,'Call_Followup_Question_List')
  2020-01-13 21:50:52 0099 LET varStepName='STEP_' & 0 & '_of_' & 69
  2020-01-13 21:50:52 0100 STEP_0_of_69: select 1
  2020-01-13 21:50:52      	1 fields found: ?column?, 
  2020-01-13 21:50:52      1 lines fetched
  2020-01-13 21:50:52 0101 DROP TABLE STEP_0_of_69
  2020-01-13 21:50:52 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:52 0104 	LOAD 
  2020-01-13 21:50:52 0105 	
  2020-01-13 21:50:52 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:52 0107 	left([Call Followup Answer Value],200) AS 'NUMBERINHOUSEHOLD_callfollow'
  2020-01-13 21:50:52 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:52 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'NUMBERINHOUSEHOLD'
  2020-01-13 21:50:52      	2 fields found: %Call_Followup_Record_Id, NUMBERINHOUSEHOLD_callfollow, 
  2020-01-13 21:50:52      1,622 lines fetched
  2020-01-13 21:50:52      Joining/Keeping
2020-01-13 21:50:52 0111 NEXT
  2020-01-13 21:50:52 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',1,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:52 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',1,'Call_Followup_Question_List')
  2020-01-13 21:50:52 0099 LET varStepName='STEP_' & 1 & '_of_' & 69
  2020-01-13 21:50:52 0100 STEP_1_of_69: select 1
  2020-01-13 21:50:52      	1 fields found: ?column?, 
  2020-01-13 21:50:52      1 lines fetched
  2020-01-13 21:50:52 0101 DROP TABLE STEP_1_of_69
  2020-01-13 21:50:52 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:52 0104 	LOAD 
  2020-01-13 21:50:52 0105 	
  2020-01-13 21:50:52 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:52 0107 	left([Call Followup Answer Value],200) AS 'MARITALSTATUS_1_callfollow'
  2020-01-13 21:50:52 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:52 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'MARITALSTATUS_1'
  2020-01-13 21:50:52      	2 fields found: %Call_Followup_Record_Id, MARITALSTATUS_1_callfollow, 
  2020-01-13 21:50:52      181 lines fetched
  2020-01-13 21:50:52      Joining/Keeping
2020-01-13 21:50:52 0111 NEXT
  2020-01-13 21:50:52 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',2,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:52 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',2,'Call_Followup_Question_List')
  2020-01-13 21:50:52 0099 LET varStepName='STEP_' & 2 & '_of_' & 69
  2020-01-13 21:50:52 0100 STEP_2_of_69: select 1
  2020-01-13 21:50:52      	1 fields found: ?column?, 
  2020-01-13 21:50:52      1 lines fetched
  2020-01-13 21:50:52 0101 DROP TABLE STEP_2_of_69
  2020-01-13 21:50:52 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:52 0104 	LOAD 
  2020-01-13 21:50:52 0105 	
  2020-01-13 21:50:52 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:52 0107 	left([Call Followup Answer Value],200) AS 'ANYHOUSEHOLDMEMBERAUS_callfollow'
  2020-01-13 21:50:52 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:52 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'ANYHOUSEHOLDMEMBERAUS'
  2020-01-13 21:50:52      	2 fields found: %Call_Followup_Record_Id, ANYHOUSEHOLDMEMBERAUS_callfollow, 
  2020-01-13 21:50:52      476 lines fetched
  2020-01-13 21:50:52      Joining/Keeping
2020-01-13 21:50:52 0111 NEXT
  2020-01-13 21:50:52 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',3,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:52 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',3,'Call_Followup_Question_List')
  2020-01-13 21:50:52 0099 LET varStepName='STEP_' & 3 & '_of_' & 69
  2020-01-13 21:50:52 0100 STEP_3_of_69: select 1
  2020-01-13 21:50:52      	1 fields found: ?column?, 
  2020-01-13 21:50:52      1 lines fetched
  2020-01-13 21:50:52 0101 DROP TABLE STEP_3_of_69
  2020-01-13 21:50:52 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:52 0104 	LOAD 
  2020-01-13 21:50:52 0105 	
  2020-01-13 21:50:52 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:52 0107 	left([Call Followup Answer Value],200) AS 'DOYOUHAVEAPLACETOSLEE_1_callfollow'
  2020-01-13 21:50:52 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:52 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'DOYOUHAVEAPLACETOSLEE_1'
  2020-01-13 21:50:52      	2 fields found: %Call_Followup_Record_Id, DOYOUHAVEAPLACETOSLEE_1_callfollow, 
  2020-01-13 21:50:52      339 lines fetched
  2020-01-13 21:50:52      Joining/Keeping
2020-01-13 21:50:52 0111 NEXT
  2020-01-13 21:50:52 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',4,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:52 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',4,'Call_Followup_Question_List')
  2020-01-13 21:50:52 0099 LET varStepName='STEP_' & 4 & '_of_' & 69
  2020-01-13 21:50:52 0100 STEP_4_of_69: select 1
  2020-01-13 21:50:53      	1 fields found: ?column?, 
  2020-01-13 21:50:53      1 lines fetched
  2020-01-13 21:50:53 0101 DROP TABLE STEP_4_of_69
  2020-01-13 21:50:53 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:53 0104 	LOAD 
  2020-01-13 21:50:53 0105 	
  2020-01-13 21:50:53 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:53 0107 	left([Call Followup Answer Value],200) AS 'PRIMARYLANGUAGESPOKEN_2_callfollow'
  2020-01-13 21:50:53 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:53 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PRIMARYLANGUAGESPOKEN_2'
  2020-01-13 21:50:53      	2 fields found: %Call_Followup_Record_Id, PRIMARYLANGUAGESPOKEN_2_callfollow, 
  2020-01-13 21:50:53      906 lines fetched
  2020-01-13 21:50:53      Joining/Keeping
2020-01-13 21:50:53 0111 NEXT
  2020-01-13 21:50:53 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',5,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:53 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',5,'Call_Followup_Question_List')
  2020-01-13 21:50:53 0099 LET varStepName='STEP_' & 5 & '_of_' & 69
  2020-01-13 21:50:53 0100 STEP_5_of_69: select 1
  2020-01-13 21:50:53      	1 fields found: ?column?, 
  2020-01-13 21:50:53      1 lines fetched
  2020-01-13 21:50:53 0101 DROP TABLE STEP_5_of_69
  2020-01-13 21:50:53 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:53 0104 	LOAD 
  2020-01-13 21:50:53 0105 	
  2020-01-13 21:50:53 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:53 0107 	left([Call Followup Answer Value],200) AS 'CHILDRENINHOUSEHOLD_callfollow'
  2020-01-13 21:50:53 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:53 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CHILDRENINHOUSEHOLD'
  2020-01-13 21:50:53      	2 fields found: %Call_Followup_Record_Id, CHILDRENINHOUSEHOLD_callfollow, 
  2020-01-13 21:50:53      316 lines fetched
  2020-01-13 21:50:53      Joining/Keeping
2020-01-13 21:50:53 0111 NEXT
  2020-01-13 21:50:53 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',6,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:53 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',6,'Call_Followup_Question_List')
  2020-01-13 21:50:53 0099 LET varStepName='STEP_' & 6 & '_of_' & 69
  2020-01-13 21:50:53 0100 STEP_6_of_69: select 1
  2020-01-13 21:50:53      	1 fields found: ?column?, 
  2020-01-13 21:50:53      1 lines fetched
  2020-01-13 21:50:53 0101 DROP TABLE STEP_6_of_69
  2020-01-13 21:50:53 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:53 0104 	LOAD 
  2020-01-13 21:50:53 0105 	
  2020-01-13 21:50:53 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:53 0107 	left([Call Followup Answer Value],200) AS 'IMMEDIATEACTIONTAKEN_callfollow'
  2020-01-13 21:50:53 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:53 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IMMEDIATEACTIONTAKEN'
  2020-01-13 21:50:53      	2 fields found: %Call_Followup_Record_Id, IMMEDIATEACTIONTAKEN_callfollow, 
  2020-01-13 21:50:53      1,771 lines fetched
  2020-01-13 21:50:53      Joining/Keeping
2020-01-13 21:50:53 0111 NEXT
  2020-01-13 21:50:53 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',7,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:53 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',7,'Call_Followup_Question_List')
  2020-01-13 21:50:53 0099 LET varStepName='STEP_' & 7 & '_of_' & 69
  2020-01-13 21:50:53 0100 STEP_7_of_69: select 1
  2020-01-13 21:50:53      	1 fields found: ?column?, 
  2020-01-13 21:50:53      1 lines fetched
  2020-01-13 21:50:53 0101 DROP TABLE STEP_7_of_69
  2020-01-13 21:50:53 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:53 0104 	LOAD 
  2020-01-13 21:50:53 0105 	
  2020-01-13 21:50:53 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:53 0107 	left([Call Followup Answer Value],200) AS 'HAVEVALIDDRIVERSLICENSE_callfollow'
  2020-01-13 21:50:53 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:53 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HAVEVALIDDRIVERSLICENSE'
  2020-01-13 21:50:53      	2 fields found: %Call_Followup_Record_Id, HAVEVALIDDRIVERSLICENSE_callfollow, 
  2020-01-13 21:50:53      181 lines fetched
  2020-01-13 21:50:53      Joining/Keeping
2020-01-13 21:50:53 0111 NEXT
  2020-01-13 21:50:53 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',8,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:53 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',8,'Call_Followup_Question_List')
  2020-01-13 21:50:53 0099 LET varStepName='STEP_' & 8 & '_of_' & 69
  2020-01-13 21:50:53 0100 STEP_8_of_69: select 1
  2020-01-13 21:50:53      	1 fields found: ?column?, 
  2020-01-13 21:50:53      1 lines fetched
  2020-01-13 21:50:53 0101 DROP TABLE STEP_8_of_69
  2020-01-13 21:50:53 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:53 0104 	LOAD 
  2020-01-13 21:50:53 0105 	
  2020-01-13 21:50:53 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:53 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFDOB_callfollow'
  2020-01-13 21:50:53 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:53 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFDOB'
  2020-01-13 21:50:53      	2 fields found: %Call_Followup_Record_Id, SVPPROFDOB_callfollow, 
  2020-01-13 21:50:53      794 lines fetched
  2020-01-13 21:50:53      Joining/Keeping
2020-01-13 21:50:53 0111 NEXT
  2020-01-13 21:50:53 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',9,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:53 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',9,'Call_Followup_Question_List')
  2020-01-13 21:50:53 0099 LET varStepName='STEP_' & 9 & '_of_' & 69
  2020-01-13 21:50:53 0100 STEP_9_of_69: select 1
  2020-01-13 21:50:54      	1 fields found: ?column?, 
  2020-01-13 21:50:54      1 lines fetched
  2020-01-13 21:50:54 0101 DROP TABLE STEP_9_of_69
  2020-01-13 21:50:54 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:54 0104 	LOAD 
  2020-01-13 21:50:54 0105 	
  2020-01-13 21:50:54 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:54 0107 	left([Call Followup Answer Value],200) AS 'WHERESPECIFICALLYDIDY_callfollow'
  2020-01-13 21:50:54 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:54 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'WHERESPECIFICALLYDIDY'
  2020-01-13 21:50:54      	2 fields found: %Call_Followup_Record_Id, WHERESPECIFICALLYDIDY_callfollow, 
  2020-01-13 21:50:54      190 lines fetched
  2020-01-13 21:50:54      Joining/Keeping
2020-01-13 21:50:54 0111 NEXT
  2020-01-13 21:50:54 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',10,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:54 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',10,'Call_Followup_Question_List')
  2020-01-13 21:50:54 0099 LET varStepName='STEP_' & 10 & '_of_' & 69
  2020-01-13 21:50:54 0100 STEP_10_of_69: select 1
  2020-01-13 21:50:54      	1 fields found: ?column?, 
  2020-01-13 21:50:54      1 lines fetched
  2020-01-13 21:50:54 0101 DROP TABLE STEP_10_of_69
  2020-01-13 21:50:54 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:54 0104 	LOAD 
  2020-01-13 21:50:54 0105 	
  2020-01-13 21:50:54 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:54 0107 	left([Call Followup Answer Value],200) AS 'SVP_HUD_HOUSINGSTATUS_callfollow'
  2020-01-13 21:50:54 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:54 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVP_HUD_HOUSINGSTATUS'
  2020-01-13 21:50:54      	2 fields found: %Call_Followup_Record_Id, SVP_HUD_HOUSINGSTATUS_callfollow, 
  2020-01-13 21:50:54      189 lines fetched
  2020-01-13 21:50:54      Joining/Keeping
2020-01-13 21:50:54 0111 NEXT
  2020-01-13 21:50:54 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',11,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:54 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',11,'Call_Followup_Question_List')
  2020-01-13 21:50:54 0099 LET varStepName='STEP_' & 11 & '_of_' & 69
  2020-01-13 21:50:54 0100 STEP_11_of_69: select 1
  2020-01-13 21:50:54      	1 fields found: ?column?, 
  2020-01-13 21:50:54      1 lines fetched
  2020-01-13 21:50:54 0101 DROP TABLE STEP_11_of_69
  2020-01-13 21:50:54 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:54 0104 	LOAD 
  2020-01-13 21:50:54 0105 	
  2020-01-13 21:50:54 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:54 0107 	left([Call Followup Answer Value],200) AS 'TYPEOFLIVINGSITUATION_callfollow'
  2020-01-13 21:50:54 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:54 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'TYPEOFLIVINGSITUATION'
  2020-01-13 21:50:54      	2 fields found: %Call_Followup_Record_Id, TYPEOFLIVINGSITUATION_callfollow, 
  2020-01-13 21:50:54      190 lines fetched
  2020-01-13 21:50:54      Joining/Keeping
2020-01-13 21:50:54 0111 NEXT
  2020-01-13 21:50:54 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',12,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:54 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',12,'Call_Followup_Question_List')
  2020-01-13 21:50:54 0099 LET varStepName='STEP_' & 12 & '_of_' & 69
  2020-01-13 21:50:54 0100 STEP_12_of_69: select 1
  2020-01-13 21:50:54      	1 fields found: ?column?, 
  2020-01-13 21:50:54      1 lines fetched
  2020-01-13 21:50:54 0101 DROP TABLE STEP_12_of_69
  2020-01-13 21:50:54 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:54 0104 	LOAD 
  2020-01-13 21:50:54 0105 	
  2020-01-13 21:50:54 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:54 0107 	left([Call Followup Answer Value],200) AS 'HUD_LENGTHOFSTAY_callfollow'
  2020-01-13 21:50:54 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:54 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_LENGTHOFSTAY'
  2020-01-13 21:50:54      	2 fields found: %Call_Followup_Record_Id, HUD_LENGTHOFSTAY_callfollow, 
  2020-01-13 21:50:54      189 lines fetched
  2020-01-13 21:50:54      Joining/Keeping
2020-01-13 21:50:54 0111 NEXT
  2020-01-13 21:50:54 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',13,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:54 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',13,'Call_Followup_Question_List')
  2020-01-13 21:50:54 0099 LET varStepName='STEP_' & 13 & '_of_' & 69
  2020-01-13 21:50:54 0100 STEP_13_of_69: select 1
  2020-01-13 21:50:54      	1 fields found: ?column?, 
  2020-01-13 21:50:54      1 lines fetched
  2020-01-13 21:50:54 0101 DROP TABLE STEP_13_of_69
  2020-01-13 21:50:54 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:54 0104 	LOAD 
  2020-01-13 21:50:54 0105 	
  2020-01-13 21:50:54 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:54 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFETH_callfollow'
  2020-01-13 21:50:54 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:54 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFETH'
  2020-01-13 21:50:54      	2 fields found: %Call_Followup_Record_Id, SVPPROFETH_callfollow, 
  2020-01-13 21:50:54      194 lines fetched
  2020-01-13 21:50:54      Joining/Keeping
2020-01-13 21:50:55 0111 NEXT
  2020-01-13 21:50:55 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',14,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:55 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',14,'Call_Followup_Question_List')
  2020-01-13 21:50:55 0099 LET varStepName='STEP_' & 14 & '_of_' & 69
  2020-01-13 21:50:55 0100 STEP_14_of_69: select 1
  2020-01-13 21:50:55      	1 fields found: ?column?, 
  2020-01-13 21:50:55      1 lines fetched
  2020-01-13 21:50:55 0101 DROP TABLE STEP_14_of_69
  2020-01-13 21:50:55 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:55 0104 	LOAD 
  2020-01-13 21:50:55 0105 	
  2020-01-13 21:50:55 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:55 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFRACE_callfollow'
  2020-01-13 21:50:55 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:55 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFRACE'
  2020-01-13 21:50:55      	2 fields found: %Call_Followup_Record_Id, SVPPROFRACE_callfollow, 
  2020-01-13 21:50:55      194 lines fetched
  2020-01-13 21:50:55      Joining/Keeping
2020-01-13 21:50:55 0111 NEXT
  2020-01-13 21:50:55 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',15,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:55 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',15,'Call_Followup_Question_List')
  2020-01-13 21:50:55 0099 LET varStepName='STEP_' & 15 & '_of_' & 69
  2020-01-13 21:50:55 0100 STEP_15_of_69: select 1
  2020-01-13 21:50:55      	1 fields found: ?column?, 
  2020-01-13 21:50:55      1 lines fetched
  2020-01-13 21:50:55 0101 DROP TABLE STEP_15_of_69
  2020-01-13 21:50:55 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:55 0104 	LOAD 
  2020-01-13 21:50:55 0105 	
  2020-01-13 21:50:55 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:55 0107 	left([Call Followup Answer Value],200) AS 'IFWORKINGINDUPAGEWHAT_callfollow'
  2020-01-13 21:50:55 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:55 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFWORKINGINDUPAGEWHAT'
  2020-01-13 21:50:55      	2 fields found: %Call_Followup_Record_Id, IFWORKINGINDUPAGEWHAT_callfollow, 
  2020-01-13 21:50:55      167 lines fetched
  2020-01-13 21:50:55      Joining/Keeping
2020-01-13 21:50:55 0111 NEXT
  2020-01-13 21:50:55 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',16,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:55 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',16,'Call_Followup_Question_List')
  2020-01-13 21:50:55 0099 LET varStepName='STEP_' & 16 & '_of_' & 69
  2020-01-13 21:50:55 0100 STEP_16_of_69: select 1
  2020-01-13 21:50:55      	1 fields found: ?column?, 
  2020-01-13 21:50:55      1 lines fetched
  2020-01-13 21:50:55 0101 DROP TABLE STEP_16_of_69
  2020-01-13 21:50:55 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:55 0104 	LOAD 
  2020-01-13 21:50:55 0105 	
  2020-01-13 21:50:55 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:55 0107 	left([Call Followup Answer Value],200) AS 'SUBCOOKCEACCESSPOINT_callfollow'
  2020-01-13 21:50:55 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:55 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SUBCOOKCEACCESSPOINT'
  2020-01-13 21:50:55      	2 fields found: %Call_Followup_Record_Id, SUBCOOKCEACCESSPOINT_callfollow, 
  2020-01-13 21:50:55      31 lines fetched
  2020-01-13 21:50:55      Joining/Keeping
2020-01-13 21:50:55 0111 NEXT
  2020-01-13 21:50:55 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',17,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:55 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',17,'Call_Followup_Question_List')
  2020-01-13 21:50:55 0099 LET varStepName='STEP_' & 17 & '_of_' & 69
  2020-01-13 21:50:55 0100 STEP_17_of_69: select 1
  2020-01-13 21:50:55      	1 fields found: ?column?, 
  2020-01-13 21:50:55      1 lines fetched
  2020-01-13 21:50:55 0101 DROP TABLE STEP_17_of_69
  2020-01-13 21:50:55 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:55 0104 	LOAD 
  2020-01-13 21:50:55 0105 	
  2020-01-13 21:50:55 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:55 0107 	left([Call Followup Answer Value],200) AS 'CALLERCONSENTANDNOTIF_callfollow'
  2020-01-13 21:50:55 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:55 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CALLERCONSENTANDNOTIF'
  2020-01-13 21:50:55      	2 fields found: %Call_Followup_Record_Id, CALLERCONSENTANDNOTIF_callfollow, 
  2020-01-13 21:50:55      842 lines fetched
  2020-01-13 21:50:55      Joining/Keeping
2020-01-13 21:50:55 0111 NEXT
  2020-01-13 21:50:55 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',18,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:55 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',18,'Call_Followup_Question_List')
  2020-01-13 21:50:55 0099 LET varStepName='STEP_' & 18 & '_of_' & 69
  2020-01-13 21:50:55 0100 STEP_18_of_69: select 1
  2020-01-13 21:50:55      	1 fields found: ?column?, 
  2020-01-13 21:50:55      1 lines fetched
  2020-01-13 21:50:55 0101 DROP TABLE STEP_18_of_69
  2020-01-13 21:50:55 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:55 0104 	LOAD 
  2020-01-13 21:50:55 0105 	
  2020-01-13 21:50:55 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:55 0107 	left([Call Followup Answer Value],200) AS 'TOTALAMOUNTOFABOVEDEBT_callfollow'
  2020-01-13 21:50:55 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:55 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'TOTALAMOUNTOFABOVEDEBT'
  2020-01-13 21:50:55      	2 fields found: %Call_Followup_Record_Id, TOTALAMOUNTOFABOVEDEBT_callfollow, 
  2020-01-13 21:50:55      174 lines fetched
  2020-01-13 21:50:55      Joining/Keeping
2020-01-13 21:50:56 0111 NEXT
  2020-01-13 21:50:56 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',19,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:56 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',19,'Call_Followup_Question_List')
  2020-01-13 21:50:56 0099 LET varStepName='STEP_' & 19 & '_of_' & 69
  2020-01-13 21:50:56 0100 STEP_19_of_69: select 1
  2020-01-13 21:50:56      	1 fields found: ?column?, 
  2020-01-13 21:50:56      1 lines fetched
  2020-01-13 21:50:56 0101 DROP TABLE STEP_19_of_69
  2020-01-13 21:50:56 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:56 0104 	LOAD 
  2020-01-13 21:50:56 0105 	
  2020-01-13 21:50:56 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:56 0107 	left([Call Followup Answer Value],200) AS 'HUD_ZIPDATAQUALITY_callfollow'
  2020-01-13 21:50:56 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:56 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_ZIPDATAQUALITY'
  2020-01-13 21:50:56      	2 fields found: %Call_Followup_Record_Id, HUD_ZIPDATAQUALITY_callfollow, 
  2020-01-13 21:50:56      189 lines fetched
  2020-01-13 21:50:56      Joining/Keeping
2020-01-13 21:50:56 0111 NEXT
  2020-01-13 21:50:56 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',20,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:56 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',20,'Call_Followup_Question_List')
  2020-01-13 21:50:56 0099 LET varStepName='STEP_' & 20 & '_of_' & 69
  2020-01-13 21:50:56 0100 STEP_20_of_69: select 1
  2020-01-13 21:50:56      	1 fields found: ?column?, 
  2020-01-13 21:50:56      1 lines fetched
  2020-01-13 21:50:56 0101 DROP TABLE STEP_20_of_69
  2020-01-13 21:50:56 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:56 0104 	LOAD 
  2020-01-13 21:50:56 0105 	
  2020-01-13 21:50:56 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:56 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFGENDER_callfollow'
  2020-01-13 21:50:56 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:56 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFGENDER'
  2020-01-13 21:50:56      	2 fields found: %Call_Followup_Record_Id, SVPPROFGENDER_callfollow, 
  2020-01-13 21:50:56      676 lines fetched
  2020-01-13 21:50:56      Joining/Keeping
2020-01-13 21:50:56 0111 NEXT
  2020-01-13 21:50:56 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',21,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:56 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',21,'Call_Followup_Question_List')
  2020-01-13 21:50:56 0099 LET varStepName='STEP_' & 21 & '_of_' & 69
  2020-01-13 21:50:56 0100 STEP_21_of_69: select 1
  2020-01-13 21:50:56      	1 fields found: ?column?, 
  2020-01-13 21:50:56      1 lines fetched
  2020-01-13 21:50:56 0101 DROP TABLE STEP_21_of_69
  2020-01-13 21:50:56 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:56 0104 	LOAD 
  2020-01-13 21:50:56 0105 	
  2020-01-13 21:50:56 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:56 0107 	left([Call Followup Answer Value],200) AS 'PRIMARYSERVICENEEDED_callfollow'
  2020-01-13 21:50:56 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:56 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PRIMARYSERVICENEEDED'
  2020-01-13 21:50:56      	2 fields found: %Call_Followup_Record_Id, PRIMARYSERVICENEEDED_callfollow, 
  2020-01-13 21:50:56      21 lines fetched
  2020-01-13 21:50:56      Joining/Keeping
2020-01-13 21:50:56 0111 NEXT
  2020-01-13 21:50:56 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',22,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:56 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',22,'Call_Followup_Question_List')
  2020-01-13 21:50:56 0099 LET varStepName='STEP_' & 22 & '_of_' & 69
  2020-01-13 21:50:56 0100 STEP_22_of_69: select 1
  2020-01-13 21:50:56      	1 fields found: ?column?, 
  2020-01-13 21:50:56      1 lines fetched
  2020-01-13 21:50:56 0101 DROP TABLE STEP_22_of_69
  2020-01-13 21:50:56 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:56 0104 	LOAD 
  2020-01-13 21:50:56 0105 	
  2020-01-13 21:50:56 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:56 0107 	left([Call Followup Answer Value],200) AS 'CALLSEARCHCRITAREA_callfollow'
  2020-01-13 21:50:56 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:56 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CALLSEARCHCRITAREA'
  2020-01-13 21:50:56      	2 fields found: %Call_Followup_Record_Id, CALLSEARCHCRITAREA_callfollow, 
  2020-01-13 21:50:56      226 lines fetched
  2020-01-13 21:50:56      Joining/Keeping
2020-01-13 21:50:56 0111 NEXT
  2020-01-13 21:50:56 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',23,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:56 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',23,'Call_Followup_Question_List')
  2020-01-13 21:50:56 0099 LET varStepName='STEP_' & 23 & '_of_' & 69
  2020-01-13 21:50:56 0100 STEP_23_of_69: select 1
  2020-01-13 21:50:56      	1 fields found: ?column?, 
  2020-01-13 21:50:56      1 lines fetched
  2020-01-13 21:50:56 0101 DROP TABLE STEP_23_of_69
  2020-01-13 21:50:56 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:56 0104 	LOAD 
  2020-01-13 21:50:56 0105 	
  2020-01-13 21:50:56 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:56 0107 	left([Call Followup Answer Value],200) AS 'ADULTSINHOUSEHOLD_callfollow'
  2020-01-13 21:50:56 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:56 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'ADULTSINHOUSEHOLD'
  2020-01-13 21:50:57      	2 fields found: %Call_Followup_Record_Id, ADULTSINHOUSEHOLD_callfollow, 
  2020-01-13 21:50:57      374 lines fetched
  2020-01-13 21:50:57      Joining/Keeping
2020-01-13 21:50:57 0111 NEXT
  2020-01-13 21:50:57 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',24,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:57 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',24,'Call_Followup_Question_List')
  2020-01-13 21:50:57 0099 LET varStepName='STEP_' & 24 & '_of_' & 69
  2020-01-13 21:50:57 0100 STEP_24_of_69: select 1
  2020-01-13 21:50:57      	1 fields found: ?column?, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57 0101 DROP TABLE STEP_24_of_69
  2020-01-13 21:50:57 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:57 0104 	LOAD 
  2020-01-13 21:50:57 0105 	
  2020-01-13 21:50:57 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:57 0107 	left([Call Followup Answer Value],200) AS 'HASTHECLIENTPREVIOUSL_callfollow'
  2020-01-13 21:50:57 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:57 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HASTHECLIENTPREVIOUSL'
  2020-01-13 21:50:57      	2 fields found: %Call_Followup_Record_Id, HASTHECLIENTPREVIOUSL_callfollow, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57      Joining/Keeping
2020-01-13 21:50:57 0111 NEXT
  2020-01-13 21:50:57 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',25,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:57 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',25,'Call_Followup_Question_List')
  2020-01-13 21:50:57 0099 LET varStepName='STEP_' & 25 & '_of_' & 69
  2020-01-13 21:50:57 0100 STEP_25_of_69: select 1
  2020-01-13 21:50:57      	1 fields found: ?column?, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57 0101 DROP TABLE STEP_25_of_69
  2020-01-13 21:50:57 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:57 0104 	LOAD 
  2020-01-13 21:50:57 0105 	
  2020-01-13 21:50:57 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:57 0107 	left([Call Followup Answer Value],200) AS 'SECONDARYREASONFORCALL_1_callfollow'
  2020-01-13 21:50:57 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:57 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SECONDARYREASONFORCALL_1'
  2020-01-13 21:50:57      	2 fields found: %Call_Followup_Record_Id, SECONDARYREASONFORCALL_1_callfollow, 
  2020-01-13 21:50:57      670 lines fetched
  2020-01-13 21:50:57      Joining/Keeping
2020-01-13 21:50:57 0111 NEXT
  2020-01-13 21:50:57 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',26,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:57 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',26,'Call_Followup_Question_List')
  2020-01-13 21:50:57 0099 LET varStepName='STEP_' & 26 & '_of_' & 69
  2020-01-13 21:50:57 0100 STEP_26_of_69: select 1
  2020-01-13 21:50:57      	1 fields found: ?column?, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57 0101 DROP TABLE STEP_26_of_69
  2020-01-13 21:50:57 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:57 0104 	LOAD 
  2020-01-13 21:50:57 0105 	
  2020-01-13 21:50:57 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:57 0107 	left([Call Followup Answer Value],200) AS 'HUD_DISABLINGCONDITION_callfollow'
  2020-01-13 21:50:57 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:57 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_DISABLINGCONDITION'
  2020-01-13 21:50:57      	2 fields found: %Call_Followup_Record_Id, HUD_DISABLINGCONDITION_callfollow, 
  2020-01-13 21:50:57      189 lines fetched
  2020-01-13 21:50:57      Joining/Keeping
2020-01-13 21:50:57 0111 NEXT
  2020-01-13 21:50:57 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',27,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:57 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',27,'Call_Followup_Question_List')
  2020-01-13 21:50:57 0099 LET varStepName='STEP_' & 27 & '_of_' & 69
  2020-01-13 21:50:57 0100 STEP_27_of_69: select 1
  2020-01-13 21:50:57      	1 fields found: ?column?, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57 0101 DROP TABLE STEP_27_of_69
  2020-01-13 21:50:57 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:57 0104 	LOAD 
  2020-01-13 21:50:57 0105 	
  2020-01-13 21:50:57 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:57 0107 	left([Call Followup Answer Value],200) AS 'EMAILADDRESS_callfollow'
  2020-01-13 21:50:57 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:57 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'EMAILADDRESS'
  2020-01-13 21:50:57      	2 fields found: %Call_Followup_Record_Id, EMAILADDRESS_callfollow, 
  2020-01-13 21:50:57      149 lines fetched
  2020-01-13 21:50:57      Joining/Keeping
2020-01-13 21:50:57 0111 NEXT
  2020-01-13 21:50:57 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',28,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:57 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',28,'Call_Followup_Question_List')
  2020-01-13 21:50:57 0099 LET varStepName='STEP_' & 28 & '_of_' & 69
  2020-01-13 21:50:57 0100 STEP_28_of_69: select 1
  2020-01-13 21:50:57      	1 fields found: ?column?, 
  2020-01-13 21:50:57      1 lines fetched
  2020-01-13 21:50:57 0101 DROP TABLE STEP_28_of_69
  2020-01-13 21:50:57 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:57 0104 	LOAD 
  2020-01-13 21:50:57 0105 	
  2020-01-13 21:50:57 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:57 0107 	left([Call Followup Answer Value],200) AS 'VETERAN_callfollow'
  2020-01-13 21:50:57 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:57 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'VETERAN'
  2020-01-13 21:50:58      	2 fields found: %Call_Followup_Record_Id, VETERAN_callfollow, 
  2020-01-13 21:50:58      190 lines fetched
  2020-01-13 21:50:58      Joining/Keeping
2020-01-13 21:50:58 0111 NEXT
  2020-01-13 21:50:58 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',29,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:58 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',29,'Call_Followup_Question_List')
  2020-01-13 21:50:58 0099 LET varStepName='STEP_' & 29 & '_of_' & 69
  2020-01-13 21:50:58 0100 STEP_29_of_69: select 1
  2020-01-13 21:50:58      	1 fields found: ?column?, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58 0101 DROP TABLE STEP_29_of_69
  2020-01-13 21:50:58 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:58 0104 	LOAD 
  2020-01-13 21:50:58 0105 	
  2020-01-13 21:50:58 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:58 0107 	left([Call Followup Answer Value],200) AS 'REFERREDFROMOTHERCONN_callfollow'
  2020-01-13 21:50:58 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:58 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'REFERREDFROMOTHERCONN'
  2020-01-13 21:50:58      	2 fields found: %Call_Followup_Record_Id, REFERREDFROMOTHERCONN_callfollow, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58      Joining/Keeping
2020-01-13 21:50:58 0111 NEXT
  2020-01-13 21:50:58 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',30,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:58 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',30,'Call_Followup_Question_List')
  2020-01-13 21:50:58 0099 LET varStepName='STEP_' & 30 & '_of_' & 69
  2020-01-13 21:50:58 0100 STEP_30_of_69: select 1
  2020-01-13 21:50:58      	1 fields found: ?column?, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58 0101 DROP TABLE STEP_30_of_69
  2020-01-13 21:50:58 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:58 0104 	LOAD 
  2020-01-13 21:50:58 0105 	
  2020-01-13 21:50:58 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:58 0107 	left([Call Followup Answer Value],200) AS 'NUMBEROFBEDROOMS_callfollow'
  2020-01-13 21:50:58 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:58 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'NUMBEROFBEDROOMS'
  2020-01-13 21:50:58      	2 fields found: %Call_Followup_Record_Id, NUMBEROFBEDROOMS_callfollow, 
  2020-01-13 21:50:58      290 lines fetched
  2020-01-13 21:50:58      Joining/Keeping
2020-01-13 21:50:58 0111 NEXT
  2020-01-13 21:50:58 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',31,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:58 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',31,'Call_Followup_Question_List')
  2020-01-13 21:50:58 0099 LET varStepName='STEP_' & 31 & '_of_' & 69
  2020-01-13 21:50:58 0100 STEP_31_of_69: select 1
  2020-01-13 21:50:58      	1 fields found: ?column?, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58 0101 DROP TABLE STEP_31_of_69
  2020-01-13 21:50:58 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:58 0104 	LOAD 
  2020-01-13 21:50:58 0105 	
  2020-01-13 21:50:58 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:58 0107 	left([Call Followup Answer Value],200) AS 'PREGNANT_callfollow'
  2020-01-13 21:50:58 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:58 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PREGNANT'
  2020-01-13 21:50:58      	2 fields found: %Call_Followup_Record_Id, PREGNANT_callfollow, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58      Joining/Keeping
2020-01-13 21:50:58 0111 NEXT
  2020-01-13 21:50:58 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',32,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:58 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',32,'Call_Followup_Question_List')
  2020-01-13 21:50:58 0099 LET varStepName='STEP_' & 32 & '_of_' & 69
  2020-01-13 21:50:58 0100 STEP_32_of_69: select 1
  2020-01-13 21:50:58      	1 fields found: ?column?, 
  2020-01-13 21:50:58      1 lines fetched
  2020-01-13 21:50:58 0101 DROP TABLE STEP_32_of_69
  2020-01-13 21:50:58 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:58 0104 	LOAD 
  2020-01-13 21:50:58 0105 	
  2020-01-13 21:50:58 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:58 0107 	left([Call Followup Answer Value],200) AS 'IMMINENTRISKOFHOMELES_callfollow'
  2020-01-13 21:50:58 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:58 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IMMINENTRISKOFHOMELES'
  2020-01-13 21:50:58      	2 fields found: %Call_Followup_Record_Id, IMMINENTRISKOFHOMELES_callfollow, 
  2020-01-13 21:50:58      186 lines fetched
  2020-01-13 21:50:58      Joining/Keeping
2020-01-13 21:50:58 0111 NEXT
  2020-01-13 21:50:58 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',33,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:58 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',33,'Call_Followup_Question_List')
  2020-01-13 21:50:58 0099 LET varStepName='STEP_' & 33 & '_of_' & 69
  2020-01-13 21:50:58 0100 STEP_33_of_69: select 1
  2020-01-13 21:50:59      	1 fields found: ?column?, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59 0101 DROP TABLE STEP_33_of_69
  2020-01-13 21:50:59 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:59 0104 	LOAD 
  2020-01-13 21:50:59 0105 	
  2020-01-13 21:50:59 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:59 0107 	left([Call Followup Answer Value],200) AS 'EVERBEENARRESTEDBEFORE_callfollow'
  2020-01-13 21:50:59 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:59 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'EVERBEENARRESTEDBEFORE'
  2020-01-13 21:50:59      	2 fields found: %Call_Followup_Record_Id, EVERBEENARRESTEDBEFORE_callfollow, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59      Joining/Keeping
2020-01-13 21:50:59 0111 NEXT
  2020-01-13 21:50:59 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',34,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:59 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',34,'Call_Followup_Question_List')
  2020-01-13 21:50:59 0099 LET varStepName='STEP_' & 34 & '_of_' & 69
  2020-01-13 21:50:59 0100 STEP_34_of_69: select 1
  2020-01-13 21:50:59      	1 fields found: ?column?, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59 0101 DROP TABLE STEP_34_of_69
  2020-01-13 21:50:59 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:59 0104 	LOAD 
  2020-01-13 21:50:59 0105 	
  2020-01-13 21:50:59 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:59 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFDOBTYPE_callfollow'
  2020-01-13 21:50:59 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:59 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFDOBTYPE'
  2020-01-13 21:50:59      	2 fields found: %Call_Followup_Record_Id, SVPPROFDOBTYPE_callfollow, 
  2020-01-13 21:50:59      864 lines fetched
  2020-01-13 21:50:59      Joining/Keeping
2020-01-13 21:50:59 0111 NEXT
  2020-01-13 21:50:59 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',35,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:59 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',35,'Call_Followup_Question_List')
  2020-01-13 21:50:59 0099 LET varStepName='STEP_' & 35 & '_of_' & 69
  2020-01-13 21:50:59 0100 STEP_35_of_69: select 1
  2020-01-13 21:50:59      	1 fields found: ?column?, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59 0101 DROP TABLE STEP_35_of_69
  2020-01-13 21:50:59 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:59 0104 	LOAD 
  2020-01-13 21:50:59 0105 	
  2020-01-13 21:50:59 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:59 0107 	left([Call Followup Answer Value],200) AS 'TOTALCURRENTMONTHLYIN_callfollow'
  2020-01-13 21:50:59 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:59 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'TOTALCURRENTMONTHLYIN'
  2020-01-13 21:50:59      	2 fields found: %Call_Followup_Record_Id, TOTALCURRENTMONTHLYIN_callfollow, 
  2020-01-13 21:50:59      189 lines fetched
  2020-01-13 21:50:59      Joining/Keeping
2020-01-13 21:50:59 0111 NEXT
  2020-01-13 21:50:59 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',36,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:59 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',36,'Call_Followup_Question_List')
  2020-01-13 21:50:59 0099 LET varStepName='STEP_' & 36 & '_of_' & 69
  2020-01-13 21:50:59 0100 STEP_36_of_69: select 1
  2020-01-13 21:50:59      	1 fields found: ?column?, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59 0101 DROP TABLE STEP_36_of_69
  2020-01-13 21:50:59 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:59 0104 	LOAD 
  2020-01-13 21:50:59 0105 	
  2020-01-13 21:50:59 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:59 0107 	left([Call Followup Answer Value],200) AS 'HUD_ZIPCODELASTPERMADDR_callfollow'
  2020-01-13 21:50:59 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:59 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_ZIPCODELASTPERMADDR'
  2020-01-13 21:50:59      	2 fields found: %Call_Followup_Record_Id, HUD_ZIPCODELASTPERMADDR_callfollow, 
  2020-01-13 21:50:59      189 lines fetched
  2020-01-13 21:50:59      Joining/Keeping
2020-01-13 21:50:59 0111 NEXT
  2020-01-13 21:50:59 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',37,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:59 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',37,'Call_Followup_Question_List')
  2020-01-13 21:50:59 0099 LET varStepName='STEP_' & 37 & '_of_' & 69
  2020-01-13 21:50:59 0100 STEP_37_of_69: select 1
  2020-01-13 21:50:59      	1 fields found: ?column?, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59 0101 DROP TABLE STEP_37_of_69
  2020-01-13 21:50:59 0103 join(Call_Followup_Answer)  
  2020-01-13 21:50:59 0104 	LOAD 
  2020-01-13 21:50:59 0105 	
  2020-01-13 21:50:59 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:50:59 0107 	left([Call Followup Answer Value],200) AS 'IFYESWOULDYOUBEWILLIN_callfollow'
  2020-01-13 21:50:59 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:50:59 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFYESWOULDYOUBEWILLIN'
  2020-01-13 21:50:59      	2 fields found: %Call_Followup_Record_Id, IFYESWOULDYOUBEWILLIN_callfollow, 
  2020-01-13 21:50:59      1 lines fetched
  2020-01-13 21:50:59      Joining/Keeping
2020-01-13 21:50:59 0111 NEXT
  2020-01-13 21:50:59 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',38,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:50:59 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',38,'Call_Followup_Question_List')
  2020-01-13 21:50:59 0099 LET varStepName='STEP_' & 38 & '_of_' & 69
  2020-01-13 21:50:59 0100 STEP_38_of_69: select 1
  2020-01-13 21:51:00      	1 fields found: ?column?, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00 0101 DROP TABLE STEP_38_of_69
  2020-01-13 21:51:00 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:00 0104 	LOAD 
  2020-01-13 21:51:00 0105 	
  2020-01-13 21:51:00 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:00 0107 	left([Call Followup Answer Value],200) AS 'PRIMARYREASONFORCALL_callfollow'
  2020-01-13 21:51:00 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:00 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PRIMARYREASONFORCALL'
  2020-01-13 21:51:00      	2 fields found: %Call_Followup_Record_Id, PRIMARYREASONFORCALL_callfollow, 
  2020-01-13 21:51:00      2,652 lines fetched
  2020-01-13 21:51:00      Joining/Keeping
2020-01-13 21:51:00 0111 NEXT
  2020-01-13 21:51:00 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',39,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:00 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',39,'Call_Followup_Question_List')
  2020-01-13 21:51:00 0099 LET varStepName='STEP_' & 39 & '_of_' & 69
  2020-01-13 21:51:00 0100 STEP_39_of_69: select 1
  2020-01-13 21:51:00      	1 fields found: ?column?, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00 0101 DROP TABLE STEP_39_of_69
  2020-01-13 21:51:00 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:00 0104 	LOAD 
  2020-01-13 21:51:00 0105 	
  2020-01-13 21:51:00 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:00 0107 	left([Call Followup Answer Value],200) AS 'DOYOUOWNAPET_callfollow'
  2020-01-13 21:51:00 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:00 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'DOYOUOWNAPET'
  2020-01-13 21:51:00      	2 fields found: %Call_Followup_Record_Id, DOYOUOWNAPET_callfollow, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00      Joining/Keeping
2020-01-13 21:51:00 0111 NEXT
  2020-01-13 21:51:00 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',40,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:00 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',40,'Call_Followup_Question_List')
  2020-01-13 21:51:00 0099 LET varStepName='STEP_' & 40 & '_of_' & 69
  2020-01-13 21:51:00 0100 STEP_40_of_69: select 1
  2020-01-13 21:51:00      	1 fields found: ?column?, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00 0101 DROP TABLE STEP_40_of_69
  2020-01-13 21:51:00 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:00 0104 	LOAD 
  2020-01-13 21:51:00 0105 	
  2020-01-13 21:51:00 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:00 0107 	left([Call Followup Answer Value],200) AS 'ISCLIENTHOMELESS_callfollow'
  2020-01-13 21:51:00 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:00 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'ISCLIENTHOMELESS'
  2020-01-13 21:51:00      	2 fields found: %Call_Followup_Record_Id, ISCLIENTHOMELESS_callfollow, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00      Joining/Keeping
2020-01-13 21:51:00 0111 NEXT
  2020-01-13 21:51:00 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',41,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:00 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',41,'Call_Followup_Question_List')
  2020-01-13 21:51:00 0099 LET varStepName='STEP_' & 41 & '_of_' & 69
  2020-01-13 21:51:00 0100 STEP_41_of_69: select 1
  2020-01-13 21:51:00      	1 fields found: ?column?, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00 0101 DROP TABLE STEP_41_of_69
  2020-01-13 21:51:00 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:00 0104 	LOAD 
  2020-01-13 21:51:00 0105 	
  2020-01-13 21:51:00 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:00 0107 	left([Call Followup Answer Value],200) AS 'SVPPROFSECONDARYRACE_callfollow'
  2020-01-13 21:51:00 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:00 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'SVPPROFSECONDARYRACE'
  2020-01-13 21:51:00      	2 fields found: %Call_Followup_Record_Id, SVPPROFSECONDARYRACE_callfollow, 
  2020-01-13 21:51:00      6 lines fetched
  2020-01-13 21:51:00      Joining/Keeping
2020-01-13 21:51:00 0111 NEXT
  2020-01-13 21:51:00 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',42,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:00 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',42,'Call_Followup_Question_List')
  2020-01-13 21:51:00 0099 LET varStepName='STEP_' & 42 & '_of_' & 69
  2020-01-13 21:51:00 0100 STEP_42_of_69: select 1
  2020-01-13 21:51:00      	1 fields found: ?column?, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00 0101 DROP TABLE STEP_42_of_69
  2020-01-13 21:51:00 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:00 0104 	LOAD 
  2020-01-13 21:51:00 0105 	
  2020-01-13 21:51:00 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:00 0107 	left([Call Followup Answer Value],200) AS 'IFYESEXPLAIN_2_callfollow'
  2020-01-13 21:51:00 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:00 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFYESEXPLAIN_2'
  2020-01-13 21:51:00      	2 fields found: %Call_Followup_Record_Id, IFYESEXPLAIN_2_callfollow, 
  2020-01-13 21:51:00      1 lines fetched
  2020-01-13 21:51:00      Joining/Keeping
2020-01-13 21:51:00 0111 NEXT
  2020-01-13 21:51:00 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',43,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:00 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',43,'Call_Followup_Question_List')
  2020-01-13 21:51:00 0099 LET varStepName='STEP_' & 43 & '_of_' & 69
  2020-01-13 21:51:00 0100 STEP_43_of_69: select 1
  2020-01-13 21:51:01      	1 fields found: ?column?, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01 0101 DROP TABLE STEP_43_of_69
  2020-01-13 21:51:01 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:01 0104 	LOAD 
  2020-01-13 21:51:01 0105 	
  2020-01-13 21:51:01 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:01 0107 	left([Call Followup Answer Value],200) AS 'HIGHESTLEVELOFEDUCATI_callfollow'
  2020-01-13 21:51:01 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:01 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HIGHESTLEVELOFEDUCATI'
  2020-01-13 21:51:01      	2 fields found: %Call_Followup_Record_Id, HIGHESTLEVELOFEDUCATI_callfollow, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01      Joining/Keeping
2020-01-13 21:51:01 0111 NEXT
  2020-01-13 21:51:01 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',44,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:01 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',44,'Call_Followup_Question_List')
  2020-01-13 21:51:01 0099 LET varStepName='STEP_' & 44 & '_of_' & 69
  2020-01-13 21:51:01 0100 STEP_44_of_69: select 1
  2020-01-13 21:51:01      	1 fields found: ?column?, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01 0101 DROP TABLE STEP_44_of_69
  2020-01-13 21:51:01 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:01 0104 	LOAD 
  2020-01-13 21:51:01 0105 	
  2020-01-13 21:51:01 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:01 0107 	left([Call Followup Answer Value],200) AS 'IFYESEXPLAIN_callfollow'
  2020-01-13 21:51:01 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:01 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFYESEXPLAIN'
  2020-01-13 21:51:01      	2 fields found: %Call_Followup_Record_Id, IFYESEXPLAIN_callfollow, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01      Joining/Keeping
2020-01-13 21:51:01 0111 NEXT
  2020-01-13 21:51:01 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',45,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:01 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',45,'Call_Followup_Question_List')
  2020-01-13 21:51:01 0099 LET varStepName='STEP_' & 45 & '_of_' & 69
  2020-01-13 21:51:01 0100 STEP_45_of_69: select 1
  2020-01-13 21:51:01      	1 fields found: ?column?, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01 0101 DROP TABLE STEP_45_of_69
  2020-01-13 21:51:01 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:01 0104 	LOAD 
  2020-01-13 21:51:01 0105 	
  2020-01-13 21:51:01 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:01 0107 	left([Call Followup Answer Value],200) AS 'HOMELESSDEFINITION_callfollow'
  2020-01-13 21:51:01 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:01 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HOMELESSDEFINITION'
  2020-01-13 21:51:01      	2 fields found: %Call_Followup_Record_Id, HOMELESSDEFINITION_callfollow, 
  2020-01-13 21:51:01      225 lines fetched
  2020-01-13 21:51:01      Joining/Keeping
2020-01-13 21:51:01 0111 NEXT
  2020-01-13 21:51:01 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',46,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:01 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',46,'Call_Followup_Question_List')
  2020-01-13 21:51:01 0099 LET varStepName='STEP_' & 46 & '_of_' & 69
  2020-01-13 21:51:01 0100 STEP_46_of_69: select 1
  2020-01-13 21:51:01      	1 fields found: ?column?, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01 0101 DROP TABLE STEP_46_of_69
  2020-01-13 21:51:01 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:01 0104 	LOAD 
  2020-01-13 21:51:01 0105 	
  2020-01-13 21:51:01 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:01 0107 	left([Call Followup Answer Value],200) AS 'EXPLAINOTHERPRIMARYRE_callfollow'
  2020-01-13 21:51:01 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:01 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'EXPLAINOTHERPRIMARYRE'
  2020-01-13 21:51:01      	2 fields found: %Call_Followup_Record_Id, EXPLAINOTHERPRIMARYRE_callfollow, 
  2020-01-13 21:51:01      74 lines fetched
  2020-01-13 21:51:01      Joining/Keeping
2020-01-13 21:51:01 0111 NEXT
  2020-01-13 21:51:01 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',47,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:01 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',47,'Call_Followup_Question_List')
  2020-01-13 21:51:01 0099 LET varStepName='STEP_' & 47 & '_of_' & 69
  2020-01-13 21:51:01 0100 STEP_47_of_69: select 1
  2020-01-13 21:51:01      	1 fields found: ?column?, 
  2020-01-13 21:51:01      1 lines fetched
  2020-01-13 21:51:01 0101 DROP TABLE STEP_47_of_69
  2020-01-13 21:51:01 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:01 0104 	LOAD 
  2020-01-13 21:51:01 0105 	
  2020-01-13 21:51:01 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:01 0107 	left([Call Followup Answer Value],200) AS 'CITY_211_callfollow'
  2020-01-13 21:51:01 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:01 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CITY_211'
  2020-01-13 21:51:01      	2 fields found: %Call_Followup_Record_Id, CITY_211_callfollow, 
  2020-01-13 21:51:01      1,881 lines fetched
  2020-01-13 21:51:01      Joining/Keeping
2020-01-13 21:51:01 0111 NEXT
  2020-01-13 21:51:01 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',48,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:01 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',48,'Call_Followup_Question_List')
  2020-01-13 21:51:01 0099 LET varStepName='STEP_' & 48 & '_of_' & 69
  2020-01-13 21:51:01 0100 STEP_48_of_69: select 1
  2020-01-13 21:51:02      	1 fields found: ?column?, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02 0101 DROP TABLE STEP_48_of_69
  2020-01-13 21:51:02 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:02 0104 	LOAD 
  2020-01-13 21:51:02 0105 	
  2020-01-13 21:51:02 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:02 0107 	left([Call Followup Answer Value],200) AS 'FINALDETERMINATION_callfollow'
  2020-01-13 21:51:02 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:02 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'FINALDETERMINATION'
  2020-01-13 21:51:02      	2 fields found: %Call_Followup_Record_Id, FINALDETERMINATION_callfollow, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02      Joining/Keeping
2020-01-13 21:51:02 0111 NEXT
  2020-01-13 21:51:02 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',49,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:02 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',49,'Call_Followup_Question_List')
  2020-01-13 21:51:02 0099 LET varStepName='STEP_' & 49 & '_of_' & 69
  2020-01-13 21:51:02 0100 STEP_49_of_69: select 1
  2020-01-13 21:51:02      	1 fields found: ?column?, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02 0101 DROP TABLE STEP_49_of_69
  2020-01-13 21:51:02 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:02 0104 	LOAD 
  2020-01-13 21:51:02 0105 	
  2020-01-13 21:51:02 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:02 0107 	left([Call Followup Answer Value],200) AS 'AMILEVEL_callfollow'
  2020-01-13 21:51:02 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:02 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'AMILEVEL'
  2020-01-13 21:51:02      	2 fields found: %Call_Followup_Record_Id, AMILEVEL_callfollow, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02      Joining/Keeping
2020-01-13 21:51:02 0111 NEXT
  2020-01-13 21:51:02 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',50,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:02 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',50,'Call_Followup_Question_List')
  2020-01-13 21:51:02 0099 LET varStepName='STEP_' & 50 & '_of_' & 69
  2020-01-13 21:51:02 0100 STEP_50_of_69: select 1
  2020-01-13 21:51:02      	1 fields found: ?column?, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02 0101 DROP TABLE STEP_50_of_69
  2020-01-13 21:51:02 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:02 0104 	LOAD 
  2020-01-13 21:51:02 0105 	
  2020-01-13 21:51:02 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:02 0107 	left([Call Followup Answer Value],200) AS 'CALLSEARCHCRITZIP_callfollow'
  2020-01-13 21:51:02 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:02 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CALLSEARCHCRITZIP'
  2020-01-13 21:51:02      	2 fields found: %Call_Followup_Record_Id, CALLSEARCHCRITZIP_callfollow, 
  2020-01-13 21:51:02      227 lines fetched
  2020-01-13 21:51:02      Joining/Keeping
2020-01-13 21:51:02 0111 NEXT
  2020-01-13 21:51:02 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',51,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:02 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',51,'Call_Followup_Question_List')
  2020-01-13 21:51:02 0099 LET varStepName='STEP_' & 51 & '_of_' & 69
  2020-01-13 21:51:02 0100 STEP_51_of_69: select 1
  2020-01-13 21:51:02      	1 fields found: ?column?, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02 0101 DROP TABLE STEP_51_of_69
  2020-01-13 21:51:02 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:02 0104 	LOAD 
  2020-01-13 21:51:02 0105 	
  2020-01-13 21:51:02 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:02 0107 	left([Call Followup Answer Value],200) AS 'COUNTY_211_callfollow'
  2020-01-13 21:51:02 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:02 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'COUNTY_211'
  2020-01-13 21:51:02      	2 fields found: %Call_Followup_Record_Id, COUNTY_211_callfollow, 
  2020-01-13 21:51:02      1,606 lines fetched
  2020-01-13 21:51:02      Joining/Keeping
2020-01-13 21:51:02 0111 NEXT
  2020-01-13 21:51:02 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',52,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:02 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',52,'Call_Followup_Question_List')
  2020-01-13 21:51:02 0099 LET varStepName='STEP_' & 52 & '_of_' & 69
  2020-01-13 21:51:02 0100 STEP_52_of_69: select 1
  2020-01-13 21:51:02      	1 fields found: ?column?, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02 0101 DROP TABLE STEP_52_of_69
  2020-01-13 21:51:02 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:02 0104 	LOAD 
  2020-01-13 21:51:02 0105 	
  2020-01-13 21:51:02 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:02 0107 	left([Call Followup Answer Value],200) AS 'PHONE3_callfollow'
  2020-01-13 21:51:02 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:02 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PHONE3'
  2020-01-13 21:51:02      	2 fields found: %Call_Followup_Record_Id, PHONE3_callfollow, 
  2020-01-13 21:51:02      1 lines fetched
  2020-01-13 21:51:02      Joining/Keeping
2020-01-13 21:51:02 0111 NEXT
  2020-01-13 21:51:02 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',53,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:02 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',53,'Call_Followup_Question_List')
  2020-01-13 21:51:02 0099 LET varStepName='STEP_' & 53 & '_of_' & 69
  2020-01-13 21:51:02 0100 STEP_53_of_69: select 1
  2020-01-13 21:51:03      	1 fields found: ?column?, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03 0101 DROP TABLE STEP_53_of_69
  2020-01-13 21:51:03 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:03 0104 	LOAD 
  2020-01-13 21:51:03 0105 	
  2020-01-13 21:51:03 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:03 0107 	left([Call Followup Answer Value],200) AS 'LOANSTATUS_callfollow'
  2020-01-13 21:51:03 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:03 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'LOANSTATUS'
  2020-01-13 21:51:03      	2 fields found: %Call_Followup_Record_Id, LOANSTATUS_callfollow, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03      Joining/Keeping
2020-01-13 21:51:03 0111 NEXT
  2020-01-13 21:51:03 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',54,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:03 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',54,'Call_Followup_Question_List')
  2020-01-13 21:51:03 0099 LET varStepName='STEP_' & 54 & '_of_' & 69
  2020-01-13 21:51:03 0100 STEP_54_of_69: select 1
  2020-01-13 21:51:03      	1 fields found: ?column?, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03 0101 DROP TABLE STEP_54_of_69
  2020-01-13 21:51:03 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:03 0104 	LOAD 
  2020-01-13 21:51:03 0105 	
  2020-01-13 21:51:03 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:03 0107 	left([Call Followup Answer Value],200) AS 'HUD_TOTALMONTHLYINCOME_callfollow'
  2020-01-13 21:51:03 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:03 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_TOTALMONTHLYINCOME'
  2020-01-13 21:51:03      	2 fields found: %Call_Followup_Record_Id, HUD_TOTALMONTHLYINCOME_callfollow, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03      Joining/Keeping
2020-01-13 21:51:03 0111 NEXT
  2020-01-13 21:51:03 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',55,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:03 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',55,'Call_Followup_Question_List')
  2020-01-13 21:51:03 0099 LET varStepName='STEP_' & 55 & '_of_' & 69
  2020-01-13 21:51:03 0100 STEP_55_of_69: select 1
  2020-01-13 21:51:03      	1 fields found: ?column?, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03 0101 DROP TABLE STEP_55_of_69
  2020-01-13 21:51:03 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:03 0104 	LOAD 
  2020-01-13 21:51:03 0105 	
  2020-01-13 21:51:03 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:03 0107 	left([Call Followup Answer Value],200) AS 'WHEREDIDYOUHEAR_211_callfollow'
  2020-01-13 21:51:03 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:03 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'WHEREDIDYOUHEAR_211'
  2020-01-13 21:51:03      	2 fields found: %Call_Followup_Record_Id, WHEREDIDYOUHEAR_211_callfollow, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03      Joining/Keeping
2020-01-13 21:51:03 0111 NEXT
  2020-01-13 21:51:03 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',56,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:03 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',56,'Call_Followup_Question_List')
  2020-01-13 21:51:03 0099 LET varStepName='STEP_' & 56 & '_of_' & 69
  2020-01-13 21:51:03 0100 STEP_56_of_69: select 1
  2020-01-13 21:51:03      	1 fields found: ?column?, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03 0101 DROP TABLE STEP_56_of_69
  2020-01-13 21:51:03 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:03 0104 	LOAD 
  2020-01-13 21:51:03 0105 	
  2020-01-13 21:51:03 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:03 0107 	left([Call Followup Answer Value],200) AS 'IFAPPROPRIATEBUTREASON_callfollow'
  2020-01-13 21:51:03 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:03 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFAPPROPRIATEBUTREASON'
  2020-01-13 21:51:03      	2 fields found: %Call_Followup_Record_Id, IFAPPROPRIATEBUTREASON_callfollow, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03      Joining/Keeping
2020-01-13 21:51:03 0111 NEXT
  2020-01-13 21:51:03 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',57,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:03 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',57,'Call_Followup_Question_List')
  2020-01-13 21:51:03 0099 LET varStepName='STEP_' & 57 & '_of_' & 69
  2020-01-13 21:51:03 0100 STEP_57_of_69: select 1
  2020-01-13 21:51:03      	1 fields found: ?column?, 
  2020-01-13 21:51:03      1 lines fetched
  2020-01-13 21:51:03 0101 DROP TABLE STEP_57_of_69
  2020-01-13 21:51:03 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:03 0104 	LOAD 
  2020-01-13 21:51:03 0105 	
  2020-01-13 21:51:03 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:03 0107 	left([Call Followup Answer Value],200) AS 'HOUSEHOLDTYPE_callfollow'
  2020-01-13 21:51:03 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:03 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HOUSEHOLDTYPE'
  2020-01-13 21:51:03      	2 fields found: %Call_Followup_Record_Id, HOUSEHOLDTYPE_callfollow, 
  2020-01-13 21:51:03      227 lines fetched
  2020-01-13 21:51:03      Joining/Keeping
2020-01-13 21:51:03 0111 NEXT
  2020-01-13 21:51:03 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',58,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:03 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',58,'Call_Followup_Question_List')
  2020-01-13 21:51:03 0099 LET varStepName='STEP_' & 58 & '_of_' & 69
  2020-01-13 21:51:03 0100 STEP_58_of_69: select 1
  2020-01-13 21:51:04      	1 fields found: ?column?, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04 0101 DROP TABLE STEP_58_of_69
  2020-01-13 21:51:04 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:04 0104 	LOAD 
  2020-01-13 21:51:04 0105 	
  2020-01-13 21:51:04 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:04 0107 	left([Call Followup Answer Value],200) AS 'NUMBERINHOUSEHOLD_2_callfollow'
  2020-01-13 21:51:04 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:04 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'NUMBERINHOUSEHOLD_2'
  2020-01-13 21:51:04      	2 fields found: %Call_Followup_Record_Id, NUMBERINHOUSEHOLD_2_callfollow, 
  2020-01-13 21:51:04      190 lines fetched
  2020-01-13 21:51:04      Joining/Keeping
2020-01-13 21:51:04 0111 NEXT
  2020-01-13 21:51:04 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',59,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:04 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',59,'Call_Followup_Question_List')
  2020-01-13 21:51:04 0099 LET varStepName='STEP_' & 59 & '_of_' & 69
  2020-01-13 21:51:04 0100 STEP_59_of_69: select 1
  2020-01-13 21:51:04      	1 fields found: ?column?, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04 0101 DROP TABLE STEP_59_of_69
  2020-01-13 21:51:04 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:04 0104 	LOAD 
  2020-01-13 21:51:04 0105 	
  2020-01-13 21:51:04 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:04 0107 	left([Call Followup Answer Value],200) AS 'PRIMARYREASONFORHOMLE_callfollow'
  2020-01-13 21:51:04 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:04 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PRIMARYREASONFORHOMLE'
  2020-01-13 21:51:04      	2 fields found: %Call_Followup_Record_Id, PRIMARYREASONFORHOMLE_callfollow, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04      Joining/Keeping
2020-01-13 21:51:04 0111 NEXT
  2020-01-13 21:51:04 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',60,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:04 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',60,'Call_Followup_Question_List')
  2020-01-13 21:51:04 0099 LET varStepName='STEP_' & 60 & '_of_' & 69
  2020-01-13 21:51:04 0100 STEP_60_of_69: select 1
  2020-01-13 21:51:04      	1 fields found: ?column?, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04 0101 DROP TABLE STEP_60_of_69
  2020-01-13 21:51:04 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:04 0104 	LOAD 
  2020-01-13 21:51:04 0105 	
  2020-01-13 21:51:04 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:04 0107 	left([Call Followup Answer Value],200) AS 'IFYESEXPLAIN_4_callfollow'
  2020-01-13 21:51:04 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:04 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'IFYESEXPLAIN_4'
  2020-01-13 21:51:04      	2 fields found: %Call_Followup_Record_Id, IFYESEXPLAIN_4_callfollow, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04      Joining/Keeping
2020-01-13 21:51:04 0111 NEXT
  2020-01-13 21:51:04 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',61,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:04 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',61,'Call_Followup_Question_List')
  2020-01-13 21:51:04 0099 LET varStepName='STEP_' & 61 & '_of_' & 69
  2020-01-13 21:51:04 0100 STEP_61_of_69: select 1
  2020-01-13 21:51:04      	1 fields found: ?column?, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04 0101 DROP TABLE STEP_61_of_69
  2020-01-13 21:51:04 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:04 0104 	LOAD 
  2020-01-13 21:51:04 0105 	
  2020-01-13 21:51:04 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:04 0107 	left([Call Followup Answer Value],200) AS 'REFERREDBY_1_callfollow'
  2020-01-13 21:51:04 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:04 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'REFERREDBY_1'
  2020-01-13 21:51:04      	2 fields found: %Call_Followup_Record_Id, REFERREDBY_1_callfollow, 
  2020-01-13 21:51:04      219 lines fetched
  2020-01-13 21:51:04      Joining/Keeping
2020-01-13 21:51:04 0111 NEXT
  2020-01-13 21:51:04 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',62,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:04 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',62,'Call_Followup_Question_List')
  2020-01-13 21:51:04 0099 LET varStepName='STEP_' & 62 & '_of_' & 69
  2020-01-13 21:51:04 0100 STEP_62_of_69: select 1
  2020-01-13 21:51:04      	1 fields found: ?column?, 
  2020-01-13 21:51:04      1 lines fetched
  2020-01-13 21:51:04 0101 DROP TABLE STEP_62_of_69
  2020-01-13 21:51:04 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:04 0104 	LOAD 
  2020-01-13 21:51:04 0105 	
  2020-01-13 21:51:04 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:04 0107 	left([Call Followup Answer Value],200) AS 'CALLUPDATEFROMCASEMAN_callfollow'
  2020-01-13 21:51:04 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:04 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CALLUPDATEFROMCASEMAN'
  2020-01-13 21:51:04      	2 fields found: %Call_Followup_Record_Id, CALLUPDATEFROMCASEMAN_callfollow, 
  2020-01-13 21:51:04      1,638 lines fetched
  2020-01-13 21:51:04      Joining/Keeping
2020-01-13 21:51:04 0111 NEXT
  2020-01-13 21:51:04 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',63,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:04 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',63,'Call_Followup_Question_List')
  2020-01-13 21:51:04 0099 LET varStepName='STEP_' & 63 & '_of_' & 69
  2020-01-13 21:51:04 0100 STEP_63_of_69: select 1
  2020-01-13 21:51:05      	1 fields found: ?column?, 
  2020-01-13 21:51:05      1 lines fetched
  2020-01-13 21:51:05 0101 DROP TABLE STEP_63_of_69
  2020-01-13 21:51:05 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:05 0104 	LOAD 
  2020-01-13 21:51:05 0105 	
  2020-01-13 21:51:05 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:05 0107 	left([Call Followup Answer Value],200) AS 'CALLERCONSENTDATE_callfollow'
  2020-01-13 21:51:05 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:05 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'CALLERCONSENTDATE'
  2020-01-13 21:51:05      	2 fields found: %Call_Followup_Record_Id, CALLERCONSENTDATE_callfollow, 
  2020-01-13 21:51:05      687 lines fetched
  2020-01-13 21:51:05      Joining/Keeping
2020-01-13 21:51:05 0111 NEXT
  2020-01-13 21:51:05 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',64,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:05 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',64,'Call_Followup_Question_List')
  2020-01-13 21:51:05 0099 LET varStepName='STEP_' & 64 & '_of_' & 69
  2020-01-13 21:51:05 0100 STEP_64_of_69: select 1
  2020-01-13 21:51:05      	1 fields found: ?column?, 
  2020-01-13 21:51:05      1 lines fetched
  2020-01-13 21:51:05 0101 DROP TABLE STEP_64_of_69
  2020-01-13 21:51:05 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:05 0104 	LOAD 
  2020-01-13 21:51:05 0105 	
  2020-01-13 21:51:05 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:05 0107 	left([Call Followup Answer Value],200) AS 'PHONE1_callfollow'
  2020-01-13 21:51:05 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:05 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PHONE1'
  2020-01-13 21:51:05      	2 fields found: %Call_Followup_Record_Id, PHONE1_callfollow, 
  2020-01-13 21:51:05      573 lines fetched
  2020-01-13 21:51:05      Joining/Keeping
2020-01-13 21:51:05 0111 NEXT
  2020-01-13 21:51:05 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',65,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:05 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',65,'Call_Followup_Question_List')
  2020-01-13 21:51:05 0099 LET varStepName='STEP_' & 65 & '_of_' & 69
  2020-01-13 21:51:05 0100 STEP_65_of_69: select 1
  2020-01-13 21:51:05      	1 fields found: ?column?, 
  2020-01-13 21:51:05      1 lines fetched
  2020-01-13 21:51:05 0101 DROP TABLE STEP_65_of_69
  2020-01-13 21:51:05 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:05 0104 	LOAD 
  2020-01-13 21:51:05 0105 	
  2020-01-13 21:51:05 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:05 0107 	left([Call Followup Answer Value],200) AS 'HOUSEHOLDINCOME_callfollow'
  2020-01-13 21:51:05 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:05 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HOUSEHOLDINCOME'
  2020-01-13 21:51:05      	2 fields found: %Call_Followup_Record_Id, HOUSEHOLDINCOME_callfollow, 
  2020-01-13 21:51:05      511 lines fetched
  2020-01-13 21:51:05      Joining/Keeping
2020-01-13 21:51:05 0111 NEXT
  2020-01-13 21:51:05 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',66,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:05 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',66,'Call_Followup_Question_List')
  2020-01-13 21:51:05 0099 LET varStepName='STEP_' & 66 & '_of_' & 69
  2020-01-13 21:51:05 0100 STEP_66_of_69: select 1
  2020-01-13 21:51:05      	1 fields found: ?column?, 
  2020-01-13 21:51:05      1 lines fetched
  2020-01-13 21:51:05 0101 DROP TABLE STEP_66_of_69
  2020-01-13 21:51:05 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:05 0104 	LOAD 
  2020-01-13 21:51:05 0105 	
  2020-01-13 21:51:05 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:05 0107 	left([Call Followup Answer Value],200) AS 'HUD_ENTERFROMESSH_callfollow'
  2020-01-13 21:51:05 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:05 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'HUD_ENTERFROMESSH'
  2020-01-13 21:51:05      	2 fields found: %Call_Followup_Record_Id, HUD_ENTERFROMESSH_callfollow, 
  2020-01-13 21:51:05      3 lines fetched
  2020-01-13 21:51:05      Joining/Keeping
2020-01-13 21:51:05 0111 NEXT
  2020-01-13 21:51:05 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',67,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:05 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',67,'Call_Followup_Question_List')
  2020-01-13 21:51:05 0099 LET varStepName='STEP_' & 67 & '_of_' & 69
  2020-01-13 21:51:05 0100 STEP_67_of_69: select 1
  2020-01-13 21:51:05      	1 fields found: ?column?, 
  2020-01-13 21:51:05      1 lines fetched
  2020-01-13 21:51:05 0101 DROP TABLE STEP_67_of_69
  2020-01-13 21:51:05 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:05 0104 	LOAD 
  2020-01-13 21:51:05 0105 	
  2020-01-13 21:51:05 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:05 0107 	left([Call Followup Answer Value],200) AS 'PHONE2_callfollow'
  2020-01-13 21:51:05 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:05 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'PHONE2'
  2020-01-13 21:51:05      	2 fields found: %Call_Followup_Record_Id, PHONE2_callfollow, 
  2020-01-13 21:51:05      59 lines fetched
  2020-01-13 21:51:05      Joining/Keeping
2020-01-13 21:51:05 0111 NEXT
  2020-01-13 21:51:05 0096 LET varCallFollowupAnswerTableName=Peek('virt_name',68,'Call_Followup_Question_List') & '_callfollow'
  2020-01-13 21:51:05 0097 LET varCallFollowupAnswerTableNameMatch=Peek('virt_name',68,'Call_Followup_Question_List')
  2020-01-13 21:51:05 0099 LET varStepName='STEP_' & 68 & '_of_' & 69
  2020-01-13 21:51:05 0100 STEP_68_of_69: select 1
  2020-01-13 21:51:06      	1 fields found: ?column?, 
  2020-01-13 21:51:06      1 lines fetched
  2020-01-13 21:51:06 0101 DROP TABLE STEP_68_of_69
  2020-01-13 21:51:06 0103 join(Call_Followup_Answer)  
  2020-01-13 21:51:06 0104 	LOAD 
  2020-01-13 21:51:06 0105 	
  2020-01-13 21:51:06 0106 	[Call Followup Record Id]				AS %Call_Followup_Record_Id,
  2020-01-13 21:51:06 0107 	left([Call Followup Answer Value],200) AS 'MONTHLYRENT_callfollow'
  2020-01-13 21:51:06 0108 	RESIDENT Call_Followup_Overall_Answer
  2020-01-13 21:51:06 0109 	WHERE [Call Followup Answer Virtual Field Name] = 'MONTHLYRENT'
  2020-01-13 21:51:06      	2 fields found: %Call_Followup_Record_Id, MONTHLYRENT_callfollow, 
  2020-01-13 21:51:06      470 lines fetched
  2020-01-13 21:51:06      Joining/Keeping
2020-01-13 21:51:06 0111 NEXT
2020-01-13 21:51:06 0113 DROP TABLE Call_Followup_Overall_Answer
2020-01-13 21:51:06 0114 DROP TABLE Call_Followup_Question_List
2020-01-13 21:51:06 0055 DROP TABLE Call_Followups_To_Rebuild_Answers_For
2020-01-13 21:51:06 0003 DROP TABLE Call_Followups_To_Remove_From_Current_QVD
2020-01-13 21:51:06 0005 LET varTempCallFollowupAnswerQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_FOLLOWUP_ANSWER_V0.qvd'))
2020-01-13 21:51:06 0007 IF -1 THEN
  2020-01-13 21:51:06 0008 Concatenate(Temp_Call_Followup_Answer_Table)
  2020-01-13 21:51:06 0009 LOAD
  2020-01-13 21:51:06 0010 	*
  2020-01-13 21:51:06 0011 	RESIDENT Call_Followup_Answer
  2020-01-13 21:51:06      	70 fields found: %Call_Followup_Record_Id, NUMBERINHOUSEHOLD_callfollow, MARITALSTATUS_1_callfollow, ANYHOUSEHOLDMEMBERAUS_callfollow, DOYOUHAVEAPLACETOSLEE_1_callfollow, PRIMARYLANGUAGESPOKEN_2_callfollow, CHILDRENINHOUSEHOLD_callfollow, IMMEDIATEACTIONTAKEN_callfollow, HAVEVALIDDRIVERSLICENSE_callfollow, SVPPROFDOB_callfollow, WHERESPECIFICALLYDIDY_callfollow, SVP_HUD_HOUSINGSTATUS_callfollow, TYPEOFLIVINGSITUATION_callfollow, HUD_LENGTHOFSTAY_callfollow, SVPPROFETH_callfollow, SVPPROFRACE_callfollow, IFWORKINGINDUPAGEWHAT_callfollow, SUBCOOKCEACCESSPOINT_callfollow, CALLERCONSENTANDNOTIF_callfollow, TOTALAMOUNTOFABOVEDEBT_callfollow, HUD_ZIPDATAQUALITY_callfollow, SVPPROFGENDER_callfollow, PRIMARYSERVICENEEDED_callfollow, CALLSEARCHCRITAREA_callfollow, ADULTSINHOUSEHOLD_callfollow, HASTHECLIENTPREVIOUSL_callfollow, SECONDARYREASONFORCALL_1_callfollow, HUD_DISABLINGCONDITION_callfollow, EMAILADDRESS_callfollow, VETERAN_callfollow, REFERREDFROMOTHERCONN_callfollow, NUMBEROFBEDROOMS_callfollow, PREGNANT_callfollow, IMMINENTRISKOFHOMELES_callfollow, EVERBEENARRESTEDBEFORE_callfollow, SVPPROFDOBTYPE_callfollow, TOTALCURRENTMONTHLYIN_callfollow, HUD_ZIPCODELASTPERMADDR_callfollow, IFYESWOULDYOUBEWILLIN_callfollow, PRIMARYREASONFORCALL_callfollow, DOYOUOWNAPET_callfollow, ISCLIENTHOMELESS_callfollow, SVPPROFSECONDARYRACE_callfollow, IFYESEXPLAIN_2_callfollow, HIGHESTLEVELOFEDUCATI_callfollow, IFYESEXPLAIN_callfollow, HOMELESSDEFINITION_callfollow, EXPLAINOTHERPRIMARYRE_callfollow, CITY_211_callfollow, FINALDETERMINATION_callfollow, AMILEVEL_callfollow, CALLSEARCHCRITZIP_callfollow, COUNTY_211_callfollow, PHONE3_callfollow, LOANSTATUS_callfollow, HUD_TOTALMONTHLYINCOME_callfollow, WHEREDIDYOUHEAR_211_callfollow, IFAPPROPRIATEBUTREASON_callfollow, HOUSEHOLDTYPE_callfollow, NUMBERINHOUSEHOLD_2_callfollow, PRIMARYREASONFORHOMLE_callfollow, IFYESEXPLAIN_4_callfollow, REFERREDBY_1_callfollow, CALLUPDATEFROMCASEMAN_callfollow, CALLERCONSENTDATE_callfollow, PHONE1_callfollow, HOUSEHOLDINCOME_callfollow, HUD_ENTERFROMESSH_callfollow, PHONE2_callfollow, MONTHLYRENT_callfollow, 
  2020-01-13 21:51:06      3,917 lines fetched
  2020-01-13 21:51:06 0012 DROP TABLE Call_Followup_Answer
2020-01-13 21:51:06 0014 ELSE
2020-01-13 21:51:06 0023 RENAME TABLE Temp_Call_Followup_Answer_Table to Call_Followup_Answer
2020-01-13 21:51:06 0024 STORE Call_Followup_Answer INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CALL_FOLLOWUP_ANSWER_V0.qvd]
2020-01-13 21:52:50 0056 LET varDeltaDate = '1/01/2019'
2020-01-13 21:52:50 0009 LET varQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_EER_RUNDATE_V5.qvd'))
2020-01-13 21:52:50 0012 IF -1 THEN
  2020-01-13 21:52:50 0013 DeltaDate:
  2020-01-13 21:52:50 0014   Noconcatenate
  2020-01-13 21:52:50 0015   LOAD
  2020-01-13 21:52:50 0016     DeltaDateVal
  2020-01-13 21:52:50 0017   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_EER_RUNDATE_V5.qvd](qvd)
  2020-01-13 21:52:50      	1 fields found: DeltaDateVal, 
  2020-01-13 21:52:50      1 lines fetched
  2020-01-13 21:52:50 0018 LET varDeltaDate=Peek('DeltaDateVal',0,'DeltaDate')
2020-01-13 21:52:50 0019 ELSE
2020-01-13 21:52:50 0027 DROP TABLE DeltaDate
2020-01-13 21:52:50 0031 EERs_To_Rebuild_Answers_For:
2020-01-13 21:52:50 0032 Noconcatenate
2020-01-13 21:52:50 0033 SELECT DISTINCT eer.entry_exit_review_id   
2020-01-13 21:52:50 0034 FROM sp_entry_exit_review eer
2020-01-13 21:52:50 0035 INNER JOIN sp_entry_exit ee ON (ee.entry_exit_id = eer.entry_exit_id)
2020-01-13 21:52:50 0036 INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)
2020-01-13 21:52:50 0037 WHERE (eer.active = TRUE) AND (eer.date_updated > '1/10/2020')
2020-01-13 21:52:50 0038 --AND (eer.review_date >= '1/01/2019')
2020-01-13 21:52:50 0039 AND (ee.active = true) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '1/01/2019'))
2020-01-13 21:52:50 0040 AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
2020-01-13 21:52:50 0041 UNION
2020-01-13 21:52:50 0042 SELECT DISTINCT eer.entry_exit_review_id  
2020-01-13 21:52:50 0043 FROM sp_entry_exit_review eer
2020-01-13 21:52:50 0044 INNER JOIN sp_entry_exit ee ON (ee.entry_exit_id = eer.entry_exit_id)
2020-01-13 21:52:50 0045 INNER JOIN da_answer da ON (da.client_id = ee.client_id)
2020-01-13 21:52:50 0046 INNER JOIN da_question dq ON (dq.question_id = da.question_id)
2020-01-13 21:52:50 0047 INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:52:50 0048 INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)
2020-01-13 21:52:50 0049 WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL) AND (eer.active = TRUE) AND (ee.active = true)
2020-01-13 21:52:50 0050 AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
2020-01-13 21:52:50 0051 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox','textarea'))
2020-01-13 21:52:50 0052 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))             
2020-01-13 21:52:50 0053 AND
2020-01-13 21:52:50 0054 (
2020-01-13 21:52:50 0055   ((da.date_added > '1/10/2020') AND (da.active = TRUE))   
2020-01-13 21:52:50 0056   OR
2020-01-13 21:52:50 0057   ((da.date_inactive > '1/10/2020') AND (da.active = FALSE))
2020-01-13 21:52:50 0058 )
2020-01-13 21:52:50 0059 AND ((da.date_effective::DATE <= eer.review_date::DATE) OR (ee.exit_date IS NULL))
2020-01-13 21:52:50 0060 AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '1/01/2019'))
2020-01-13 21:56:22      	1 fields found: entry_exit_review_id, 
2020-01-13 21:56:22      0 lines fetched
2020-01-13 21:56:22 0064 EERs_To_Remove_From_Current_QVD:
2020-01-13 21:56:22 0065 Noconcatenate
2020-01-13 21:56:22 0066 SELECT DISTINCT eer.entry_exit_review_id as match_eer_id  
2020-01-13 21:56:22 0067 FROM sp_entry_exit_review eer
2020-01-13 21:56:22 0068 WHERE (eer.active = false) AND (eer.date_updated > '1/10/2020')
2020-01-13 21:56:22      	1 fields found: match_eer_id, 
2020-01-13 21:56:22      0 lines fetched
2020-01-13 21:56:22 0072 CONCATENATE(EERs_To_Remove_From_Current_QVD)
2020-01-13 21:56:22 0073 LOAD DISTINCT      
2020-01-13 21:56:22 0074   entry_exit_review_id AS match_eer_id
2020-01-13 21:56:22 0075 RESIDENT EERs_To_Rebuild_Answers_For
2020-01-13 21:56:22      	1 fields found: match_eer_id, 
2020-01-13 21:56:22      0 lines fetched
2020-01-13 21:56:22 0077 LET varTempClientInterimQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_REVIEW_ANSWER_V5.qvd'))
2020-01-13 21:56:22 0079 IF -1 THEN
  2020-01-13 21:56:22 0080 Temp_Client_Interim_Answer_Table:
  2020-01-13 21:56:22 0081   Noconcatenate
  2020-01-13 21:56:22 0082   LOAD
  2020-01-13 21:56:22 0083     *
  2020-01-13 21:56:22 0084   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_REVIEW_ANSWER_V5.qvd](qvd)
  2020-01-13 21:56:22 0085   WHERE NOT EXISTS(match_eer_id, [Entry Exit Review Id])
  2020-01-13 21:56:23      	674 fields found: Entry Exit Review Id, LIHEAPSTATUSATTIMEOFI_review, NUMBERINHOUSEHOLD_review, ENGLISHWRITINGSKILLS_review, TRANSPORTATION_4_review, TYPEOFHOUSINGNEEDED_1_review, HIGHESTLEVELOFEDUCATI_review, OTHERMONTHLYTRANSPORT_review, HUD_COVEREDBYHLTHINS_review, RHYMISTLP5EMPSTAT_review, HUD_ENTERFROMESSH_review, STAFFSUSPECTSSUBSTANC_review, CUSTOMFIELD_4_18_review, DOYOUHAVEACASEWORKERW_review, ADVANCEEMPLOYMENT_review, HAVEYOUEVERBEENCONVIC_review, HUD_NOMONTHSTREETESSHIN3YRS_review, WHENDIDTHECLIENTFIRST_review, AMOUNTOFSAVINGS_review, HAVEVALIDDRIVERSLICENSE_review, FAMILYHISTORYOFADDICTION_review, MEALSONLYORHOMELESSON_review, DHSCLIENTSTATUSATFOLL_review, BEENTHREATENEDWITHAWE_review, CUSTOMFIELD_4_12_review, SECONDARYREASONFORHOM_review, HUD_RECEIVEDVOCTRAINING_review, RHYMISTLP9DENTAL_review, ENGLISHLANGUAGESKILLS_review, HUD_SUBSIDYINFOMOVED_review, BECAMEBANKED_review, CLIENTPARTICIPATESINA_review, SVP_ENGAGEMENT_DATE_review, HASUSECAUSEDYOUPROBLEMS_review, NATURALDISASTER_review, SVPPROFSECONDARYRACE_review, LEGAL_1_review, OFMALES5161_review, CHRONICHEALTHCONDITION_review, HUD_HEADOFHHDISABLINGCOND_review, HOUSEHOLDINCOME_review, HUD_SINGLEPARENTWMINORCHILD_review, HEADOFHOUSEHOLD_review, MENTALHEALTHISSUES_review, ACTIVEMILITARY_review, SECURITYDEPOSIT_review, HUD_EMPLOYED_review, NUMBEROFTIMESINTHEEME_review, CUSTOMFIELD_4_9_review, HUD_MONTHSCONTHOMELESS_review, CLIENTSPREFERREDPRONO_review, ENGLISHREADINGSKILLS_review, UNITEDWAYZONE_review, CURRENTWARRANTISSUED_review, HUD_NUMBEROFTIMESTREETESSH_review, HUD_VAMCSTATIONNO_review, MONTHLYRENT_review, HOSPITALIZEDFORMENTAL_review, DOCUMENTEDMENTALILLNE_review, USESWHEELCHAIR_review, RHYMISBCPEXINCAR_review, EXPLAINHOMELESSSITUATION_review, FIRSTTIMEHOMELESS_review, HUD_REFERRALSOURCE_review, EMPHYSEMA_review, FOOD_review, AIALASKANNATIVEBLACKA_1_review, EVERTREATEDFORANYADDI_review, DOYOUGAMBLE_review, HUD_MAJORCHANGEHHCOMP_review, CREDITSCORE_review, IFAPPROPRIATEBUTREASON_review, ADULTSINSPECIFIEDRACE_review, HUD_TOTALMONTHLYINCOME_review, SELFREPORTEDMENTALILL_review, RECEIVINGPRENATALCARE_review, REFERREDBY_1_review, ANYREPORTEDORDIAGNOSE_review, RELATIONSHIPS_review, SVPPROFDOBTYPE_review, TIME_review, NONHISPANICADULTS_review, HUD_ZIPCODELASTPERMADDR_review, BEENTOTHEEMERGENCYROO_review, HUD_NOEMPLOYREASON_review, AMERICANINDIANALASKAN_2_review, BLACKAFRICANAMERICANA_review, CUSTOMFIELD_4_7_review, DOESTHECLIENTOWNACAR_review, RHYMISBCPEXUNEMPLOYF_review, PHONE2_review, RHYMISLASTGRADECOMPLETED_review, SERVICERELATEDDISABILITY_review, SINGLEMALE_review, OFFEMALES3150_review, IFYESSCHOOLNAME_review, HUD_HH5ORMORE3BEDROOMS_review, RHYMISBCPEXMENTDISF_review, SVP_HUD_EXITSAFE_POSITIVE_PEER_review, FINALDETERMINATION_review, WHEREREFERRED_review, RHYMISTLP8PHYSICAL_review, MAKEANDMODEL_review, PRIMARYREASONFORHOMLE_review, HAVEYOUPREVIOUSLYLIVE_review, HUDELIGIBILITYFULFILL_review, TYPEOFASSISTANCEAPPLI_review, RHYMISBCPEXPHYSDISF_review, FOODSTAMPSINELIGIBLE_review, SIGNEDCEVISPDATCONSEN_review, OFMALES1317_review, TEMPORARYIDEXPIRATION_review, OFFEMALES1830_review, PRIMARYSERVICENEEDED_review, TYPEOFSERVICE_review, CONNECTEDTOAPRIMARYCA_review, SVP_HUD_AFTERCAREWAYSPROVIDED_review, HUD_NIGHTBEFORESTREETESSH_review, VISPDATTOTALSCORE_review, TETANUSDIPHTHERIA_review, HUD_FEMALEVET_review, HUD_HOMELESSSTARTDATE_review, MEANSOFTRANSPORTATION_review, SVPHUDOTHERCRISIS_NUMBEREMERGENCYROOM_review, HOSPITALADMISSIONSINP_review, SURVEYLOCATION_review, CITYOFMOSTRECENTRESID_review, ELIGIBLEFORWIC_review, OFFEMALES612_review, IFOTHERSELECTEDABOVET_review, RESIDINGINTHESAMEUNIT_1_review, FAMILYVISPDAT20TOTALS_review, VISPDATINTERVIEWDATE_review, STATEOFBIRTH_review, EMANCIPATEDMINORORUNA_review, FINANCIALCAPABILITYLI_review, DOYOUOWNAPET_review, DISABLINGCONDITION_review, ALSOIDENTIFYASTRANSGE_review, IFYESEXPLAIN_4_review, DOYOUHAVEAGAMBLINGADD_review, HISTORYOFHEADTRAUMA_review, IFYESDATEOFLASTINCIDE_review, RHYMISBCPEXALCOHOLY_review, CARLICENSEPLATENUMBER_review, HUD_ANNUALHHGROSSINCOME_review, EVEREXPERIENCEDFROSTB_review, PROGRAMTYPE_review, FORMALLYCHRONICALLYHO_review, USCITIZEN_review, DATEPERMANENTHOUSINGP_review, LISTMEDICATIONALLERGIES_review, RHYMISBCPEXSEXORIF_review, EXPLAINSUICIDECONCRN_review, CUSTOMFIELD_4_6_review, IFYESLASTVISITWITHPRI_review, CALLERCONSENTANDNOTIF_review, FEDSTATEEMPLOYMENTELI_review, CLIENTIDENTIFICATION_review, MILITARYDATEENTRANCE_review, SVP_HUD_EXITSAFE_WORKER_review, VETERANCONSENTTOSHARE_review, IMPROVEDFINANCIALPOSI_review, HUD_REFERREDBYCOORDENTRY_review, OKTOSHAREDATAWITHVAYN_review, RHYMISBCPEXHEALTHF_review, PRISONORJAIL_review, HUD_AMIPERCENT_review, LIVERDISEASECIRHOSISO_review, HUD_AFRAIDTOQUITWORK_review, TEMPORARYCLIENTIDNUMB_review, EVERBEENARRESTEDBEFORE_review, ONCEASSIGNEDTOHOUSING_review, SVPCHRONICHOMELESS_review, HUD_NUMBEROFTIMES_review, HUD_PAYDIFTHANEXP_review, SIGNEDCEVISPDATCONSEN_1_review, NUMBERINHOUSEHOLD_2_review, CONFIRMEDVETERANSTATUS_1_review, LASTDENTALVISIT_review, SINGLEFEMALE_review, HUDTYPECOUNSELING_GROUP_PEER_review, AIALASKANNATIVEBLACKA_review, RHYMISBCPEXABUSEF_review, FOODSTAMPSENROLLEDWHI_review, BNLVISPDATSCORE_review, IFYESEXPLAIN_review, HASTHECLIENTPREVIOUSL_review, SVPDATEOFCURRENTEMPLOYMENT_review, OPENABANKACCOUNT_review, HUD_ANYVETHHIRAQAFGHAN_review, ISCLIENTHOMELESS_review, DEBTCURRENT_review, CITY_211_review, SVP_HUD_EXITSAFE_CLIENT_review, HUD_HOUSINGASSESSEXIT_review, RECENTAPPLICATIONFORP_review, HUD_CONNECTWITHSOAR_review, DRIVERSLICENSENUMBER_review, SELFREPORTEDMENTALILL_1_review, REASONINTERESTEDINTRA_review, RHYMISBCPEXHOUSINGF_review, IFYES4TIMESINPAST3YEA_review, RHYMISWARDCHILDWELFARE_review, GAININGSKILLSANDCREDE_review, SVPCLIENTHASMENTALHEALTH_review, FOODSTAMPSENROLLEDATT_review, ASIANWHITECHILDREN_review, SVP_HUD_PLANNEDCOUNSELINGSESSIONS_review, CURRENTLEVELOFHEALTHI_1_review, SVPPROFETH_review, HUD_DATEOFMOVEIN_review, FIRE_review, SVPHUDOTHERCRISIS_NUMBERINPATIENTFACILITY_review, SIGNEDVISPDATCONSENT_review, LOSSOFACLOSERELATIONS_review, HUD_CHILDTYPEOFSCHOOL_review, HUD_LENGTHOFSTAY_review, WHYWASCLIENTSELECTED_review, DISABILITYORDOMESTICV_review, RHYMISBCPEXSEXORIY_review, CHILDRENINHOUSEHOLD_review, HUD_RHYMISBCPEXACTMILP_review, DISCHARGELOCATION_review, TRIMORBIDITYYN_review, SVPDEVELOPMENTALDISA_review, HUD_NUMBEROFTIMEESSH_review, DISABILITYDOCUMENTATI_review, HOWMANYTIMESHAVEYOUUS_1_review, RHYMISSCHOOLSTATUS_review, DOMESTICVIOLENCEVICTIM_review, HUD_INPERMHOUSING_review, HUD_CHILDLASTENRDATE_review, CURRENTFISCALYEAROFCL_review, HUD_HEALTHCONDITION_review, IFYESEXPLAIN_1_review, DUPAGEEXOFFENDER_review, PHONEINTAKEDATE_review, PREVENTIONONLYCURRENT_review, CALLSEARCHCRITZIP_review, SVP_HUD_COUNSELINGAFTEREXIT_review, TOTALCURRENTMONTHLYIN_review, RHYMISTLP4PROGCOMP_review, IFYESLISTALLTYPES_review, IFYESLISTALLTYPES_1_review, CALLUPDATEFROMCASEMAN_review, MAINTAINSAPPEARANCE_review, HUD_CURRENTHOUSINGLOSS_review, IFYESEXPLAIN_2_review, OFMALES62_review, INTERVIEWSCHEDULED_review, LATEARRIVAL_review, DISCHARGEDATE_review, REASONFORLEAVINGPREVI_review, CUSTOMFIELD_4_8_review, EDUCATIONCHILDREN_review, EMERGENCYROOMVISITSIN_2_review, SVPPROFGENDER_review, CUSTOMFIELD_4_15_review, SVP_HUD_EXITSAFE_POSITIVE_ADULT_review, HASBEENABUSED_review, TAYVISPDAT10TOTALSCORE_review, ANYONEINTHEHOUSEHOLDH_review, HUD_NUMHOMELESS3YRS_review, HISTORYOFHEATSTROKEHE_review, DUPAGECLIENTID_review, HOWDOESCLIENTIDENTIFY_review, DATEBECAMEHOMELESS_review, PAST3YRSNUMBEROFOTHER_review, SVP_HUD_VASHVOUCHER_CHANGE_review, LIVEWITHAROOMMATE_review, X2013PITWHEREDIDYOUSL_review, RHYMISBCPEXPHYSDISY_review, CEPLACEMENTDOCUMENTAT_review, PRIVINSURANCECHILD_review, AMERICANINDIANALASKAN_1_review, NUMBEROFSHELTERSINPAS_review, ISANYONEPREGNANT_review, HISTORICALCASEMANAGER_review, PRESENTLYATTENDINGSCHOOL_review, ISANYONEINTHEHOUSEHOL_review, MEDICALCARDCHILDREN_review, WHEREAREYOUSLEEPINGTO_review, AMERICANINDIANALASKAN_review, CLIENTISSAVING_review, SMALLPOX_review, ONPAROLE_review, WORKINGTOWARDSREDUCIN_review, REFERRALCODE_review, RHYMISCHILDWELFAREYEAR_review, ASIANCHILDREN_review, WHEREDIDYOUSPENDTHENI_review, SPEAKSORREADSENGLISHW_review, HUD_EXTENTOFDV_review, RHYMISWARDJUVENILEJUST_review, HEPATITISAVACCINE1ADM_review, ACHIEVEDFINANCIALLITE_review, DEBTTOINCOMERATIOLESS_review, IDENTIFYELIGIBLEINCOM_review, ENTRYLOCATION_review, RHYMISBCPEXPHYSDIS_review, DOYOUHAVEACASEMANAGER_review, HAVEYOUEVERBEENTAKENT_review, INFLUENZA_review, HUD_CURRENTLYINSCHOOL_review, SVP_IFYESMCKINNEYVENTO_review, UNEMPLOYED_review, RHYMISBCPEXSCHOOLY_review, HEPATITISAVACCINE2ADM_review, MONTHLYCARINSURANCE_review, HUD_CURRENTEMPTENURE_review, DOMESTICVIOLENCEOFFENDER_review, HUD_CURRENTHHINCOME0_review, SERVICENUMBER_1_review, SVPHUDOTHERCRISIS_NUMBERPRISON_review, SVP_ANYSOURCE30DAYNONCASH_review, SUICIDAL_review, HUD_MONTHSINMILITARY_review, SPEAKSENGLISH_review, HUD_EXCHANGEDSEXPAST3MONTHS_review, FEMALEWCHILD_review, HUD_BCPFYSBYOUTH_review, HUD_CONTHOMELESS1YEAR_review, HOMELESS4TIMESINPAST3_review, HUD_DISCHARGETYPE_review, CUSTOMFIELD_4_5_review, HUD_SERVEDWARZONE_review, BECAMEJOBREADY_review, BNLSTARTOFHOMELESSNES_review, RECEIVINGWIC_review, RHYMISBCPEXHEALTHY_review, BLACKAFRICANAMERICANC_review, HUD_ZIPDATAQUALITY_review, HUD_EXCHANGEDSEXPAST3MONTHS2_review, RHYMISBCPEXSCHOOLF_review, DOYOUHAVEHYPERTENSION_review, ESGWAIVERFMR_review, HAVEYOUHADBLACKOUTS_review, ONPROBATION_review, IFUNEMPLOYEDEXPLAIN_review, SVP_HUD_RUNAWAYYOUTH_review, PRIVINSURANCEADULT_review, RHYMISCHILDWELFAREMON_review, CONVICTEDSEXOFFNEDER_review, HISPANICCHILDREN_review, DATEOFLASTTUBERCULOSI_review, HEPATITISC_review, BEENINTREATMENTFORMEN_review, PREGNANT_review, SVP_EMPLOYED_review, FAMILYVISPDATSUBTOTAL_review, HUD_NOMONTHESSHIN3YRS_review, DATEOFLASTUSE_review, HUD_HPAPPTOTALPTS_review, RHYMISSEXUALORIENTATIONOTHER_review, IMMUNIZATIONSUPTODATE_review, PEACETIMESERVICEONLY_review, OFSINGLEINDIVIDUALSIN_review, SVP_HUD_HOUSINGSTATUS_review, SVP_HUD_AFTERCARE_PROVIDED_review, DATEASSIGNEDTOHOUSING_review, PROGRAMFEE_review, HUD_VAMCSTATIONNUMBER_review, HOWLONGHOMELESSTHISTI_review, HISPANICADULTS_review, IFYESDATEOFEVICTION_review, HUD_AFTERCARE_VIA_EMAIL_SOCIAL_review, HUD_AFTERCARE_IN_PERSON_ONE_ON_ONE_review, IFYESDATE_1_review, HASANINTERVIEWBEENSCH_review, HUD_ASKMAKEYOUHAVESEX2_review, PLACEMENTNOTES_review, ENROLLEDINEMPLOYERBEN_review, USECREDITWISELY_review, RECEIVEEVIDENCEBASEDP_review, WHOREFERREDYOUTOUS_review, RHYMISBCPEXHOUSINGY_review, CUSTOMFIELD_2_11_review, NAMEOFPREVIOUSTRANSIT_review, KIDNEYDISEASEENDSTAGE_review, FOODSTAMPSTATUSATTIME_review, PERMANENTHOUSINGPLANT_review, NOTESONFELONY_review, EDUCATIONADULT_review, LENGTHOFCALL_review, REFERREDFROMOTHERCONN_review, SERIOUSINJURYORWATCHE_review, SVPISCLIENTEMPLOYED_review, MEASLESMUMPSRUBELLAMMR_review, IFYESWHEREDOESTHISCLI_review, SVPPROFDOB_review, WHEREDOYOUSPENDYOURDAY_review, RHYMISBCPEXALCOHOLF_review, PREVENTIONONLYPHONENU_review, DOYOUNEEDASSISTANCEAP_review, DEPENDENTSOFTHISCLIENT_review, IFVETERANCONSENTSTOSH_review, HAVEYOUEVERBEENINVOLV_review, INCOME_review, EVERBEENTREATEDFORDRU_review, NONHISPANICCHILDREN_review, RHYMISBCPEXABUSEY_review, DOYOUNEEDASSISTANCEIN_review, RHYMISBCPEXHHDYN_review, CLIENTSUSUALSOURCEOFC_review, RHYMISBCPEXMENTALY_review, FIRSTTIMEHOMELESS_1_review, EVERSTAYEDINASHELTER_review, HUD_YOUTHEXPELLED_review, DEPRESSIONHISTORY_review, OVERVIEWOFDVHISTORY_review, IMMINENTRISKOFHOMELES_review, HIVAIDSANDRELATEDDISE_review, IFYESDIDYOUAGEOUTOFTH_review, ASIANWHITEADULTS_review, CUSTOMFIELD_5_1_review, RANKATDISCHARGE_review, BLACKAAWHITECHILDREN_review, RETURNGUEST_review, HAVEYOUHADAPRIORLUNGI_1_review, PRIORITIZATIONTARGETS_review, IMMEDIATEACTIONTAKEN_review, HUD_AFTERCARE_VIA_PHONE_review, WHITEADULTS_review, HUD_FYSBNUMAPPROACHOUTREACH_review, CUSTOMFIELD_2_8_review, GRADEATTENDING_review, IFYESPROBATIONOFFICER_review, CUSTOMFIELD_4_1_review, DUPAGEHIVAIDS_review, CUSTOMFIELD_4_17_review, RHYMISTLP10MENTAL_review, HOSPITALIZATIONORTREA_review, AMILEVEL_review, MAKINGSOUNDINVESTMENTS_review, HUD_RECEIVINGADAP_review, CRIMINALRECORDSEXPUNG_review, DATEOFHOUSINGPLACEMENT_review, SVP_ANYSOURCE30DAYINCOME_review, IFYESWOULDYOUBEWILLIN_review, OBTAINEDANDKEPTEMPLOY_review, SVP_HUD_EXITSAFE_POSITIVE_COMMUNITY_review, FAMILYVISPDATSUBTOTAL_1_review, SSVFELIGIBLE_review, DUPAGECHILDCARE_review, LASTDENTALAPPOINTMENT_review, LENGTHOFCURRENTEPISOD_review, NATIVEHAWAIIANOTHERPA_review, DEBTTOINCOMERATION3050_1_review, HASANYONEINTHEHOUSEHO_review, HOUSEHOLDMEMBERWITHAC_review, HUD_RESPRIORENTRYOTHSPEC_review, ANYONEINTHEHOUSEHOLDR_review, CLINICALOBSERVATIONSO_review, ASIANADULTS_review, ALLERGIES_review, CALLSEARCHCRITAREA_review, CONGESTIVEHEARTFAILURE_review, SPDATWHYORWHYNOT_review, LENGTHOFTIMELEFTATCUR_review, ADEQUATEJOBSKILLS_review, HAVEMEDICALCARECOVERAGE_review, SHELTERTYPETYPEOFHOUS_review, INCREASEFINANCIALKNOW_review, SUBTOTALDWELLNESS_review, REASONFURTHERINTERVIE_review, CUSTOMFIELD_2_9_review, WHITECHILDREN_review, SURVEYIDENTIFIER2013P_review, ARTHRITIS_review, CURRENTLEVELOFHEALTHI_review, ABLETOCONNECTTORESOURCES_review, VETERAN_review, MEDICALHOME_review, CLIENTSHEALTHRATING_review, CANCER_review, INTERESTEDINATTENDING_review, TYPEOFLIVINGSITUATION_review, HUD_APXSTARTDATEESSH_review, JOBCERTIFICATIONOREXP_review, HISTORYOFVIOLENCE_review, AUTHORIZEDIRECTDEPOSI_review, SUBTOTALBRISKS_review, DATEOFINITIALCALL_review, SVP_HUD_COUNSELINGRECEIVED_review, HUD_RENTALEVICTPAST7YRS_review, VISPDAT20TOTALSCORE_review, PRISONEROFWAR_review, RELIABLE_review, IFYESDUEDATE_review, HUD_CRIMINALRECORD_review, HUD_ONEDEPCHILDUNDER6_review, DOYOUHAVEAPLACETOSLEE_1_review, FAMILYVISPDATTOTALSCO_review, ESTABLISHFINANCIALBAS_review, HOURLYWAGEATENDOF30DA_review, LIVINGWITHRELATIVESFR_review, HUD_HRSWORKEDLASTWEEK_review, FIELDOFSTUDY_review, IFYESEXPLAIN_5_review, HUD_BCPSTATUSDETERMDATE_review, ADULTSINHOUSEHOLD_review, CUSTOMFIELD_2_10_review, DESCRIBEHEADTRAUMA_review, CUSTOMFIELD_2_13_review, OUTCOMEOFINTERVIEW_review, DATEVETERANIDENTIFIED_review, NONCONFIDENTIALNOTES_review, RHYMISBCPEXUNEMPLOYY_review, CUSTOMFIELD_4_16_review, HUD_REGSEXOFFENDER_review, SVPPROFRACE_review, X2013PITSURVEYUNSHELT_review, OKTOSHAREWITHCEPLACEM_review, OFFEMALES62_review, HOMEMAINTENANCE_review, PAROLEENDDATE_1_review, CONFIRMEDVETERANSTATUS_review, BNLLISTSTATUS_review, X1PROGRAMHOUSINGTHATW_review, BLACKAAWHITE_review, VISPDATDATAQUALITY_review, ANYHOUSEHOLDMEMBERAUS_review, PAROLEOFFICERPHONE_review, CURRENTLYORPREVIOUSLY_review, CLIENTINFORMEDABOUTFO_review, MAJORORDEGREEFIELD_review, MALEWCHILD_review, DONOTUSEPAYDAYORCARTI_review, CUSTOMFIELD_4_14_review, MEDICAIDMCOORHEALTHIN_review, OFFEMALE1830_review, SVP_HUD_NUMBERCOUNSELINGSESSIONS_review, OFMALES612_review, SAFETY_review, KIDCARE_review, HUD_GRANTEETHRESHOLDSCORE_review, MEDICAID_2_review, DOYOUAGREEWITHTHEHOUS_review, IFCHRONICDURATIONOF2O_review, LENGTHOFTIMEHOMELESSD_review, WHEREDIDYOUHEAR_211_review, DOYOUHAVEFAMILYWITHYO_review, IDNUMBER_review, HUD_LENGTHSTAY_LESS90DAYS_review, SERIOUSCARACCIDENT_review, AIDSDIAGNOSIS_review, ANYONEHOSPITALIZEDWIT_review, RHYMISBCPEXINCOME_review, COUPLEWCHILD_review, HUDTYPECOUNSELING_FAMILY_review, ANNUALEARNEDINCOME_review, OFFEMALES1_1_review, WHERESPECIFICALLYDIDY_review, LIVINGSITUATIONPRIORT_review, STATUSOFPUBLICASSISTA_review, LIHEAPENROLLEDATINTAKE_review, HUD_TOTALNUMMONHOMELESSPAST3YR_review, X2013PITCANVASSER_review, TOTALAMOUNTOFABOVEDEBT_review, SUBCOOKCEACCESSPOINT_review, UPCOMINGCOURTDATES_review, HOWMANYTIMESHAVEYOUUS_review, HISTORICALPROGRAMPART_review, COUNTY_211_review, OFFEMALES1317_review, ILLINOISRECIPIENTIDEN_review, DUPAGEBECAMEBANKED_review, IFYESDATE_review, RHYMISBCPEXMENTDISY_review, IMPROVEDJOBQUALITY_review, HUD_WORKVIOLENCE_review, MEDICATIONFORMENTALHE_review, HUD_PUBHIVMEDASSISTANCE_review, RHYMISBCPEXMENTALF_review, MARITALSTATUS_1_review, OFFEMALES5161_review, USEALCOHOLORDRUGS_review, X1001TO1500_review, HAVEABANKINGACCOUNT_review, ASTHMA_review, CHRONICOBSTRUCTIVEPUL_review, SHELTERNAMEIFPRESENTL_review, X1TBSCREENINGDONE_review, BASISOFBNLMODIFIEDSTA_review, VULNERABILITYINDEXVAL_review, SVP_HUD_LOOKINGFORMOREWORK_review, HUD_RISKLOSINGHOUSINGSUBSIDY_review, HUD_LENGTHSTAY_LESS7NIGHTS_review, HUD_ASSESSMENTDISPOSITION_review, PROBATIONOFFICERPHONE_review, RENTALASSISTANCEFROMC_review, SECONDARYREASONFORCALL_1_review, LIHEAPINELIGIBLE_review, ENGLISHSPEAKINGSKILLS_review, OFMALE3150_review, NUMBEROFOTHERSHELTERS_review, DOYOUNEEDASSISTANCEIN_1_review, HUD_HPSCREENINGSCORE_review, DUPAGESUBSTANCEABUSE_1_review, BALANCEACHECKBOOK_review, CLIENTISASSETSECURE_review, COUNTYOFORIGININTOTHEUS_review, CALLERCONSENTDATE_review, HOMELESSDEFINITION_review, HUDTYPECOUNSELING_INDIVIDUAL_review, ACCESSTOTRANSPORTATION_review, CREATEABUDGET_review, HUD_HISTLITERALHOMELESS_review, HUD_SUBSIDYINFOABLE_review, PRIMARYLANGUAGESPOKEN_2_review, EMAILADDRESS_review, CELLPHONENUMBER_review, IFYESEXPLAIN_3_review, ABLETOHANDLESTRESS_review, NOTESONMENTALHEALTH_review, HAVEYOUEVERBEENCONVIC_1_review, IFYESEXPLAINWARRANT_review, OFMALES1_1_review, HUD_DISABLINGCONDITION_review, IFYESPAROLEOFFICER_review, HUD_SUDDENDECREASECASH_review, REASONCLIENTISSEEKING_review, VHAELIGIBLE_review, HUD_LOOKINGFORWORK_review, ORIGINALPROGRAMENTRYD_review, DUPAGEEMPLOYMENT_1_review, HUD_ASKMAKEYOUHAVESEX_review, HUD_RELATIONTOHOH_review, PHONE3_review, NATIVEHAWAIIANOTHERPA_1_review, AASELFHELPGROUPATTEND_review, EVERHADDTS_review, CONTRACTRENEWALDATE_review, DATEOFMOSTRECENTRESUME_review, PAROLEENDDATE_review, DIABETES_review, ELIGIBILITY_review, HUD_HOUSINGMOVEINDATE_review, IFYESEXPLAIN_6_review, AMERICANINDIANALASKAN_3_review, KEEP03CREDITCARDS_review, X2PPDPLACED_review, HUD_EXTENTTOFDV2_review, HUD_STATUSDOCUMENTED_review, SUBCOOKCESENDINGAGENCY_review, HOUSEHOLDTYPE_review, SHAREANAPARTMENT_1_review, OFMALES15_review, HIGHSCHOOLDEGREEOREQU_review, RELATESWELLTOOTHERS_review, RHYMISSEXUALORIENTATION_review, SVPPHYSICALDISABILIT_review, HUD_EMPLOYMENTTYPE_review, DATEOFAIDSDIAGNOSIS_review, SETTINGANDMEETINGGOALS_review, HOUSEHOLDINCOME_2_review, ANYONEEXPERIENCINGANY_review, OFFEMALES15_review, IFYESFREQUENCYOFMEDIC_review, EXOFFENDER_review, SEEKSTOIMPROVESELF_review, MEDICALCARDADULT_review, CITYOFBIRTH_1_review, IFWORKINGINDUPAGEWHAT_review, COUPLENOCHILD_review, IFYESFREQUENCYOFGAMBLING_review, SVPJUVENILEPARENT_review, DECREASEDBARRIERSTOCA_review, HUD_COCCLIENTLOCATION_review, LIHEAPENROLLEDDURINGP_review, PHONE1_review, HUD_WORKVIOLENCE2_review, PRIMARYREASONFORCALL_review, 
  2020-01-13 21:56:23      11,925 lines fetched
  2020-01-13 21:56:23 0086 END IF
2020-01-13 21:56:23 0057 TEMP_Interim:
2020-01-13 21:56:23 0058 Noconcatenate
2020-01-13 21:56:23 0059 SELECT
2020-01-13 21:56:23 0060 b.entry_exit_review_id,
2020-01-13 21:56:23 0061 --plv(b.point_in_time_type_id) as entry_exit_review_pit_type,
2020-01-13 21:56:23 0062 --plv(b.review_type_id) as entry_exit_review_type,
2020-01-13 21:56:23 0063 --b.review_date::DATE as entry_exit_review_date,
2020-01-13 21:56:23 0064 b.entry_exit_id,
2020-01-13 21:56:23 0065 b.question_id,
2020-01-13 21:56:23 0066 dq3.virt_field_name,
2020-01-13 21:56:23 0067 CASE WHEN b.code = 'lookup' THEN plv(da3.val_int)::VARCHAR
2020-01-13 21:56:23 0068      WHEN b.code = 'yes_no' THEN yn(da3.val_int)::VARCHAR
2020-01-13 21:56:23 0069      WHEN b.code = 'date' THEN (da3.val_date::DATE)::VARCHAR
2020-01-13 21:56:23 0070      WHEN b.code = 'int' THEN da3.val_int::VARCHAR
2020-01-13 21:56:23 0071      WHEN b.code = 'textbox' THEN left(da3.val_textfield::VARCHAR,200)
2020-01-13 21:56:23 0072      WHEN b.code = 'textarea' THEN left(da3.val_textfield::VARCHAR,200)
2020-01-13 21:56:23 0073      WHEN b.code = 'money' THEN da3.val_float::VARCHAR
2020-01-13 21:56:23 0074      WHEN b.code = 'service_code' THEN da3.val_int::VARCHAR
2020-01-13 21:56:23 0075      ELSE '' 
2020-01-13 21:56:23 0076 END AS answer_val
2020-01-13 21:56:23 0077 FROM
2020-01-13 21:56:23 0078 (
2020-01-13 21:56:23 0079 	SELECT 
2020-01-13 21:56:23 0080 			a.entry_exit_id,
2020-01-13 21:56:23 0081 			a.question_id,
2020-01-13 21:56:23 0082 			a.code,
2020-01-13 21:56:23 0083 			a.entry_exit_review_id,
2020-01-13 21:56:23 0084 			a.point_in_time_type_id,
2020-01-13 21:56:23 0085 			a.review_type_id,
2020-01-13 21:56:23 0086 			a.review_date,
2020-01-13 21:56:23 0087 	(SELECT da2.answer_id FROM da_answer da2 INNER JOIN da_question dq2 on (dq2.question_id = da2.question_id)
2020-01-13 21:56:23 0088 	        WHERE (da2.client_id = a.client_id) AND (da2.question_id = a.question_id) AND (da2.date_effective = a.date_effective) 
2020-01-13 21:56:23 0089 	        ORDER BY da2.answer_id DESC LIMIT 1) as answer_id
2020-01-13 21:56:23 0090 	FROM 
2020-01-13 21:56:23 0091 	(
2020-01-13 21:56:23 0092 		SELECT 
2020-01-13 21:56:23 0093         ee.entry_exit_review_id, ee.review_date, ee.point_in_time_type_id, ee.review_type_id,
2020-01-13 21:56:23 0094 		ee.entry_exit_id, ee.client_id, da.question_id, dqt.code, max(date_effective) as date_effective, ee.exit_date	
2020-01-13 21:56:23 0095 		FROM (
2020-01-13 21:56:23 0096 			SELECT DISTINCT eer2.entry_exit_review_id, ee2.entry_exit_id, ee2.client_id, ee2.provider_id, eer2.review_date, eer2.point_in_time_type_id, eer2.review_type_id, ee2.exit_date
2020-01-13 21:56:23 0097 			FROM sp_entry_exit_review eer2
2020-01-13 21:56:23 0098 			INNER JOIN sp_entry_exit ee2 ON (ee2.entry_exit_id = eer2.entry_exit_id)
2020-01-13 21:56:23 0099 			INNER JOIN sp_picklist_value pv2 ON (pv2.picklist_value_id = eer2.point_in_time_type_id)
2020-01-13 21:56:23 0100 			WHERE (eer2.active = TRUE) AND (eer2.date_updated > '1/10/2020')
2020-01-13 21:56:23 0101 			--AND (eer2.review_date >= '1/01/2019')
2020-01-13 21:56:23 0102 			AND (ee2.active = true) AND ((ee2.exit_date IS NULL) OR (ee2.exit_date >= '1/01/2019'))
2020-01-13 21:56:23 0103                         AND pv2.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
2020-01-13 21:56:23 0104 			UNION
2020-01-13 21:56:23 0105 			SELECT DISTINCT eer3.entry_exit_review_id, ee3.entry_exit_id, ee3.client_id, ee3.provider_id, eer3.review_date, eer3.point_in_time_type_id, eer3.review_type_id, ee3.exit_date
2020-01-13 21:56:23 0106 			FROM sp_entry_exit_review eer3
2020-01-13 21:56:23 0107 			INNER JOIN sp_entry_exit ee3 ON (ee3.entry_exit_id = eer3.entry_exit_id)
2020-01-13 21:56:23 0108 			INNER JOIN da_answer da3 ON (da3.client_id = ee3.client_id)
2020-01-13 21:56:23 0109 			INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 21:56:23 0110 			INNER JOIN da_question_type dqt3 ON (dqt3.question_type_id = dq3.question_type_id)
2020-01-13 21:56:23 0111 			INNER JOIN sp_picklist_value pv3 ON (pv3.picklist_value_id = eer3.point_in_time_type_id)
2020-01-13 21:56:23 0112 			WHERE (dq3.active = TRUE) AND (dq3.parent_id IS NULL) AND (eer3.active = TRUE) AND (ee3.active = true)
2020-01-13 21:56:23 0113 			AND pv3.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
2020-01-13 21:56:23 0114 			AND (dqt3.code IN ('lookup','yes_no','date','int','money','textbox','textarea'))
2020-01-13 21:56:23 0115 			AND ((dq3.reportable_flag = TRUE) OR (dq3.ee_reportable_flag = TRUE) OR (dq3.service_reportable_flag = TRUE))
2020-01-13 21:56:23 0116 			AND
2020-01-13 21:56:23 0117 			(
2020-01-13 21:56:23 0118 			  ((da3.date_added > '1/10/2020') AND (da3.active = TRUE))
2020-01-13 21:56:23 0119 			  OR
2020-01-13 21:56:23 0120 			  ((da3.date_inactive > '1/10/2020') AND (da3.active = FALSE))
2020-01-13 21:56:23 0121 			)
2020-01-13 21:56:23 0122 			AND ((da3.date_effective::DATE <= eer3.review_date::DATE) OR (ee3.exit_date IS NULL))
2020-01-13 21:56:23 0123 			AND ((ee3.exit_date IS NULL) OR (ee3.exit_date >= '1/01/2019'))
2020-01-13 21:56:23 0124 			--AND (eer3.review_date >= '1/01/2019')
2020-01-13 21:56:23 0125                      ) ee
2020-01-13 21:56:23 0126 		INNER JOIN da_answer da ON (da.client_id = ee.client_id)
2020-01-13 21:56:23 0127 		INNER JOIN da_question dq ON (dq.question_id = da.question_id)
2020-01-13 21:56:23 0128 		INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 21:56:23 0129 
2020-01-13 21:56:23 0130             LEFT OUTER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
2020-01-13 21:56:23 0131             LEFT OUTER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
2020-01-13 21:56:23 0132 		
2020-01-13 21:56:23 0133 		WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 21:56:23 0134                 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox','textarea'))
2020-01-13 21:56:23 0135                 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE)) 
2020-01-13 21:56:23 0136 		AND (da.active = true)
2020-01-13 21:56:23 0137 		--AND (da.date_effective >= '2019-01-01')
2020-01-13 21:56:23 0138 		AND ((da.date_effective::DATE <= ee.review_date::DATE) OR (ee.exit_date IS NULL))
2020-01-13 21:56:23 0139 
2020-01-13 21:56:23 0140 		AND (((belowtree.provider_id IS NOT NULL) AND (belowtree.provider_id = da.provider_id)) OR ((abovetree.ancestor_provider_id IS NOT NULL) AND (abovetree.ancestor_provider_id = da.provider_id))
2020-01-13 21:56:23 0141 		OR (dq.virt_field_name IN ('SVPPROFGENDER','RHYMISTERTIARYRACE','RHYMISQUATERNARYRACE','RHYMISQUINARYRACE','SVPPROFSECONDARYRACE','SVPPROFRACE','SVPPROFETH','SVPPROFDOB','SVPPROFDOBTYPE')))	
2020-01-13 21:56:23 0142 		GROUP BY ee.entry_exit_review_id, ee.review_date, ee.point_in_time_type_id, ee.review_type_id, ee.entry_exit_id, ee.client_id, da.question_id, dqt.code, ee.exit_date
2020-01-13 21:56:23 0143 	) a
2020-01-13 21:56:23 0144 ) b
2020-01-13 21:56:23 0145 INNER JOIN da_answer da3 ON (da3.answer_id = b.answer_id)
2020-01-13 21:56:23 0146 INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 21:56:25      	5 fields found: entry_exit_review_id, entry_exit_id, question_id, virt_field_name, answer_val, 
2020-01-13 21:56:25      0 lines fetched
2020-01-13 21:56:25 0093 EntryExitReview_Answer:
2020-01-13 21:56:25 0094 LOAD 
2020-01-13 21:56:25 0095 entry_exit_review_id							AS [Entry Exit Review Id], 
2020-01-13 21:56:25 0096 question_id										AS [Entry Exit Review Answer Question Id], 
2020-01-13 21:56:25 0097 virt_field_name									AS [Entry Exit Review Answer Virtual Field Name],
2020-01-13 21:56:25 0098 left(answer_val,200)							AS [Entry Exit Review Answer Value]
2020-01-13 21:56:25 0099 RESIDENT TEMP_Interim
2020-01-13 21:56:25      	4 fields found: Entry Exit Review Id, Entry Exit Review Answer Question Id, Entry Exit Review Answer Virtual Field Name, Entry Exit Review Answer Value, 
2020-01-13 21:56:25      0 lines fetched
2020-01-13 21:56:25 0100 DROP TABLE TEMP_Interim
2020-01-13 21:56:25 0103 Interim_Question_List:
2020-01-13 21:56:25 0104 Noconcatenate
2020-01-13 21:56:25 0105 LOAD DISTINCT
2020-01-13 21:56:25 0106 [Entry Exit Review Answer Virtual Field Name] as virt_name
2020-01-13 21:56:25 0107 RESIDENT EntryExitReview_Answer
2020-01-13 21:56:25      	1 fields found: virt_name, 
2020-01-13 21:56:25      0 lines fetched
2020-01-13 21:56:25 0110 Client_Review_Answer:
2020-01-13 21:56:25 0111 Noconcatenate
2020-01-13 21:56:25 0112 Load Distinct
2020-01-13 21:56:25 0113 [Entry Exit Review Id]
2020-01-13 21:56:25 0114 RESIDENT EntryExitReview_Answer
2020-01-13 21:56:25      	1 fields found: Entry Exit Review Id, 
2020-01-13 21:56:25      0 lines fetched
2020-01-13 21:56:25 0119 LET NumRows=NoOfRows('Interim_Question_List')
2020-01-13 21:56:25 0120 FOR i=0 to 0-1
2020-01-13 21:56:25 0144 DROP TABLE EntryExitReview_Answer
2020-01-13 21:56:25 0145 DROP TABLE Interim_Question_List
2020-01-13 21:56:25 0058 DROP TABLE EERs_To_Rebuild_Answers_For
2020-01-13 21:56:25 0003 DROP TABLE EERs_To_Remove_From_Current_QVD
2020-01-13 21:56:25 0005 LET varTempClientInterimQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_REVIEW_ANSWER_V5.qvd'))
2020-01-13 21:56:25 0007 IF -1 THEN
  2020-01-13 21:56:25 0008 Concatenate(Temp_Client_Interim_Answer_Table)
  2020-01-13 21:56:25 0009 LOAD
  2020-01-13 21:56:25 0010 	*
  2020-01-13 21:56:25 0011 	RESIDENT Client_Review_Answer
  2020-01-13 21:56:25      	1 fields found: Entry Exit Review Id, 
  2020-01-13 21:56:25      11,925 lines fetched
  2020-01-13 21:56:25 0012 DROP TABLE Client_Review_Answer
2020-01-13 21:56:25 0014 ELSE
2020-01-13 21:56:25 0023 FACT_Entry_Exit_Review:
2020-01-13 21:56:25 0024 Noconcatenate
2020-01-13 21:56:25 0025 Load Distinct
2020-01-13 21:56:25 0026 [Entry Exit Review Id]
2020-01-13 21:56:25 0027 RESIDENT Temp_Client_Interim_Answer_Table
2020-01-13 21:56:25      	1 fields found: Entry Exit Review Id, 
2020-01-13 21:56:25      11,925 lines fetched
2020-01-13 21:56:25 0031 Temp_FACT_Entry_Exit_Review:
2020-01-13 21:56:25 0032 SELECT
2020-01-13 21:56:25 0033 eer.entry_exit_review_id,
2020-01-13 21:56:25 0034 plv(eer.point_in_time_type_id) as entry_exit_review_pit_type,
2020-01-13 21:56:25 0035 plv(eer.review_type_id) as entry_exit_review_type,
2020-01-13 21:56:25 0036 eer.review_date::DATE as entry_exit_review_date,
2020-01-13 21:56:25 0037 eer.entry_exit_id
2020-01-13 21:56:25 0038 FROM
2020-01-13 21:56:25 0039 sp_entry_exit_review eer
2020-01-13 21:56:25 0040 WHERE active =true
2020-01-13 21:56:27      	5 fields found: entry_exit_review_id, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_id, 
2020-01-13 21:56:27      43,352 lines fetched
2020-01-13 21:56:27 0042 inner join(FACT_Entry_Exit_Review)
2020-01-13 21:56:27 0043 LOAD
2020-01-13 21:56:27 0044 	entry_exit_review_id				 AS [Entry Exit Review Id],
2020-01-13 21:56:27 0045 	entry_exit_id 						 AS [Entry Exit Id],
2020-01-13 21:56:27 0046 	entry_exit_review_pit_type 			 AS [Entry Exit Review PIT Type],
2020-01-13 21:56:27 0047 	entry_exit_review_type 				 AS [Entry Exit Review Type],
2020-01-13 21:56:27 0048 	entry_exit_review_date 			     AS [Entry Exit Review Date],
2020-01-13 21:56:27 0049 	entry_exit_review_id				 AS  match_review_id
2020-01-13 21:56:27 0050 RESIDENT  Temp_FACT_Entry_Exit_Review
2020-01-13 21:56:27      	6 fields found: Entry Exit Review Id, Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, match_review_id, 
2020-01-13 21:56:27      43,352 lines fetched
2020-01-13 21:56:27      Joining/Keeping
2020-01-13 21:56:27 0051 DROP TABLE Temp_FACT_Entry_Exit_Review
2020-01-13 21:56:27 0054 RENAME TABLE Temp_Client_Interim_Answer_Table to Client_Review_Answer
2020-01-13 21:56:27 0055 STORE Client_Review_Answer INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_REVIEW_ANSWER_V5.qvd]
2020-01-13 21:58:14 0058 LET varNewDeltaDate = Date(Today() -1)
2020-01-13 21:58:14 0064 DeltaDate:
2020-01-13 21:58:14 0065 Noconcatenate
2020-01-13 21:58:14 0066 LOAD * INLINE
2020-01-13 21:58:14 0067 [
2020-01-13 21:58:14 0068 DeltaDateVal
2020-01-13 21:58:14 0069 1/11/2020
2020-01-13 21:58:14 0070 ]
2020-01-13 21:58:14      	1 fields found: DeltaDateVal, 
2020-01-13 21:58:14      1 lines fetched
2020-01-13 21:58:14 0073 STORE DeltaDate INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_EER_RUNDATE_V5.qvd]
2020-01-13 22:00:08 0074 Drop table DeltaDate
2020-01-13 22:00:08 0059 LET varDeltaDate = '1/01/2019'
2020-01-13 22:00:08 0008 LET varQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_RUNDATE_V2.qvd'))
2020-01-13 22:00:09 0010 IF -1 THEN
  2020-01-13 22:00:09 0011 DeltaDate:
  2020-01-13 22:00:09 0012   Noconcatenate
  2020-01-13 22:00:09 0013   LOAD
  2020-01-13 22:00:09 0014     DeltaDateVal
  2020-01-13 22:00:09 0015   FROM [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_RUNDATE_V2.qvd](qvd)
  2020-01-13 22:00:09      	1 fields found: DeltaDateVal, 
  2020-01-13 22:00:09      1 lines fetched
  2020-01-13 22:00:09 0016 LET varDeltaDate=Peek('DeltaDateVal',0,'DeltaDate')
2020-01-13 22:00:09 0017 ELSE
2020-01-13 22:00:09 0026 EEs_To_Rebuild_Answers_For:
2020-01-13 22:00:09 0027 Noconcatenate
2020-01-13 22:00:09 0028 SELECT DISTINCT ee.entry_exit_id   
2020-01-13 22:00:09 0029 FROM sp_entry_exit ee
2020-01-13 22:00:09 0030 WHERE (ee.active = TRUE) AND (ee.date_updated > '1/10/2020')
2020-01-13 22:00:09 0031 AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '1/01/2019'))
2020-01-13 22:00:09 0032 UNION
2020-01-13 22:00:09 0033 SELECT DISTINCT ee.entry_exit_id  
2020-01-13 22:00:09 0034 FROM sp_entry_exit ee
2020-01-13 22:00:09 0035 INNER JOIN da_answer da ON (da.client_id = ee.client_id)
2020-01-13 22:00:09 0036 INNER JOIN da_question dq ON (dq.question_id = da.question_id)
2020-01-13 22:00:09 0037 INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:00:09 0038 WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL) AND (ee.active = TRUE)
2020-01-13 22:00:09 0039 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 22:00:09 0040 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))             
2020-01-13 22:00:09 0041 AND
2020-01-13 22:00:09 0042 (
2020-01-13 22:00:09 0043   ((da.date_added > '1/10/2020') AND (da.active = TRUE))   
2020-01-13 22:00:09 0044   OR
2020-01-13 22:00:09 0045   ((da.date_inactive > '1/10/2020') AND (da.active = FALSE))
2020-01-13 22:00:09 0046 )
2020-01-13 22:00:09 0047 AND ((da.date_effective::DATE <= ee.entry_date::DATE) OR (da.date_effective::DATE <= ee.exit_date::DATE) OR (ee.exit_date IS NULL))
2020-01-13 22:00:09 0048 AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '1/01/2019'))
2020-01-13 22:00:22      	1 fields found: entry_exit_id, 
2020-01-13 22:00:22      0 lines fetched
2020-01-13 22:00:22 0051 EEs_To_Remove_From_Current_QVD:
2020-01-13 22:00:22 0052 Noconcatenate
2020-01-13 22:00:22 0053 SELECT DISTINCT ee.entry_exit_id as match_ee_id  
2020-01-13 22:00:22 0054 FROM sp_entry_exit ee
2020-01-13 22:00:22 0055 WHERE (ee.active = false) AND (ee.date_updated > '1/10/2020')
2020-01-13 22:00:22 0056 AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '1/01/2019'))
2020-01-13 22:00:22      	1 fields found: match_ee_id, 
2020-01-13 22:00:22      0 lines fetched
2020-01-13 22:00:22 0059 CONCATENATE(EEs_To_Remove_From_Current_QVD)
2020-01-13 22:00:22 0060 LOAD DISTINCT      
2020-01-13 22:00:22 0061   entry_exit_id AS match_ee_id
2020-01-13 22:00:22 0062 RESIDENT EEs_To_Rebuild_Answers_For
2020-01-13 22:00:22      	1 fields found: match_ee_id, 
2020-01-13 22:00:22      0 lines fetched
2020-01-13 22:00:22 0067 LET varTempClientEntryQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_ENTRY_ANSWER_V2.qvd'))
2020-01-13 22:00:22 0069 IF 0 THEN
2020-01-13 22:00:22 0079 LET varTempClientExitQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_EXIT_ANSWER_V2.qvd'))
2020-01-13 22:00:22 0081 IF 0 THEN
2020-01-13 22:00:22 0060 TEMP_Entry:
2020-01-13 22:00:22 0061 Noconcatenate
2020-01-13 22:00:22 0062 SELECT
2020-01-13 22:00:22 0063 b.entry_exit_id,da3.answer_id,b.question_id, dq3.virt_field_name, 1 AS entryexit, --b.code,
2020-01-13 22:00:22 0064 CASE WHEN b.code = 'lookup' THEN plv(da3.val_int)::VARCHAR
2020-01-13 22:00:22 0065      WHEN b.code = 'yes_no' THEN yn(da3.val_int)::VARCHAR
2020-01-13 22:00:22 0066      WHEN b.code = 'date' THEN (da3.val_date::DATE)::VARCHAR
2020-01-13 22:00:22 0067      WHEN b.code = 'int' THEN da3.val_int::VARCHAR
2020-01-13 22:00:22 0068      WHEN b.code = 'textbox' THEN da3.val_textfield::VARCHAR
2020-01-13 22:00:22 0069      WHEN b.code = 'textarea' THEN da3.val_textfield::VARCHAR
2020-01-13 22:00:22 0070      WHEN b.code = 'money' THEN da3.val_float::VARCHAR
2020-01-13 22:00:22 0071      WHEN b.code = 'service_code' THEN da3.val_int::VARCHAR
2020-01-13 22:00:22 0072      ELSE '' 
2020-01-13 22:00:22 0073 END AS answer_val
2020-01-13 22:00:22 0074 FROM
2020-01-13 22:00:22 0075 (
2020-01-13 22:00:22 0076 	SELECT a.entry_exit_id, a.question_id, a.code,
2020-01-13 22:00:22 0077 	(select da2.answer_id FROM da_answer da2 INNER JOIN da_question dq2 on (dq2.question_id = da2.question_id)
2020-01-13 22:00:22 0078 	        WHERE (da2.client_id = a.client_id) AND (da2.question_id = a.question_id) AND (da2.date_effective = a.date_effective) 
2020-01-13 22:00:22 0079 	        ORDER BY da2.answer_id DESC LIMIT 1) as answer_id
2020-01-13 22:00:22 0080 	FROM 
2020-01-13 22:00:22 0081 	(
2020-01-13 22:00:22 0082 		SELECT ee.entry_exit_id, ee.client_id, da.question_id, dqt.code, max(date_effective) as date_effective	
2020-01-13 22:00:22 0083 		FROM (          
2020-01-13 22:00:22 0084 		        SELECT DISTINCT ee2.entry_exit_id  , ee2.client_id, ee2.provider_id, ee2.entry_date
2020-01-13 22:00:22 0085 			FROM sp_entry_exit ee2
2020-01-13 22:00:22 0086 			WHERE (ee2.active = TRUE) AND (ee2.date_updated > '1/10/2020')
2020-01-13 22:00:22 0087 			AND ((ee2.exit_date IS NULL) OR (ee2.exit_date >= '2019-01-01'))
2020-01-13 22:00:22 0088 			UNION
2020-01-13 22:00:22 0089 			SELECT DISTINCT ee3.entry_exit_id  , ee3.client_id, ee3.provider_id, ee3.entry_date
2020-01-13 22:00:22 0090 			FROM sp_entry_exit ee3
2020-01-13 22:00:22 0091 			INNER JOIN da_answer da3 ON (da3.client_id = ee3.client_id)
2020-01-13 22:00:22 0092 			INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 22:00:22 0093 			INNER JOIN da_question_type dqt3 ON (dqt3.question_type_id = dq3.question_type_id)
2020-01-13 22:00:22 0094 			WHERE (dq3.active = TRUE) AND (dq3.parent_id IS NULL) AND (ee3.active = TRUE)
2020-01-13 22:00:22 0095 			AND (dqt3.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 22:00:22 0096 			AND ((dq3.reportable_flag = TRUE) OR (dq3.ee_reportable_flag = TRUE) OR (dq3.service_reportable_flag = TRUE))             
2020-01-13 22:00:22 0097 			AND
2020-01-13 22:00:22 0098 			(
2020-01-13 22:00:22 0099 		          ((da3.date_added > '1/10/2020') AND (da3.active = TRUE))
2020-01-13 22:00:22 0100 			  OR
2020-01-13 22:00:22 0101 			  ((da3.date_inactive > '1/10/2020') AND (da3.active = FALSE))
2020-01-13 22:00:22 0102 			)			
2020-01-13 22:00:22 0103 			AND ((da3.date_effective::DATE <= ee3.entry_date::DATE) OR (da3.date_effective::DATE <= ee3.exit_date::DATE) OR (ee3.exit_date IS NULL))
2020-01-13 22:00:22 0104 			AND ((ee3.exit_date IS NULL) OR (ee3.exit_date >= '2019-01-01'))
2020-01-13 22:00:22 0105                      ) ee
2020-01-13 22:00:22 0106 		INNER JOIN da_answer da ON (da.client_id = ee.client_id)
2020-01-13 22:00:22 0107 		INNER JOIN da_question dq ON (dq.question_id = da.question_id)
2020-01-13 22:00:22 0108 		INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:00:22 0109 
2020-01-13 22:00:22 0110             LEFT OUTER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
2020-01-13 22:00:22 0111             LEFT OUTER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
2020-01-13 22:00:22 0112 		
2020-01-13 22:00:22 0113 		WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:00:22 0114 		        AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 22:00:22 0115                 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE)) 
2020-01-13 22:00:22 0116          AND (da.active = true)
2020-01-13 22:00:22 0117 		--AND (da.date_effective >= '2019-01-01')
2020-01-13 22:00:22 0118 		AND (da.date_effective::DATE <= ee.entry_date::DATE)
2020-01-13 22:00:22 0119 
2020-01-13 22:00:22 0120 		AND (((belowtree.provider_id IS NOT NULL) AND (belowtree.provider_id = da.provider_id)) 
2020-01-13 22:00:22 0121 		OR ((abovetree.ancestor_provider_id IS NOT NULL) AND (abovetree.ancestor_provider_id = da.provider_id))
2020-01-13 22:00:22 0122 		OR (dq.virt_field_name IN ('SVPPROFGENDER','RHYMISTERTIARYRACE','RHYMISQUATERNARYRACE','RHYMISQUINARYRACE','SVPPROFSECONDARYRACE','SVPPROFRACE','SVPPROFETH','SVPPROFDOB','SVPPROFDOBTYPE'))
2020-01-13 22:00:22 0123 		)
2020-01-13 22:00:22 0124 		GROUP BY ee.entry_exit_id, ee.client_id, da.question_id, dqt.code
2020-01-13 22:00:22 0125 	) a
2020-01-13 22:00:22 0126 ) b
2020-01-13 22:00:22 0127 INNER JOIN da_answer da3 ON (da3.answer_id = b.answer_id)
2020-01-13 22:00:22 0128 INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 22:00:24      	6 fields found: entry_exit_id, answer_id, question_id, virt_field_name, entryexit, answer_val, 
2020-01-13 22:00:24      0 lines fetched
2020-01-13 22:00:24 0072 EntryExit_Answer:
2020-01-13 22:00:24 0073 LOAD 
2020-01-13 22:00:24 0074 entry_exit_id									AS [Entry Exit Id], 
2020-01-13 22:00:24 0075 question_id										AS [Entry Exit Answer Question Id], 
2020-01-13 22:00:24 0076 virt_field_name									AS [Entry Exit Answer Virtual Field Name],
2020-01-13 22:00:24 0077 if ( entryexit = 1, 'Entry', 'Exit' ) 			AS [Is Entry or Exit],
2020-01-13 22:00:24 0078 answer_val										AS [Entry Exit Answer Value],
2020-01-13 22:00:24 0079 answer_id             							AS %entry_answer_id 					                            
2020-01-13 22:00:24 0080 RESIDENT TEMP_Entry
2020-01-13 22:00:24      	6 fields found: Entry Exit Id, Entry Exit Answer Question Id, Entry Exit Answer Virtual Field Name, Is Entry or Exit, Entry Exit Answer Value, %entry_answer_id, 
2020-01-13 22:00:24      0 lines fetched
2020-01-13 22:00:24 0083 DROP TABLE TEMP_Entry
2020-01-13 22:00:24 0085 TEMP_Exit:
2020-01-13 22:00:24 0086 Noconcatenate
2020-01-13 22:00:24 0087 SELECT
2020-01-13 22:00:24 0088 b.entry_exit_id, b.question_id,da3.answer_id, dq3.virt_field_name, 0 AS entryexit, --b.code,
2020-01-13 22:00:24 0089 CASE WHEN b.code = 'lookup' THEN plv(da3.val_int)::VARCHAR
2020-01-13 22:00:24 0090      WHEN b.code = 'yes_no' THEN yn(da3.val_int)::VARCHAR
2020-01-13 22:00:24 0091      WHEN b.code = 'date' THEN (da3.val_date::DATE)::VARCHAR
2020-01-13 22:00:24 0092      WHEN b.code = 'int' THEN da3.val_int::VARCHAR
2020-01-13 22:00:24 0093      WHEN b.code = 'textbox' THEN da3.val_textfield::VARCHAR
2020-01-13 22:00:24 0094      WHEN b.code = 'textarea' THEN da3.val_textfield::VARCHAR
2020-01-13 22:00:24 0095      WHEN b.code = 'money' THEN da3.val_float::VARCHAR
2020-01-13 22:00:24 0096      WHEN b.code = 'service_code' THEN da3.val_int::VARCHAR
2020-01-13 22:00:24 0097      ELSE '' 
2020-01-13 22:00:24 0098 END AS answer_val
2020-01-13 22:00:24 0099 FROM
2020-01-13 22:00:24 0100 (
2020-01-13 22:00:24 0101 	SELECT a.entry_exit_id, a.question_id, a.code,
2020-01-13 22:00:24 0102 	(select da2.answer_id FROM da_answer da2 INNER JOIN da_question dq2 on (dq2.question_id = da2.question_id)
2020-01-13 22:00:24 0103 	        WHERE (da2.client_id = a.client_id) AND (da2.question_id = a.question_id) AND (da2.date_effective = a.date_effective) 
2020-01-13 22:00:24 0104 	        ORDER BY da2.answer_id DESC LIMIT 1) as answer_id
2020-01-13 22:00:24 0105 	FROM 
2020-01-13 22:00:24 0106 	(
2020-01-13 22:00:24 0107 		SELECT ee.entry_exit_id, ee.client_id, da.question_id, dqt.code, max(date_effective) as date_effective
2020-01-13 22:00:24 0108 		FROM (          
2020-01-13 22:00:24 0109 		        SELECT DISTINCT ee2.entry_exit_id  , ee2.client_id, ee2.provider_id, ee2.exit_date
2020-01-13 22:00:24 0110 			FROM sp_entry_exit ee2
2020-01-13 22:00:24 0111 			WHERE (ee2.active = TRUE) AND (ee2.date_updated > '1/10/2020')
2020-01-13 22:00:24 0112 			AND ((ee2.exit_date IS NULL) OR (ee2.exit_date >= '2019-01-01'))
2020-01-13 22:00:24 0113 			UNION
2020-01-13 22:00:24 0114 			SELECT DISTINCT ee3.entry_exit_id  , ee3.client_id, ee3.provider_id, ee3.exit_date
2020-01-13 22:00:24 0115 			FROM sp_entry_exit ee3
2020-01-13 22:00:24 0116 			INNER JOIN da_answer da3 ON (da3.client_id = ee3.client_id)
2020-01-13 22:00:24 0117 			INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 22:00:24 0118 			INNER JOIN da_question_type dqt3 ON (dqt3.question_type_id = dq3.question_type_id)
2020-01-13 22:00:24 0119 			WHERE (dq3.active = TRUE) AND (dq3.parent_id IS NULL) AND (ee3.active = TRUE)
2020-01-13 22:00:24 0120 			AND (dqt3.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 22:00:24 0121 			AND ((dq3.reportable_flag = TRUE) OR (dq3.ee_reportable_flag = TRUE) OR (dq3.service_reportable_flag = TRUE))             
2020-01-13 22:00:24 0122 			AND
2020-01-13 22:00:24 0123 			(
2020-01-13 22:00:24 0124 		          ((da3.date_added > '1/10/2020') AND (da3.active = TRUE))
2020-01-13 22:00:24 0125 			  OR
2020-01-13 22:00:24 0126 			  ((da3.date_inactive > '1/10/2020') AND (da3.active = FALSE))
2020-01-13 22:00:24 0127 			)
2020-01-13 22:00:24 0128 			AND ((da3.date_effective::DATE <= ee3.exit_date::DATE) OR (ee3.exit_date IS NULL))
2020-01-13 22:00:24 0129 			AND ((ee3.exit_date IS NULL) OR (ee3.exit_date >= '2019-01-01'))
2020-01-13 22:00:24 0130                      ) ee
2020-01-13 22:00:24 0131 		INNER JOIN da_answer da ON (da.client_id = ee.client_id)
2020-01-13 22:00:24 0132 		INNER JOIN da_question dq ON (dq.question_id = da.question_id)
2020-01-13 22:00:24 0133 		INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:00:24 0134 
2020-01-13 22:00:24 0135             LEFT OUTER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
2020-01-13 22:00:24 0136             LEFT OUTER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
2020-01-13 22:00:24 0137 		
2020-01-13 22:00:24 0138 		WHERE (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:00:24 0139                 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox', 'textarea'))
2020-01-13 22:00:24 0140                 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))
2020-01-13 22:00:24 0141 		AND (da.active = true)
2020-01-13 22:00:24 0142 		--AND (da.date_effective >= '2019-01-01')
2020-01-13 22:00:24 0143 		AND ((da.date_effective::DATE <= ee.exit_date::DATE) OR (ee.exit_date IS NULL))
2020-01-13 22:00:24 0144 
2020-01-13 22:00:24 0145         AND (((belowtree.provider_id IS NOT NULL) AND (belowtree.provider_id = da.provider_id)) OR ((abovetree.ancestor_provider_id IS NOT NULL) AND (abovetree.ancestor_provider_id = da.provider_id))
2020-01-13 22:00:24 0146 		OR (dq.virt_field_name IN ('SVPPROFGENDER','RHYMISTERTIARYRACE','RHYMISQUATERNARYRACE','RHYMISQUINARYRACE','SVPPROFSECONDARYRACE','SVPPROFRACE','SVPPROFETH','SVPPROFDOB','SVPPROFDOBTYPE'))
2020-01-13 22:00:24 0147 		)
2020-01-13 22:00:24 0148 		GROUP BY ee.entry_exit_id, ee.client_id, da.question_id, dqt.code	
2020-01-13 22:00:24 0149 	) a
2020-01-13 22:00:24 0150 ) b
2020-01-13 22:00:24 0151 INNER JOIN da_answer da3 ON (da3.answer_id = b.answer_id)
2020-01-13 22:00:24 0152 INNER JOIN da_question dq3 ON (dq3.question_id = da3.question_id)
2020-01-13 22:00:26      	6 fields found: entry_exit_id, question_id, answer_id, virt_field_name, entryexit, answer_val, 
2020-01-13 22:00:26      0 lines fetched
2020-01-13 22:00:26 0154 CONCATENATE(EntryExit_Answer)
2020-01-13 22:00:26 0155 LOAD 
2020-01-13 22:00:26 0156 entry_exit_id									AS [Entry Exit Id], 
2020-01-13 22:00:26 0157 question_id										AS [Entry Exit Answer Question Id], 
2020-01-13 22:00:26 0158 virt_field_name									AS [Entry Exit Answer Virtual Field Name],
2020-01-13 22:00:26 0159 if ( entryexit = 1, 'Entry', 'Exit' ) 			AS [Is Entry or Exit],
2020-01-13 22:00:26 0160 answer_val										AS [Entry Exit Answer Value],
2020-01-13 22:00:26 0161 answer_id   									AS %exit_answer_id              						
2020-01-13 22:00:26 0162 RESIDENT TEMP_Exit
2020-01-13 22:00:26      	6 fields found: Entry Exit Id, Entry Exit Answer Question Id, Entry Exit Answer Virtual Field Name, Is Entry or Exit, Entry Exit Answer Value, %exit_answer_id, 
2020-01-13 22:00:26      0 lines fetched
2020-01-13 22:00:26 0163 DROP TABLE TEMP_Exit
2020-01-13 22:00:26 0165 Entry_Question_List:
2020-01-13 22:00:26 0166 Noconcatenate
2020-01-13 22:00:26 0167 LOAD DISTINCT
2020-01-13 22:00:26 0168 [Entry Exit Answer Virtual Field Name] as virt_name
2020-01-13 22:00:26 0169 RESIDENT EntryExit_Answer
2020-01-13 22:00:26 0170 WHERE [Is Entry or Exit] = 'Entry'
2020-01-13 22:00:26      	1 fields found: virt_name, 
2020-01-13 22:00:26      0 lines fetched
2020-01-13 22:00:26 0172 Exit_Question_List:
2020-01-13 22:00:26 0173 Noconcatenate
2020-01-13 22:00:26 0174 LOAD DISTINCT
2020-01-13 22:00:26 0175 [Entry Exit Answer Virtual Field Name] as virt_name
2020-01-13 22:00:26 0176 RESIDENT EntryExit_Answer
2020-01-13 22:00:26 0177 WHERE [Is Entry or Exit] = 'Exit'
2020-01-13 22:00:26      	1 fields found: virt_name, 
2020-01-13 22:00:26      0 lines fetched
2020-01-13 22:00:26 0179 Client_Entry_Answer:
2020-01-13 22:00:26 0180 Noconcatenate
2020-01-13 22:00:26 0181 Load Distinct
2020-01-13 22:00:26 0182 [Entry Exit Id],
2020-01-13 22:00:26 0183 %entry_answer_id AS %ENTRY_ANSWER_KEY_SEC
2020-01-13 22:00:26 0184 RESIDENT EntryExit_Answer
2020-01-13 22:00:26 0185 WHERE [Is Entry or Exit] = 'Entry'
2020-01-13 22:00:28      	2 fields found: Entry Exit Id, %ENTRY_ANSWER_KEY_SEC, 
2020-01-13 22:00:28      0 lines fetched
2020-01-13 22:00:28 0187 Client_Exit_Answer:
2020-01-13 22:00:28 0188 Noconcatenate
2020-01-13 22:00:28 0189 Load Distinct
2020-01-13 22:00:28 0190 [Entry Exit Id],
2020-01-13 22:00:28 0191 %exit_answer_id AS %EXIT_ANSWER_KEY_SEC
2020-01-13 22:00:28 0192 RESIDENT EntryExit_Answer
2020-01-13 22:00:28 0193 WHERE [Is Entry or Exit] = 'Exit'
2020-01-13 22:00:30      	2 fields found: Entry Exit Id, %EXIT_ANSWER_KEY_SEC, 
2020-01-13 22:00:30      0 lines fetched
2020-01-13 22:00:30 0196 LET NumRows=NoOfRows('Entry_Question_List')
2020-01-13 22:00:30 0197 FOR i=0 to 0-1
2020-01-13 22:00:30 0218 LET NumRows=NoOfRows('Exit_Question_List')
2020-01-13 22:00:30 0219 FOR i=0 to 0-1
2020-01-13 22:00:30 0242 DROP TABLE EntryExit_Answer
2020-01-13 22:00:30 0245 Virtual_Field_Name_TMP:
2020-01-13 22:00:30 0246 SELECT dq.virt_field_name, dq.description
2020-01-13 22:00:30 0247 FROM da_question dq
2020-01-13 22:00:30 0248 INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:00:30 0249 WHERE (dq.active = TRUE)
2020-01-13 22:00:30 0250 AND (dqt.code IN ('lookup','yes_no','date','int','money','textbox','textarea'))
2020-01-13 22:00:30 0251 AND ((dq.reportable_flag = TRUE) OR (dq.ee_reportable_flag = TRUE) OR (dq.service_reportable_flag = TRUE))
2020-01-13 22:00:31      	2 fields found: virt_field_name, description, 
2020-01-13 22:00:31      1,990 lines fetched
2020-01-13 22:00:31 0254 Virtual_Field_Name_Question:
2020-01-13 22:00:31 0255 LOAD
2020-01-13 22:00:31 0256   virt_field_name								AS [Reference - Virtual Field Name],
2020-01-13 22:00:31 0257   description									AS [Reference - Question Description]												
2020-01-13 22:00:31 0258 Resident Virtual_Field_Name_TMP
2020-01-13 22:00:31      	2 fields found: Reference - Virtual Field Name, Reference - Question Description, 
2020-01-13 22:00:31      1,990 lines fetched
2020-01-13 22:00:31 0259 Drop Table Virtual_Field_Name_TMP
2020-01-13 22:00:31 0261 Drop Table Entry_Question_List
2020-01-13 22:00:31 0262 Drop table Exit_Question_List
2020-01-13 22:00:31 0061 DROP TABLE EEs_To_Rebuild_Answers_For
2020-01-13 22:00:31 0003 DROP TABLE EEs_To_Remove_From_Current_QVD
2020-01-13 22:00:31 0006 LET varTempClientEntryQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_ENTRY_ANSWER_V2.qvd'))
2020-01-13 22:00:31 0008 IF 0 THEN
  2020-01-13 22:00:31 0016 Temp_Client_Entry_Answer_Table:
  2020-01-13 22:00:31 0017   Noconcatenate
  2020-01-13 22:00:31 0018   LOAD
  2020-01-13 22:00:31 0019     *
  2020-01-13 22:00:31 0020   RESIDENT Client_Entry_Answer
  2020-01-13 22:00:32      	2 fields found: Entry Exit Id, %ENTRY_ANSWER_KEY_SEC, 
  2020-01-13 22:00:32      0 lines fetched
  2020-01-13 22:00:32 0021 DROP TABLE Client_Entry_Answer
  2020-01-13 22:00:44 0022 END IF
2020-01-13 22:00:44 0024 RENAME TABLE Temp_Client_Entry_Answer_Table to Client_Entry_Answer
2020-01-13 22:00:44 0027 LET varTempClientExitQVDExists = not isnull(QvdCreateTime('lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_EXIT_ANSWER_V2.qvd'))
2020-01-13 22:00:44 0029 IF 0 THEN
  2020-01-13 22:00:44 0037 Temp_Client_Exit_Answer_Table:
  2020-01-13 22:00:44 0038   Noconcatenate
  2020-01-13 22:00:44 0039   LOAD
  2020-01-13 22:00:44 0040     *
  2020-01-13 22:00:44 0041   RESIDENT Client_Exit_Answer
  2020-01-13 22:00:45      	2 fields found: Entry Exit Id, %EXIT_ANSWER_KEY_SEC, 
  2020-01-13 22:00:45      0 lines fetched
  2020-01-13 22:00:45 0042 DROP TABLE Client_Exit_Answer
  2020-01-13 22:00:54 0043 END IF
2020-01-13 22:00:54 0045 RENAME TABLE Temp_Client_Exit_Answer_Table to Client_Exit_Answer
2020-01-13 22:00:54 0053 LET varNewDeltaDate = Date(Today() -1)
2020-01-13 22:00:54 0057 DROP TABLE DeltaDate
2020-01-13 22:00:54 0059 DeltaDate:
2020-01-13 22:00:54 0060 Noconcatenate
2020-01-13 22:00:54 0061 LOAD * INLINE
2020-01-13 22:00:54 0062 [
2020-01-13 22:00:54 0063 DeltaDateVal
2020-01-13 22:00:54 0064 1/11/2020
2020-01-13 22:00:54 0065 ]
2020-01-13 22:00:54      	1 fields found: DeltaDateVal, 
2020-01-13 22:00:54      1 lines fetched
2020-01-13 22:00:54 0068 STORE DeltaDate INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_DELTA_RUNDATE_V2.qvd]
2020-01-13 22:02:50 0069 Drop table DeltaDate
2020-01-13 22:02:50 0072 STORE Client_Entry_Answer INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_ENTRY_ANSWER_V2.qvd]
2020-01-13 22:05:32 0073 STORE Client_Exit_Answer INTO [lib://SPData_Beta/Security/sp5_il_nil_qlik/S_CLIENT_EXIT_ANSWER_V2.qvd]
2020-01-13 22:07:26 0062 DROP_ANSWER_VIEWS:
2020-01-13 22:07:26 0063 SELECT qlik_remove_all_qlik_view()
2020-01-13 22:07:27      	1 fields found: qlik_remove_all_qlik_view, 
2020-01-13 22:07:27      1 lines fetched
2020-01-13 22:07:27 0003 DROP TABLE DROP_ANSWER_VIEWS
2020-01-13 22:07:27 0005 BUILD_ANSWER_VIEWS:
2020-01-13 22:07:27 0006 SELECT qlik_flatten_all_ws_view('1/01/2015')
2020-01-13 22:07:49      	1 fields found: qlik_flatten_all_ws_view, 
2020-01-13 22:07:49      1 lines fetched
2020-01-13 22:07:49 0010 CLIENT_WS_ANSWER_LIST:
2020-01-13 22:07:49 0011 SELECT table_name AS sp_table_name, SUBSTRING(table_name, 6, CHAR_LENGTH(table_name)) AS qlik_table_name 
2020-01-13 22:07:49 0012 , SUBSTRING(table_name, 11, CHAR_LENGTH(table_name)) AS qlik_field_name
2020-01-13 22:07:49 0013 FROM information_schema.tables
2020-01-13 22:07:49 0014 
2020-01-13 22:07:49 0015 WHERE table_name ILIKE 'qlik_wsrv_%'
2020-01-13 22:07:49 0016 ORDER BY table_name
2020-01-13 22:07:49      	3 fields found: sp_table_name, qlik_table_name, qlik_field_name, 
2020-01-13 22:07:49      31 lines fetched
2020-01-13 22:07:49 0018 FACT_Worksheet_Service:
2020-01-13 22:07:49 0019 SELECT NULL AS wsrv_service_id, NULL AS wsrv_client_id WHERE (1 = 0)
2020-01-13 22:07:49      	2 fields found: wsrv_service_id, wsrv_client_id, 
2020-01-13 22:07:49      0 lines fetched
2020-01-13 22:07:49 0021 LET NumRows=NoOfRows('CLIENT_WS_ANSWER_LIST')
2020-01-13 22:07:49 0024 FOR i=0 to 31-1
  2020-01-13 22:07:49 0026 LET varAnswerTableName=Peek('sp_table_name',0,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:49 0027 LET varAnswerQlikName=Peek('qlik_table_name',0,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:49 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',0,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:49 0030 wsrv_additionalnarrativefl:
  2020-01-13 22:07:49 0031   SELECT * FROM qlik_wsrv_additionalnarrativefl
  2020-01-13 22:07:52      	3 fields found: additionalnarrativefl_service_id, additionalnarrativefl_client_id, additionalnarrativefl, 
  2020-01-13 22:07:52      97 lines fetched
  2020-01-13 22:07:52 0033 LET varOrigFieldName = 'additionalnarrativefl' & '_service_id'
  2020-01-13 22:07:52 0034 LET varNewFieldName = UPPER('WSRV_' & 'additionalnarrativefl' & '_service_id')
  2020-01-13 22:07:52 0035 RENAME FIELD additionalnarrativefl_service_id to WSRV_ADDITIONALNARRATIVEFL_SERVICE_ID
  2020-01-13 22:07:52 0037 LET varPkFieldName = 'WSRV_ADDITIONALNARRATIVEFL_SERVICE_ID'
  2020-01-13 22:07:52 0039 LET varOrigFieldName = 'additionalnarrativefl' & '_client_id'
  2020-01-13 22:07:52 0040 LET varNewFieldName = 'wsrv_' & 'additionalnarrativefl' & '_client_id'
  2020-01-13 22:07:52 0041 RENAME FIELD additionalnarrativefl_client_id to wsrv_additionalnarrativefl_client_id
  2020-01-13 22:07:52 0043 LET varClientFieldName = 'wsrv_additionalnarrativefl_client_id'
  2020-01-13 22:07:52 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:07:52 0046   LOAD
  2020-01-13 22:07:52 0047 	  WSRV_ADDITIONALNARRATIVEFL_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:07:52 0048       
  2020-01-13 22:07:52 0049       additionalnarrativefl
  2020-01-13 22:07:52 0050   RESIDENT wsrv_additionalnarrativefl
  2020-01-13 22:07:52      	2 fields found: Need Service Id, additionalnarrativefl, 
  2020-01-13 22:07:52      97 lines fetched
  2020-01-13 22:07:52      Joining/Keeping
  2020-01-13 22:07:52 0052 DROP TABLE wsrv_additionalnarrativefl
  2020-01-13 22:07:52 0054 LET varStepName='STEP_' & 0 & '_of_' & 31
  2020-01-13 22:07:52 0055 STEP_0_of_31: select 1
  2020-01-13 22:07:52      	1 fields found: ?column?, 
  2020-01-13 22:07:52      1 lines fetched
  2020-01-13 22:07:52 0056 DROP TABLE STEP_0_of_31
2020-01-13 22:07:52 0058 NEXT
  2020-01-13 22:07:52 0026 LET varAnswerTableName=Peek('sp_table_name',1,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:52 0027 LET varAnswerQlikName=Peek('qlik_table_name',1,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:52 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',1,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:52 0030 wsrv_anyspecialhousingacco:
  2020-01-13 22:07:52 0031   SELECT * FROM qlik_wsrv_anyspecialhousingacco
  2020-01-13 22:07:55      	3 fields found: anyspecialhousingacco_service_id, anyspecialhousingacco_client_id, anyspecialhousingacco, 
  2020-01-13 22:07:55      64 lines fetched
  2020-01-13 22:07:55 0033 LET varOrigFieldName = 'anyspecialhousingacco' & '_service_id'
  2020-01-13 22:07:55 0034 LET varNewFieldName = UPPER('WSRV_' & 'anyspecialhousingacco' & '_service_id')
  2020-01-13 22:07:55 0035 RENAME FIELD anyspecialhousingacco_service_id to WSRV_ANYSPECIALHOUSINGACCO_SERVICE_ID
  2020-01-13 22:07:55 0037 LET varPkFieldName = 'WSRV_ANYSPECIALHOUSINGACCO_SERVICE_ID'
  2020-01-13 22:07:55 0039 LET varOrigFieldName = 'anyspecialhousingacco' & '_client_id'
  2020-01-13 22:07:55 0040 LET varNewFieldName = 'wsrv_' & 'anyspecialhousingacco' & '_client_id'
  2020-01-13 22:07:55 0041 RENAME FIELD anyspecialhousingacco_client_id to wsrv_anyspecialhousingacco_client_id
  2020-01-13 22:07:55 0043 LET varClientFieldName = 'wsrv_anyspecialhousingacco_client_id'
  2020-01-13 22:07:55 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:07:55 0046   LOAD
  2020-01-13 22:07:55 0047 	  WSRV_ANYSPECIALHOUSINGACCO_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:07:55 0048       
  2020-01-13 22:07:55 0049       anyspecialhousingacco
  2020-01-13 22:07:55 0050   RESIDENT wsrv_anyspecialhousingacco
  2020-01-13 22:07:55      	2 fields found: Need Service Id, anyspecialhousingacco, 
  2020-01-13 22:07:55      64 lines fetched
  2020-01-13 22:07:55      Joining/Keeping
  2020-01-13 22:07:55 0052 DROP TABLE wsrv_anyspecialhousingacco
  2020-01-13 22:07:55 0054 LET varStepName='STEP_' & 1 & '_of_' & 31
  2020-01-13 22:07:55 0055 STEP_1_of_31: select 1
  2020-01-13 22:07:56      	1 fields found: ?column?, 
  2020-01-13 22:07:56      1 lines fetched
  2020-01-13 22:07:56 0056 DROP TABLE STEP_1_of_31
2020-01-13 22:07:56 0058 NEXT
  2020-01-13 22:07:56 0026 LET varAnswerTableName=Peek('sp_table_name',2,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:56 0027 LET varAnswerQlikName=Peek('qlik_table_name',2,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:56 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',2,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:56 0030 wsrv_applicantdoesnothaved:
  2020-01-13 22:07:56 0031   SELECT * FROM qlik_wsrv_applicantdoesnothaved
  2020-01-13 22:07:59      	3 fields found: applicantdoesnothaved_service_id, applicantdoesnothaved_client_id, applicantdoesnothaved, 
  2020-01-13 22:07:59      101 lines fetched
  2020-01-13 22:07:59 0033 LET varOrigFieldName = 'applicantdoesnothaved' & '_service_id'
  2020-01-13 22:07:59 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantdoesnothaved' & '_service_id')
  2020-01-13 22:07:59 0035 RENAME FIELD applicantdoesnothaved_service_id to WSRV_APPLICANTDOESNOTHAVED_SERVICE_ID
  2020-01-13 22:07:59 0037 LET varPkFieldName = 'WSRV_APPLICANTDOESNOTHAVED_SERVICE_ID'
  2020-01-13 22:07:59 0039 LET varOrigFieldName = 'applicantdoesnothaved' & '_client_id'
  2020-01-13 22:07:59 0040 LET varNewFieldName = 'wsrv_' & 'applicantdoesnothaved' & '_client_id'
  2020-01-13 22:07:59 0041 RENAME FIELD applicantdoesnothaved_client_id to wsrv_applicantdoesnothaved_client_id
  2020-01-13 22:07:59 0043 LET varClientFieldName = 'wsrv_applicantdoesnothaved_client_id'
  2020-01-13 22:07:59 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:07:59 0046   LOAD
  2020-01-13 22:07:59 0047 	  WSRV_APPLICANTDOESNOTHAVED_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:07:59 0048       
  2020-01-13 22:07:59 0049       applicantdoesnothaved
  2020-01-13 22:07:59 0050   RESIDENT wsrv_applicantdoesnothaved
  2020-01-13 22:07:59      	2 fields found: Need Service Id, applicantdoesnothaved, 
  2020-01-13 22:07:59      101 lines fetched
  2020-01-13 22:07:59      Joining/Keeping
  2020-01-13 22:07:59 0052 DROP TABLE wsrv_applicantdoesnothaved
  2020-01-13 22:07:59 0054 LET varStepName='STEP_' & 2 & '_of_' & 31
  2020-01-13 22:07:59 0055 STEP_2_of_31: select 1
  2020-01-13 22:07:59      	1 fields found: ?column?, 
  2020-01-13 22:07:59      1 lines fetched
  2020-01-13 22:07:59 0056 DROP TABLE STEP_2_of_31
2020-01-13 22:07:59 0058 NEXT
  2020-01-13 22:07:59 0026 LET varAnswerTableName=Peek('sp_table_name',3,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:59 0027 LET varAnswerQlikName=Peek('qlik_table_name',3,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:59 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',3,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:07:59 0030 wsrv_applicantisnotalifeti:
  2020-01-13 22:07:59 0031   SELECT * FROM qlik_wsrv_applicantisnotalifeti
  2020-01-13 22:08:02      	3 fields found: applicantisnotalifeti_service_id, applicantisnotalifeti_client_id, applicantisnotalifeti, 
  2020-01-13 22:08:02      104 lines fetched
  2020-01-13 22:08:02 0033 LET varOrigFieldName = 'applicantisnotalifeti' & '_service_id'
  2020-01-13 22:08:02 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantisnotalifeti' & '_service_id')
  2020-01-13 22:08:02 0035 RENAME FIELD applicantisnotalifeti_service_id to WSRV_APPLICANTISNOTALIFETI_SERVICE_ID
  2020-01-13 22:08:02 0037 LET varPkFieldName = 'WSRV_APPLICANTISNOTALIFETI_SERVICE_ID'
  2020-01-13 22:08:02 0039 LET varOrigFieldName = 'applicantisnotalifeti' & '_client_id'
  2020-01-13 22:08:02 0040 LET varNewFieldName = 'wsrv_' & 'applicantisnotalifeti' & '_client_id'
  2020-01-13 22:08:02 0041 RENAME FIELD applicantisnotalifeti_client_id to wsrv_applicantisnotalifeti_client_id
  2020-01-13 22:08:02 0043 LET varClientFieldName = 'wsrv_applicantisnotalifeti_client_id'
  2020-01-13 22:08:02 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:02 0046   LOAD
  2020-01-13 22:08:02 0047 	  WSRV_APPLICANTISNOTALIFETI_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:02 0048       
  2020-01-13 22:08:02 0049       applicantisnotalifeti
  2020-01-13 22:08:02 0050   RESIDENT wsrv_applicantisnotalifeti
  2020-01-13 22:08:02      	2 fields found: Need Service Id, applicantisnotalifeti, 
  2020-01-13 22:08:02      104 lines fetched
  2020-01-13 22:08:02      Joining/Keeping
  2020-01-13 22:08:02 0052 DROP TABLE wsrv_applicantisnotalifeti
  2020-01-13 22:08:02 0054 LET varStepName='STEP_' & 3 & '_of_' & 31
  2020-01-13 22:08:02 0055 STEP_3_of_31: select 1
  2020-01-13 22:08:02      	1 fields found: ?column?, 
  2020-01-13 22:08:02      1 lines fetched
  2020-01-13 22:08:02 0056 DROP TABLE STEP_3_of_31
2020-01-13 22:08:02 0058 NEXT
  2020-01-13 22:08:02 0026 LET varAnswerTableName=Peek('sp_table_name',4,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:02 0027 LET varAnswerQlikName=Peek('qlik_table_name',4,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:02 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',4,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:02 0030 wsrv_applicantscity:
  2020-01-13 22:08:02 0031   SELECT * FROM qlik_wsrv_applicantscity
  2020-01-13 22:08:05      	3 fields found: applicantscity_service_id, applicantscity_client_id, applicantscity, 
  2020-01-13 22:08:05      104 lines fetched
  2020-01-13 22:08:05 0033 LET varOrigFieldName = 'applicantscity' & '_service_id'
  2020-01-13 22:08:05 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantscity' & '_service_id')
  2020-01-13 22:08:05 0035 RENAME FIELD applicantscity_service_id to WSRV_APPLICANTSCITY_SERVICE_ID
  2020-01-13 22:08:05 0037 LET varPkFieldName = 'WSRV_APPLICANTSCITY_SERVICE_ID'
  2020-01-13 22:08:05 0039 LET varOrigFieldName = 'applicantscity' & '_client_id'
  2020-01-13 22:08:05 0040 LET varNewFieldName = 'wsrv_' & 'applicantscity' & '_client_id'
  2020-01-13 22:08:05 0041 RENAME FIELD applicantscity_client_id to wsrv_applicantscity_client_id
  2020-01-13 22:08:05 0043 LET varClientFieldName = 'wsrv_applicantscity_client_id'
  2020-01-13 22:08:05 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:05 0046   LOAD
  2020-01-13 22:08:05 0047 	  WSRV_APPLICANTSCITY_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:05 0048       
  2020-01-13 22:08:05 0049       applicantscity
  2020-01-13 22:08:05 0050   RESIDENT wsrv_applicantscity
  2020-01-13 22:08:05      	2 fields found: Need Service Id, applicantscity, 
  2020-01-13 22:08:05      104 lines fetched
  2020-01-13 22:08:05      Joining/Keeping
  2020-01-13 22:08:05 0052 DROP TABLE wsrv_applicantscity
  2020-01-13 22:08:05 0054 LET varStepName='STEP_' & 4 & '_of_' & 31
  2020-01-13 22:08:05 0055 STEP_4_of_31: select 1
  2020-01-13 22:08:05      	1 fields found: ?column?, 
  2020-01-13 22:08:05      1 lines fetched
  2020-01-13 22:08:05 0056 DROP TABLE STEP_4_of_31
2020-01-13 22:08:05 0058 NEXT
  2020-01-13 22:08:05 0026 LET varAnswerTableName=Peek('sp_table_name',5,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:05 0027 LET varAnswerQlikName=Peek('qlik_table_name',5,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:05 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',5,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:05 0030 wsrv_applicantsemailaddress:
  2020-01-13 22:08:05 0031   SELECT * FROM qlik_wsrv_applicantsemailaddress
  2020-01-13 22:08:08      	3 fields found: applicantsemailaddress_service_id, applicantsemailaddress_client_id, applicantsemailaddress, 
  2020-01-13 22:08:08      57 lines fetched
  2020-01-13 22:08:08 0033 LET varOrigFieldName = 'applicantsemailaddress' & '_service_id'
  2020-01-13 22:08:08 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantsemailaddress' & '_service_id')
  2020-01-13 22:08:08 0035 RENAME FIELD applicantsemailaddress_service_id to WSRV_APPLICANTSEMAILADDRESS_SERVICE_ID
  2020-01-13 22:08:08 0037 LET varPkFieldName = 'WSRV_APPLICANTSEMAILADDRESS_SERVICE_ID'
  2020-01-13 22:08:08 0039 LET varOrigFieldName = 'applicantsemailaddress' & '_client_id'
  2020-01-13 22:08:08 0040 LET varNewFieldName = 'wsrv_' & 'applicantsemailaddress' & '_client_id'
  2020-01-13 22:08:08 0041 RENAME FIELD applicantsemailaddress_client_id to wsrv_applicantsemailaddress_client_id
  2020-01-13 22:08:08 0043 LET varClientFieldName = 'wsrv_applicantsemailaddress_client_id'
  2020-01-13 22:08:08 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:08 0046   LOAD
  2020-01-13 22:08:08 0047 	  WSRV_APPLICANTSEMAILADDRESS_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:08 0048       
  2020-01-13 22:08:08 0049       applicantsemailaddress
  2020-01-13 22:08:08 0050   RESIDENT wsrv_applicantsemailaddress
  2020-01-13 22:08:08      	2 fields found: Need Service Id, applicantsemailaddress, 
  2020-01-13 22:08:08      57 lines fetched
  2020-01-13 22:08:08      Joining/Keeping
  2020-01-13 22:08:08 0052 DROP TABLE wsrv_applicantsemailaddress
  2020-01-13 22:08:08 0054 LET varStepName='STEP_' & 5 & '_of_' & 31
  2020-01-13 22:08:08 0055 STEP_5_of_31: select 1
  2020-01-13 22:08:09      	1 fields found: ?column?, 
  2020-01-13 22:08:09      1 lines fetched
  2020-01-13 22:08:09 0056 DROP TABLE STEP_5_of_31
2020-01-13 22:08:09 0058 NEXT
  2020-01-13 22:08:09 0026 LET varAnswerTableName=Peek('sp_table_name',6,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:09 0027 LET varAnswerQlikName=Peek('qlik_table_name',6,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:09 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',6,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:09 0030 wsrv_applicantsphonenumber:
  2020-01-13 22:08:09 0031   SELECT * FROM qlik_wsrv_applicantsphonenumber
  2020-01-13 22:08:11      	3 fields found: applicantsphonenumber_service_id, applicantsphonenumber_client_id, applicantsphonenumber, 
  2020-01-13 22:08:11      102 lines fetched
  2020-01-13 22:08:11 0033 LET varOrigFieldName = 'applicantsphonenumber' & '_service_id'
  2020-01-13 22:08:11 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantsphonenumber' & '_service_id')
  2020-01-13 22:08:11 0035 RENAME FIELD applicantsphonenumber_service_id to WSRV_APPLICANTSPHONENUMBER_SERVICE_ID
  2020-01-13 22:08:11 0037 LET varPkFieldName = 'WSRV_APPLICANTSPHONENUMBER_SERVICE_ID'
  2020-01-13 22:08:11 0039 LET varOrigFieldName = 'applicantsphonenumber' & '_client_id'
  2020-01-13 22:08:11 0040 LET varNewFieldName = 'wsrv_' & 'applicantsphonenumber' & '_client_id'
  2020-01-13 22:08:11 0041 RENAME FIELD applicantsphonenumber_client_id to wsrv_applicantsphonenumber_client_id
  2020-01-13 22:08:11 0043 LET varClientFieldName = 'wsrv_applicantsphonenumber_client_id'
  2020-01-13 22:08:11 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:11 0046   LOAD
  2020-01-13 22:08:11 0047 	  WSRV_APPLICANTSPHONENUMBER_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:11 0048       
  2020-01-13 22:08:11 0049       applicantsphonenumber
  2020-01-13 22:08:11 0050   RESIDENT wsrv_applicantsphonenumber
  2020-01-13 22:08:12      	2 fields found: Need Service Id, applicantsphonenumber, 
  2020-01-13 22:08:12      102 lines fetched
  2020-01-13 22:08:12      Joining/Keeping
  2020-01-13 22:08:12 0052 DROP TABLE wsrv_applicantsphonenumber
  2020-01-13 22:08:12 0054 LET varStepName='STEP_' & 6 & '_of_' & 31
  2020-01-13 22:08:12 0055 STEP_6_of_31: select 1
  2020-01-13 22:08:12      	1 fields found: ?column?, 
  2020-01-13 22:08:12      1 lines fetched
  2020-01-13 22:08:12 0056 DROP TABLE STEP_6_of_31
2020-01-13 22:08:12 0058 NEXT
  2020-01-13 22:08:12 0026 LET varAnswerTableName=Peek('sp_table_name',7,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:12 0027 LET varAnswerQlikName=Peek('qlik_table_name',7,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:12 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',7,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:12 0030 wsrv_applicantsrecenthealt:
  2020-01-13 22:08:12 0031   SELECT * FROM qlik_wsrv_applicantsrecenthealt
  2020-01-13 22:08:15      	3 fields found: applicantsrecenthealt_service_id, applicantsrecenthealt_client_id, applicantsrecenthealt, 
  2020-01-13 22:08:15      101 lines fetched
  2020-01-13 22:08:15 0033 LET varOrigFieldName = 'applicantsrecenthealt' & '_service_id'
  2020-01-13 22:08:15 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantsrecenthealt' & '_service_id')
  2020-01-13 22:08:15 0035 RENAME FIELD applicantsrecenthealt_service_id to WSRV_APPLICANTSRECENTHEALT_SERVICE_ID
  2020-01-13 22:08:15 0037 LET varPkFieldName = 'WSRV_APPLICANTSRECENTHEALT_SERVICE_ID'
  2020-01-13 22:08:15 0039 LET varOrigFieldName = 'applicantsrecenthealt' & '_client_id'
  2020-01-13 22:08:15 0040 LET varNewFieldName = 'wsrv_' & 'applicantsrecenthealt' & '_client_id'
  2020-01-13 22:08:15 0041 RENAME FIELD applicantsrecenthealt_client_id to wsrv_applicantsrecenthealt_client_id
  2020-01-13 22:08:15 0043 LET varClientFieldName = 'wsrv_applicantsrecenthealt_client_id'
  2020-01-13 22:08:15 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:15 0046   LOAD
  2020-01-13 22:08:15 0047 	  WSRV_APPLICANTSRECENTHEALT_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:15 0048       
  2020-01-13 22:08:15 0049       applicantsrecenthealt
  2020-01-13 22:08:15 0050   RESIDENT wsrv_applicantsrecenthealt
  2020-01-13 22:08:15      	2 fields found: Need Service Id, applicantsrecenthealt, 
  2020-01-13 22:08:15      101 lines fetched
  2020-01-13 22:08:15      Joining/Keeping
  2020-01-13 22:08:15 0052 DROP TABLE wsrv_applicantsrecenthealt
  2020-01-13 22:08:15 0054 LET varStepName='STEP_' & 7 & '_of_' & 31
  2020-01-13 22:08:15 0055 STEP_7_of_31: select 1
  2020-01-13 22:08:15      	1 fields found: ?column?, 
  2020-01-13 22:08:15      1 lines fetched
  2020-01-13 22:08:15 0056 DROP TABLE STEP_7_of_31
2020-01-13 22:08:15 0058 NEXT
  2020-01-13 22:08:15 0026 LET varAnswerTableName=Peek('sp_table_name',8,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:15 0027 LET varAnswerQlikName=Peek('qlik_table_name',8,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:15 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',8,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:15 0030 wsrv_applicantsstreetaddre:
  2020-01-13 22:08:15 0031   SELECT * FROM qlik_wsrv_applicantsstreetaddre
  2020-01-13 22:08:18      	3 fields found: applicantsstreetaddre_service_id, applicantsstreetaddre_client_id, applicantsstreetaddre, 
  2020-01-13 22:08:18      104 lines fetched
  2020-01-13 22:08:18 0033 LET varOrigFieldName = 'applicantsstreetaddre' & '_service_id'
  2020-01-13 22:08:18 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantsstreetaddre' & '_service_id')
  2020-01-13 22:08:18 0035 RENAME FIELD applicantsstreetaddre_service_id to WSRV_APPLICANTSSTREETADDRE_SERVICE_ID
  2020-01-13 22:08:18 0037 LET varPkFieldName = 'WSRV_APPLICANTSSTREETADDRE_SERVICE_ID'
  2020-01-13 22:08:18 0039 LET varOrigFieldName = 'applicantsstreetaddre' & '_client_id'
  2020-01-13 22:08:18 0040 LET varNewFieldName = 'wsrv_' & 'applicantsstreetaddre' & '_client_id'
  2020-01-13 22:08:18 0041 RENAME FIELD applicantsstreetaddre_client_id to wsrv_applicantsstreetaddre_client_id
  2020-01-13 22:08:18 0043 LET varClientFieldName = 'wsrv_applicantsstreetaddre_client_id'
  2020-01-13 22:08:18 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:18 0046   LOAD
  2020-01-13 22:08:18 0047 	  WSRV_APPLICANTSSTREETADDRE_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:18 0048       
  2020-01-13 22:08:18 0049       applicantsstreetaddre
  2020-01-13 22:08:18 0050   RESIDENT wsrv_applicantsstreetaddre
  2020-01-13 22:08:18      	2 fields found: Need Service Id, applicantsstreetaddre, 
  2020-01-13 22:08:18      104 lines fetched
  2020-01-13 22:08:18      Joining/Keeping
  2020-01-13 22:08:18 0052 DROP TABLE wsrv_applicantsstreetaddre
  2020-01-13 22:08:18 0054 LET varStepName='STEP_' & 8 & '_of_' & 31
  2020-01-13 22:08:18 0055 STEP_8_of_31: select 1
  2020-01-13 22:08:18      	1 fields found: ?column?, 
  2020-01-13 22:08:18      1 lines fetched
  2020-01-13 22:08:18 0056 DROP TABLE STEP_8_of_31
2020-01-13 22:08:18 0058 NEXT
  2020-01-13 22:08:18 0026 LET varAnswerTableName=Peek('sp_table_name',9,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:18 0027 LET varAnswerQlikName=Peek('qlik_table_name',9,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:18 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',9,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:18 0030 wsrv_applicantszipcode:
  2020-01-13 22:08:18 0031   SELECT * FROM qlik_wsrv_applicantszipcode
  2020-01-13 22:08:21      	3 fields found: applicantszipcode_service_id, applicantszipcode_client_id, applicantszipcode, 
  2020-01-13 22:08:21      104 lines fetched
  2020-01-13 22:08:21 0033 LET varOrigFieldName = 'applicantszipcode' & '_service_id'
  2020-01-13 22:08:21 0034 LET varNewFieldName = UPPER('WSRV_' & 'applicantszipcode' & '_service_id')
  2020-01-13 22:08:21 0035 RENAME FIELD applicantszipcode_service_id to WSRV_APPLICANTSZIPCODE_SERVICE_ID
  2020-01-13 22:08:21 0037 LET varPkFieldName = 'WSRV_APPLICANTSZIPCODE_SERVICE_ID'
  2020-01-13 22:08:21 0039 LET varOrigFieldName = 'applicantszipcode' & '_client_id'
  2020-01-13 22:08:21 0040 LET varNewFieldName = 'wsrv_' & 'applicantszipcode' & '_client_id'
  2020-01-13 22:08:21 0041 RENAME FIELD applicantszipcode_client_id to wsrv_applicantszipcode_client_id
  2020-01-13 22:08:21 0043 LET varClientFieldName = 'wsrv_applicantszipcode_client_id'
  2020-01-13 22:08:21 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:21 0046   LOAD
  2020-01-13 22:08:21 0047 	  WSRV_APPLICANTSZIPCODE_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:21 0048       
  2020-01-13 22:08:21 0049       applicantszipcode
  2020-01-13 22:08:21 0050   RESIDENT wsrv_applicantszipcode
  2020-01-13 22:08:21      	2 fields found: Need Service Id, applicantszipcode, 
  2020-01-13 22:08:21      104 lines fetched
  2020-01-13 22:08:21      Joining/Keeping
  2020-01-13 22:08:21 0052 DROP TABLE wsrv_applicantszipcode
  2020-01-13 22:08:21 0054 LET varStepName='STEP_' & 9 & '_of_' & 31
  2020-01-13 22:08:21 0055 STEP_9_of_31: select 1
  2020-01-13 22:08:21      	1 fields found: ?column?, 
  2020-01-13 22:08:21      1 lines fetched
  2020-01-13 22:08:21 0056 DROP TABLE STEP_9_of_31
2020-01-13 22:08:21 0058 NEXT
  2020-01-13 22:08:21 0026 LET varAnswerTableName=Peek('sp_table_name',10,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:21 0027 LET varAnswerQlikName=Peek('qlik_table_name',10,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:21 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',10,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:21 0030 wsrv_communitysupports:
  2020-01-13 22:08:21 0031   SELECT * FROM qlik_wsrv_communitysupports
  2020-01-13 22:08:24      	3 fields found: communitysupports_service_id, communitysupports_client_id, communitysupports, 
  2020-01-13 22:08:24      98 lines fetched
  2020-01-13 22:08:24 0033 LET varOrigFieldName = 'communitysupports' & '_service_id'
  2020-01-13 22:08:24 0034 LET varNewFieldName = UPPER('WSRV_' & 'communitysupports' & '_service_id')
  2020-01-13 22:08:24 0035 RENAME FIELD communitysupports_service_id to WSRV_COMMUNITYSUPPORTS_SERVICE_ID
  2020-01-13 22:08:24 0037 LET varPkFieldName = 'WSRV_COMMUNITYSUPPORTS_SERVICE_ID'
  2020-01-13 22:08:24 0039 LET varOrigFieldName = 'communitysupports' & '_client_id'
  2020-01-13 22:08:24 0040 LET varNewFieldName = 'wsrv_' & 'communitysupports' & '_client_id'
  2020-01-13 22:08:24 0041 RENAME FIELD communitysupports_client_id to wsrv_communitysupports_client_id
  2020-01-13 22:08:24 0043 LET varClientFieldName = 'wsrv_communitysupports_client_id'
  2020-01-13 22:08:24 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:24 0046   LOAD
  2020-01-13 22:08:24 0047 	  WSRV_COMMUNITYSUPPORTS_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:24 0048       
  2020-01-13 22:08:24 0049       communitysupports
  2020-01-13 22:08:24 0050   RESIDENT wsrv_communitysupports
  2020-01-13 22:08:24      	2 fields found: Need Service Id, communitysupports, 
  2020-01-13 22:08:24      98 lines fetched
  2020-01-13 22:08:24      Joining/Keeping
  2020-01-13 22:08:24 0052 DROP TABLE wsrv_communitysupports
  2020-01-13 22:08:24 0054 LET varStepName='STEP_' & 10 & '_of_' & 31
  2020-01-13 22:08:24 0055 STEP_10_of_31: select 1
  2020-01-13 22:08:25      	1 fields found: ?column?, 
  2020-01-13 22:08:25      1 lines fetched
  2020-01-13 22:08:25 0056 DROP TABLE STEP_10_of_31
2020-01-13 22:08:25 0058 NEXT
  2020-01-13 22:08:25 0026 LET varAnswerTableName=Peek('sp_table_name',11,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:25 0027 LET varAnswerQlikName=Peek('qlik_table_name',11,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:25 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',11,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:25 0030 wsrv_datemovedintopshprogr:
  2020-01-13 22:08:25 0031   SELECT * FROM qlik_wsrv_datemovedintopshprogr
  2020-01-13 22:08:27      	3 fields found: datemovedintopshprogr_service_id, datemovedintopshprogr_client_id, datemovedintopshprogr, 
  2020-01-13 22:08:27      45 lines fetched
  2020-01-13 22:08:27 0033 LET varOrigFieldName = 'datemovedintopshprogr' & '_service_id'
  2020-01-13 22:08:27 0034 LET varNewFieldName = UPPER('WSRV_' & 'datemovedintopshprogr' & '_service_id')
  2020-01-13 22:08:27 0035 RENAME FIELD datemovedintopshprogr_service_id to WSRV_DATEMOVEDINTOPSHPROGR_SERVICE_ID
  2020-01-13 22:08:27 0037 LET varPkFieldName = 'WSRV_DATEMOVEDINTOPSHPROGR_SERVICE_ID'
  2020-01-13 22:08:27 0039 LET varOrigFieldName = 'datemovedintopshprogr' & '_client_id'
  2020-01-13 22:08:27 0040 LET varNewFieldName = 'wsrv_' & 'datemovedintopshprogr' & '_client_id'
  2020-01-13 22:08:27 0041 RENAME FIELD datemovedintopshprogr_client_id to wsrv_datemovedintopshprogr_client_id
  2020-01-13 22:08:27 0043 LET varClientFieldName = 'wsrv_datemovedintopshprogr_client_id'
  2020-01-13 22:08:27 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:27 0046   LOAD
  2020-01-13 22:08:27 0047 	  WSRV_DATEMOVEDINTOPSHPROGR_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:27 0048       
  2020-01-13 22:08:27 0049       datemovedintopshprogr
  2020-01-13 22:08:27 0050   RESIDENT wsrv_datemovedintopshprogr
  2020-01-13 22:08:27      	2 fields found: Need Service Id, datemovedintopshprogr, 
  2020-01-13 22:08:27      45 lines fetched
  2020-01-13 22:08:27      Joining/Keeping
  2020-01-13 22:08:28 0052 DROP TABLE wsrv_datemovedintopshprogr
  2020-01-13 22:08:28 0054 LET varStepName='STEP_' & 11 & '_of_' & 31
  2020-01-13 22:08:28 0055 STEP_11_of_31: select 1
  2020-01-13 22:08:28      	1 fields found: ?column?, 
  2020-01-13 22:08:28      1 lines fetched
  2020-01-13 22:08:28 0056 DROP TABLE STEP_11_of_31
2020-01-13 22:08:28 0058 NEXT
  2020-01-13 22:08:28 0026 LET varAnswerTableName=Peek('sp_table_name',12,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:28 0027 LET varAnswerQlikName=Peek('qlik_table_name',12,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:28 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',12,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:28 0030 wsrv_describeapplicantspsh:
  2020-01-13 22:08:28 0031   SELECT * FROM qlik_wsrv_describeapplicantspsh
  2020-01-13 22:08:30      	3 fields found: describeapplicantspsh_service_id, describeapplicantspsh_client_id, describeapplicantspsh, 
  2020-01-13 22:08:30      100 lines fetched
  2020-01-13 22:08:30 0033 LET varOrigFieldName = 'describeapplicantspsh' & '_service_id'
  2020-01-13 22:08:30 0034 LET varNewFieldName = UPPER('WSRV_' & 'describeapplicantspsh' & '_service_id')
  2020-01-13 22:08:30 0035 RENAME FIELD describeapplicantspsh_service_id to WSRV_DESCRIBEAPPLICANTSPSH_SERVICE_ID
  2020-01-13 22:08:30 0037 LET varPkFieldName = 'WSRV_DESCRIBEAPPLICANTSPSH_SERVICE_ID'
  2020-01-13 22:08:30 0039 LET varOrigFieldName = 'describeapplicantspsh' & '_client_id'
  2020-01-13 22:08:30 0040 LET varNewFieldName = 'wsrv_' & 'describeapplicantspsh' & '_client_id'
  2020-01-13 22:08:30 0041 RENAME FIELD describeapplicantspsh_client_id to wsrv_describeapplicantspsh_client_id
  2020-01-13 22:08:30 0043 LET varClientFieldName = 'wsrv_describeapplicantspsh_client_id'
  2020-01-13 22:08:30 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:30 0046   LOAD
  2020-01-13 22:08:30 0047 	  WSRV_DESCRIBEAPPLICANTSPSH_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:30 0048       
  2020-01-13 22:08:30 0049       describeapplicantspsh
  2020-01-13 22:08:30 0050   RESIDENT wsrv_describeapplicantspsh
  2020-01-13 22:08:31      	2 fields found: Need Service Id, describeapplicantspsh, 
  2020-01-13 22:08:31      100 lines fetched
  2020-01-13 22:08:31      Joining/Keeping
  2020-01-13 22:08:31 0052 DROP TABLE wsrv_describeapplicantspsh
  2020-01-13 22:08:31 0054 LET varStepName='STEP_' & 12 & '_of_' & 31
  2020-01-13 22:08:31 0055 STEP_12_of_31: select 1
  2020-01-13 22:08:31      	1 fields found: ?column?, 
  2020-01-13 22:08:31      1 lines fetched
  2020-01-13 22:08:31 0056 DROP TABLE STEP_12_of_31
2020-01-13 22:08:31 0058 NEXT
  2020-01-13 22:08:31 0026 LET varAnswerTableName=Peek('sp_table_name',13,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:31 0027 LET varAnswerQlikName=Peek('qlik_table_name',13,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:31 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',13,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:31 0030 wsrv_describecriminalappeal:
  2020-01-13 22:08:31 0031   SELECT * FROM qlik_wsrv_describecriminalappeal
  2020-01-13 22:08:34      	3 fields found: describecriminalappeal_service_id, describecriminalappeal_client_id, describecriminalappeal, 
  2020-01-13 22:08:34      17 lines fetched
  2020-01-13 22:08:34 0033 LET varOrigFieldName = 'describecriminalappeal' & '_service_id'
  2020-01-13 22:08:34 0034 LET varNewFieldName = UPPER('WSRV_' & 'describecriminalappeal' & '_service_id')
  2020-01-13 22:08:34 0035 RENAME FIELD describecriminalappeal_service_id to WSRV_DESCRIBECRIMINALAPPEAL_SERVICE_ID
  2020-01-13 22:08:34 0037 LET varPkFieldName = 'WSRV_DESCRIBECRIMINALAPPEAL_SERVICE_ID'
  2020-01-13 22:08:34 0039 LET varOrigFieldName = 'describecriminalappeal' & '_client_id'
  2020-01-13 22:08:34 0040 LET varNewFieldName = 'wsrv_' & 'describecriminalappeal' & '_client_id'
  2020-01-13 22:08:34 0041 RENAME FIELD describecriminalappeal_client_id to wsrv_describecriminalappeal_client_id
  2020-01-13 22:08:34 0043 LET varClientFieldName = 'wsrv_describecriminalappeal_client_id'
  2020-01-13 22:08:34 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:34 0046   LOAD
  2020-01-13 22:08:34 0047 	  WSRV_DESCRIBECRIMINALAPPEAL_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:34 0048       
  2020-01-13 22:08:34 0049       describecriminalappeal
  2020-01-13 22:08:34 0050   RESIDENT wsrv_describecriminalappeal
  2020-01-13 22:08:34      	2 fields found: Need Service Id, describecriminalappeal, 
  2020-01-13 22:08:34      17 lines fetched
  2020-01-13 22:08:34      Joining/Keeping
  2020-01-13 22:08:34 0052 DROP TABLE wsrv_describecriminalappeal
  2020-01-13 22:08:34 0054 LET varStepName='STEP_' & 13 & '_of_' & 31
  2020-01-13 22:08:34 0055 STEP_13_of_31: select 1
  2020-01-13 22:08:34      	1 fields found: ?column?, 
  2020-01-13 22:08:34      1 lines fetched
  2020-01-13 22:08:34 0056 DROP TABLE STEP_13_of_31
2020-01-13 22:08:34 0058 NEXT
  2020-01-13 22:08:34 0026 LET varAnswerTableName=Peek('sp_table_name',14,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:34 0027 LET varAnswerQlikName=Peek('qlik_table_name',14,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:34 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',14,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:34 0030 wsrv_doesapplicantcurrentl:
  2020-01-13 22:08:34 0031   SELECT * FROM qlik_wsrv_doesapplicantcurrentl
  2020-01-13 22:08:37      	3 fields found: doesapplicantcurrentl_service_id, doesapplicantcurrentl_client_id, doesapplicantcurrentl, 
  2020-01-13 22:08:37      103 lines fetched
  2020-01-13 22:08:37 0033 LET varOrigFieldName = 'doesapplicantcurrentl' & '_service_id'
  2020-01-13 22:08:37 0034 LET varNewFieldName = UPPER('WSRV_' & 'doesapplicantcurrentl' & '_service_id')
  2020-01-13 22:08:37 0035 RENAME FIELD doesapplicantcurrentl_service_id to WSRV_DOESAPPLICANTCURRENTL_SERVICE_ID
  2020-01-13 22:08:37 0037 LET varPkFieldName = 'WSRV_DOESAPPLICANTCURRENTL_SERVICE_ID'
  2020-01-13 22:08:37 0039 LET varOrigFieldName = 'doesapplicantcurrentl' & '_client_id'
  2020-01-13 22:08:37 0040 LET varNewFieldName = 'wsrv_' & 'doesapplicantcurrentl' & '_client_id'
  2020-01-13 22:08:37 0041 RENAME FIELD doesapplicantcurrentl_client_id to wsrv_doesapplicantcurrentl_client_id
  2020-01-13 22:08:37 0043 LET varClientFieldName = 'wsrv_doesapplicantcurrentl_client_id'
  2020-01-13 22:08:37 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:37 0046   LOAD
  2020-01-13 22:08:37 0047 	  WSRV_DOESAPPLICANTCURRENTL_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:37 0048       
  2020-01-13 22:08:37 0049       doesapplicantcurrentl
  2020-01-13 22:08:37 0050   RESIDENT wsrv_doesapplicantcurrentl
  2020-01-13 22:08:37      	2 fields found: Need Service Id, doesapplicantcurrentl, 
  2020-01-13 22:08:37      103 lines fetched
  2020-01-13 22:08:37      Joining/Keeping
  2020-01-13 22:08:37 0052 DROP TABLE wsrv_doesapplicantcurrentl
  2020-01-13 22:08:37 0054 LET varStepName='STEP_' & 14 & '_of_' & 31
  2020-01-13 22:08:37 0055 STEP_14_of_31: select 1
  2020-01-13 22:08:37      	1 fields found: ?column?, 
  2020-01-13 22:08:37      1 lines fetched
  2020-01-13 22:08:37 0056 DROP TABLE STEP_14_of_31
2020-01-13 22:08:37 0058 NEXT
  2020-01-13 22:08:37 0026 LET varAnswerTableName=Peek('sp_table_name',15,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:37 0027 LET varAnswerQlikName=Peek('qlik_table_name',15,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:37 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',15,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:37 0030 wsrv_doesapplicanthaveabeh:
  2020-01-13 22:08:37 0031   SELECT * FROM qlik_wsrv_doesapplicanthaveabeh
  2020-01-13 22:08:40      	3 fields found: doesapplicanthaveabeh_service_id, doesapplicanthaveabeh_client_id, doesapplicanthaveabeh, 
  2020-01-13 22:08:40      95 lines fetched
  2020-01-13 22:08:40 0033 LET varOrigFieldName = 'doesapplicanthaveabeh' & '_service_id'
  2020-01-13 22:08:40 0034 LET varNewFieldName = UPPER('WSRV_' & 'doesapplicanthaveabeh' & '_service_id')
  2020-01-13 22:08:40 0035 RENAME FIELD doesapplicanthaveabeh_service_id to WSRV_DOESAPPLICANTHAVEABEH_SERVICE_ID
  2020-01-13 22:08:40 0037 LET varPkFieldName = 'WSRV_DOESAPPLICANTHAVEABEH_SERVICE_ID'
  2020-01-13 22:08:40 0039 LET varOrigFieldName = 'doesapplicanthaveabeh' & '_client_id'
  2020-01-13 22:08:40 0040 LET varNewFieldName = 'wsrv_' & 'doesapplicanthaveabeh' & '_client_id'
  2020-01-13 22:08:40 0041 RENAME FIELD doesapplicanthaveabeh_client_id to wsrv_doesapplicanthaveabeh_client_id
  2020-01-13 22:08:40 0043 LET varClientFieldName = 'wsrv_doesapplicanthaveabeh_client_id'
  2020-01-13 22:08:40 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:40 0046   LOAD
  2020-01-13 22:08:40 0047 	  WSRV_DOESAPPLICANTHAVEABEH_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:40 0048       
  2020-01-13 22:08:40 0049       doesapplicanthaveabeh
  2020-01-13 22:08:40 0050   RESIDENT wsrv_doesapplicanthaveabeh
  2020-01-13 22:08:40      	2 fields found: Need Service Id, doesapplicanthaveabeh, 
  2020-01-13 22:08:40      95 lines fetched
  2020-01-13 22:08:40      Joining/Keeping
  2020-01-13 22:08:40 0052 DROP TABLE wsrv_doesapplicanthaveabeh
  2020-01-13 22:08:40 0054 LET varStepName='STEP_' & 15 & '_of_' & 31
  2020-01-13 22:08:40 0055 STEP_15_of_31: select 1
  2020-01-13 22:08:40      	1 fields found: ?column?, 
  2020-01-13 22:08:40      1 lines fetched
  2020-01-13 22:08:40 0056 DROP TABLE STEP_15_of_31
2020-01-13 22:08:40 0058 NEXT
  2020-01-13 22:08:40 0026 LET varAnswerTableName=Peek('sp_table_name',16,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:40 0027 LET varAnswerQlikName=Peek('qlik_table_name',16,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:40 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',16,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:40 0030 wsrv_doesapplicanthaveapri:
  2020-01-13 22:08:40 0031   SELECT * FROM qlik_wsrv_doesapplicanthaveapri
  2020-01-13 22:08:43      	3 fields found: doesapplicanthaveapri_service_id, doesapplicanthaveapri_client_id, doesapplicanthaveapri, 
  2020-01-13 22:08:43      102 lines fetched
  2020-01-13 22:08:43 0033 LET varOrigFieldName = 'doesapplicanthaveapri' & '_service_id'
  2020-01-13 22:08:43 0034 LET varNewFieldName = UPPER('WSRV_' & 'doesapplicanthaveapri' & '_service_id')
  2020-01-13 22:08:43 0035 RENAME FIELD doesapplicanthaveapri_service_id to WSRV_DOESAPPLICANTHAVEAPRI_SERVICE_ID
  2020-01-13 22:08:43 0037 LET varPkFieldName = 'WSRV_DOESAPPLICANTHAVEAPRI_SERVICE_ID'
  2020-01-13 22:08:43 0039 LET varOrigFieldName = 'doesapplicanthaveapri' & '_client_id'
  2020-01-13 22:08:43 0040 LET varNewFieldName = 'wsrv_' & 'doesapplicanthaveapri' & '_client_id'
  2020-01-13 22:08:43 0041 RENAME FIELD doesapplicanthaveapri_client_id to wsrv_doesapplicanthaveapri_client_id
  2020-01-13 22:08:43 0043 LET varClientFieldName = 'wsrv_doesapplicanthaveapri_client_id'
  2020-01-13 22:08:43 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:43 0046   LOAD
  2020-01-13 22:08:43 0047 	  WSRV_DOESAPPLICANTHAVEAPRI_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:43 0048       
  2020-01-13 22:08:43 0049       doesapplicanthaveapri
  2020-01-13 22:08:43 0050   RESIDENT wsrv_doesapplicanthaveapri
  2020-01-13 22:08:43      	2 fields found: Need Service Id, doesapplicanthaveapri, 
  2020-01-13 22:08:43      102 lines fetched
  2020-01-13 22:08:43      Joining/Keeping
  2020-01-13 22:08:43 0052 DROP TABLE wsrv_doesapplicanthaveapri
  2020-01-13 22:08:43 0054 LET varStepName='STEP_' & 16 & '_of_' & 31
  2020-01-13 22:08:43 0055 STEP_16_of_31: select 1
  2020-01-13 22:08:43      	1 fields found: ?column?, 
  2020-01-13 22:08:43      1 lines fetched
  2020-01-13 22:08:43 0056 DROP TABLE STEP_16_of_31
2020-01-13 22:08:43 0058 NEXT
  2020-01-13 22:08:43 0026 LET varAnswerTableName=Peek('sp_table_name',17,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:43 0027 LET varAnswerQlikName=Peek('qlik_table_name',17,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:43 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',17,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:43 0030 wsrv_housinglocationassist:
  2020-01-13 22:08:43 0031   SELECT * FROM qlik_wsrv_housinglocationassist
  2020-01-13 22:08:47      	3 fields found: housinglocationassist_service_id, housinglocationassist_client_id, housinglocationassist, 
  2020-01-13 22:08:47      3,327 lines fetched
  2020-01-13 22:08:47 0033 LET varOrigFieldName = 'housinglocationassist' & '_service_id'
  2020-01-13 22:08:47 0034 LET varNewFieldName = UPPER('WSRV_' & 'housinglocationassist' & '_service_id')
  2020-01-13 22:08:47 0035 RENAME FIELD housinglocationassist_service_id to WSRV_HOUSINGLOCATIONASSIST_SERVICE_ID
  2020-01-13 22:08:47 0037 LET varPkFieldName = 'WSRV_HOUSINGLOCATIONASSIST_SERVICE_ID'
  2020-01-13 22:08:47 0039 LET varOrigFieldName = 'housinglocationassist' & '_client_id'
  2020-01-13 22:08:47 0040 LET varNewFieldName = 'wsrv_' & 'housinglocationassist' & '_client_id'
  2020-01-13 22:08:47 0041 RENAME FIELD housinglocationassist_client_id to wsrv_housinglocationassist_client_id
  2020-01-13 22:08:47 0043 LET varClientFieldName = 'wsrv_housinglocationassist_client_id'
  2020-01-13 22:08:47 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:47 0046   LOAD
  2020-01-13 22:08:47 0047 	  WSRV_HOUSINGLOCATIONASSIST_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:47 0048       
  2020-01-13 22:08:47 0049       housinglocationassist
  2020-01-13 22:08:47 0050   RESIDENT wsrv_housinglocationassist
  2020-01-13 22:08:47      	2 fields found: Need Service Id, housinglocationassist, 
  2020-01-13 22:08:47      3,327 lines fetched
  2020-01-13 22:08:47      Joining/Keeping
  2020-01-13 22:08:47 0052 DROP TABLE wsrv_housinglocationassist
  2020-01-13 22:08:47 0054 LET varStepName='STEP_' & 17 & '_of_' & 31
  2020-01-13 22:08:47 0055 STEP_17_of_31: select 1
  2020-01-13 22:08:47      	1 fields found: ?column?, 
  2020-01-13 22:08:47      1 lines fetched
  2020-01-13 22:08:47 0056 DROP TABLE STEP_17_of_31
2020-01-13 22:08:47 0058 NEXT
  2020-01-13 22:08:47 0026 LET varAnswerTableName=Peek('sp_table_name',18,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:47 0027 LET varAnswerQlikName=Peek('qlik_table_name',18,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:47 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',18,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:47 0030 wsrv_isapplicanttheleaseho:
  2020-01-13 22:08:47 0031   SELECT * FROM qlik_wsrv_isapplicanttheleaseho
  2020-01-13 22:08:50      	3 fields found: isapplicanttheleaseho_service_id, isapplicanttheleaseho_client_id, isapplicanttheleaseho, 
  2020-01-13 22:08:50      103 lines fetched
  2020-01-13 22:08:50 0033 LET varOrigFieldName = 'isapplicanttheleaseho' & '_service_id'
  2020-01-13 22:08:50 0034 LET varNewFieldName = UPPER('WSRV_' & 'isapplicanttheleaseho' & '_service_id')
  2020-01-13 22:08:50 0035 RENAME FIELD isapplicanttheleaseho_service_id to WSRV_ISAPPLICANTTHELEASEHO_SERVICE_ID
  2020-01-13 22:08:50 0037 LET varPkFieldName = 'WSRV_ISAPPLICANTTHELEASEHO_SERVICE_ID'
  2020-01-13 22:08:50 0039 LET varOrigFieldName = 'isapplicanttheleaseho' & '_client_id'
  2020-01-13 22:08:50 0040 LET varNewFieldName = 'wsrv_' & 'isapplicanttheleaseho' & '_client_id'
  2020-01-13 22:08:50 0041 RENAME FIELD isapplicanttheleaseho_client_id to wsrv_isapplicanttheleaseho_client_id
  2020-01-13 22:08:50 0043 LET varClientFieldName = 'wsrv_isapplicanttheleaseho_client_id'
  2020-01-13 22:08:50 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:50 0046   LOAD
  2020-01-13 22:08:50 0047 	  WSRV_ISAPPLICANTTHELEASEHO_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:50 0048       
  2020-01-13 22:08:50 0049       isapplicanttheleaseho
  2020-01-13 22:08:50 0050   RESIDENT wsrv_isapplicanttheleaseho
  2020-01-13 22:08:51      	2 fields found: Need Service Id, isapplicanttheleaseho, 
  2020-01-13 22:08:51      103 lines fetched
  2020-01-13 22:08:51      Joining/Keeping
  2020-01-13 22:08:51 0052 DROP TABLE wsrv_isapplicanttheleaseho
  2020-01-13 22:08:51 0054 LET varStepName='STEP_' & 18 & '_of_' & 31
  2020-01-13 22:08:51 0055 STEP_18_of_31: select 1
  2020-01-13 22:08:51      	1 fields found: ?column?, 
  2020-01-13 22:08:51      1 lines fetched
  2020-01-13 22:08:51 0056 DROP TABLE STEP_18_of_31
2020-01-13 22:08:51 0058 NEXT
  2020-01-13 22:08:51 0026 LET varAnswerTableName=Peek('sp_table_name',19,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:51 0027 LET varAnswerQlikName=Peek('qlik_table_name',19,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:51 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',19,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:51 0030 wsrv_listsecondarysourceso:
  2020-01-13 22:08:51 0031   SELECT * FROM qlik_wsrv_listsecondarysourceso
  2020-01-13 22:08:55      	3 fields found: listsecondarysourceso_service_id, listsecondarysourceso_client_id, listsecondarysourceso, 
  2020-01-13 22:08:55      60 lines fetched
  2020-01-13 22:08:55 0033 LET varOrigFieldName = 'listsecondarysourceso' & '_service_id'
  2020-01-13 22:08:55 0034 LET varNewFieldName = UPPER('WSRV_' & 'listsecondarysourceso' & '_service_id')
  2020-01-13 22:08:55 0035 RENAME FIELD listsecondarysourceso_service_id to WSRV_LISTSECONDARYSOURCESO_SERVICE_ID
  2020-01-13 22:08:55 0037 LET varPkFieldName = 'WSRV_LISTSECONDARYSOURCESO_SERVICE_ID'
  2020-01-13 22:08:55 0039 LET varOrigFieldName = 'listsecondarysourceso' & '_client_id'
  2020-01-13 22:08:55 0040 LET varNewFieldName = 'wsrv_' & 'listsecondarysourceso' & '_client_id'
  2020-01-13 22:08:55 0041 RENAME FIELD listsecondarysourceso_client_id to wsrv_listsecondarysourceso_client_id
  2020-01-13 22:08:55 0043 LET varClientFieldName = 'wsrv_listsecondarysourceso_client_id'
  2020-01-13 22:08:55 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:08:55 0046   LOAD
  2020-01-13 22:08:55 0047 	  WSRV_LISTSECONDARYSOURCESO_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:08:55 0048       
  2020-01-13 22:08:55 0049       listsecondarysourceso
  2020-01-13 22:08:55 0050   RESIDENT wsrv_listsecondarysourceso
  2020-01-13 22:08:55      	2 fields found: Need Service Id, listsecondarysourceso, 
  2020-01-13 22:08:55      60 lines fetched
  2020-01-13 22:08:55      Joining/Keeping
  2020-01-13 22:08:55 0052 DROP TABLE wsrv_listsecondarysourceso
  2020-01-13 22:08:55 0054 LET varStepName='STEP_' & 19 & '_of_' & 31
  2020-01-13 22:08:55 0055 STEP_19_of_31: select 1
  2020-01-13 22:08:55      	1 fields found: ?column?, 
  2020-01-13 22:08:55      1 lines fetched
  2020-01-13 22:08:55 0056 DROP TABLE STEP_19_of_31
2020-01-13 22:08:55 0058 NEXT
  2020-01-13 22:08:55 0026 LET varAnswerTableName=Peek('sp_table_name',20,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:55 0027 LET varAnswerQlikName=Peek('qlik_table_name',20,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:55 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',20,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:08:55 0030 wsrv_namesandagesofaddlpeo:
  2020-01-13 22:08:55 0031   SELECT * FROM qlik_wsrv_namesandagesofaddlpeo
  2020-01-13 22:09:00      	3 fields found: namesandagesofaddlpeo_service_id, namesandagesofaddlpeo_client_id, namesandagesofaddlpeo, 
  2020-01-13 22:09:00      68 lines fetched
  2020-01-13 22:09:00 0033 LET varOrigFieldName = 'namesandagesofaddlpeo' & '_service_id'
  2020-01-13 22:09:00 0034 LET varNewFieldName = UPPER('WSRV_' & 'namesandagesofaddlpeo' & '_service_id')
  2020-01-13 22:09:00 0035 RENAME FIELD namesandagesofaddlpeo_service_id to WSRV_NAMESANDAGESOFADDLPEO_SERVICE_ID
  2020-01-13 22:09:00 0037 LET varPkFieldName = 'WSRV_NAMESANDAGESOFADDLPEO_SERVICE_ID'
  2020-01-13 22:09:00 0039 LET varOrigFieldName = 'namesandagesofaddlpeo' & '_client_id'
  2020-01-13 22:09:00 0040 LET varNewFieldName = 'wsrv_' & 'namesandagesofaddlpeo' & '_client_id'
  2020-01-13 22:09:00 0041 RENAME FIELD namesandagesofaddlpeo_client_id to wsrv_namesandagesofaddlpeo_client_id
  2020-01-13 22:09:00 0043 LET varClientFieldName = 'wsrv_namesandagesofaddlpeo_client_id'
  2020-01-13 22:09:00 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:00 0046   LOAD
  2020-01-13 22:09:00 0047 	  WSRV_NAMESANDAGESOFADDLPEO_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:00 0048       
  2020-01-13 22:09:00 0049       namesandagesofaddlpeo
  2020-01-13 22:09:00 0050   RESIDENT wsrv_namesandagesofaddlpeo
  2020-01-13 22:09:00      	2 fields found: Need Service Id, namesandagesofaddlpeo, 
  2020-01-13 22:09:00      68 lines fetched
  2020-01-13 22:09:00      Joining/Keeping
  2020-01-13 22:09:00 0052 DROP TABLE wsrv_namesandagesofaddlpeo
  2020-01-13 22:09:00 0054 LET varStepName='STEP_' & 20 & '_of_' & 31
  2020-01-13 22:09:00 0055 STEP_20_of_31: select 1
  2020-01-13 22:09:00      	1 fields found: ?column?, 
  2020-01-13 22:09:00      1 lines fetched
  2020-01-13 22:09:00 0056 DROP TABLE STEP_20_of_31
2020-01-13 22:09:00 0058 NEXT
  2020-01-13 22:09:00 0026 LET varAnswerTableName=Peek('sp_table_name',21,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:00 0027 LET varAnswerQlikName=Peek('qlik_table_name',21,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:00 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',21,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:00 0030 wsrv_noevictionduetometham:
  2020-01-13 22:09:00 0031   SELECT * FROM qlik_wsrv_noevictionduetometham
  2020-01-13 22:09:03      	3 fields found: noevictionduetometham_service_id, noevictionduetometham_client_id, noevictionduetometham, 
  2020-01-13 22:09:03      103 lines fetched
  2020-01-13 22:09:03 0033 LET varOrigFieldName = 'noevictionduetometham' & '_service_id'
  2020-01-13 22:09:03 0034 LET varNewFieldName = UPPER('WSRV_' & 'noevictionduetometham' & '_service_id')
  2020-01-13 22:09:03 0035 RENAME FIELD noevictionduetometham_service_id to WSRV_NOEVICTIONDUETOMETHAM_SERVICE_ID
  2020-01-13 22:09:03 0037 LET varPkFieldName = 'WSRV_NOEVICTIONDUETOMETHAM_SERVICE_ID'
  2020-01-13 22:09:03 0039 LET varOrigFieldName = 'noevictionduetometham' & '_client_id'
  2020-01-13 22:09:03 0040 LET varNewFieldName = 'wsrv_' & 'noevictionduetometham' & '_client_id'
  2020-01-13 22:09:03 0041 RENAME FIELD noevictionduetometham_client_id to wsrv_noevictionduetometham_client_id
  2020-01-13 22:09:03 0043 LET varClientFieldName = 'wsrv_noevictionduetometham_client_id'
  2020-01-13 22:09:03 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:03 0046   LOAD
  2020-01-13 22:09:03 0047 	  WSRV_NOEVICTIONDUETOMETHAM_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:03 0048       
  2020-01-13 22:09:03 0049       noevictionduetometham
  2020-01-13 22:09:03 0050   RESIDENT wsrv_noevictionduetometham
  2020-01-13 22:09:03      	2 fields found: Need Service Id, noevictionduetometham, 
  2020-01-13 22:09:03      103 lines fetched
  2020-01-13 22:09:03      Joining/Keeping
  2020-01-13 22:09:03 0052 DROP TABLE wsrv_noevictionduetometham
  2020-01-13 22:09:03 0054 LET varStepName='STEP_' & 21 & '_of_' & 31
  2020-01-13 22:09:03 0055 STEP_21_of_31: select 1
  2020-01-13 22:09:03      	1 fields found: ?column?, 
  2020-01-13 22:09:03      1 lines fetched
  2020-01-13 22:09:03 0056 DROP TABLE STEP_21_of_31
2020-01-13 22:09:03 0058 NEXT
  2020-01-13 22:09:03 0026 LET varAnswerTableName=Peek('sp_table_name',22,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:03 0027 LET varAnswerQlikName=Peek('qlik_table_name',22,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:03 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',22,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:03 0030 wsrv_outstandingrentorutil:
  2020-01-13 22:09:03 0031   SELECT * FROM qlik_wsrv_outstandingrentorutil
  2020-01-13 22:09:06      	3 fields found: outstandingrentorutil_service_id, outstandingrentorutil_client_id, outstandingrentorutil, 
  2020-01-13 22:09:06      103 lines fetched
  2020-01-13 22:09:06 0033 LET varOrigFieldName = 'outstandingrentorutil' & '_service_id'
  2020-01-13 22:09:06 0034 LET varNewFieldName = UPPER('WSRV_' & 'outstandingrentorutil' & '_service_id')
  2020-01-13 22:09:06 0035 RENAME FIELD outstandingrentorutil_service_id to WSRV_OUTSTANDINGRENTORUTIL_SERVICE_ID
  2020-01-13 22:09:06 0037 LET varPkFieldName = 'WSRV_OUTSTANDINGRENTORUTIL_SERVICE_ID'
  2020-01-13 22:09:06 0039 LET varOrigFieldName = 'outstandingrentorutil' & '_client_id'
  2020-01-13 22:09:06 0040 LET varNewFieldName = 'wsrv_' & 'outstandingrentorutil' & '_client_id'
  2020-01-13 22:09:06 0041 RENAME FIELD outstandingrentorutil_client_id to wsrv_outstandingrentorutil_client_id
  2020-01-13 22:09:06 0043 LET varClientFieldName = 'wsrv_outstandingrentorutil_client_id'
  2020-01-13 22:09:06 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:06 0046   LOAD
  2020-01-13 22:09:06 0047 	  WSRV_OUTSTANDINGRENTORUTIL_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:06 0048       
  2020-01-13 22:09:06 0049       outstandingrentorutil
  2020-01-13 22:09:06 0050   RESIDENT wsrv_outstandingrentorutil
  2020-01-13 22:09:06      	2 fields found: Need Service Id, outstandingrentorutil, 
  2020-01-13 22:09:06      103 lines fetched
  2020-01-13 22:09:06      Joining/Keeping
  2020-01-13 22:09:07 0052 DROP TABLE wsrv_outstandingrentorutil
  2020-01-13 22:09:07 0054 LET varStepName='STEP_' & 22 & '_of_' & 31
  2020-01-13 22:09:07 0055 STEP_22_of_31: select 1
  2020-01-13 22:09:07      	1 fields found: ?column?, 
  2020-01-13 22:09:07      1 lines fetched
  2020-01-13 22:09:07 0056 DROP TABLE STEP_22_of_31
2020-01-13 22:09:07 0058 NEXT
  2020-01-13 22:09:07 0026 LET varAnswerTableName=Peek('sp_table_name',23,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:07 0027 LET varAnswerQlikName=Peek('qlik_table_name',23,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:07 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',23,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:07 0030 wsrv_primarysourceofincome:
  2020-01-13 22:09:07 0031   SELECT * FROM qlik_wsrv_primarysourceofincome
  2020-01-13 22:09:10      	3 fields found: primarysourceofincome_service_id, primarysourceofincome_client_id, primarysourceofincome, 
  2020-01-13 22:09:10      103 lines fetched
  2020-01-13 22:09:10 0033 LET varOrigFieldName = 'primarysourceofincome' & '_service_id'
  2020-01-13 22:09:10 0034 LET varNewFieldName = UPPER('WSRV_' & 'primarysourceofincome' & '_service_id')
  2020-01-13 22:09:10 0035 RENAME FIELD primarysourceofincome_service_id to WSRV_PRIMARYSOURCEOFINCOME_SERVICE_ID
  2020-01-13 22:09:10 0037 LET varPkFieldName = 'WSRV_PRIMARYSOURCEOFINCOME_SERVICE_ID'
  2020-01-13 22:09:10 0039 LET varOrigFieldName = 'primarysourceofincome' & '_client_id'
  2020-01-13 22:09:10 0040 LET varNewFieldName = 'wsrv_' & 'primarysourceofincome' & '_client_id'
  2020-01-13 22:09:10 0041 RENAME FIELD primarysourceofincome_client_id to wsrv_primarysourceofincome_client_id
  2020-01-13 22:09:10 0043 LET varClientFieldName = 'wsrv_primarysourceofincome_client_id'
  2020-01-13 22:09:10 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:10 0046   LOAD
  2020-01-13 22:09:10 0047 	  WSRV_PRIMARYSOURCEOFINCOME_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:10 0048       
  2020-01-13 22:09:10 0049       primarysourceofincome
  2020-01-13 22:09:10 0050   RESIDENT wsrv_primarysourceofincome
  2020-01-13 22:09:10      	2 fields found: Need Service Id, primarysourceofincome, 
  2020-01-13 22:09:10      103 lines fetched
  2020-01-13 22:09:10      Joining/Keeping
  2020-01-13 22:09:10 0052 DROP TABLE wsrv_primarysourceofincome
  2020-01-13 22:09:10 0054 LET varStepName='STEP_' & 23 & '_of_' & 31
  2020-01-13 22:09:10 0055 STEP_23_of_31: select 1
  2020-01-13 22:09:10      	1 fields found: ?column?, 
  2020-01-13 22:09:10      1 lines fetched
  2020-01-13 22:09:10 0056 DROP TABLE STEP_23_of_31
2020-01-13 22:09:10 0058 NEXT
  2020-01-13 22:09:10 0026 LET varAnswerTableName=Peek('sp_table_name',24,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:10 0027 LET varAnswerQlikName=Peek('qlik_table_name',24,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:10 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',24,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:10 0030 wsrv_rentpaidontime:
  2020-01-13 22:09:10 0031   SELECT * FROM qlik_wsrv_rentpaidontime
  2020-01-13 22:09:13      	3 fields found: rentpaidontime_service_id, rentpaidontime_client_id, rentpaidontime, 
  2020-01-13 22:09:13      103 lines fetched
  2020-01-13 22:09:13 0033 LET varOrigFieldName = 'rentpaidontime' & '_service_id'
  2020-01-13 22:09:13 0034 LET varNewFieldName = UPPER('WSRV_' & 'rentpaidontime' & '_service_id')
  2020-01-13 22:09:13 0035 RENAME FIELD rentpaidontime_service_id to WSRV_RENTPAIDONTIME_SERVICE_ID
  2020-01-13 22:09:13 0037 LET varPkFieldName = 'WSRV_RENTPAIDONTIME_SERVICE_ID'
  2020-01-13 22:09:13 0039 LET varOrigFieldName = 'rentpaidontime' & '_client_id'
  2020-01-13 22:09:13 0040 LET varNewFieldName = 'wsrv_' & 'rentpaidontime' & '_client_id'
  2020-01-13 22:09:13 0041 RENAME FIELD rentpaidontime_client_id to wsrv_rentpaidontime_client_id
  2020-01-13 22:09:13 0043 LET varClientFieldName = 'wsrv_rentpaidontime_client_id'
  2020-01-13 22:09:13 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:13 0046   LOAD
  2020-01-13 22:09:13 0047 	  WSRV_RENTPAIDONTIME_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:13 0048       
  2020-01-13 22:09:13 0049       rentpaidontime
  2020-01-13 22:09:13 0050   RESIDENT wsrv_rentpaidontime
  2020-01-13 22:09:13      	2 fields found: Need Service Id, rentpaidontime, 
  2020-01-13 22:09:13      103 lines fetched
  2020-01-13 22:09:13      Joining/Keeping
  2020-01-13 22:09:13 0052 DROP TABLE wsrv_rentpaidontime
  2020-01-13 22:09:13 0054 LET varStepName='STEP_' & 24 & '_of_' & 31
  2020-01-13 22:09:13 0055 STEP_24_of_31: select 1
  2020-01-13 22:09:13      	1 fields found: ?column?, 
  2020-01-13 22:09:13      1 lines fetched
  2020-01-13 22:09:13 0056 DROP TABLE STEP_24_of_31
2020-01-13 22:09:13 0058 NEXT
  2020-01-13 22:09:13 0026 LET varAnswerTableName=Peek('sp_table_name',25,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:13 0027 LET varAnswerQlikName=Peek('qlik_table_name',25,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:13 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',25,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:13 0030 wsrv_startdateofprimarysou:
  2020-01-13 22:09:13 0031   SELECT * FROM qlik_wsrv_startdateofprimarysou
  2020-01-13 22:09:16      	3 fields found: startdateofprimarysou_service_id, startdateofprimarysou_client_id, startdateofprimarysou, 
  2020-01-13 22:09:16      88 lines fetched
  2020-01-13 22:09:16 0033 LET varOrigFieldName = 'startdateofprimarysou' & '_service_id'
  2020-01-13 22:09:16 0034 LET varNewFieldName = UPPER('WSRV_' & 'startdateofprimarysou' & '_service_id')
  2020-01-13 22:09:16 0035 RENAME FIELD startdateofprimarysou_service_id to WSRV_STARTDATEOFPRIMARYSOU_SERVICE_ID
  2020-01-13 22:09:16 0037 LET varPkFieldName = 'WSRV_STARTDATEOFPRIMARYSOU_SERVICE_ID'
  2020-01-13 22:09:16 0039 LET varOrigFieldName = 'startdateofprimarysou' & '_client_id'
  2020-01-13 22:09:16 0040 LET varNewFieldName = 'wsrv_' & 'startdateofprimarysou' & '_client_id'
  2020-01-13 22:09:16 0041 RENAME FIELD startdateofprimarysou_client_id to wsrv_startdateofprimarysou_client_id
  2020-01-13 22:09:16 0043 LET varClientFieldName = 'wsrv_startdateofprimarysou_client_id'
  2020-01-13 22:09:16 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:16 0046   LOAD
  2020-01-13 22:09:16 0047 	  WSRV_STARTDATEOFPRIMARYSOU_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:16 0048       
  2020-01-13 22:09:16 0049       startdateofprimarysou
  2020-01-13 22:09:16 0050   RESIDENT wsrv_startdateofprimarysou
  2020-01-13 22:09:16      	2 fields found: Need Service Id, startdateofprimarysou, 
  2020-01-13 22:09:16      88 lines fetched
  2020-01-13 22:09:16      Joining/Keeping
  2020-01-13 22:09:16 0052 DROP TABLE wsrv_startdateofprimarysou
  2020-01-13 22:09:16 0054 LET varStepName='STEP_' & 25 & '_of_' & 31
  2020-01-13 22:09:16 0055 STEP_25_of_31: select 1
  2020-01-13 22:09:17      	1 fields found: ?column?, 
  2020-01-13 22:09:17      1 lines fetched
  2020-01-13 22:09:17 0056 DROP TABLE STEP_25_of_31
2020-01-13 22:09:17 0058 NEXT
  2020-01-13 22:09:17 0026 LET varAnswerTableName=Peek('sp_table_name',26,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:17 0027 LET varAnswerQlikName=Peek('qlik_table_name',26,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:17 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',26,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:17 0030 wsrv_structureddaytimeacti:
  2020-01-13 22:09:17 0031   SELECT * FROM qlik_wsrv_structureddaytimeacti
  2020-01-13 22:09:21      	3 fields found: structureddaytimeacti_service_id, structureddaytimeacti_client_id, structureddaytimeacti, 
  2020-01-13 22:09:21      99 lines fetched
  2020-01-13 22:09:21 0033 LET varOrigFieldName = 'structureddaytimeacti' & '_service_id'
  2020-01-13 22:09:21 0034 LET varNewFieldName = UPPER('WSRV_' & 'structureddaytimeacti' & '_service_id')
  2020-01-13 22:09:21 0035 RENAME FIELD structureddaytimeacti_service_id to WSRV_STRUCTUREDDAYTIMEACTI_SERVICE_ID
  2020-01-13 22:09:21 0037 LET varPkFieldName = 'WSRV_STRUCTUREDDAYTIMEACTI_SERVICE_ID'
  2020-01-13 22:09:21 0039 LET varOrigFieldName = 'structureddaytimeacti' & '_client_id'
  2020-01-13 22:09:21 0040 LET varNewFieldName = 'wsrv_' & 'structureddaytimeacti' & '_client_id'
  2020-01-13 22:09:21 0041 RENAME FIELD structureddaytimeacti_client_id to wsrv_structureddaytimeacti_client_id
  2020-01-13 22:09:21 0043 LET varClientFieldName = 'wsrv_structureddaytimeacti_client_id'
  2020-01-13 22:09:21 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:21 0046   LOAD
  2020-01-13 22:09:21 0047 	  WSRV_STRUCTUREDDAYTIMEACTI_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:21 0048       
  2020-01-13 22:09:21 0049       structureddaytimeacti
  2020-01-13 22:09:21 0050   RESIDENT wsrv_structureddaytimeacti
  2020-01-13 22:09:21      	2 fields found: Need Service Id, structureddaytimeacti, 
  2020-01-13 22:09:21      99 lines fetched
  2020-01-13 22:09:21      Joining/Keeping
  2020-01-13 22:09:22 0052 DROP TABLE wsrv_structureddaytimeacti
  2020-01-13 22:09:22 0054 LET varStepName='STEP_' & 26 & '_of_' & 31
  2020-01-13 22:09:22 0055 STEP_26_of_31: select 1
  2020-01-13 22:09:22      	1 fields found: ?column?, 
  2020-01-13 22:09:22      1 lines fetched
  2020-01-13 22:09:22 0056 DROP TABLE STEP_26_of_31
2020-01-13 22:09:22 0058 NEXT
  2020-01-13 22:09:22 0026 LET varAnswerTableName=Peek('sp_table_name',27,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:22 0027 LET varAnswerQlikName=Peek('qlik_table_name',27,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:22 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',27,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:22 0030 wsrv_supportiveservices:
  2020-01-13 22:09:22 0031   SELECT * FROM qlik_wsrv_supportiveservices
  2020-01-13 22:09:25      	3 fields found: supportiveservices_service_id, supportiveservices_client_id, supportiveservices, 
  2020-01-13 22:09:25      102 lines fetched
  2020-01-13 22:09:25 0033 LET varOrigFieldName = 'supportiveservices' & '_service_id'
  2020-01-13 22:09:25 0034 LET varNewFieldName = UPPER('WSRV_' & 'supportiveservices' & '_service_id')
  2020-01-13 22:09:25 0035 RENAME FIELD supportiveservices_service_id to WSRV_SUPPORTIVESERVICES_SERVICE_ID
  2020-01-13 22:09:25 0037 LET varPkFieldName = 'WSRV_SUPPORTIVESERVICES_SERVICE_ID'
  2020-01-13 22:09:25 0039 LET varOrigFieldName = 'supportiveservices' & '_client_id'
  2020-01-13 22:09:25 0040 LET varNewFieldName = 'wsrv_' & 'supportiveservices' & '_client_id'
  2020-01-13 22:09:25 0041 RENAME FIELD supportiveservices_client_id to wsrv_supportiveservices_client_id
  2020-01-13 22:09:25 0043 LET varClientFieldName = 'wsrv_supportiveservices_client_id'
  2020-01-13 22:09:25 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:25 0046   LOAD
  2020-01-13 22:09:25 0047 	  WSRV_SUPPORTIVESERVICES_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:25 0048       
  2020-01-13 22:09:25 0049       supportiveservices
  2020-01-13 22:09:25 0050   RESIDENT wsrv_supportiveservices
  2020-01-13 22:09:26      	2 fields found: Need Service Id, supportiveservices, 
  2020-01-13 22:09:26      102 lines fetched
  2020-01-13 22:09:26      Joining/Keeping
  2020-01-13 22:09:26 0052 DROP TABLE wsrv_supportiveservices
  2020-01-13 22:09:26 0054 LET varStepName='STEP_' & 27 & '_of_' & 31
  2020-01-13 22:09:26 0055 STEP_27_of_31: select 1
  2020-01-13 22:09:26      	1 fields found: ?column?, 
  2020-01-13 22:09:26      1 lines fetched
  2020-01-13 22:09:26 0056 DROP TABLE STEP_27_of_31
2020-01-13 22:09:26 0058 NEXT
  2020-01-13 22:09:26 0026 LET varAnswerTableName=Peek('sp_table_name',28,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:26 0027 LET varAnswerQlikName=Peek('qlik_table_name',28,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:26 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',28,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:26 0030 wsrv_totalmonthlyincome:
  2020-01-13 22:09:26 0031   SELECT * FROM qlik_wsrv_totalmonthlyincome
  2020-01-13 22:09:29      	3 fields found: totalmonthlyincome_service_id, totalmonthlyincome_client_id, totalmonthlyincome, 
  2020-01-13 22:09:29      101 lines fetched
  2020-01-13 22:09:29 0033 LET varOrigFieldName = 'totalmonthlyincome' & '_service_id'
  2020-01-13 22:09:29 0034 LET varNewFieldName = UPPER('WSRV_' & 'totalmonthlyincome' & '_service_id')
  2020-01-13 22:09:29 0035 RENAME FIELD totalmonthlyincome_service_id to WSRV_TOTALMONTHLYINCOME_SERVICE_ID
  2020-01-13 22:09:29 0037 LET varPkFieldName = 'WSRV_TOTALMONTHLYINCOME_SERVICE_ID'
  2020-01-13 22:09:29 0039 LET varOrigFieldName = 'totalmonthlyincome' & '_client_id'
  2020-01-13 22:09:29 0040 LET varNewFieldName = 'wsrv_' & 'totalmonthlyincome' & '_client_id'
  2020-01-13 22:09:29 0041 RENAME FIELD totalmonthlyincome_client_id to wsrv_totalmonthlyincome_client_id
  2020-01-13 22:09:29 0043 LET varClientFieldName = 'wsrv_totalmonthlyincome_client_id'
  2020-01-13 22:09:29 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:29 0046   LOAD
  2020-01-13 22:09:29 0047 	  WSRV_TOTALMONTHLYINCOME_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:29 0048       
  2020-01-13 22:09:29 0049       totalmonthlyincome
  2020-01-13 22:09:29 0050   RESIDENT wsrv_totalmonthlyincome
  2020-01-13 22:09:29      	2 fields found: Need Service Id, totalmonthlyincome, 
  2020-01-13 22:09:29      101 lines fetched
  2020-01-13 22:09:29      Joining/Keeping
  2020-01-13 22:09:29 0052 DROP TABLE wsrv_totalmonthlyincome
  2020-01-13 22:09:29 0054 LET varStepName='STEP_' & 28 & '_of_' & 31
  2020-01-13 22:09:29 0055 STEP_28_of_31: select 1
  2020-01-13 22:09:29      	1 fields found: ?column?, 
  2020-01-13 22:09:29      1 lines fetched
  2020-01-13 22:09:29 0056 DROP TABLE STEP_28_of_31
2020-01-13 22:09:29 0058 NEXT
  2020-01-13 22:09:29 0026 LET varAnswerTableName=Peek('sp_table_name',29,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:29 0027 LET varAnswerQlikName=Peek('qlik_table_name',29,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:29 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',29,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:29 0030 wsrv_totalnumberofpeoplein:
  2020-01-13 22:09:29 0031   SELECT * FROM qlik_wsrv_totalnumberofpeoplein
  2020-01-13 22:09:32      	3 fields found: totalnumberofpeoplein_service_id, totalnumberofpeoplein_client_id, totalnumberofpeoplein, 
  2020-01-13 22:09:32      104 lines fetched
  2020-01-13 22:09:32 0033 LET varOrigFieldName = 'totalnumberofpeoplein' & '_service_id'
  2020-01-13 22:09:32 0034 LET varNewFieldName = UPPER('WSRV_' & 'totalnumberofpeoplein' & '_service_id')
  2020-01-13 22:09:32 0035 RENAME FIELD totalnumberofpeoplein_service_id to WSRV_TOTALNUMBEROFPEOPLEIN_SERVICE_ID
  2020-01-13 22:09:32 0037 LET varPkFieldName = 'WSRV_TOTALNUMBEROFPEOPLEIN_SERVICE_ID'
  2020-01-13 22:09:32 0039 LET varOrigFieldName = 'totalnumberofpeoplein' & '_client_id'
  2020-01-13 22:09:32 0040 LET varNewFieldName = 'wsrv_' & 'totalnumberofpeoplein' & '_client_id'
  2020-01-13 22:09:32 0041 RENAME FIELD totalnumberofpeoplein_client_id to wsrv_totalnumberofpeoplein_client_id
  2020-01-13 22:09:32 0043 LET varClientFieldName = 'wsrv_totalnumberofpeoplein_client_id'
  2020-01-13 22:09:32 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:32 0046   LOAD
  2020-01-13 22:09:32 0047 	  WSRV_TOTALNUMBEROFPEOPLEIN_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:32 0048       
  2020-01-13 22:09:32 0049       totalnumberofpeoplein
  2020-01-13 22:09:32 0050   RESIDENT wsrv_totalnumberofpeoplein
  2020-01-13 22:09:32      	2 fields found: Need Service Id, totalnumberofpeoplein, 
  2020-01-13 22:09:32      104 lines fetched
  2020-01-13 22:09:32      Joining/Keeping
  2020-01-13 22:09:32 0052 DROP TABLE wsrv_totalnumberofpeoplein
  2020-01-13 22:09:32 0054 LET varStepName='STEP_' & 29 & '_of_' & 31
  2020-01-13 22:09:32 0055 STEP_29_of_31: select 1
  2020-01-13 22:09:32      	1 fields found: ?column?, 
  2020-01-13 22:09:32      1 lines fetched
  2020-01-13 22:09:32 0056 DROP TABLE STEP_29_of_31
2020-01-13 22:09:32 0058 NEXT
  2020-01-13 22:09:32 0026 LET varAnswerTableName=Peek('sp_table_name',30,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:32 0027 LET varAnswerQlikName=Peek('qlik_table_name',30,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:32 0028 LET varAnswerFieldQlikName=Peek('qlik_field_name',30,'CLIENT_WS_ANSWER_LIST')
  2020-01-13 22:09:32 0030 wsrv_willapplicantstayincu:
  2020-01-13 22:09:32 0031   SELECT * FROM qlik_wsrv_willapplicantstayincu
  2020-01-13 22:09:35      	3 fields found: willapplicantstayincu_service_id, willapplicantstayincu_client_id, willapplicantstayincu, 
  2020-01-13 22:09:35      103 lines fetched
  2020-01-13 22:09:35 0033 LET varOrigFieldName = 'willapplicantstayincu' & '_service_id'
  2020-01-13 22:09:35 0034 LET varNewFieldName = UPPER('WSRV_' & 'willapplicantstayincu' & '_service_id')
  2020-01-13 22:09:35 0035 RENAME FIELD willapplicantstayincu_service_id to WSRV_WILLAPPLICANTSTAYINCU_SERVICE_ID
  2020-01-13 22:09:35 0037 LET varPkFieldName = 'WSRV_WILLAPPLICANTSTAYINCU_SERVICE_ID'
  2020-01-13 22:09:35 0039 LET varOrigFieldName = 'willapplicantstayincu' & '_client_id'
  2020-01-13 22:09:35 0040 LET varNewFieldName = 'wsrv_' & 'willapplicantstayincu' & '_client_id'
  2020-01-13 22:09:35 0041 RENAME FIELD willapplicantstayincu_client_id to wsrv_willapplicantstayincu_client_id
  2020-01-13 22:09:35 0043 LET varClientFieldName = 'wsrv_willapplicantstayincu_client_id'
  2020-01-13 22:09:35 0045 JOIN (FACT_Worksheet_Service)
  2020-01-13 22:09:35 0046   LOAD
  2020-01-13 22:09:35 0047 	  WSRV_WILLAPPLICANTSTAYINCU_SERVICE_ID AS [Need Service Id],
  2020-01-13 22:09:35 0048       
  2020-01-13 22:09:35 0049       willapplicantstayincu
  2020-01-13 22:09:35 0050   RESIDENT wsrv_willapplicantstayincu
  2020-01-13 22:09:35      	2 fields found: Need Service Id, willapplicantstayincu, 
  2020-01-13 22:09:35      103 lines fetched
  2020-01-13 22:09:35      Joining/Keeping
  2020-01-13 22:09:35 0052 DROP TABLE wsrv_willapplicantstayincu
  2020-01-13 22:09:35 0054 LET varStepName='STEP_' & 30 & '_of_' & 31
  2020-01-13 22:09:35 0055 STEP_30_of_31: select 1
  2020-01-13 22:09:35      	1 fields found: ?column?, 
  2020-01-13 22:09:35      1 lines fetched
  2020-01-13 22:09:35 0056 DROP TABLE STEP_30_of_31
2020-01-13 22:09:35 0058 NEXT
2020-01-13 22:09:35 0061 DROP TABLE CLIENT_WS_ANSWER_LIST
2020-01-13 22:09:35 0066 FieldMap:
2020-01-13 22:09:35 0067 Mapping SQL 
2020-01-13 22:09:35 0068  SELECT lower(dq.virt_field_name) AS oldnames,  dq.virt_field_name || '_wsrv' AS newnames 
2020-01-13 22:09:35 0069   FROM ws_question dq
2020-01-13 22:09:35 0070   INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:09:35 0071   WHERE
2020-01-13 22:09:35 0072     (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:09:35 0073     AND (dqt.code in ('lookup','yes_no','date','int','textbox','textarea','money','service_code'))
2020-01-13 22:09:36      	2 fields found: oldnames, newnames, 
2020-01-13 22:09:36      104 lines fetched
2020-01-13 22:09:36 0075 Rename Fields using FieldMap
2020-01-13 22:09:36 0080 CALL_WS_ANSWER_LIST:
2020-01-13 22:09:36 0081 SELECT table_name AS sp_table_name, SUBSTRING(table_name, 6, CHAR_LENGTH(table_name)) AS qlik_table_name 
2020-01-13 22:09:36 0082 , SUBSTRING(table_name, 12, CHAR_LENGTH(table_name)) AS qlik_field_name
2020-01-13 22:09:36 0083 FROM information_schema.tables
2020-01-13 22:09:36 0084 WHERE table_name ILIKE 'qlik_wcall_%'
2020-01-13 22:09:36 0085 
2020-01-13 22:09:36 0086 ORDER BY table_name
2020-01-13 22:09:36      	3 fields found: sp_table_name, qlik_table_name, qlik_field_name, 
2020-01-13 22:09:36      0 lines fetched
2020-01-13 22:09:36 0088 FACT_Worksheet_Call:
2020-01-13 22:09:36 0089 SELECT NULL AS wcall_call_record_id, NULL AS wcall_client_id WHERE (1 = 0)
2020-01-13 22:09:37      	2 fields found: wcall_call_record_id, wcall_client_id, 
2020-01-13 22:09:37      0 lines fetched
2020-01-13 22:09:37 0091 LET NumRows=NoOfRows('CALL_WS_ANSWER_LIST')
2020-01-13 22:09:37 0094 FOR i=0 to 0-1
2020-01-13 22:09:37 0130 DROP TABLE BUILD_ANSWER_VIEWS
2020-01-13 22:09:37 0131 DROP TABLE CALL_WS_ANSWER_LIST
2020-01-13 22:09:37 0134 FieldMap2:
2020-01-13 22:09:37 0135 Mapping SQL 
2020-01-13 22:09:37 0136  SELECT lower(dq.virt_field_name) AS oldnames, dq.virt_field_name || '_wcall' AS newnames
2020-01-13 22:09:37 0137   FROM ws_question dq
2020-01-13 22:09:37 0138   INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:09:37 0139   WHERE
2020-01-13 22:09:37 0140     (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:09:37 0141     AND (dqt.code in ('lookup','yes_no','date','int','textbox','textarea','money','service_code'))
2020-01-13 22:09:37      	2 fields found: oldnames, newnames, 
2020-01-13 22:09:37      104 lines fetched
2020-01-13 22:09:37 0143 Rename Fields using FieldMap2
2020-01-13 22:09:37 0148 PROVIDER_ADMIN_WS_ANSWER_LIST:
2020-01-13 22:09:37 0149 SELECT table_name AS sp_table_name, SUBSTRING(table_name, 6, CHAR_LENGTH(table_name)) AS qlik_table_name 
2020-01-13 22:09:37 0150 , SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS qlik_field_name
2020-01-13 22:09:37 0151 FROM information_schema.tables
2020-01-13 22:09:37 0152 WHERE table_name ILIKE 'qlik_wpadmin_%'
2020-01-13 22:09:37 0153 ORDER BY table_name
2020-01-13 22:09:37      	3 fields found: sp_table_name, qlik_table_name, qlik_field_name, 
2020-01-13 22:09:37      16 lines fetched
2020-01-13 22:09:37 0155 FACT_Worksheet_Provider_Admin:
2020-01-13 22:09:37 0156 SELECT NULL AS wpadmin_provider_id WHERE (1 = 0)
2020-01-13 22:09:37      	1 fields found: wpadmin_provider_id, 
2020-01-13 22:09:37      0 lines fetched
2020-01-13 22:09:37 0158 LET NumRows=NoOfRows('PROVIDER_ADMIN_WS_ANSWER_LIST')
2020-01-13 22:09:37 0161 FOR i=0 to 16-1
  2020-01-13 22:09:37 0163 LET varAnswerTableName=Peek('sp_table_name',0,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:37 0164 LET varAnswerQlikName=Peek('qlik_table_name',0,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:37 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',0,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:37 0167 wpadmin_auditcompleteby:
  2020-01-13 22:09:37 0168   SELECT * FROM qlik_wpadmin_auditcompleteby
  2020-01-13 22:09:37      	2 fields found: auditcompleteby_provider_id, auditcompleteby, 
  2020-01-13 22:09:37      12 lines fetched
  2020-01-13 22:09:37 0170 LET varOrigFieldName = 'auditcompleteby' & '_provider_id'
  2020-01-13 22:09:37 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'auditcompleteby' & '_provider_id')
  2020-01-13 22:09:37 0172 RENAME FIELD auditcompleteby_provider_id to WPADMIN_AUDITCOMPLETEBY_PROVIDER_ID
  2020-01-13 22:09:37 0174 LET varPkFieldName = 'WPADMIN_AUDITCOMPLETEBY_PROVIDER_ID'
  2020-01-13 22:09:37 0175 LET varAnswerFieldQlikNewName = UPPER('auditcompleteby')
  2020-01-13 22:09:37 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:37 0179   LOAD
  2020-01-13 22:09:37 0180 	  WPADMIN_AUDITCOMPLETEBY_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:37 0181     auditcompleteby as [AUDITCOMPLETEBY_wpadmin]
  2020-01-13 22:09:37 0182   RESIDENT wpadmin_auditcompleteby
  2020-01-13 22:09:37      	2 fields found: wpadmin_provider_id, AUDITCOMPLETEBY_wpadmin, 
  2020-01-13 22:09:37      12 lines fetched
  2020-01-13 22:09:37      Joining/Keeping
  2020-01-13 22:09:37 0184 DROP TABLE wpadmin_auditcompleteby
  2020-01-13 22:09:37 0186 LET varStepName='STEP_' & 0 & '_of_' & 16
  2020-01-13 22:09:37 0187 STEP_0_of_16: select 1
  2020-01-13 22:09:38      	1 fields found: ?column?, 
  2020-01-13 22:09:38      1 lines fetched
  2020-01-13 22:09:38 0188 DROP TABLE STEP_0_of_16
2020-01-13 22:09:38 0190 NEXT
  2020-01-13 22:09:38 0163 LET varAnswerTableName=Peek('sp_table_name',1,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0164 LET varAnswerQlikName=Peek('qlik_table_name',1,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',1,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0167 wpadmin_auditdate:
  2020-01-13 22:09:38 0168   SELECT * FROM qlik_wpadmin_auditdate
  2020-01-13 22:09:38      	2 fields found: auditdate_provider_id, auditdate, 
  2020-01-13 22:09:38      12 lines fetched
  2020-01-13 22:09:38 0170 LET varOrigFieldName = 'auditdate' & '_provider_id'
  2020-01-13 22:09:38 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'auditdate' & '_provider_id')
  2020-01-13 22:09:38 0172 RENAME FIELD auditdate_provider_id to WPADMIN_AUDITDATE_PROVIDER_ID
  2020-01-13 22:09:38 0174 LET varPkFieldName = 'WPADMIN_AUDITDATE_PROVIDER_ID'
  2020-01-13 22:09:38 0175 LET varAnswerFieldQlikNewName = UPPER('auditdate')
  2020-01-13 22:09:38 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:38 0179   LOAD
  2020-01-13 22:09:38 0180 	  WPADMIN_AUDITDATE_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:38 0181     auditdate as [AUDITDATE_wpadmin]
  2020-01-13 22:09:38 0182   RESIDENT wpadmin_auditdate
  2020-01-13 22:09:38      	2 fields found: wpadmin_provider_id, AUDITDATE_wpadmin, 
  2020-01-13 22:09:38      12 lines fetched
  2020-01-13 22:09:38      Joining/Keeping
  2020-01-13 22:09:38 0184 DROP TABLE wpadmin_auditdate
  2020-01-13 22:09:38 0186 LET varStepName='STEP_' & 1 & '_of_' & 16
  2020-01-13 22:09:38 0187 STEP_1_of_16: select 1
  2020-01-13 22:09:38      	1 fields found: ?column?, 
  2020-01-13 22:09:38      1 lines fetched
  2020-01-13 22:09:38 0188 DROP TABLE STEP_1_of_16
2020-01-13 22:09:38 0190 NEXT
  2020-01-13 22:09:38 0163 LET varAnswerTableName=Peek('sp_table_name',2,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0164 LET varAnswerQlikName=Peek('qlik_table_name',2,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',2,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:38 0167 wpadmin_city_2:
  2020-01-13 22:09:38 0168   SELECT * FROM qlik_wpadmin_city_2
  2020-01-13 22:09:38      	2 fields found: city_2_provider_id, city_2, 
  2020-01-13 22:09:38      61 lines fetched
  2020-01-13 22:09:38 0170 LET varOrigFieldName = 'city_2' & '_provider_id'
  2020-01-13 22:09:38 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'city_2' & '_provider_id')
  2020-01-13 22:09:38 0172 RENAME FIELD city_2_provider_id to WPADMIN_CITY_2_PROVIDER_ID
  2020-01-13 22:09:38 0174 LET varPkFieldName = 'WPADMIN_CITY_2_PROVIDER_ID'
  2020-01-13 22:09:38 0175 LET varAnswerFieldQlikNewName = UPPER('city_2')
  2020-01-13 22:09:38 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:38 0179   LOAD
  2020-01-13 22:09:38 0180 	  WPADMIN_CITY_2_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:38 0181     city_2 as [CITY_2_wpadmin]
  2020-01-13 22:09:38 0182   RESIDENT wpadmin_city_2
  2020-01-13 22:09:38      	2 fields found: wpadmin_provider_id, CITY_2_wpadmin, 
  2020-01-13 22:09:38      61 lines fetched
  2020-01-13 22:09:38      Joining/Keeping
  2020-01-13 22:09:38 0184 DROP TABLE wpadmin_city_2
  2020-01-13 22:09:38 0186 LET varStepName='STEP_' & 2 & '_of_' & 16
  2020-01-13 22:09:38 0187 STEP_2_of_16: select 1
  2020-01-13 22:09:39      	1 fields found: ?column?, 
  2020-01-13 22:09:39      1 lines fetched
  2020-01-13 22:09:39 0188 DROP TABLE STEP_2_of_16
2020-01-13 22:09:39 0190 NEXT
  2020-01-13 22:09:39 0163 LET varAnswerTableName=Peek('sp_table_name',3,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0164 LET varAnswerQlikName=Peek('qlik_table_name',3,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',3,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0167 wpadmin_dateaddresswaslastver:
  2020-01-13 22:09:39 0168   SELECT * FROM qlik_wpadmin_dateaddresswaslastver
  2020-01-13 22:09:39      	2 fields found: dateaddresswaslastver_provider_id, dateaddresswaslastver, 
  2020-01-13 22:09:39      78 lines fetched
  2020-01-13 22:09:39 0170 LET varOrigFieldName = 'dateaddresswaslastver' & '_provider_id'
  2020-01-13 22:09:39 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'dateaddresswaslastver' & '_provider_id')
  2020-01-13 22:09:39 0172 RENAME FIELD dateaddresswaslastver_provider_id to WPADMIN_DATEADDRESSWASLASTVER_PROVIDER_ID
  2020-01-13 22:09:39 0174 LET varPkFieldName = 'WPADMIN_DATEADDRESSWASLASTVER_PROVIDER_ID'
  2020-01-13 22:09:39 0175 LET varAnswerFieldQlikNewName = UPPER('dateaddresswaslastver')
  2020-01-13 22:09:39 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:39 0179   LOAD
  2020-01-13 22:09:39 0180 	  WPADMIN_DATEADDRESSWASLASTVER_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:39 0181     dateaddresswaslastver as [DATEADDRESSWASLASTVER_wpadmin]
  2020-01-13 22:09:39 0182   RESIDENT wpadmin_dateaddresswaslastver
  2020-01-13 22:09:39      	2 fields found: wpadmin_provider_id, DATEADDRESSWASLASTVER_wpadmin, 
  2020-01-13 22:09:39      78 lines fetched
  2020-01-13 22:09:39      Joining/Keeping
  2020-01-13 22:09:39 0184 DROP TABLE wpadmin_dateaddresswaslastver
  2020-01-13 22:09:39 0186 LET varStepName='STEP_' & 3 & '_of_' & 16
  2020-01-13 22:09:39 0187 STEP_3_of_16: select 1
  2020-01-13 22:09:39      	1 fields found: ?column?, 
  2020-01-13 22:09:39      1 lines fetched
  2020-01-13 22:09:39 0188 DROP TABLE STEP_3_of_16
2020-01-13 22:09:39 0190 NEXT
  2020-01-13 22:09:39 0163 LET varAnswerTableName=Peek('sp_table_name',4,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0164 LET varAnswerQlikName=Peek('qlik_table_name',4,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',4,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0167 wpadmin_dateassigned:
  2020-01-13 22:09:39 0168   SELECT * FROM qlik_wpadmin_dateassigned
  2020-01-13 22:09:39      	2 fields found: dateassigned_provider_id, dateassigned, 
  2020-01-13 22:09:39      402 lines fetched
  2020-01-13 22:09:39 0170 LET varOrigFieldName = 'dateassigned' & '_provider_id'
  2020-01-13 22:09:39 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'dateassigned' & '_provider_id')
  2020-01-13 22:09:39 0172 RENAME FIELD dateassigned_provider_id to WPADMIN_DATEASSIGNED_PROVIDER_ID
  2020-01-13 22:09:39 0174 LET varPkFieldName = 'WPADMIN_DATEASSIGNED_PROVIDER_ID'
  2020-01-13 22:09:39 0175 LET varAnswerFieldQlikNewName = UPPER('dateassigned')
  2020-01-13 22:09:39 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:39 0179   LOAD
  2020-01-13 22:09:39 0180 	  WPADMIN_DATEASSIGNED_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:39 0181     dateassigned as [DATEASSIGNED_wpadmin]
  2020-01-13 22:09:39 0182   RESIDENT wpadmin_dateassigned
  2020-01-13 22:09:39      	2 fields found: wpadmin_provider_id, DATEASSIGNED_wpadmin, 
  2020-01-13 22:09:39      402 lines fetched
  2020-01-13 22:09:39      Joining/Keeping
  2020-01-13 22:09:39 0184 DROP TABLE wpadmin_dateassigned
  2020-01-13 22:09:39 0186 LET varStepName='STEP_' & 4 & '_of_' & 16
  2020-01-13 22:09:39 0187 STEP_4_of_16: select 1
  2020-01-13 22:09:39      	1 fields found: ?column?, 
  2020-01-13 22:09:39      1 lines fetched
  2020-01-13 22:09:39 0188 DROP TABLE STEP_4_of_16
2020-01-13 22:09:39 0190 NEXT
  2020-01-13 22:09:39 0163 LET varAnswerTableName=Peek('sp_table_name',5,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0164 LET varAnswerQlikName=Peek('qlik_table_name',5,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',5,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:39 0167 wpadmin_housingtypetemp:
  2020-01-13 22:09:39 0168   SELECT * FROM qlik_wpadmin_housingtypetemp
  2020-01-13 22:09:40      	2 fields found: housingtypetemp_provider_id, housingtypetemp, 
  2020-01-13 22:09:40      38 lines fetched
  2020-01-13 22:09:40 0170 LET varOrigFieldName = 'housingtypetemp' & '_provider_id'
  2020-01-13 22:09:40 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'housingtypetemp' & '_provider_id')
  2020-01-13 22:09:40 0172 RENAME FIELD housingtypetemp_provider_id to WPADMIN_HOUSINGTYPETEMP_PROVIDER_ID
  2020-01-13 22:09:40 0174 LET varPkFieldName = 'WPADMIN_HOUSINGTYPETEMP_PROVIDER_ID'
  2020-01-13 22:09:40 0175 LET varAnswerFieldQlikNewName = UPPER('housingtypetemp')
  2020-01-13 22:09:40 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:40 0179   LOAD
  2020-01-13 22:09:40 0180 	  WPADMIN_HOUSINGTYPETEMP_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:40 0181     housingtypetemp as [HOUSINGTYPETEMP_wpadmin]
  2020-01-13 22:09:40 0182   RESIDENT wpadmin_housingtypetemp
  2020-01-13 22:09:40      	2 fields found: wpadmin_provider_id, HOUSINGTYPETEMP_wpadmin, 
  2020-01-13 22:09:40      38 lines fetched
  2020-01-13 22:09:40      Joining/Keeping
  2020-01-13 22:09:40 0184 DROP TABLE wpadmin_housingtypetemp
  2020-01-13 22:09:40 0186 LET varStepName='STEP_' & 5 & '_of_' & 16
  2020-01-13 22:09:40 0187 STEP_5_of_16: select 1
  2020-01-13 22:09:40      	1 fields found: ?column?, 
  2020-01-13 22:09:40      1 lines fetched
  2020-01-13 22:09:40 0188 DROP TABLE STEP_5_of_16
2020-01-13 22:09:40 0190 NEXT
  2020-01-13 22:09:40 0163 LET varAnswerTableName=Peek('sp_table_name',6,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0164 LET varAnswerQlikName=Peek('qlik_table_name',6,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',6,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0167 wpadmin_lastupdatereviewreque:
  2020-01-13 22:09:40 0168   SELECT * FROM qlik_wpadmin_lastupdatereviewreque
  2020-01-13 22:09:40      	2 fields found: lastupdatereviewreque_provider_id, lastupdatereviewreque, 
  2020-01-13 22:09:40      17 lines fetched
  2020-01-13 22:09:40 0170 LET varOrigFieldName = 'lastupdatereviewreque' & '_provider_id'
  2020-01-13 22:09:40 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'lastupdatereviewreque' & '_provider_id')
  2020-01-13 22:09:40 0172 RENAME FIELD lastupdatereviewreque_provider_id to WPADMIN_LASTUPDATEREVIEWREQUE_PROVIDER_ID
  2020-01-13 22:09:40 0174 LET varPkFieldName = 'WPADMIN_LASTUPDATEREVIEWREQUE_PROVIDER_ID'
  2020-01-13 22:09:40 0175 LET varAnswerFieldQlikNewName = UPPER('lastupdatereviewreque')
  2020-01-13 22:09:40 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:40 0179   LOAD
  2020-01-13 22:09:40 0180 	  WPADMIN_LASTUPDATEREVIEWREQUE_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:40 0181     lastupdatereviewreque as [LASTUPDATEREVIEWREQUE_wpadmin]
  2020-01-13 22:09:40 0182   RESIDENT wpadmin_lastupdatereviewreque
  2020-01-13 22:09:40      	2 fields found: wpadmin_provider_id, LASTUPDATEREVIEWREQUE_wpadmin, 
  2020-01-13 22:09:40      17 lines fetched
  2020-01-13 22:09:40      Joining/Keeping
  2020-01-13 22:09:40 0184 DROP TABLE wpadmin_lastupdatereviewreque
  2020-01-13 22:09:40 0186 LET varStepName='STEP_' & 6 & '_of_' & 16
  2020-01-13 22:09:40 0187 STEP_6_of_16: select 1
  2020-01-13 22:09:40      	1 fields found: ?column?, 
  2020-01-13 22:09:40      1 lines fetched
  2020-01-13 22:09:40 0188 DROP TABLE STEP_6_of_16
2020-01-13 22:09:40 0190 NEXT
  2020-01-13 22:09:40 0163 LET varAnswerTableName=Peek('sp_table_name',7,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0164 LET varAnswerQlikName=Peek('qlik_table_name',7,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',7,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:40 0167 wpadmin_personassigned:
  2020-01-13 22:09:40 0168   SELECT * FROM qlik_wpadmin_personassigned
  2020-01-13 22:09:40      	2 fields found: personassigned_provider_id, personassigned, 
  2020-01-13 22:09:40      461 lines fetched
  2020-01-13 22:09:40 0170 LET varOrigFieldName = 'personassigned' & '_provider_id'
  2020-01-13 22:09:40 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'personassigned' & '_provider_id')
  2020-01-13 22:09:40 0172 RENAME FIELD personassigned_provider_id to WPADMIN_PERSONASSIGNED_PROVIDER_ID
  2020-01-13 22:09:40 0174 LET varPkFieldName = 'WPADMIN_PERSONASSIGNED_PROVIDER_ID'
  2020-01-13 22:09:40 0175 LET varAnswerFieldQlikNewName = UPPER('personassigned')
  2020-01-13 22:09:40 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:40 0179   LOAD
  2020-01-13 22:09:40 0180 	  WPADMIN_PERSONASSIGNED_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:40 0181     personassigned as [PERSONASSIGNED_wpadmin]
  2020-01-13 22:09:40 0182   RESIDENT wpadmin_personassigned
  2020-01-13 22:09:40      	2 fields found: wpadmin_provider_id, PERSONASSIGNED_wpadmin, 
  2020-01-13 22:09:40      461 lines fetched
  2020-01-13 22:09:40      Joining/Keeping
  2020-01-13 22:09:40 0184 DROP TABLE wpadmin_personassigned
  2020-01-13 22:09:40 0186 LET varStepName='STEP_' & 7 & '_of_' & 16
  2020-01-13 22:09:40 0187 STEP_7_of_16: select 1
  2020-01-13 22:09:41      	1 fields found: ?column?, 
  2020-01-13 22:09:41      1 lines fetched
  2020-01-13 22:09:41 0188 DROP TABLE STEP_7_of_16
2020-01-13 22:09:41 0190 NEXT
  2020-01-13 22:09:41 0163 LET varAnswerTableName=Peek('sp_table_name',8,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0164 LET varAnswerQlikName=Peek('qlik_table_name',8,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',8,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0167 wpadmin_providerresponse:
  2020-01-13 22:09:41 0168   SELECT * FROM qlik_wpadmin_providerresponse
  2020-01-13 22:09:41      	2 fields found: providerresponse_provider_id, providerresponse, 
  2020-01-13 22:09:41      83 lines fetched
  2020-01-13 22:09:41 0170 LET varOrigFieldName = 'providerresponse' & '_provider_id'
  2020-01-13 22:09:41 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'providerresponse' & '_provider_id')
  2020-01-13 22:09:41 0172 RENAME FIELD providerresponse_provider_id to WPADMIN_PROVIDERRESPONSE_PROVIDER_ID
  2020-01-13 22:09:41 0174 LET varPkFieldName = 'WPADMIN_PROVIDERRESPONSE_PROVIDER_ID'
  2020-01-13 22:09:41 0175 LET varAnswerFieldQlikNewName = UPPER('providerresponse')
  2020-01-13 22:09:41 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:41 0179   LOAD
  2020-01-13 22:09:41 0180 	  WPADMIN_PROVIDERRESPONSE_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:41 0181     providerresponse as [PROVIDERRESPONSE_wpadmin]
  2020-01-13 22:09:41 0182   RESIDENT wpadmin_providerresponse
  2020-01-13 22:09:41      	2 fields found: wpadmin_provider_id, PROVIDERRESPONSE_wpadmin, 
  2020-01-13 22:09:41      83 lines fetched
  2020-01-13 22:09:41      Joining/Keeping
  2020-01-13 22:09:41 0184 DROP TABLE wpadmin_providerresponse
  2020-01-13 22:09:41 0186 LET varStepName='STEP_' & 8 & '_of_' & 16
  2020-01-13 22:09:41 0187 STEP_8_of_16: select 1
  2020-01-13 22:09:41      	1 fields found: ?column?, 
  2020-01-13 22:09:41      1 lines fetched
  2020-01-13 22:09:41 0188 DROP TABLE STEP_8_of_16
2020-01-13 22:09:41 0190 NEXT
  2020-01-13 22:09:41 0163 LET varAnswerTableName=Peek('sp_table_name',9,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0164 LET varAnswerQlikName=Peek('qlik_table_name',9,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',9,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0167 wpadmin_providerresponsedate:
  2020-01-13 22:09:41 0168   SELECT * FROM qlik_wpadmin_providerresponsedate
  2020-01-13 22:09:41      	2 fields found: providerresponsedate_provider_id, providerresponsedate, 
  2020-01-13 22:09:41      13 lines fetched
  2020-01-13 22:09:41 0170 LET varOrigFieldName = 'providerresponsedate' & '_provider_id'
  2020-01-13 22:09:41 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'providerresponsedate' & '_provider_id')
  2020-01-13 22:09:41 0172 RENAME FIELD providerresponsedate_provider_id to WPADMIN_PROVIDERRESPONSEDATE_PROVIDER_ID
  2020-01-13 22:09:41 0174 LET varPkFieldName = 'WPADMIN_PROVIDERRESPONSEDATE_PROVIDER_ID'
  2020-01-13 22:09:41 0175 LET varAnswerFieldQlikNewName = UPPER('providerresponsedate')
  2020-01-13 22:09:41 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:41 0179   LOAD
  2020-01-13 22:09:41 0180 	  WPADMIN_PROVIDERRESPONSEDATE_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:41 0181     providerresponsedate as [PROVIDERRESPONSEDATE_wpadmin]
  2020-01-13 22:09:41 0182   RESIDENT wpadmin_providerresponsedate
  2020-01-13 22:09:41      	2 fields found: wpadmin_provider_id, PROVIDERRESPONSEDATE_wpadmin, 
  2020-01-13 22:09:41      13 lines fetched
  2020-01-13 22:09:41      Joining/Keeping
  2020-01-13 22:09:41 0184 DROP TABLE wpadmin_providerresponsedate
  2020-01-13 22:09:41 0186 LET varStepName='STEP_' & 9 & '_of_' & 16
  2020-01-13 22:09:41 0187 STEP_9_of_16: select 1
  2020-01-13 22:09:41      	1 fields found: ?column?, 
  2020-01-13 22:09:41      1 lines fetched
  2020-01-13 22:09:41 0188 DROP TABLE STEP_9_of_16
2020-01-13 22:09:41 0190 NEXT
  2020-01-13 22:09:41 0163 LET varAnswerTableName=Peek('sp_table_name',10,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0164 LET varAnswerQlikName=Peek('qlik_table_name',10,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',10,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:41 0167 wpadmin_streetaddress:
  2020-01-13 22:09:41 0168   SELECT * FROM qlik_wpadmin_streetaddress
  2020-01-13 22:09:42      	2 fields found: streetaddress_provider_id, streetaddress, 
  2020-01-13 22:09:42      43 lines fetched
  2020-01-13 22:09:42 0170 LET varOrigFieldName = 'streetaddress' & '_provider_id'
  2020-01-13 22:09:42 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'streetaddress' & '_provider_id')
  2020-01-13 22:09:42 0172 RENAME FIELD streetaddress_provider_id to WPADMIN_STREETADDRESS_PROVIDER_ID
  2020-01-13 22:09:42 0174 LET varPkFieldName = 'WPADMIN_STREETADDRESS_PROVIDER_ID'
  2020-01-13 22:09:42 0175 LET varAnswerFieldQlikNewName = UPPER('streetaddress')
  2020-01-13 22:09:42 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:42 0179   LOAD
  2020-01-13 22:09:42 0180 	  WPADMIN_STREETADDRESS_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:42 0181     streetaddress as [STREETADDRESS_wpadmin]
  2020-01-13 22:09:42 0182   RESIDENT wpadmin_streetaddress
  2020-01-13 22:09:42      	2 fields found: wpadmin_provider_id, STREETADDRESS_wpadmin, 
  2020-01-13 22:09:42      43 lines fetched
  2020-01-13 22:09:42      Joining/Keeping
  2020-01-13 22:09:42 0184 DROP TABLE wpadmin_streetaddress
  2020-01-13 22:09:42 0186 LET varStepName='STEP_' & 10 & '_of_' & 16
  2020-01-13 22:09:42 0187 STEP_10_of_16: select 1
  2020-01-13 22:09:42      	1 fields found: ?column?, 
  2020-01-13 22:09:42      1 lines fetched
  2020-01-13 22:09:42 0188 DROP TABLE STEP_10_of_16
2020-01-13 22:09:42 0190 NEXT
  2020-01-13 22:09:42 0163 LET varAnswerTableName=Peek('sp_table_name',11,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:42 0164 LET varAnswerQlikName=Peek('qlik_table_name',11,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:42 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',11,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:42 0167 wpadmin_xannualhomelessassessm:
  2020-01-13 22:09:42 0168   SELECT * FROM qlik_wpadmin_xannualhomelessassessm
  2020-01-13 22:09:43      	2 fields found: xannualhomelessassessm_provider_id, xannualhomelessassessm, 
  2020-01-13 22:09:43      147 lines fetched
  2020-01-13 22:09:43 0170 LET varOrigFieldName = 'xannualhomelessassessm' & '_provider_id'
  2020-01-13 22:09:43 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'xannualhomelessassessm' & '_provider_id')
  2020-01-13 22:09:43 0172 RENAME FIELD xannualhomelessassessm_provider_id to WPADMIN_XANNUALHOMELESSASSESSM_PROVIDER_ID
  2020-01-13 22:09:43 0174 LET varPkFieldName = 'WPADMIN_XANNUALHOMELESSASSESSM_PROVIDER_ID'
  2020-01-13 22:09:43 0175 LET varAnswerFieldQlikNewName = UPPER('xannualhomelessassessm')
  2020-01-13 22:09:43 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:43 0179   LOAD
  2020-01-13 22:09:43 0180 	  WPADMIN_XANNUALHOMELESSASSESSM_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:43 0181     xannualhomelessassessm as [XANNUALHOMELESSASSESSM_wpadmin]
  2020-01-13 22:09:43 0182   RESIDENT wpadmin_xannualhomelessassessm
  2020-01-13 22:09:43      	2 fields found: wpadmin_provider_id, XANNUALHOMELESSASSESSM_wpadmin, 
  2020-01-13 22:09:43      147 lines fetched
  2020-01-13 22:09:43      Joining/Keeping
  2020-01-13 22:09:44 0184 DROP TABLE wpadmin_xannualhomelessassessm
  2020-01-13 22:09:44 0186 LET varStepName='STEP_' & 11 & '_of_' & 16
  2020-01-13 22:09:44 0187 STEP_11_of_16: select 1
  2020-01-13 22:09:44      	1 fields found: ?column?, 
  2020-01-13 22:09:44      1 lines fetched
  2020-01-13 22:09:44 0188 DROP TABLE STEP_11_of_16
2020-01-13 22:09:44 0190 NEXT
  2020-01-13 22:09:44 0163 LET varAnswerTableName=Peek('sp_table_name',12,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:44 0164 LET varAnswerQlikName=Peek('qlik_table_name',12,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:44 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',12,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:44 0167 wpadmin_xannualperformancerepo:
  2020-01-13 22:09:44 0168   SELECT * FROM qlik_wpadmin_xannualperformancerepo
  2020-01-13 22:09:44      	2 fields found: xannualperformancerepo_provider_id, xannualperformancerepo, 
  2020-01-13 22:09:44      175 lines fetched
  2020-01-13 22:09:44 0170 LET varOrigFieldName = 'xannualperformancerepo' & '_provider_id'
  2020-01-13 22:09:44 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'xannualperformancerepo' & '_provider_id')
  2020-01-13 22:09:44 0172 RENAME FIELD xannualperformancerepo_provider_id to WPADMIN_XANNUALPERFORMANCEREPO_PROVIDER_ID
  2020-01-13 22:09:44 0174 LET varPkFieldName = 'WPADMIN_XANNUALPERFORMANCEREPO_PROVIDER_ID'
  2020-01-13 22:09:44 0175 LET varAnswerFieldQlikNewName = UPPER('xannualperformancerepo')
  2020-01-13 22:09:44 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:44 0179   LOAD
  2020-01-13 22:09:44 0180 	  WPADMIN_XANNUALPERFORMANCEREPO_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:44 0181     xannualperformancerepo as [XANNUALPERFORMANCEREPO_wpadmin]
  2020-01-13 22:09:44 0182   RESIDENT wpadmin_xannualperformancerepo
  2020-01-13 22:09:44      	2 fields found: wpadmin_provider_id, XANNUALPERFORMANCEREPO_wpadmin, 
  2020-01-13 22:09:44      175 lines fetched
  2020-01-13 22:09:44      Joining/Keeping
  2020-01-13 22:09:44 0184 DROP TABLE wpadmin_xannualperformancerepo
  2020-01-13 22:09:44 0186 LET varStepName='STEP_' & 12 & '_of_' & 16
  2020-01-13 22:09:44 0187 STEP_12_of_16: select 1
  2020-01-13 22:09:45      	1 fields found: ?column?, 
  2020-01-13 22:09:45      1 lines fetched
  2020-01-13 22:09:45 0188 DROP TABLE STEP_12_of_16
2020-01-13 22:09:45 0190 NEXT
  2020-01-13 22:09:45 0163 LET varAnswerTableName=Peek('sp_table_name',13,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0164 LET varAnswerQlikName=Peek('qlik_table_name',13,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',13,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0167 wpadmin_xhousinginventorychart:
  2020-01-13 22:09:45 0168   SELECT * FROM qlik_wpadmin_xhousinginventorychart
  2020-01-13 22:09:45      	2 fields found: xhousinginventorychart_provider_id, xhousinginventorychart, 
  2020-01-13 22:09:45      178 lines fetched
  2020-01-13 22:09:45 0170 LET varOrigFieldName = 'xhousinginventorychart' & '_provider_id'
  2020-01-13 22:09:45 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'xhousinginventorychart' & '_provider_id')
  2020-01-13 22:09:45 0172 RENAME FIELD xhousinginventorychart_provider_id to WPADMIN_XHOUSINGINVENTORYCHART_PROVIDER_ID
  2020-01-13 22:09:45 0174 LET varPkFieldName = 'WPADMIN_XHOUSINGINVENTORYCHART_PROVIDER_ID'
  2020-01-13 22:09:45 0175 LET varAnswerFieldQlikNewName = UPPER('xhousinginventorychart')
  2020-01-13 22:09:45 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:45 0179   LOAD
  2020-01-13 22:09:45 0180 	  WPADMIN_XHOUSINGINVENTORYCHART_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:45 0181     xhousinginventorychart as [XHOUSINGINVENTORYCHART_wpadmin]
  2020-01-13 22:09:45 0182   RESIDENT wpadmin_xhousinginventorychart
  2020-01-13 22:09:45      	2 fields found: wpadmin_provider_id, XHOUSINGINVENTORYCHART_wpadmin, 
  2020-01-13 22:09:45      178 lines fetched
  2020-01-13 22:09:45      Joining/Keeping
  2020-01-13 22:09:45 0184 DROP TABLE wpadmin_xhousinginventorychart
  2020-01-13 22:09:45 0186 LET varStepName='STEP_' & 13 & '_of_' & 16
  2020-01-13 22:09:45 0187 STEP_13_of_16: select 1
  2020-01-13 22:09:45      	1 fields found: ?column?, 
  2020-01-13 22:09:45      1 lines fetched
  2020-01-13 22:09:45 0188 DROP TABLE STEP_13_of_16
2020-01-13 22:09:45 0190 NEXT
  2020-01-13 22:09:45 0163 LET varAnswerTableName=Peek('sp_table_name',14,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0164 LET varAnswerQlikName=Peek('qlik_table_name',14,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',14,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:45 0167 wpadmin_xpointintimepit:
  2020-01-13 22:09:45 0168   SELECT * FROM qlik_wpadmin_xpointintimepit
  2020-01-13 22:09:45      	2 fields found: xpointintimepit_provider_id, xpointintimepit, 
  2020-01-13 22:09:45      178 lines fetched
  2020-01-13 22:09:45 0170 LET varOrigFieldName = 'xpointintimepit' & '_provider_id'
  2020-01-13 22:09:45 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'xpointintimepit' & '_provider_id')
  2020-01-13 22:09:45 0172 RENAME FIELD xpointintimepit_provider_id to WPADMIN_XPOINTINTIMEPIT_PROVIDER_ID
  2020-01-13 22:09:45 0174 LET varPkFieldName = 'WPADMIN_XPOINTINTIMEPIT_PROVIDER_ID'
  2020-01-13 22:09:45 0175 LET varAnswerFieldQlikNewName = UPPER('xpointintimepit')
  2020-01-13 22:09:45 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:45 0179   LOAD
  2020-01-13 22:09:45 0180 	  WPADMIN_XPOINTINTIMEPIT_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:45 0181     xpointintimepit as [XPOINTINTIMEPIT_wpadmin]
  2020-01-13 22:09:45 0182   RESIDENT wpadmin_xpointintimepit
  2020-01-13 22:09:45      	2 fields found: wpadmin_provider_id, XPOINTINTIMEPIT_wpadmin, 
  2020-01-13 22:09:45      178 lines fetched
  2020-01-13 22:09:45      Joining/Keeping
  2020-01-13 22:09:46 0184 DROP TABLE wpadmin_xpointintimepit
  2020-01-13 22:09:46 0186 LET varStepName='STEP_' & 14 & '_of_' & 16
  2020-01-13 22:09:46 0187 STEP_14_of_16: select 1
  2020-01-13 22:09:46      	1 fields found: ?column?, 
  2020-01-13 22:09:46      1 lines fetched
  2020-01-13 22:09:46 0188 DROP TABLE STEP_14_of_16
2020-01-13 22:09:46 0190 NEXT
  2020-01-13 22:09:46 0163 LET varAnswerTableName=Peek('sp_table_name',15,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:46 0164 LET varAnswerQlikName=Peek('qlik_table_name',15,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:46 0165 LET varAnswerFieldQlikName=Peek('qlik_field_name',15,'PROVIDER_ADMIN_WS_ANSWER_LIST')
  2020-01-13 22:09:46 0167 wpadmin_zipcode_1:
  2020-01-13 22:09:46 0168   SELECT * FROM qlik_wpadmin_zipcode_1
  2020-01-13 22:09:47      	2 fields found: zipcode_1_provider_id, zipcode_1, 
  2020-01-13 22:09:47      62 lines fetched
  2020-01-13 22:09:47 0170 LET varOrigFieldName = 'zipcode_1' & '_provider_id'
  2020-01-13 22:09:47 0171 LET varNewFieldName = UPPER('WPADMIN_' & 'zipcode_1' & '_provider_id')
  2020-01-13 22:09:47 0172 RENAME FIELD zipcode_1_provider_id to WPADMIN_ZIPCODE_1_PROVIDER_ID
  2020-01-13 22:09:47 0174 LET varPkFieldName = 'WPADMIN_ZIPCODE_1_PROVIDER_ID'
  2020-01-13 22:09:47 0175 LET varAnswerFieldQlikNewName = UPPER('zipcode_1')
  2020-01-13 22:09:47 0178 JOIN (FACT_Worksheet_Provider_Admin)
  2020-01-13 22:09:47 0179   LOAD
  2020-01-13 22:09:47 0180 	  WPADMIN_ZIPCODE_1_PROVIDER_ID AS wpadmin_provider_id,
  2020-01-13 22:09:47 0181     zipcode_1 as [ZIPCODE_1_wpadmin]
  2020-01-13 22:09:47 0182   RESIDENT wpadmin_zipcode_1
  2020-01-13 22:09:47      	2 fields found: wpadmin_provider_id, ZIPCODE_1_wpadmin, 
  2020-01-13 22:09:47      62 lines fetched
  2020-01-13 22:09:47      Joining/Keeping
  2020-01-13 22:09:47 0184 DROP TABLE wpadmin_zipcode_1
  2020-01-13 22:09:47 0186 LET varStepName='STEP_' & 15 & '_of_' & 16
  2020-01-13 22:09:47 0187 STEP_15_of_16: select 1
  2020-01-13 22:09:47      	1 fields found: ?column?, 
  2020-01-13 22:09:47      1 lines fetched
  2020-01-13 22:09:47 0188 DROP TABLE STEP_15_of_16
2020-01-13 22:09:47 0190 NEXT
2020-01-13 22:09:47 0192 DROP TABLE PROVIDER_ADMIN_WS_ANSWER_LIST
2020-01-13 22:09:47 0195 FieldMap1:
2020-01-13 22:09:47 0196 Mapping SQL 
2020-01-13 22:09:47 0197  SELECT lower(dq.virt_field_name) AS oldnames,  dq.virt_field_name || '_wpadmin' AS newnames 
2020-01-13 22:09:47 0198   FROM ws_question dq
2020-01-13 22:09:47 0199   INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:09:47 0200   WHERE
2020-01-13 22:09:47 0201     (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:09:47 0202     AND (dqt.code in ('lookup','yes_no','date','int','textbox','textarea','money','service_code'))
2020-01-13 22:09:47      	2 fields found: oldnames, newnames, 
2020-01-13 22:09:47      104 lines fetched
2020-01-13 22:09:47 0204 Rename Fields using FieldMap1
2020-01-13 22:09:47 0209 PROVIDER_PROFILE_WS_ANSWER_LIST:
2020-01-13 22:09:47 0210 SELECT table_name AS sp_table_name, SUBSTRING(table_name, 6, CHAR_LENGTH(table_name)) AS qlik_table_name 
2020-01-13 22:09:47 0211 , SUBSTRING(table_name, 13, CHAR_LENGTH(table_name)) AS qlik_field_name
2020-01-13 22:09:47 0212 FROM information_schema.tables
2020-01-13 22:09:47 0213 WHERE table_name ILIKE 'qlik_wpprof_%'
2020-01-13 22:09:47 0214 ORDER BY table_name
2020-01-13 22:09:47      	3 fields found: sp_table_name, qlik_table_name, qlik_field_name, 
2020-01-13 22:09:47      10 lines fetched
2020-01-13 22:09:47 0216 FACT_Worksheet_Provider_Profile:
2020-01-13 22:09:47 0217 SELECT NULL AS wpprof_provider_id WHERE (1 = 0)
2020-01-13 22:09:48      	1 fields found: wpprof_provider_id, 
2020-01-13 22:09:48      0 lines fetched
2020-01-13 22:09:48 0219 LET NumRows=NoOfRows('PROVIDER_PROFILE_WS_ANSWER_LIST')
2020-01-13 22:09:48 0222 FOR i=0 to 10-1
  2020-01-13 22:09:48 0224 LET varAnswerTableName=Peek('sp_table_name',0,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0225 LET varAnswerQlikName=Peek('qlik_table_name',0,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',0,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0228 wpprof_cbsaservicearea:
  2020-01-13 22:09:48 0229   SELECT * FROM qlik_wpprof_cbsaservicearea
  2020-01-13 22:09:48      	2 fields found: cbsaservicearea_provider_id, cbsaservicearea, 
  2020-01-13 22:09:48      119 lines fetched
  2020-01-13 22:09:48 0231 LET varOrigFieldName = 'cbsaservicearea' & '_provider_id'
  2020-01-13 22:09:48 0232 LET varNewFieldName = UPPER('WPPROF_' & 'cbsaservicearea' & '_provider_id')
  2020-01-13 22:09:48 0233 RENAME FIELD cbsaservicearea_provider_id to WPPROF_CBSASERVICEAREA_PROVIDER_ID
  2020-01-13 22:09:48 0235 LET varPkFieldName = 'WPPROF_CBSASERVICEAREA_PROVIDER_ID'
  2020-01-13 22:09:48 0236 LET varAnswerFieldQlikNewName = UPPER('cbsaservicearea')
  2020-01-13 22:09:48 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:48 0246   LOAD
  2020-01-13 22:09:48 0247 	  WPPROF_CBSASERVICEAREA_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:48 0248     cbsaservicearea as [CBSASERVICEAREA_wpprof]
  2020-01-13 22:09:48 0249   RESIDENT wpprof_cbsaservicearea
  2020-01-13 22:09:48      	2 fields found: wpprof_provider_id, CBSASERVICEAREA_wpprof, 
  2020-01-13 22:09:48      119 lines fetched
  2020-01-13 22:09:48      Joining/Keeping
  2020-01-13 22:09:48 0251 DROP TABLE wpprof_cbsaservicearea
  2020-01-13 22:09:48 0253 LET varStepName='STEP_' & 0 & '_of_' & 10
  2020-01-13 22:09:48 0254 STEP_0_of_10: select 1
  2020-01-13 22:09:48      	1 fields found: ?column?, 
  2020-01-13 22:09:48      1 lines fetched
  2020-01-13 22:09:48 0255 DROP TABLE STEP_0_of_10
2020-01-13 22:09:48 0257 NEXT
  2020-01-13 22:09:48 0224 LET varAnswerTableName=Peek('sp_table_name',1,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0225 LET varAnswerQlikName=Peek('qlik_table_name',1,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',1,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0228 wpprof_cochomelesssystemprov:
  2020-01-13 22:09:48 0229   SELECT * FROM qlik_wpprof_cochomelesssystemprov
  2020-01-13 22:09:48      	2 fields found: cochomelesssystemprov_provider_id, cochomelesssystemprov, 
  2020-01-13 22:09:48      21 lines fetched
  2020-01-13 22:09:48 0231 LET varOrigFieldName = 'cochomelesssystemprov' & '_provider_id'
  2020-01-13 22:09:48 0232 LET varNewFieldName = UPPER('WPPROF_' & 'cochomelesssystemprov' & '_provider_id')
  2020-01-13 22:09:48 0233 RENAME FIELD cochomelesssystemprov_provider_id to WPPROF_COCHOMELESSSYSTEMPROV_PROVIDER_ID
  2020-01-13 22:09:48 0235 LET varPkFieldName = 'WPPROF_COCHOMELESSSYSTEMPROV_PROVIDER_ID'
  2020-01-13 22:09:48 0236 LET varAnswerFieldQlikNewName = UPPER('cochomelesssystemprov')
  2020-01-13 22:09:48 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:48 0246   LOAD
  2020-01-13 22:09:48 0247 	  WPPROF_COCHOMELESSSYSTEMPROV_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:48 0248     cochomelesssystemprov as [COCHOMELESSSYSTEMPROV_wpprof]
  2020-01-13 22:09:48 0249   RESIDENT wpprof_cochomelesssystemprov
  2020-01-13 22:09:48      	2 fields found: wpprof_provider_id, COCHOMELESSSYSTEMPROV_wpprof, 
  2020-01-13 22:09:48      21 lines fetched
  2020-01-13 22:09:48      Joining/Keeping
  2020-01-13 22:09:48 0251 DROP TABLE wpprof_cochomelesssystemprov
  2020-01-13 22:09:48 0253 LET varStepName='STEP_' & 1 & '_of_' & 10
  2020-01-13 22:09:48 0254 STEP_1_of_10: select 1
  2020-01-13 22:09:48      	1 fields found: ?column?, 
  2020-01-13 22:09:48      1 lines fetched
  2020-01-13 22:09:48 0255 DROP TABLE STEP_1_of_10
2020-01-13 22:09:48 0257 NEXT
  2020-01-13 22:09:48 0224 LET varAnswerTableName=Peek('sp_table_name',2,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0225 LET varAnswerQlikName=Peek('qlik_table_name',2,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',2,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:48 0228 wpprof_domesticviolenceprovi:
  2020-01-13 22:09:48 0229   SELECT * FROM qlik_wpprof_domesticviolenceprovi
  2020-01-13 22:09:49      	2 fields found: domesticviolenceprovi_provider_id, domesticviolenceprovi, 
  2020-01-13 22:09:49      22 lines fetched
  2020-01-13 22:09:49 0231 LET varOrigFieldName = 'domesticviolenceprovi' & '_provider_id'
  2020-01-13 22:09:49 0232 LET varNewFieldName = UPPER('WPPROF_' & 'domesticviolenceprovi' & '_provider_id')
  2020-01-13 22:09:49 0233 RENAME FIELD domesticviolenceprovi_provider_id to WPPROF_DOMESTICVIOLENCEPROVI_PROVIDER_ID
  2020-01-13 22:09:49 0235 LET varPkFieldName = 'WPPROF_DOMESTICVIOLENCEPROVI_PROVIDER_ID'
  2020-01-13 22:09:49 0236 LET varAnswerFieldQlikNewName = UPPER('domesticviolenceprovi')
  2020-01-13 22:09:49 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:49 0246   LOAD
  2020-01-13 22:09:49 0247 	  WPPROF_DOMESTICVIOLENCEPROVI_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:49 0248     domesticviolenceprovi as [DOMESTICVIOLENCEPROVI_wpprof]
  2020-01-13 22:09:49 0249   RESIDENT wpprof_domesticviolenceprovi
  2020-01-13 22:09:49      	2 fields found: wpprof_provider_id, DOMESTICVIOLENCEPROVI_wpprof, 
  2020-01-13 22:09:49      22 lines fetched
  2020-01-13 22:09:49      Joining/Keeping
  2020-01-13 22:09:49 0251 DROP TABLE wpprof_domesticviolenceprovi
  2020-01-13 22:09:49 0253 LET varStepName='STEP_' & 2 & '_of_' & 10
  2020-01-13 22:09:49 0254 STEP_2_of_10: select 1
  2020-01-13 22:09:49      	1 fields found: ?column?, 
  2020-01-13 22:09:49      1 lines fetched
  2020-01-13 22:09:49 0255 DROP TABLE STEP_2_of_10
2020-01-13 22:09:49 0257 NEXT
  2020-01-13 22:09:49 0224 LET varAnswerTableName=Peek('sp_table_name',3,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:49 0225 LET varAnswerQlikName=Peek('qlik_table_name',3,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:49 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',3,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:49 0228 wpprof_facebook:
  2020-01-13 22:09:49 0229   SELECT * FROM qlik_wpprof_facebook
  2020-01-13 22:09:49      	2 fields found: facebook_provider_id, facebook, 
  2020-01-13 22:09:49      3 lines fetched
  2020-01-13 22:09:49 0231 LET varOrigFieldName = 'facebook' & '_provider_id'
  2020-01-13 22:09:49 0232 LET varNewFieldName = UPPER('WPPROF_' & 'facebook' & '_provider_id')
  2020-01-13 22:09:49 0233 RENAME FIELD facebook_provider_id to WPPROF_FACEBOOK_PROVIDER_ID
  2020-01-13 22:09:49 0235 LET varPkFieldName = 'WPPROF_FACEBOOK_PROVIDER_ID'
  2020-01-13 22:09:49 0236 LET varAnswerFieldQlikNewName = UPPER('facebook')
  2020-01-13 22:09:49 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:49 0246   LOAD
  2020-01-13 22:09:49 0247 	  WPPROF_FACEBOOK_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:49 0248     facebook as [FACEBOOK_wpprof]
  2020-01-13 22:09:49 0249   RESIDENT wpprof_facebook
  2020-01-13 22:09:49      	2 fields found: wpprof_provider_id, FACEBOOK_wpprof, 
  2020-01-13 22:09:49      3 lines fetched
  2020-01-13 22:09:49      Joining/Keeping
  2020-01-13 22:09:50 0251 DROP TABLE wpprof_facebook
  2020-01-13 22:09:50 0253 LET varStepName='STEP_' & 3 & '_of_' & 10
  2020-01-13 22:09:50 0254 STEP_3_of_10: select 1
  2020-01-13 22:09:51      	1 fields found: ?column?, 
  2020-01-13 22:09:51      1 lines fetched
  2020-01-13 22:09:51 0255 DROP TABLE STEP_3_of_10
2020-01-13 22:09:52 0257 NEXT
  2020-01-13 22:09:52 0224 LET varAnswerTableName=Peek('sp_table_name',4,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0225 LET varAnswerQlikName=Peek('qlik_table_name',4,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',4,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0228 wpprof_latestupdaterequestem:
  2020-01-13 22:09:52 0229   SELECT * FROM qlik_wpprof_latestupdaterequestem
  2020-01-13 22:09:52      	2 fields found: latestupdaterequestem_provider_id, latestupdaterequestem, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52 0231 LET varOrigFieldName = 'latestupdaterequestem' & '_provider_id'
  2020-01-13 22:09:52 0232 LET varNewFieldName = UPPER('WPPROF_' & 'latestupdaterequestem' & '_provider_id')
  2020-01-13 22:09:52 0233 RENAME FIELD latestupdaterequestem_provider_id to WPPROF_LATESTUPDATEREQUESTEM_PROVIDER_ID
  2020-01-13 22:09:52 0235 LET varPkFieldName = 'WPPROF_LATESTUPDATEREQUESTEM_PROVIDER_ID'
  2020-01-13 22:09:52 0236 LET varAnswerFieldQlikNewName = UPPER('latestupdaterequestem')
  2020-01-13 22:09:52 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:52 0246   LOAD
  2020-01-13 22:09:52 0247 	  WPPROF_LATESTUPDATEREQUESTEM_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:52 0248     latestupdaterequestem as [LATESTUPDATEREQUESTEM_wpprof]
  2020-01-13 22:09:52 0249   RESIDENT wpprof_latestupdaterequestem
  2020-01-13 22:09:52      	2 fields found: wpprof_provider_id, LATESTUPDATEREQUESTEM_wpprof, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52      Joining/Keeping
  2020-01-13 22:09:52 0251 DROP TABLE wpprof_latestupdaterequestem
  2020-01-13 22:09:52 0253 LET varStepName='STEP_' & 4 & '_of_' & 10
  2020-01-13 22:09:52 0254 STEP_4_of_10: select 1
  2020-01-13 22:09:52      	1 fields found: ?column?, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52 0255 DROP TABLE STEP_4_of_10
2020-01-13 22:09:52 0257 NEXT
  2020-01-13 22:09:52 0224 LET varAnswerTableName=Peek('sp_table_name',5,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0225 LET varAnswerQlikName=Peek('qlik_table_name',5,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',5,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0228 wpprof_programstartdate:
  2020-01-13 22:09:52 0229   SELECT * FROM qlik_wpprof_programstartdate
  2020-01-13 22:09:52      	2 fields found: programstartdate_provider_id, programstartdate, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52 0231 LET varOrigFieldName = 'programstartdate' & '_provider_id'
  2020-01-13 22:09:52 0232 LET varNewFieldName = UPPER('WPPROF_' & 'programstartdate' & '_provider_id')
  2020-01-13 22:09:52 0233 RENAME FIELD programstartdate_provider_id to WPPROF_PROGRAMSTARTDATE_PROVIDER_ID
  2020-01-13 22:09:52 0235 LET varPkFieldName = 'WPPROF_PROGRAMSTARTDATE_PROVIDER_ID'
  2020-01-13 22:09:52 0236 LET varAnswerFieldQlikNewName = UPPER('programstartdate')
  2020-01-13 22:09:52 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:52 0246   LOAD
  2020-01-13 22:09:52 0247 	  WPPROF_PROGRAMSTARTDATE_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:52 0248     programstartdate as [PROGRAMSTARTDATE_wpprof]
  2020-01-13 22:09:52 0249   RESIDENT wpprof_programstartdate
  2020-01-13 22:09:52      	2 fields found: wpprof_provider_id, PROGRAMSTARTDATE_wpprof, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52      Joining/Keeping
  2020-01-13 22:09:52 0251 DROP TABLE wpprof_programstartdate
  2020-01-13 22:09:52 0253 LET varStepName='STEP_' & 5 & '_of_' & 10
  2020-01-13 22:09:52 0254 STEP_5_of_10: select 1
  2020-01-13 22:09:52      	1 fields found: ?column?, 
  2020-01-13 22:09:52      1 lines fetched
  2020-01-13 22:09:52 0255 DROP TABLE STEP_5_of_10
2020-01-13 22:09:52 0257 NEXT
  2020-01-13 22:09:52 0224 LET varAnswerTableName=Peek('sp_table_name',6,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0225 LET varAnswerQlikName=Peek('qlik_table_name',6,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',6,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:52 0228 wpprof_progressstatus:
  2020-01-13 22:09:52 0229   SELECT * FROM qlik_wpprof_progressstatus
  2020-01-13 22:09:53      	2 fields found: progressstatus_provider_id, progressstatus, 
  2020-01-13 22:09:53      1 lines fetched
  2020-01-13 22:09:53 0231 LET varOrigFieldName = 'progressstatus' & '_provider_id'
  2020-01-13 22:09:53 0232 LET varNewFieldName = UPPER('WPPROF_' & 'progressstatus' & '_provider_id')
  2020-01-13 22:09:53 0233 RENAME FIELD progressstatus_provider_id to WPPROF_PROGRESSSTATUS_PROVIDER_ID
  2020-01-13 22:09:53 0235 LET varPkFieldName = 'WPPROF_PROGRESSSTATUS_PROVIDER_ID'
  2020-01-13 22:09:53 0236 LET varAnswerFieldQlikNewName = UPPER('progressstatus')
  2020-01-13 22:09:53 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:53 0246   LOAD
  2020-01-13 22:09:53 0247 	  WPPROF_PROGRESSSTATUS_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:53 0248     progressstatus as [PROGRESSSTATUS_wpprof]
  2020-01-13 22:09:53 0249   RESIDENT wpprof_progressstatus
  2020-01-13 22:09:53      	2 fields found: wpprof_provider_id, PROGRESSSTATUS_wpprof, 
  2020-01-13 22:09:53      1 lines fetched
  2020-01-13 22:09:53      Joining/Keeping
  2020-01-13 22:09:53 0251 DROP TABLE wpprof_progressstatus
  2020-01-13 22:09:53 0253 LET varStepName='STEP_' & 6 & '_of_' & 10
  2020-01-13 22:09:53 0254 STEP_6_of_10: select 1
  2020-01-13 22:09:53      	1 fields found: ?column?, 
  2020-01-13 22:09:53      1 lines fetched
  2020-01-13 22:09:53 0255 DROP TABLE STEP_6_of_10
2020-01-13 22:09:53 0257 NEXT
  2020-01-13 22:09:53 0224 LET varAnswerTableName=Peek('sp_table_name',7,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:53 0225 LET varAnswerQlikName=Peek('qlik_table_name',7,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:53 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',7,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:53 0228 wpprof_providerresponse:
  2020-01-13 22:09:53 0229   SELECT * FROM qlik_wpprof_providerresponse
  2020-01-13 22:09:53      	2 fields found: providerresponse_provider_id, providerresponse, 
  2020-01-13 22:09:53      1 lines fetched
  2020-01-13 22:09:53 0231 LET varOrigFieldName = 'providerresponse' & '_provider_id'
  2020-01-13 22:09:53 0232 LET varNewFieldName = UPPER('WPPROF_' & 'providerresponse' & '_provider_id')
  2020-01-13 22:09:53 0233 RENAME FIELD providerresponse_provider_id to WPPROF_PROVIDERRESPONSE_PROVIDER_ID
  2020-01-13 22:09:53 0235 LET varPkFieldName = 'WPPROF_PROVIDERRESPONSE_PROVIDER_ID'
  2020-01-13 22:09:53 0236 LET varAnswerFieldQlikNewName = UPPER('providerresponse')
  2020-01-13 22:09:53 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:53 0246   LOAD
  2020-01-13 22:09:53 0247 	  WPPROF_PROVIDERRESPONSE_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:53 0248     providerresponse as [PROVIDERRESPONSE_wpprof]
  2020-01-13 22:09:53 0249   RESIDENT wpprof_providerresponse
  2020-01-13 22:09:53      	2 fields found: wpprof_provider_id, PROVIDERRESPONSE_wpprof, 
  2020-01-13 22:09:53      1 lines fetched
  2020-01-13 22:09:53      Joining/Keeping
  2020-01-13 22:09:53 0251 DROP TABLE wpprof_providerresponse
  2020-01-13 22:09:53 0253 LET varStepName='STEP_' & 7 & '_of_' & 10
  2020-01-13 22:09:53 0254 STEP_7_of_10: select 1
  2020-01-13 22:09:55      	1 fields found: ?column?, 
  2020-01-13 22:09:55      1 lines fetched
  2020-01-13 22:09:55 0255 DROP TABLE STEP_7_of_10
2020-01-13 22:09:55 0257 NEXT
  2020-01-13 22:09:55 0224 LET varAnswerTableName=Peek('sp_table_name',8,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:55 0225 LET varAnswerQlikName=Peek('qlik_table_name',8,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:55 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',8,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:55 0228 wpprof_providerresponsedate:
  2020-01-13 22:09:55 0229   SELECT * FROM qlik_wpprof_providerresponsedate
  2020-01-13 22:09:55      	2 fields found: providerresponsedate_provider_id, providerresponsedate, 
  2020-01-13 22:09:55      1 lines fetched
  2020-01-13 22:09:55 0231 LET varOrigFieldName = 'providerresponsedate' & '_provider_id'
  2020-01-13 22:09:55 0232 LET varNewFieldName = UPPER('WPPROF_' & 'providerresponsedate' & '_provider_id')
  2020-01-13 22:09:55 0233 RENAME FIELD providerresponsedate_provider_id to WPPROF_PROVIDERRESPONSEDATE_PROVIDER_ID
  2020-01-13 22:09:55 0235 LET varPkFieldName = 'WPPROF_PROVIDERRESPONSEDATE_PROVIDER_ID'
  2020-01-13 22:09:55 0236 LET varAnswerFieldQlikNewName = UPPER('providerresponsedate')
  2020-01-13 22:09:55 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:55 0246   LOAD
  2020-01-13 22:09:55 0247 	  WPPROF_PROVIDERRESPONSEDATE_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:55 0248     providerresponsedate as [PROVIDERRESPONSEDATE_wpprof]
  2020-01-13 22:09:55 0249   RESIDENT wpprof_providerresponsedate
  2020-01-13 22:09:55      	2 fields found: wpprof_provider_id, PROVIDERRESPONSEDATE_wpprof, 
  2020-01-13 22:09:55      1 lines fetched
  2020-01-13 22:09:55      Joining/Keeping
  2020-01-13 22:09:55 0251 DROP TABLE wpprof_providerresponsedate
  2020-01-13 22:09:55 0253 LET varStepName='STEP_' & 8 & '_of_' & 10
  2020-01-13 22:09:55 0254 STEP_8_of_10: select 1
  2020-01-13 22:09:56      	1 fields found: ?column?, 
  2020-01-13 22:09:56      1 lines fetched
  2020-01-13 22:09:56 0255 DROP TABLE STEP_8_of_10
2020-01-13 22:09:56 0257 NEXT
  2020-01-13 22:09:56 0224 LET varAnswerTableName=Peek('sp_table_name',9,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:56 0225 LET varAnswerQlikName=Peek('qlik_table_name',9,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:56 0226 LET varAnswerFieldQlikName=Peek('qlik_field_name',9,'PROVIDER_PROFILE_WS_ANSWER_LIST')
  2020-01-13 22:09:56 0228 wpprof_twitter:
  2020-01-13 22:09:56 0229   SELECT * FROM qlik_wpprof_twitter
  2020-01-13 22:09:56      	2 fields found: twitter_provider_id, twitter, 
  2020-01-13 22:09:56      3 lines fetched
  2020-01-13 22:09:56 0231 LET varOrigFieldName = 'twitter' & '_provider_id'
  2020-01-13 22:09:56 0232 LET varNewFieldName = UPPER('WPPROF_' & 'twitter' & '_provider_id')
  2020-01-13 22:09:56 0233 RENAME FIELD twitter_provider_id to WPPROF_TWITTER_PROVIDER_ID
  2020-01-13 22:09:56 0235 LET varPkFieldName = 'WPPROF_TWITTER_PROVIDER_ID'
  2020-01-13 22:09:56 0236 LET varAnswerFieldQlikNewName = UPPER('twitter')
  2020-01-13 22:09:56 0245 JOIN (FACT_Worksheet_Provider_Profile)
  2020-01-13 22:09:56 0246   LOAD
  2020-01-13 22:09:56 0247 	  WPPROF_TWITTER_PROVIDER_ID AS wpprof_provider_id,
  2020-01-13 22:09:56 0248     twitter as [TWITTER_wpprof]
  2020-01-13 22:09:56 0249   RESIDENT wpprof_twitter
  2020-01-13 22:09:56      	2 fields found: wpprof_provider_id, TWITTER_wpprof, 
  2020-01-13 22:09:56      3 lines fetched
  2020-01-13 22:09:56      Joining/Keeping
  2020-01-13 22:09:56 0251 DROP TABLE wpprof_twitter
  2020-01-13 22:09:56 0253 LET varStepName='STEP_' & 9 & '_of_' & 10
  2020-01-13 22:09:56 0254 STEP_9_of_10: select 1
  2020-01-13 22:09:56      	1 fields found: ?column?, 
  2020-01-13 22:09:56      1 lines fetched
  2020-01-13 22:09:56 0255 DROP TABLE STEP_9_of_10
2020-01-13 22:09:56 0257 NEXT
2020-01-13 22:09:56 0259 DROP TABLE PROVIDER_PROFILE_WS_ANSWER_LIST
2020-01-13 22:09:56 0262 FieldMap2:
2020-01-13 22:09:56 0263 Mapping SQL 
2020-01-13 22:09:56 0264  SELECT lower(dq.virt_field_name) AS oldnames,  dq.virt_field_name || '_wpprof' AS newnames 
2020-01-13 22:09:56 0265   FROM ws_question dq
2020-01-13 22:09:56 0266   INNER JOIN da_question_type dqt ON (dqt.question_type_id = dq.question_type_id)
2020-01-13 22:09:56 0267   WHERE
2020-01-13 22:09:56 0268     (dq.active = TRUE) AND (dq.parent_id IS NULL)
2020-01-13 22:09:56 0269     AND (dqt.code in ('lookup','yes_no','date','int','textbox','textarea','money','service_code'))
2020-01-13 22:09:56      	2 fields found: oldnames, newnames, 
2020-01-13 22:09:56      104 lines fetched
2020-01-13 22:09:56 0271 Rename Fields using FieldMap2
2020-01-13 22:09:56 0273 DROP_ANSWER_VIEWS:
2020-01-13 22:09:56 0274 SELECT qlik_remove_all_qlik_view()
2020-01-13 22:09:57      	1 fields found: qlik_remove_all_qlik_view, 
2020-01-13 22:09:57      1 lines fetched
2020-01-13 22:09:57 0275 DROP TABLE DROP_ANSWER_VIEWS
2020-01-13 22:09:57 0277 DROP FIELDS wsrv_service_id,wsrv_client_id,wcall_call_record_id,wcall_client_id
2020-01-13 22:09:57 0064 sp_setting_upgrade_1:
2020-01-13 22:09:57 0065 NoConcatenate
2020-01-13 22:09:57 0066 Load
2020-01-13 22:09:57 0067 
2020-01-13 22:09:57 0068 val_bool	AS site_upgrade_setting
2020-01-13 22:09:57 0069 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_SETTING.qvd]
2020-01-13 22:09:57 0070 (qvd) where name = 'site_up'
2020-01-13 22:09:57      	1 fields found: site_upgrade_setting, 
2020-01-13 22:09:57      1 lines fetched
2020-01-13 22:09:57 0072 sp_setting_upgrade_2:
2020-01-13 22:09:57 0073 NoConcatenate
2020-01-13 22:09:57 0074 Load
2020-01-13 22:09:57 0075 
2020-01-13 22:09:57 0076 val_bool	AS encrypted_upgrade_setting
2020-01-13 22:09:57 0077 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_SETTING.qvd]
2020-01-13 22:09:57 0078 (qvd) where name = 'is_encrypted'
2020-01-13 22:09:57      	1 fields found: encrypted_upgrade_setting, 
2020-01-13 22:09:57      1 lines fetched
2020-01-13 22:09:57 0080 LET varsite_upgrade_setting=Peek('site_upgrade_setting',0,'sp_setting_upgrade_1')
2020-01-13 22:09:57 0081 LET varencrypted_upgrade_setting=Peek('encrypted_upgrade_setting',0,'sp_setting_upgrade_2')
2020-01-13 22:09:57 0083 IF ((1 = 0) AND (1 = 1)) THEN
  2020-01-13 22:09:57 0085 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:09:57 0086 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:09:57      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:09:57      1 lines fetched
  2020-01-13 22:09:57 0004 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:09:57 0007 BUILD_RECORDSET_VIEWS:                 
  2020-01-13 22:09:57 0008 SELECT qlik_flatten_all_suba_view('1/01/2019')
  2020-01-13 22:10:06      	1 fields found: qlik_flatten_all_suba_view, 
  2020-01-13 22:10:06      1 lines fetched
  2020-01-13 22:10:06 0010 DROP TABLE BUILD_RECORDSET_VIEWS
  2020-01-13 22:10:06 0013 CALL_RECORDSET_LIST:
  2020-01-13 22:10:06 0014 
  2020-01-13 22:10:06 0015 SELECT table_name AS sp_table_name, 'call_' || SUBSTRING(table_name, 12, CHAR_LENGTH(table_name)) AS qlik_table_name 
  2020-01-13 22:10:06 0016 FROM information_schema.tables
  2020-01-13 22:10:06 0017 WHERE table_name ILIKE 'qlik_scall_%'
  2020-01-13 22:10:06 0018 ORDER BY table_name
  2020-01-13 22:10:07      	2 fields found: sp_table_name, qlik_table_name, 
  2020-01-13 22:10:07      3 lines fetched
  2020-01-13 22:10:07 0021 exisitng_call_recordset_table_name:
  2020-01-13 22:10:07 0022 SELECT cr.call_recordset_id, cr.call_record_id, cr.provider_creating_id, p.name, cr.user_creating_id, u.name AS user_name
  2020-01-13 22:10:07 0023 FROM call_recordset cr
  2020-01-13 22:10:07 0024 JOIN sp_provider p ON p.provider_id = cr.provider_creating_id
  2020-01-13 22:10:07 0025 JOIN sp_user u ON u.user_id = cr.user_creating_id
  2020-01-13 22:10:07 0026 WHERE (cr.active = TRUE)
  2020-01-13 22:10:09      	6 fields found: call_recordset_id, call_record_id, provider_creating_id, name, user_creating_id, user_name, 
  2020-01-13 22:10:09      191,231 lines fetched
  2020-01-13 22:10:09 0030 LET NumRows=NoOfRows('CALL_RECORDSET_LIST')
  2020-01-13 22:10:09 0032 FOR i=0 to 3-1
    2020-01-13 22:10:09 0034 LET varRecordSetTableName=Peek('sp_table_name',0,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:09 0035 LET varRecordSetQlikName=Peek('qlik_table_name',0,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:09 0036 LET varRecordSetQlikName_Call= 'call_disabilities_1' & '_start'
    2020-01-13 22:10:09 0037 LET varRecordSetQlikName_Ucase_Call=Upper(right('call_disabilities_1', (len('call_disabilities_1'))-5))
    2020-01-13 22:10:09 0039 call_disabilities_1:
    2020-01-13 22:10:09 0040   SELECT * FROM qlik_scall_disabilities_1
    2020-01-13 22:10:09      	8 fields found: recordset_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, 
    2020-01-13 22:10:09      54 lines fetched
    2020-01-13 22:10:09 0042 call_disabilities_1_start:
    2020-01-13 22:10:09 0043   Noconcatenate
    2020-01-13 22:10:09 0044   LOAD DISTINCT
    2020-01-13 22:10:09 0045   *,
    2020-01-13 22:10:09 0046   recordset_id as %CALL_RECORDSET_KEY_SEC,
    2020-01-13 22:10:09 0047   recordset_id AS 'call_DISABILITIES_1RECORDSET_ID_start'
    2020-01-13 22:10:09 0048   RESIDENT call_disabilities_1
    2020-01-13 22:10:09      	10 fields found: recordset_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, %CALL_RECORDSET_KEY_SEC, call_DISABILITIES_1RECORDSET_ID_start, 
    2020-01-13 22:10:09      54 lines fetched
    2020-01-13 22:10:09 0053 INNER JOIN(call_disabilities_1_start)
    2020-01-13 22:10:09 0054   LOAD
    2020-01-13 22:10:09 0055     call_recordset_id AS recordset_id,
    2020-01-13 22:10:09 0056 
    2020-01-13 22:10:09 0057     provider_creating_id AS 'call_DISABILITIES_1_Provider_Creating_start',
    2020-01-13 22:10:09 0058     name AS 'call_DISABILITIES_1_Provider_Name_Creating_start',
    2020-01-13 22:10:09 0059     user_creating_id AS 'call_DISABILITIES_1_User_Created_By_Id_start',
    2020-01-13 22:10:09 0060     user_name AS 'call_DISABILITIES_1_User_Created_By_start'
    2020-01-13 22:10:09 0061   RESIDENT exisitng_call_recordset_table_name
    2020-01-13 22:10:10      	5 fields found: recordset_id, call_DISABILITIES_1_Provider_Creating_start, call_DISABILITIES_1_Provider_Name_Creating_start, call_DISABILITIES_1_User_Created_By_Id_start, call_DISABILITIES_1_User_Created_By_start, 
    2020-01-13 22:10:10      191,231 lines fetched
    2020-01-13 22:10:10      Joining/Keeping
    2020-01-13 22:10:10 0062 DROP TABLE call_disabilities_1
    2020-01-13 22:10:10 0064 LET varStepName='STEP_' & 0 & '_of_' & 3
    2020-01-13 22:10:10 0065 STEP_0_of_3: select 1
    2020-01-13 22:10:10      	1 fields found: ?column?, 
    2020-01-13 22:10:10      1 lines fetched
    2020-01-13 22:10:10 0066 DROP TABLE STEP_0_of_3
    2020-01-13 22:10:10 0068 DROP FIELDS recordset_id FROM call_disabilities_1_start
  2020-01-13 22:10:10 0070 NEXT
    2020-01-13 22:10:10 0034 LET varRecordSetTableName=Peek('sp_table_name',1,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:10 0035 LET varRecordSetQlikName=Peek('qlik_table_name',1,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:10 0036 LET varRecordSetQlikName_Call= 'call_followuptoclient_1' & '_start'
    2020-01-13 22:10:10 0037 LET varRecordSetQlikName_Ucase_Call=Upper(right('call_followuptoclient_1', (len('call_followuptoclient_1'))-5))
    2020-01-13 22:10:10 0039 call_followuptoclient_1:
    2020-01-13 22:10:10 0040   SELECT * FROM qlik_scall_followuptoclient_1
    2020-01-13 22:10:13      	7 fields found: recordset_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:10:13      24,615 lines fetched
    2020-01-13 22:10:13 0042 call_followuptoclient_1_start:
    2020-01-13 22:10:13 0043   Noconcatenate
    2020-01-13 22:10:13 0044   LOAD DISTINCT
    2020-01-13 22:10:13 0045   *,
    2020-01-13 22:10:13 0046   recordset_id as %CALL_RECORDSET_KEY_SEC,
    2020-01-13 22:10:13 0047   recordset_id AS 'call_FOLLOWUPTOCLIENT_1RECORDSET_ID_start'
    2020-01-13 22:10:13 0048   RESIDENT call_followuptoclient_1
    2020-01-13 22:10:13      	9 fields found: recordset_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, %CALL_RECORDSET_KEY_SEC, call_FOLLOWUPTOCLIENT_1RECORDSET_ID_start, 
    2020-01-13 22:10:13      24,615 lines fetched
    2020-01-13 22:10:13 0053 INNER JOIN(call_followuptoclient_1_start)
    2020-01-13 22:10:13 0054   LOAD
    2020-01-13 22:10:13 0055     call_recordset_id AS recordset_id,
    2020-01-13 22:10:13 0056 
    2020-01-13 22:10:13 0057     provider_creating_id AS 'call_FOLLOWUPTOCLIENT_1_Provider_Creating_start',
    2020-01-13 22:10:13 0058     name AS 'call_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_start',
    2020-01-13 22:10:13 0059     user_creating_id AS 'call_FOLLOWUPTOCLIENT_1_User_Created_By_Id_start',
    2020-01-13 22:10:13 0060     user_name AS 'call_FOLLOWUPTOCLIENT_1_User_Created_By_start'
    2020-01-13 22:10:13 0061   RESIDENT exisitng_call_recordset_table_name
    2020-01-13 22:10:14      	5 fields found: recordset_id, call_FOLLOWUPTOCLIENT_1_Provider_Creating_start, call_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_start, call_FOLLOWUPTOCLIENT_1_User_Created_By_Id_start, call_FOLLOWUPTOCLIENT_1_User_Created_By_start, 
    2020-01-13 22:10:14      191,231 lines fetched
    2020-01-13 22:10:14      Joining/Keeping
    2020-01-13 22:10:14 0062 DROP TABLE call_followuptoclient_1
    2020-01-13 22:10:14 0064 LET varStepName='STEP_' & 1 & '_of_' & 3
    2020-01-13 22:10:14 0065 STEP_1_of_3: select 1
    2020-01-13 22:10:14      	1 fields found: ?column?, 
    2020-01-13 22:10:14      1 lines fetched
    2020-01-13 22:10:14 0066 DROP TABLE STEP_1_of_3
    2020-01-13 22:10:14 0068 DROP FIELDS recordset_id FROM call_followuptoclient_1_start
  2020-01-13 22:10:14 0070 NEXT
    2020-01-13 22:10:14 0034 LET varRecordSetTableName=Peek('sp_table_name',2,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:14 0035 LET varRecordSetQlikName=Peek('qlik_table_name',2,'CALL_RECORDSET_LIST')
    2020-01-13 22:10:14 0036 LET varRecordSetQlikName_Call= 'call_monthlyincome' & '_start'
    2020-01-13 22:10:14 0037 LET varRecordSetQlikName_Ucase_Call=Upper(right('call_monthlyincome', (len('call_monthlyincome'))-5))
    2020-01-13 22:10:14 0039 call_monthlyincome:
    2020-01-13 22:10:14 0040   SELECT * FROM qlik_scall_monthlyincome
    2020-01-13 22:10:15      	8 fields found: recordset_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, 
    2020-01-13 22:10:15      2,283 lines fetched
    2020-01-13 22:10:15 0042 call_monthlyincome_start:
    2020-01-13 22:10:15 0043   Noconcatenate
    2020-01-13 22:10:15 0044   LOAD DISTINCT
    2020-01-13 22:10:15 0045   *,
    2020-01-13 22:10:15 0046   recordset_id as %CALL_RECORDSET_KEY_SEC,
    2020-01-13 22:10:15 0047   recordset_id AS 'call_MONTHLYINCOMERECORDSET_ID_start'
    2020-01-13 22:10:15 0048   RESIDENT call_monthlyincome
    2020-01-13 22:10:15      	10 fields found: recordset_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, %CALL_RECORDSET_KEY_SEC, call_MONTHLYINCOMERECORDSET_ID_start, 
    2020-01-13 22:10:15      2,283 lines fetched
    2020-01-13 22:10:15 0053 INNER JOIN(call_monthlyincome_start)
    2020-01-13 22:10:15 0054   LOAD
    2020-01-13 22:10:15 0055     call_recordset_id AS recordset_id,
    2020-01-13 22:10:15 0056 
    2020-01-13 22:10:15 0057     provider_creating_id AS 'call_MONTHLYINCOME_Provider_Creating_start',
    2020-01-13 22:10:15 0058     name AS 'call_MONTHLYINCOME_Provider_Name_Creating_start',
    2020-01-13 22:10:15 0059     user_creating_id AS 'call_MONTHLYINCOME_User_Created_By_Id_start',
    2020-01-13 22:10:15 0060     user_name AS 'call_MONTHLYINCOME_User_Created_By_start'
    2020-01-13 22:10:15 0061   RESIDENT exisitng_call_recordset_table_name
    2020-01-13 22:10:15      	5 fields found: recordset_id, call_MONTHLYINCOME_Provider_Creating_start, call_MONTHLYINCOME_Provider_Name_Creating_start, call_MONTHLYINCOME_User_Created_By_Id_start, call_MONTHLYINCOME_User_Created_By_start, 
    2020-01-13 22:10:15      191,231 lines fetched
    2020-01-13 22:10:15      Joining/Keeping
    2020-01-13 22:10:16 0062 DROP TABLE call_monthlyincome
    2020-01-13 22:10:16 0064 LET varStepName='STEP_' & 2 & '_of_' & 3
    2020-01-13 22:10:16 0065 STEP_2_of_3: select 1
    2020-01-13 22:10:16      	1 fields found: ?column?, 
    2020-01-13 22:10:16      1 lines fetched
    2020-01-13 22:10:16 0066 DROP TABLE STEP_2_of_3
    2020-01-13 22:10:16 0068 DROP FIELDS recordset_id FROM call_monthlyincome_start
  2020-01-13 22:10:16 0070 NEXT
  2020-01-13 22:10:16 0072 DROP TABLE CALL_RECORDSET_LIST
  2020-01-13 22:10:16 0073 DROP TABLE exisitng_call_recordset_table_name
  2020-01-13 22:10:16 0081 FieldMap5:
  2020-01-13 22:10:16 0082 Mapping SQL
  2020-01-13 22:10:16 0083  SELECT lower(dq.virt_field_name) AS oldnames, 'call_' || dq.virt_field_name || '_start'  AS newnames  
  2020-01-13 22:10:16 0084     FROM da_question dq
  2020-01-13 22:10:16 0085     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0086     WHERE
  2020-01-13 22:10:16 0087       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0088       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
  2020-01-13 22:10:16 0089       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
  2020-01-13 22:10:16 0090     UNION
  2020-01-13 22:10:16 0091     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'call_' || dq.virt_field_name || '1_start'  AS newnames  
  2020-01-13 22:10:16 0092     FROM da_question dq
  2020-01-13 22:10:16 0093     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0094     WHERE
  2020-01-13 22:10:16 0095       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0096       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
  2020-01-13 22:10:16 0097       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
  2020-01-13 22:10:16 0098      UNION
  2020-01-13 22:10:16 0099      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'call_' || dq.virt_field_name || '1_start'  AS newnames  
  2020-01-13 22:10:16 0100     FROM da_question dq
  2020-01-13 22:10:16 0101     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0102     WHERE
  2020-01-13 22:10:16 0103       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0104       AND ((dq.start_date_flag = FALSE))
  2020-01-13 22:10:16 0105       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
  2020-01-13 22:10:16 0106           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
  2020-01-13 22:10:16 0107     UNION
  2020-01-13 22:10:16 0108 
  2020-01-13 22:10:16 0109     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'call_' || dq.virt_field_name || '_start'  AS newnames  
  2020-01-13 22:10:16 0110     FROM da_question dq
  2020-01-13 22:10:16 0111     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0112     WHERE
  2020-01-13 22:10:16 0113       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0114       AND ((dq.end_date_flag = FALSE))
  2020-01-13 22:10:16 0115       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
  2020-01-13 22:10:16 0116           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
  2020-01-13 22:10:16 0117     UNION   
  2020-01-13 22:10:16 0118     SELECT
  2020-01-13 22:10:16 0119     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
  2020-01-13 22:10:16 0120 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
  2020-01-13 22:10:16 0121 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
  2020-01-13 22:10:16 0122     END AS oldnames, 'call_' || dq.virt_field_name || '_start' AS newnames 
  2020-01-13 22:10:16 0123     FROM da_question dq
  2020-01-13 22:10:16 0124     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0125     WHERE
  2020-01-13 22:10:16 0126       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0127 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
  2020-01-13 22:10:16 0128     UNION
  2020-01-13 22:10:16 0129 	SELECT
  2020-01-13 22:10:16 0130     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
  2020-01-13 22:10:16 0131 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
  2020-01-13 22:10:16 0132     END AS oldnames, 'call_' || dq.virt_field_name || '1_start' AS newnames 
  2020-01-13 22:10:16 0133     FROM da_question dq
  2020-01-13 22:10:16 0134     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
  2020-01-13 22:10:16 0135     WHERE
  2020-01-13 22:10:16 0136       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
  2020-01-13 22:10:16 0137 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
  2020-01-13 22:10:16      	2 fields found: oldnames, newnames, 
  2020-01-13 22:10:16      1,304 lines fetched
  2020-01-13 22:10:16 0138 Rename Fields using FieldMap5
  2020-01-13 22:10:16 0141 DROP_ANSWER_VIEWS:
  2020-01-13 22:10:16 0142 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:10:16      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:10:16      1 lines fetched
  2020-01-13 22:10:16 0144 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:10:16 0086 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:10:16 0087 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:10:17      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:10:17      1 lines fetched
  2020-01-13 22:10:17 0004 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:10:17 0006 BUILD_RECORDSET_VIEWS:                 
  2020-01-13 22:10:17 0007 SELECT qlik_flatten_all_suba_followup_view('1/01/2019')
  2020-01-13 22:10:17      	1 fields found: qlik_flatten_all_suba_followup_view, 
  2020-01-13 22:10:17      1 lines fetched
  2020-01-13 22:10:17 0009 DROP TABLE BUILD_RECORDSET_VIEWS
  2020-01-13 22:10:17 0011 RECORDSET_LIST_FOLLOWUP:
  2020-01-13 22:10:17 0012 SELECT table_name AS sp_table_name, 
  2020-01-13 22:10:17 0013   'call_' || SUBSTRING(table_name, 12, CHAR_LENGTH(table_name)) AS qlik_table_name,
  2020-01-13 22:10:17 0014   SUBSTRING(table_name, 12, CHAR_LENGTH(table_name)) AS table_name_only 
  2020-01-13 22:10:17 0015 FROM information_schema.tables
  2020-01-13 22:10:17 0016 WHERE table_name ILIKE 'qlik_scall_%'
  2020-01-13 22:10:17 0017 ORDER BY table_name
  2020-01-13 22:10:18      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:10:18      0 lines fetched
  2020-01-13 22:10:18 0019 LET NumRows=NoOfRows('RECORDSET_LIST_FOLLOWUP')
  2020-01-13 22:10:18 0020 FOR i=0 to 0-1
  2020-01-13 22:10:18 0159 DROP TABLE RECORDSET_LIST_FOLLOWUP
  2020-01-13 22:10:18 0161 DROP_ANSWER_VIEWS:
  2020-01-13 22:10:18 0162 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:10:18      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:10:18      1 lines fetched
  2020-01-13 22:10:18 0164 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:10:18 0087 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:10:18 0088 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:10:18      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:10:18      1 lines fetched
  2020-01-13 22:10:18 0003 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:10:18 0006 BUILD_RECORDSET_VIEWS:                 
  2020-01-13 22:10:18 0007 SELECT qlik_flatten_all_suba_view('1/01/2019')
  2020-01-13 22:10:22      	1 fields found: qlik_flatten_all_suba_view, 
  2020-01-13 22:10:22      1 lines fetched
  2020-01-13 22:10:22 0009 DROP TABLE BUILD_RECORDSET_VIEWS
  2020-01-13 22:10:22 0011 Recordset_security_entry:
  2020-01-13 22:10:22 0012 Noconcatenate
  2020-01-13 22:10:22 0013 LOAD * INLINE [
  2020-01-13 22:10:22 0014 	entry_exit_id,entry_recordset_id
  2020-01-13 22:10:22 0015 ]
  2020-01-13 22:10:22      	2 fields found: entry_exit_id, entry_recordset_id, 
  2020-01-13 22:10:22      0 lines fetched
  2020-01-13 22:10:22 0017 Recordset_security_exit:
  2020-01-13 22:10:22 0018 Noconcatenate
  2020-01-13 22:10:22 0019 LOAD * INLINE [
  2020-01-13 22:10:22 0020 	entry_exit_id,exit_recordset_id
  2020-01-13 22:10:22 0021 ]
  2020-01-13 22:10:22      	2 fields found: entry_exit_id, exit_recordset_id, 
  2020-01-13 22:10:22      0 lines fetched
  2020-01-13 22:10:22 0025 RECORDSET_LIST_ENTRY:
  2020-01-13 22:10:22 0026 
  2020-01-13 22:10:22 0027 SELECT table_name AS sp_table_name, 'client_' || SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS qlik_table_name,  SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS table_name_only
  2020-01-13 22:10:22 0028 FROM information_schema.tables
  2020-01-13 22:10:22 0029 WHERE table_name ILIKE 'qlik_sclient_%'
  2020-01-13 22:10:22 0030 ORDER BY table_name
  2020-01-13 22:10:22      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:10:22      50 lines fetched
  2020-01-13 22:10:22 0033 LET NumRows=NoOfRows('RECORDSET_LIST_ENTRY')
  2020-01-13 22:10:22 0035 FOR i=0 to 50-1
    2020-01-13 22:10:22 0037 LET varRecordSetTableName=Peek('sp_table_name',0,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:10:22 0038 LET varRecordSetQlikName=Peek('qlik_table_name',0,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:10:22 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',0,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:10:22 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('address_1') <= 20),'address_1' & 'end_1',left('address_1', 20)& 'end_1')
    2020-01-13 22:10:22 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'address_1' & 'enddate'
    2020-01-13 22:10:22 0042 LET varRecordSetQlikName_Entry= 'client_address_1' & '_entry'
    2020-01-13 22:10:22 0043 LET varRecordSetQlikName_Exit='client_address_1'& '_exit'
    2020-01-13 22:10:22 0045 LET varRecordSetQlikName_Interim='client_address_1' & '_review'
    2020-01-13 22:10:22 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_address_1', (len('client_address_1'))-7))
    2020-01-13 22:10:22 0048 client_address_1:
    2020-01-13 22:10:22 0049   SELECT * FROM qlik_sclient_address_1
    2020-01-13 22:10:54      	18 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, 
    2020-01-13 22:10:54      128,827 lines fetched
    2020-01-13 22:10:54 0051 CustomEndFieldCheck:
    2020-01-13 22:10:54 0052   SELECT *
    2020-01-13 22:10:54 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'address_1end_1'
    2020-01-13 22:10:54      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:10:54      0 lines fetched
    2020-01-13 22:10:54 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'address_1end_1','address_1enddate')
    2020-01-13 22:10:54 0059 client_address_1_entry:
    2020-01-13 22:10:54 0060   Noconcatenate
    2020-01-13 22:10:54 0061   LOAD DISTINCT
    2020-01-13 22:10:54 0062   *,
    2020-01-13 22:10:54 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:10:54 0064   recordset_id AS 'client_ADDRESS_1RECORDSET_ID_entry'
    2020-01-13 22:10:54 0065   RESIDENT client_address_1
    2020-01-13 22:10:55      	20 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, %entry_recordset_id, client_ADDRESS_1RECORDSET_ID_entry, 
    2020-01-13 22:10:55      128,827 lines fetched
    2020-01-13 22:10:55 0068 RS_Entry:
    2020-01-13 22:10:55 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:10:55 0070   FROM qlik_sclient_address_1 ft
    2020-01-13 22:10:55 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:10:55 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:10:55 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:10:55 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:10:55 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:10:55 0076   WHERE
    2020-01-13 22:10:55 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:10:55 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:10:55 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:10:55 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:10:55 0081    AND ((((ft.address_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:10:55 0082                    OR (((ft.address_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.address_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.address_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:10:55 0083   UNION
    2020-01-13 22:10:55 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:10:55 0085   FROM qlik_sclient_address_1 ft
    2020-01-13 22:10:55 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:10:55 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:10:55 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:10:55 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:10:55 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:10:55 0091   WHERE 
    2020-01-13 22:10:55 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:10:55 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:10:55 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:10:55 0095   AND ((((ft.address_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:10:55 0096                    OR (((ft.address_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.address_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.address_1enddate::DATE >= date(now()))))))
    2020-01-13 22:11:43      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:11:43      12,835 lines fetched
    2020-01-13 22:11:43 0100 RS_Entry_Explicit:
    2020-01-13 22:11:43 0101   Noconcatenate
    2020-01-13 22:11:43 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:11:43 0103   FROM qlik_sclient_address_1 ft
    2020-01-13 22:11:43 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:11:43 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:11:43 0106   WHERE 
    2020-01-13 22:11:43 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:11:43 0108   AND ((((ft.address_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:11:43 0109   AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:11:43 0110                    OR (((ft.address_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:11:43 0111 				   AND ((ft.address_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:11:43 0112 				   OR ((ft.address_1enddate::DATE >= date(now()))))))
    2020-01-13 22:12:07      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:07      22,701 lines fetched
    2020-01-13 22:12:07 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:07 0116   LOAD
    2020-01-13 22:12:07 0117   entry_exit_id, 
    2020-01-13 22:12:07 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:07 0119   question_id as %entryquestionid,
    2020-01-13 22:12:07 0120   provider_creating_id
    2020-01-13 22:12:07 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:07      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:07      22,701 lines fetched
    2020-01-13 22:12:07 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:07 0129 INNER JOIN(client_address_1_entry)
    2020-01-13 22:12:07 0130   LOAD DISTINCT
    2020-01-13 22:12:07 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:07 0132   recordset_id,
    2020-01-13 22:12:07 0133   provider_creating_id AS [client_ADDRESS_1_Provider_Creating_Entry],
    2020-01-13 22:12:07 0134   name AS [client_ADDRESS_1_Provider_Name_Creating_Entry],
    2020-01-13 22:12:07 0135   user_creating_id AS [client_ADDRESS_1_User_Created_By_Id_Entry],
    2020-01-13 22:12:07 0136   user_name AS [client_ADDRESS_1_User_Created_By_Entry]
    2020-01-13 22:12:07 0137   RESIDENT RS_Entry
    2020-01-13 22:12:08      	6 fields found: Entry Exit Id, recordset_id, client_ADDRESS_1_Provider_Creating_Entry, client_ADDRESS_1_Provider_Name_Creating_Entry, client_ADDRESS_1_User_Created_By_Id_Entry, client_ADDRESS_1_User_Created_By_Entry, 
    2020-01-13 22:12:08      12,835 lines fetched
    2020-01-13 22:12:08      Joining/Keeping
    2020-01-13 22:12:08 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:08 0141 DROP FIELDS client_id FROM client_address_1_entry
    2020-01-13 22:12:08 0142 DROP FIELDS recordset_id FROM client_address_1_entry
    2020-01-13 22:12:08 0143 DROP FIELDS [Entry Exit Id] FROM client_address_1_entry
    2020-01-13 22:12:08 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:08 0147   Mapping SQL
    2020-01-13 22:12:08 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:08 0149     FROM da_question dq
    2020-01-13 22:12:08 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0151     WHERE
    2020-01-13 22:12:08 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:08 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:08 0155     UNION
    2020-01-13 22:12:08 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:08 0157     FROM da_question dq
    2020-01-13 22:12:08 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0159     WHERE
    2020-01-13 22:12:08 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:08 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:08 0163      UNION
    2020-01-13 22:12:08 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:08 0165     FROM da_question dq
    2020-01-13 22:12:08 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0167     WHERE
    2020-01-13 22:12:08 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:08 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:08 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:08 0172     UNION
    2020-01-13 22:12:08 0173 
    2020-01-13 22:12:08 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:08 0175     FROM da_question dq
    2020-01-13 22:12:08 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0177     WHERE
    2020-01-13 22:12:08 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:08 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:08 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:08 0182     UNION   
    2020-01-13 22:12:08 0183     SELECT
    2020-01-13 22:12:08 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:08 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:08 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:08 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:08 0188     FROM da_question dq
    2020-01-13 22:12:08 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0190     WHERE
    2020-01-13 22:12:08 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:08 0193     UNION
    2020-01-13 22:12:08 0194 	SELECT
    2020-01-13 22:12:08 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:08 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:08 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:08 0198     FROM da_question dq
    2020-01-13 22:12:08 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:08 0200     WHERE
    2020-01-13 22:12:08 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:08 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:08      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:08      1,304 lines fetched
    2020-01-13 22:12:08 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:08 0205 DROP TABLE client_address_1
    2020-01-13 22:12:08 0207 LET varStepName='STEPENTRY_' & 0 & '_of_' & 50
    2020-01-13 22:12:08 0208 STEPENTRY_0_of_50: select 1
    2020-01-13 22:12:08      	1 fields found: ?column?, 
    2020-01-13 22:12:08      1 lines fetched
    2020-01-13 22:12:08 0209 DROP TABLE STEPENTRY_0_of_50
    2020-01-13 22:12:08 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:08 0212 NEXT
    2020-01-13 22:12:08 0037 LET varRecordSetTableName=Peek('sp_table_name',1,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:08 0038 LET varRecordSetQlikName=Peek('qlik_table_name',1,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:08 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',1,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:08 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('agesstagesquestionnai') <= 20),'agesstagesquestionnai' & 'end_1',left('agesstagesquestionnai', 20)& 'end_1')
    2020-01-13 22:12:08 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'agesstagesquestionnai' & 'enddate'
    2020-01-13 22:12:08 0042 LET varRecordSetQlikName_Entry= 'client_agesstagesquestionnai' & '_entry'
    2020-01-13 22:12:08 0043 LET varRecordSetQlikName_Exit='client_agesstagesquestionnai'& '_exit'
    2020-01-13 22:12:08 0045 LET varRecordSetQlikName_Interim='client_agesstagesquestionnai' & '_review'
    2020-01-13 22:12:08 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_agesstagesquestionnai', (len('client_agesstagesquestionnai'))-7))
    2020-01-13 22:12:08 0048 client_agesstagesquestionnai:
    2020-01-13 22:12:08 0049   SELECT * FROM qlik_sclient_agesstagesquestionnai
    2020-01-13 22:12:09      	9 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, 
    2020-01-13 22:12:09      244 lines fetched
    2020-01-13 22:12:09 0051 CustomEndFieldCheck:
    2020-01-13 22:12:09 0052   SELECT *
    2020-01-13 22:12:09 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'agesstagesquestionnaend_1'
    2020-01-13 22:12:09      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:12:09      0 lines fetched
    2020-01-13 22:12:09 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'agesstagesquestionnaend_1','agesstagesquestionnaienddate')
    2020-01-13 22:12:09 0059 client_agesstagesquestionnai_entry:
    2020-01-13 22:12:09 0060   Noconcatenate
    2020-01-13 22:12:09 0061   LOAD DISTINCT
    2020-01-13 22:12:09 0062   *,
    2020-01-13 22:12:09 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:12:09 0064   recordset_id AS 'client_AGESSTAGESQUESTIONNAIRECORDSET_ID_entry'
    2020-01-13 22:12:09 0065   RESIDENT client_agesstagesquestionnai
    2020-01-13 22:12:09      	11 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, %entry_recordset_id, client_AGESSTAGESQUESTIONNAIRECORDSET_ID_entry, 
    2020-01-13 22:12:09      244 lines fetched
    2020-01-13 22:12:09 0068 RS_Entry:
    2020-01-13 22:12:09 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:09 0070   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:12:09 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:09 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:09 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:09 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:09 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:12:09 0076   WHERE
    2020-01-13 22:12:09 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:12:09 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:09 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:09 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:12:09 0081    AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:12:09 0082                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) AND ((ft.agesstagesquestionnaienddate::DATE >= ee.entry_date::DATE) OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))))))				   
    2020-01-13 22:12:09 0083   UNION
    2020-01-13 22:12:09 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:09 0085   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:12:09 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:09 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:09 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:09 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:09 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:12:09 0091   WHERE 
    2020-01-13 22:12:09 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:12:09 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:09 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:12:09 0095   AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:12:09 0096                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) AND ((ft.agesstagesquestionnaienddate::DATE >= ee.entry_date::DATE) OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))))))
    2020-01-13 22:12:10      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:12:10      51 lines fetched
    2020-01-13 22:12:10 0100 RS_Entry_Explicit:
    2020-01-13 22:12:10 0101   Noconcatenate
    2020-01-13 22:12:10 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:12:10 0103   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:12:10 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:10 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:10 0106   WHERE 
    2020-01-13 22:12:10 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:10 0108   AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:10 0109   AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:12:10 0110                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:10 0111 				   AND ((ft.agesstagesquestionnaienddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:12:10 0112 				   OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))))))
    2020-01-13 22:12:10      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:10      141 lines fetched
    2020-01-13 22:12:10 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:10 0116   LOAD
    2020-01-13 22:12:10 0117   entry_exit_id, 
    2020-01-13 22:12:10 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:10 0119   question_id as %entryquestionid,
    2020-01-13 22:12:10 0120   provider_creating_id
    2020-01-13 22:12:10 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:10      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:10      22,842 lines fetched
    2020-01-13 22:12:10 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:10 0129 INNER JOIN(client_agesstagesquestionnai_entry)
    2020-01-13 22:12:10 0130   LOAD DISTINCT
    2020-01-13 22:12:10 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:10 0132   recordset_id,
    2020-01-13 22:12:10 0133   provider_creating_id AS [client_AGESSTAGESQUESTIONNAI_Provider_Creating_Entry],
    2020-01-13 22:12:10 0134   name AS [client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Entry],
    2020-01-13 22:12:10 0135   user_creating_id AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Entry],
    2020-01-13 22:12:10 0136   user_name AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Entry]
    2020-01-13 22:12:10 0137   RESIDENT RS_Entry
    2020-01-13 22:12:10      	6 fields found: Entry Exit Id, recordset_id, client_AGESSTAGESQUESTIONNAI_Provider_Creating_Entry, client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Entry, client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Entry, client_AGESSTAGESQUESTIONNAI_User_Created_By_Entry, 
    2020-01-13 22:12:10      51 lines fetched
    2020-01-13 22:12:10      Joining/Keeping
    2020-01-13 22:12:10 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:10 0141 DROP FIELDS client_id FROM client_agesstagesquestionnai_entry
    2020-01-13 22:12:10 0142 DROP FIELDS recordset_id FROM client_agesstagesquestionnai_entry
    2020-01-13 22:12:10 0143 DROP FIELDS [Entry Exit Id] FROM client_agesstagesquestionnai_entry
    2020-01-13 22:12:10 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:10 0147   Mapping SQL
    2020-01-13 22:12:10 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:10 0149     FROM da_question dq
    2020-01-13 22:12:10 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0151     WHERE
    2020-01-13 22:12:10 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:10 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:10 0155     UNION
    2020-01-13 22:12:10 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:10 0157     FROM da_question dq
    2020-01-13 22:12:10 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0159     WHERE
    2020-01-13 22:12:10 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:10 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:10 0163      UNION
    2020-01-13 22:12:10 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:10 0165     FROM da_question dq
    2020-01-13 22:12:10 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0167     WHERE
    2020-01-13 22:12:10 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:10 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:10 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:10 0172     UNION
    2020-01-13 22:12:10 0173 
    2020-01-13 22:12:10 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:10 0175     FROM da_question dq
    2020-01-13 22:12:10 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0177     WHERE
    2020-01-13 22:12:10 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:10 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:10 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:10 0182     UNION   
    2020-01-13 22:12:10 0183     SELECT
    2020-01-13 22:12:10 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:10 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:10 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:10 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:10 0188     FROM da_question dq
    2020-01-13 22:12:10 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0190     WHERE
    2020-01-13 22:12:10 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:10 0193     UNION
    2020-01-13 22:12:10 0194 	SELECT
    2020-01-13 22:12:10 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:10 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:10 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:10 0198     FROM da_question dq
    2020-01-13 22:12:10 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:10 0200     WHERE
    2020-01-13 22:12:10 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:10 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:11      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:11      1,304 lines fetched
    2020-01-13 22:12:11 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:11 0205 DROP TABLE client_agesstagesquestionnai
    2020-01-13 22:12:11 0207 LET varStepName='STEPENTRY_' & 1 & '_of_' & 50
    2020-01-13 22:12:11 0208 STEPENTRY_1_of_50: select 1
    2020-01-13 22:12:11      	1 fields found: ?column?, 
    2020-01-13 22:12:11      1 lines fetched
    2020-01-13 22:12:11 0209 DROP TABLE STEPENTRY_1_of_50
    2020-01-13 22:12:11 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:11 0212 NEXT
    2020-01-13 22:12:11 0037 LET varRecordSetTableName=Peek('sp_table_name',2,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:11 0038 LET varRecordSetQlikName=Peek('qlik_table_name',2,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:11 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',2,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:11 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('arrestrecord') <= 20),'arrestrecord' & 'end_1',left('arrestrecord', 20)& 'end_1')
    2020-01-13 22:12:11 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'arrestrecord' & 'enddate'
    2020-01-13 22:12:11 0042 LET varRecordSetQlikName_Entry= 'client_arrestrecord' & '_entry'
    2020-01-13 22:12:11 0043 LET varRecordSetQlikName_Exit='client_arrestrecord'& '_exit'
    2020-01-13 22:12:11 0045 LET varRecordSetQlikName_Interim='client_arrestrecord' & '_review'
    2020-01-13 22:12:11 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_arrestrecord', (len('client_arrestrecord'))-7))
    2020-01-13 22:12:11 0048 client_arrestrecord:
    2020-01-13 22:12:11 0049   SELECT * FROM qlik_sclient_arrestrecord
    2020-01-13 22:12:11      	9 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, 
    2020-01-13 22:12:11      249 lines fetched
    2020-01-13 22:12:11 0051 CustomEndFieldCheck:
    2020-01-13 22:12:11 0052   SELECT *
    2020-01-13 22:12:11 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'arrestrecordend_1'
    2020-01-13 22:12:12      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:12:12      0 lines fetched
    2020-01-13 22:12:12 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'arrestrecordend_1','arrestrecordenddate')
    2020-01-13 22:12:12 0059 client_arrestrecord_entry:
    2020-01-13 22:12:12 0060   Noconcatenate
    2020-01-13 22:12:12 0061   LOAD DISTINCT
    2020-01-13 22:12:12 0062   *,
    2020-01-13 22:12:12 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:12:12 0064   recordset_id AS 'client_ARRESTRECORDRECORDSET_ID_entry'
    2020-01-13 22:12:12 0065   RESIDENT client_arrestrecord
    2020-01-13 22:12:12      	11 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, %entry_recordset_id, client_ARRESTRECORDRECORDSET_ID_entry, 
    2020-01-13 22:12:12      249 lines fetched
    2020-01-13 22:12:12 0068 RS_Entry:
    2020-01-13 22:12:12 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:12 0070   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:12:12 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:12 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:12 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:12 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:12 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:12:12 0076   WHERE
    2020-01-13 22:12:12 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:12:12 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:12 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:12 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:12:12 0081    AND ((((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:12:12 0082                    OR (((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.arrestrecordenddate::DATE >= ee.entry_date::DATE) OR ((ft.arrestrecordenddate::DATE >= date(now()))))))				   
    2020-01-13 22:12:12 0083   UNION
    2020-01-13 22:12:12 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:12 0085   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:12:12 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:12 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:12 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:12 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:12 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:12:12 0091   WHERE 
    2020-01-13 22:12:12 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:12:12 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:12 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:12:12 0095   AND ((((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:12:12 0096                    OR (((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.arrestrecordenddate::DATE >= ee.entry_date::DATE) OR ((ft.arrestrecordenddate::DATE >= date(now()))))))
    2020-01-13 22:12:12      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:12:12      4 lines fetched
    2020-01-13 22:12:12 0100 RS_Entry_Explicit:
    2020-01-13 22:12:12 0101   Noconcatenate
    2020-01-13 22:12:12 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:12:12 0103   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:12:12 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:12 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:12 0106   WHERE 
    2020-01-13 22:12:12 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:12 0108   AND ((((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:12 0109   AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:12:12 0110                    OR (((ft.arrestrecordstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:12 0111 				   AND ((ft.arrestrecordenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:12:12 0112 				   OR ((ft.arrestrecordenddate::DATE >= date(now()))))))
    2020-01-13 22:12:12      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:12      13 lines fetched
    2020-01-13 22:12:12 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:12 0116   LOAD
    2020-01-13 22:12:12 0117   entry_exit_id, 
    2020-01-13 22:12:12 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:12 0119   question_id as %entryquestionid,
    2020-01-13 22:12:12 0120   provider_creating_id
    2020-01-13 22:12:12 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:12      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:12      22,855 lines fetched
    2020-01-13 22:12:12 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:12 0129 INNER JOIN(client_arrestrecord_entry)
    2020-01-13 22:12:12 0130   LOAD DISTINCT
    2020-01-13 22:12:12 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:12 0132   recordset_id,
    2020-01-13 22:12:12 0133   provider_creating_id AS [client_ARRESTRECORD_Provider_Creating_Entry],
    2020-01-13 22:12:12 0134   name AS [client_ARRESTRECORD_Provider_Name_Creating_Entry],
    2020-01-13 22:12:12 0135   user_creating_id AS [client_ARRESTRECORD_User_Created_By_Id_Entry],
    2020-01-13 22:12:12 0136   user_name AS [client_ARRESTRECORD_User_Created_By_Entry]
    2020-01-13 22:12:12 0137   RESIDENT RS_Entry
    2020-01-13 22:12:12      	6 fields found: Entry Exit Id, recordset_id, client_ARRESTRECORD_Provider_Creating_Entry, client_ARRESTRECORD_Provider_Name_Creating_Entry, client_ARRESTRECORD_User_Created_By_Id_Entry, client_ARRESTRECORD_User_Created_By_Entry, 
    2020-01-13 22:12:12      4 lines fetched
    2020-01-13 22:12:12      Joining/Keeping
    2020-01-13 22:12:12 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:12 0141 DROP FIELDS client_id FROM client_arrestrecord_entry
    2020-01-13 22:12:12 0142 DROP FIELDS recordset_id FROM client_arrestrecord_entry
    2020-01-13 22:12:12 0143 DROP FIELDS [Entry Exit Id] FROM client_arrestrecord_entry
    2020-01-13 22:12:12 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:12 0147   Mapping SQL
    2020-01-13 22:12:12 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:12 0149     FROM da_question dq
    2020-01-13 22:12:12 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0151     WHERE
    2020-01-13 22:12:12 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:12 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:12 0155     UNION
    2020-01-13 22:12:12 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:12 0157     FROM da_question dq
    2020-01-13 22:12:12 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0159     WHERE
    2020-01-13 22:12:12 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:12 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:12 0163      UNION
    2020-01-13 22:12:12 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:12 0165     FROM da_question dq
    2020-01-13 22:12:12 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0167     WHERE
    2020-01-13 22:12:12 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:12 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:12 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:12 0172     UNION
    2020-01-13 22:12:12 0173 
    2020-01-13 22:12:12 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:12 0175     FROM da_question dq
    2020-01-13 22:12:12 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0177     WHERE
    2020-01-13 22:12:12 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:12 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:12 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:12 0182     UNION   
    2020-01-13 22:12:12 0183     SELECT
    2020-01-13 22:12:12 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:12 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:12 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:12 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:12 0188     FROM da_question dq
    2020-01-13 22:12:12 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0190     WHERE
    2020-01-13 22:12:12 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:12 0193     UNION
    2020-01-13 22:12:12 0194 	SELECT
    2020-01-13 22:12:12 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:12 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:12 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:12 0198     FROM da_question dq
    2020-01-13 22:12:12 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:12 0200     WHERE
    2020-01-13 22:12:12 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:12 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:13      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:13      1,304 lines fetched
    2020-01-13 22:12:13 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:13 0205 DROP TABLE client_arrestrecord
    2020-01-13 22:12:13 0207 LET varStepName='STEPENTRY_' & 2 & '_of_' & 50
    2020-01-13 22:12:13 0208 STEPENTRY_2_of_50: select 1
    2020-01-13 22:12:13      	1 fields found: ?column?, 
    2020-01-13 22:12:13      1 lines fetched
    2020-01-13 22:12:13 0209 DROP TABLE STEPENTRY_2_of_50
    2020-01-13 22:12:13 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:13 0212 NEXT
    2020-01-13 22:12:13 0037 LET varRecordSetTableName=Peek('sp_table_name',3,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:13 0038 LET varRecordSetQlikName=Peek('qlik_table_name',3,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:13 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',3,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:13 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bnlstatus') <= 20),'bnlstatus' & 'end_1',left('bnlstatus', 20)& 'end_1')
    2020-01-13 22:12:13 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'bnlstatus' & 'enddate'
    2020-01-13 22:12:13 0042 LET varRecordSetQlikName_Entry= 'client_bnlstatus' & '_entry'
    2020-01-13 22:12:13 0043 LET varRecordSetQlikName_Exit='client_bnlstatus'& '_exit'
    2020-01-13 22:12:13 0045 LET varRecordSetQlikName_Interim='client_bnlstatus' & '_review'
    2020-01-13 22:12:13 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_bnlstatus', (len('client_bnlstatus'))-7))
    2020-01-13 22:12:13 0048 client_bnlstatus:
    2020-01-13 22:12:13 0049   SELECT * FROM qlik_sclient_bnlstatus
    2020-01-13 22:12:13      	7 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, 
    2020-01-13 22:12:13      3,117 lines fetched
    2020-01-13 22:12:13 0051 CustomEndFieldCheck:
    2020-01-13 22:12:13 0052   SELECT *
    2020-01-13 22:12:13 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bnlstatusend_1'
    2020-01-13 22:12:13      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:12:13      0 lines fetched
    2020-01-13 22:12:13 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bnlstatusend_1','bnlstatusenddate')
    2020-01-13 22:12:13 0059 client_bnlstatus_entry:
    2020-01-13 22:12:13 0060   Noconcatenate
    2020-01-13 22:12:13 0061   LOAD DISTINCT
    2020-01-13 22:12:13 0062   *,
    2020-01-13 22:12:13 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:12:13 0064   recordset_id AS 'client_BNLSTATUSRECORDSET_ID_entry'
    2020-01-13 22:12:13 0065   RESIDENT client_bnlstatus
    2020-01-13 22:12:14      	9 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, %entry_recordset_id, client_BNLSTATUSRECORDSET_ID_entry, 
    2020-01-13 22:12:14      3,117 lines fetched
    2020-01-13 22:12:14 0068 RS_Entry:
    2020-01-13 22:12:14 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:14 0070   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:12:14 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:14 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:14 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:14 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:14 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:12:14 0076   WHERE
    2020-01-13 22:12:14 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:12:14 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:14 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:14 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:12:14 0081    AND ((((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:12:14 0082                    OR (((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.bnlstatusenddate::DATE >= ee.entry_date::DATE) OR ((ft.bnlstatusenddate::DATE >= date(now()))))))				   
    2020-01-13 22:12:14 0083   UNION
    2020-01-13 22:12:14 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:14 0085   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:12:14 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:14 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:14 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:14 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:14 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:12:14 0091   WHERE 
    2020-01-13 22:12:14 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:12:14 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:14 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:12:14 0095   AND ((((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:12:14 0096                    OR (((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.bnlstatusenddate::DATE >= ee.entry_date::DATE) OR ((ft.bnlstatusenddate::DATE >= date(now()))))))
    2020-01-13 22:12:14      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:12:14      937 lines fetched
    2020-01-13 22:12:14 0100 RS_Entry_Explicit:
    2020-01-13 22:12:14 0101   Noconcatenate
    2020-01-13 22:12:14 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:12:14 0103   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:12:14 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:14 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:14 0106   WHERE 
    2020-01-13 22:12:14 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:14 0108   AND ((((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:14 0109   AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:12:14 0110                    OR (((ft.bnlstatusstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:14 0111 				   AND ((ft.bnlstatusenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:12:14 0112 				   OR ((ft.bnlstatusenddate::DATE >= date(now()))))))
    2020-01-13 22:12:14      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:14      3,850 lines fetched
    2020-01-13 22:12:14 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:14 0116   LOAD
    2020-01-13 22:12:14 0117   entry_exit_id, 
    2020-01-13 22:12:14 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:14 0119   question_id as %entryquestionid,
    2020-01-13 22:12:14 0120   provider_creating_id
    2020-01-13 22:12:14 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:14      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:14      26,705 lines fetched
    2020-01-13 22:12:14 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:14 0129 INNER JOIN(client_bnlstatus_entry)
    2020-01-13 22:12:14 0130   LOAD DISTINCT
    2020-01-13 22:12:14 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:14 0132   recordset_id,
    2020-01-13 22:12:14 0133   provider_creating_id AS [client_BNLSTATUS_Provider_Creating_Entry],
    2020-01-13 22:12:14 0134   name AS [client_BNLSTATUS_Provider_Name_Creating_Entry],
    2020-01-13 22:12:14 0135   user_creating_id AS [client_BNLSTATUS_User_Created_By_Id_Entry],
    2020-01-13 22:12:14 0136   user_name AS [client_BNLSTATUS_User_Created_By_Entry]
    2020-01-13 22:12:14 0137   RESIDENT RS_Entry
    2020-01-13 22:12:14      	6 fields found: Entry Exit Id, recordset_id, client_BNLSTATUS_Provider_Creating_Entry, client_BNLSTATUS_Provider_Name_Creating_Entry, client_BNLSTATUS_User_Created_By_Id_Entry, client_BNLSTATUS_User_Created_By_Entry, 
    2020-01-13 22:12:14      937 lines fetched
    2020-01-13 22:12:14      Joining/Keeping
    2020-01-13 22:12:15 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:15 0141 DROP FIELDS client_id FROM client_bnlstatus_entry
    2020-01-13 22:12:15 0142 DROP FIELDS recordset_id FROM client_bnlstatus_entry
    2020-01-13 22:12:15 0143 DROP FIELDS [Entry Exit Id] FROM client_bnlstatus_entry
    2020-01-13 22:12:15 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:15 0147   Mapping SQL
    2020-01-13 22:12:15 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:15 0149     FROM da_question dq
    2020-01-13 22:12:15 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0151     WHERE
    2020-01-13 22:12:15 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:15 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:15 0155     UNION
    2020-01-13 22:12:15 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:15 0157     FROM da_question dq
    2020-01-13 22:12:15 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0159     WHERE
    2020-01-13 22:12:15 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:15 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:15 0163      UNION
    2020-01-13 22:12:15 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:15 0165     FROM da_question dq
    2020-01-13 22:12:15 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0167     WHERE
    2020-01-13 22:12:15 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:15 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:15 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:15 0172     UNION
    2020-01-13 22:12:15 0173 
    2020-01-13 22:12:15 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:15 0175     FROM da_question dq
    2020-01-13 22:12:15 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0177     WHERE
    2020-01-13 22:12:15 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:15 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:15 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:15 0182     UNION   
    2020-01-13 22:12:15 0183     SELECT
    2020-01-13 22:12:15 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:15 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:15 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:15 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:15 0188     FROM da_question dq
    2020-01-13 22:12:15 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0190     WHERE
    2020-01-13 22:12:15 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:15 0193     UNION
    2020-01-13 22:12:15 0194 	SELECT
    2020-01-13 22:12:15 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:15 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:15 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:15 0198     FROM da_question dq
    2020-01-13 22:12:15 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:15 0200     WHERE
    2020-01-13 22:12:15 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:15 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:15      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:15      1,304 lines fetched
    2020-01-13 22:12:15 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:15 0205 DROP TABLE client_bnlstatus
    2020-01-13 22:12:15 0207 LET varStepName='STEPENTRY_' & 3 & '_of_' & 50
    2020-01-13 22:12:15 0208 STEPENTRY_3_of_50: select 1
    2020-01-13 22:12:15      	1 fields found: ?column?, 
    2020-01-13 22:12:15      1 lines fetched
    2020-01-13 22:12:15 0209 DROP TABLE STEPENTRY_3_of_50
    2020-01-13 22:12:15 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:15 0212 NEXT
    2020-01-13 22:12:15 0037 LET varRecordSetTableName=Peek('sp_table_name',4,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:15 0038 LET varRecordSetQlikName=Peek('qlik_table_name',4,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:15 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',4,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:15 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bridgeprogramcriteria') <= 20),'bridgeprogramcriteria' & 'end_1',left('bridgeprogramcriteria', 20)& 'end_1')
    2020-01-13 22:12:15 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'bridgeprogramcriteria' & 'enddate'
    2020-01-13 22:12:15 0042 LET varRecordSetQlikName_Entry= 'client_bridgeprogramcriteria' & '_entry'
    2020-01-13 22:12:15 0043 LET varRecordSetQlikName_Exit='client_bridgeprogramcriteria'& '_exit'
    2020-01-13 22:12:15 0045 LET varRecordSetQlikName_Interim='client_bridgeprogramcriteria' & '_review'
    2020-01-13 22:12:15 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_bridgeprogramcriteria', (len('client_bridgeprogramcriteria'))-7))
    2020-01-13 22:12:15 0048 client_bridgeprogramcriteria:
    2020-01-13 22:12:15 0049   SELECT * FROM qlik_sclient_bridgeprogramcriteria
    2020-01-13 22:12:16      	6 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, 
    2020-01-13 22:12:16      4,854 lines fetched
    2020-01-13 22:12:16 0051 CustomEndFieldCheck:
    2020-01-13 22:12:16 0052   SELECT *
    2020-01-13 22:12:16 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bridgeprogramcriteriend_1'
    2020-01-13 22:12:16      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:12:16      0 lines fetched
    2020-01-13 22:12:16 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bridgeprogramcriteriend_1','bridgeprogramcriteriaenddate')
    2020-01-13 22:12:16 0059 client_bridgeprogramcriteria_entry:
    2020-01-13 22:12:16 0060   Noconcatenate
    2020-01-13 22:12:16 0061   LOAD DISTINCT
    2020-01-13 22:12:16 0062   *,
    2020-01-13 22:12:16 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:12:16 0064   recordset_id AS 'client_BRIDGEPROGRAMCRITERIARECORDSET_ID_entry'
    2020-01-13 22:12:16 0065   RESIDENT client_bridgeprogramcriteria
    2020-01-13 22:12:16      	8 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, %entry_recordset_id, client_BRIDGEPROGRAMCRITERIARECORDSET_ID_entry, 
    2020-01-13 22:12:16      4,854 lines fetched
    2020-01-13 22:12:16 0068 RS_Entry:
    2020-01-13 22:12:16 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:16 0070   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:12:16 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:16 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:16 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:16 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:16 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:12:16 0076   WHERE
    2020-01-13 22:12:16 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:12:16 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:16 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:16 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:12:16 0081    AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:12:16 0082                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.entry_date::DATE) OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:12:16 0083   UNION
    2020-01-13 22:12:16 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:16 0085   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:12:16 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:16 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:16 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:16 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:16 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:12:16 0091   WHERE 
    2020-01-13 22:12:16 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:12:16 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:16 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:12:16 0095   AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:12:16 0096                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.entry_date::DATE) OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))))))
    2020-01-13 22:12:17      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:12:17      4,086 lines fetched
    2020-01-13 22:12:17 0100 RS_Entry_Explicit:
    2020-01-13 22:12:17 0101   Noconcatenate
    2020-01-13 22:12:17 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:12:17 0103   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:12:17 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:17 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:17 0106   WHERE 
    2020-01-13 22:12:17 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:17 0108   AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:17 0109   AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:12:17 0110                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:17 0111 				   AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:12:17 0112 				   OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))))))
    2020-01-13 22:12:18      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:18      5,326 lines fetched
    2020-01-13 22:12:18 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:18 0116   LOAD
    2020-01-13 22:12:18 0117   entry_exit_id, 
    2020-01-13 22:12:18 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:18 0119   question_id as %entryquestionid,
    2020-01-13 22:12:18 0120   provider_creating_id
    2020-01-13 22:12:18 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:18      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:18      32,031 lines fetched
    2020-01-13 22:12:18 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:18 0129 INNER JOIN(client_bridgeprogramcriteria_entry)
    2020-01-13 22:12:18 0130   LOAD DISTINCT
    2020-01-13 22:12:18 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:18 0132   recordset_id,
    2020-01-13 22:12:18 0133   provider_creating_id AS [client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Entry],
    2020-01-13 22:12:18 0134   name AS [client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Entry],
    2020-01-13 22:12:18 0135   user_creating_id AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Entry],
    2020-01-13 22:12:18 0136   user_name AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Entry]
    2020-01-13 22:12:18 0137   RESIDENT RS_Entry
    2020-01-13 22:12:18      	6 fields found: Entry Exit Id, recordset_id, client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Entry, client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Entry, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Entry, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Entry, 
    2020-01-13 22:12:18      4,086 lines fetched
    2020-01-13 22:12:18      Joining/Keeping
    2020-01-13 22:12:18 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:18 0141 DROP FIELDS client_id FROM client_bridgeprogramcriteria_entry
    2020-01-13 22:12:18 0142 DROP FIELDS recordset_id FROM client_bridgeprogramcriteria_entry
    2020-01-13 22:12:18 0143 DROP FIELDS [Entry Exit Id] FROM client_bridgeprogramcriteria_entry
    2020-01-13 22:12:18 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:18 0147   Mapping SQL
    2020-01-13 22:12:18 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:18 0149     FROM da_question dq
    2020-01-13 22:12:18 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0151     WHERE
    2020-01-13 22:12:18 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:18 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:18 0155     UNION
    2020-01-13 22:12:18 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:18 0157     FROM da_question dq
    2020-01-13 22:12:18 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0159     WHERE
    2020-01-13 22:12:18 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:18 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:18 0163      UNION
    2020-01-13 22:12:18 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:18 0165     FROM da_question dq
    2020-01-13 22:12:18 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0167     WHERE
    2020-01-13 22:12:18 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:18 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:18 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:18 0172     UNION
    2020-01-13 22:12:18 0173 
    2020-01-13 22:12:18 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:18 0175     FROM da_question dq
    2020-01-13 22:12:18 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0177     WHERE
    2020-01-13 22:12:18 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:18 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:18 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:18 0182     UNION   
    2020-01-13 22:12:18 0183     SELECT
    2020-01-13 22:12:18 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:18 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:18 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:18 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:18 0188     FROM da_question dq
    2020-01-13 22:12:18 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0190     WHERE
    2020-01-13 22:12:18 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:18 0193     UNION
    2020-01-13 22:12:18 0194 	SELECT
    2020-01-13 22:12:18 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:18 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:18 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:18 0198     FROM da_question dq
    2020-01-13 22:12:18 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:18 0200     WHERE
    2020-01-13 22:12:18 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:18 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:18      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:18      1,304 lines fetched
    2020-01-13 22:12:18 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:18 0205 DROP TABLE client_bridgeprogramcriteria
    2020-01-13 22:12:18 0207 LET varStepName='STEPENTRY_' & 4 & '_of_' & 50
    2020-01-13 22:12:18 0208 STEPENTRY_4_of_50: select 1
    2020-01-13 22:12:18      	1 fields found: ?column?, 
    2020-01-13 22:12:18      1 lines fetched
    2020-01-13 22:12:18 0209 DROP TABLE STEPENTRY_4_of_50
    2020-01-13 22:12:18 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:18 0212 NEXT
    2020-01-13 22:12:18 0037 LET varRecordSetTableName=Peek('sp_table_name',5,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:18 0038 LET varRecordSetQlikName=Peek('qlik_table_name',5,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:18 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',5,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:18 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('cedocumentationreview') <= 20),'cedocumentationreview' & 'end_1',left('cedocumentationreview', 20)& 'end_1')
    2020-01-13 22:12:18 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'cedocumentationreview' & 'enddate'
    2020-01-13 22:12:18 0042 LET varRecordSetQlikName_Entry= 'client_cedocumentationreview' & '_entry'
    2020-01-13 22:12:18 0043 LET varRecordSetQlikName_Exit='client_cedocumentationreview'& '_exit'
    2020-01-13 22:12:18 0045 LET varRecordSetQlikName_Interim='client_cedocumentationreview' & '_review'
    2020-01-13 22:12:18 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_cedocumentationreview', (len('client_cedocumentationreview'))-7))
    2020-01-13 22:12:18 0048 client_cedocumentationreview:
    2020-01-13 22:12:18 0049   SELECT * FROM qlik_sclient_cedocumentationreview
    2020-01-13 22:12:19      	6 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, 
    2020-01-13 22:12:19      712 lines fetched
    2020-01-13 22:12:19 0051 CustomEndFieldCheck:
    2020-01-13 22:12:19 0052   SELECT *
    2020-01-13 22:12:19 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'cedocumentationrevieend_1'
    2020-01-13 22:12:20      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:12:20      0 lines fetched
    2020-01-13 22:12:20 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'cedocumentationrevieend_1','cedocumentationreviewenddate')
    2020-01-13 22:12:20 0059 client_cedocumentationreview_entry:
    2020-01-13 22:12:20 0060   Noconcatenate
    2020-01-13 22:12:20 0061   LOAD DISTINCT
    2020-01-13 22:12:20 0062   *,
    2020-01-13 22:12:20 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:12:20 0064   recordset_id AS 'client_CEDOCUMENTATIONREVIEWRECORDSET_ID_entry'
    2020-01-13 22:12:20 0065   RESIDENT client_cedocumentationreview
    2020-01-13 22:12:20      	8 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, %entry_recordset_id, client_CEDOCUMENTATIONREVIEWRECORDSET_ID_entry, 
    2020-01-13 22:12:20      712 lines fetched
    2020-01-13 22:12:20 0068 RS_Entry:
    2020-01-13 22:12:20 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:20 0070   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:12:20 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:20 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:20 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:20 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:20 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:12:20 0076   WHERE
    2020-01-13 22:12:20 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:12:20 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:20 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:20 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:12:20 0081    AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:12:20 0082                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.cedocumentationreviewenddate::DATE >= ee.entry_date::DATE) OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))))))				   
    2020-01-13 22:12:20 0083   UNION
    2020-01-13 22:12:20 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:12:20 0085   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:12:20 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:20 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:12:20 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:12:20 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:20 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:12:20 0091   WHERE 
    2020-01-13 22:12:20 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:12:20 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:20 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:12:20 0095   AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:12:20 0096                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.cedocumentationreviewenddate::DATE >= ee.entry_date::DATE) OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))))))
    2020-01-13 22:12:21      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:12:21      322 lines fetched
    2020-01-13 22:12:21 0100 RS_Entry_Explicit:
    2020-01-13 22:12:21 0101   Noconcatenate
    2020-01-13 22:12:21 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:12:21 0103   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:12:21 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:12:21 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:12:21 0106   WHERE 
    2020-01-13 22:12:21 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:12:21 0108   AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:21 0109   AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:12:21 0110                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:12:21 0111 				   AND ((ft.cedocumentationreviewenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:12:21 0112 				   OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))))))
    2020-01-13 22:12:21      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:12:21      758 lines fetched
    2020-01-13 22:12:21 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:12:21 0116   LOAD
    2020-01-13 22:12:21 0117   entry_exit_id, 
    2020-01-13 22:12:21 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:12:21 0119   question_id as %entryquestionid,
    2020-01-13 22:12:21 0120   provider_creating_id
    2020-01-13 22:12:21 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:12:21      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:12:21      32,789 lines fetched
    2020-01-13 22:12:21 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:12:21 0129 INNER JOIN(client_cedocumentationreview_entry)
    2020-01-13 22:12:21 0130   LOAD DISTINCT
    2020-01-13 22:12:21 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:12:21 0132   recordset_id,
    2020-01-13 22:12:21 0133   provider_creating_id AS [client_CEDOCUMENTATIONREVIEW_Provider_Creating_Entry],
    2020-01-13 22:12:21 0134   name AS [client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Entry],
    2020-01-13 22:12:21 0135   user_creating_id AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Entry],
    2020-01-13 22:12:21 0136   user_name AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Entry]
    2020-01-13 22:12:21 0137   RESIDENT RS_Entry
    2020-01-13 22:12:21      	6 fields found: Entry Exit Id, recordset_id, client_CEDOCUMENTATIONREVIEW_Provider_Creating_Entry, client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Entry, client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Entry, client_CEDOCUMENTATIONREVIEW_User_Created_By_Entry, 
    2020-01-13 22:12:21      322 lines fetched
    2020-01-13 22:12:21      Joining/Keeping
    2020-01-13 22:12:22 0139 DROP TABLE RS_Entry
    2020-01-13 22:12:22 0141 DROP FIELDS client_id FROM client_cedocumentationreview_entry
    2020-01-13 22:12:22 0142 DROP FIELDS recordset_id FROM client_cedocumentationreview_entry
    2020-01-13 22:12:22 0143 DROP FIELDS [Entry Exit Id] FROM client_cedocumentationreview_entry
    2020-01-13 22:12:22 0146 FieldMapSaClientEntry:
    2020-01-13 22:12:22 0147   Mapping SQL
    2020-01-13 22:12:22 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:22 0149     FROM da_question dq
    2020-01-13 22:12:22 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0151     WHERE
    2020-01-13 22:12:22 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:12:22 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:12:22 0155     UNION
    2020-01-13 22:12:22 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:22 0157     FROM da_question dq
    2020-01-13 22:12:22 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0159     WHERE
    2020-01-13 22:12:22 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:12:22 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:12:22 0163      UNION
    2020-01-13 22:12:22 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:12:22 0165     FROM da_question dq
    2020-01-13 22:12:22 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0167     WHERE
    2020-01-13 22:12:22 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:12:22 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:12:22 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:22 0172     UNION
    2020-01-13 22:12:22 0173 
    2020-01-13 22:12:22 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:12:22 0175     FROM da_question dq
    2020-01-13 22:12:22 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0177     WHERE
    2020-01-13 22:12:22 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:12:22 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:12:22 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:12:22 0182     UNION   
    2020-01-13 22:12:22 0183     SELECT
    2020-01-13 22:12:22 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:12:22 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:22 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:22 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:12:22 0188     FROM da_question dq
    2020-01-13 22:12:22 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0190     WHERE
    2020-01-13 22:12:22 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:22 0193     UNION
    2020-01-13 22:12:22 0194 	SELECT
    2020-01-13 22:12:22 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:22 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:12:22 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:12:22 0198     FROM da_question dq
    2020-01-13 22:12:22 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:12:22 0200     WHERE
    2020-01-13 22:12:22 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:12:22 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:12:23      	2 fields found: oldnames, newnames, 
    2020-01-13 22:12:23      1,304 lines fetched
    2020-01-13 22:12:23 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:12:23 0205 DROP TABLE client_cedocumentationreview
    2020-01-13 22:12:23 0207 LET varStepName='STEPENTRY_' & 5 & '_of_' & 50
    2020-01-13 22:12:23 0208 STEPENTRY_5_of_50: select 1
    2020-01-13 22:12:23      	1 fields found: ?column?, 
    2020-01-13 22:12:23      1 lines fetched
    2020-01-13 22:12:23 0209 DROP TABLE STEPENTRY_5_of_50
    2020-01-13 22:12:23 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:12:23 0212 NEXT
    2020-01-13 22:12:23 0037 LET varRecordSetTableName=Peek('sp_table_name',6,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:23 0038 LET varRecordSetQlikName=Peek('qlik_table_name',6,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:23 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',6,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:12:23 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('disabilities_1') <= 20),'disabilities_1' & 'end_1',left('disabilities_1', 20)& 'end_1')
    2020-01-13 22:12:23 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'disabilities_1' & 'enddate'
    2020-01-13 22:12:23 0042 LET varRecordSetQlikName_Entry= 'client_disabilities_1' & '_entry'
    2020-01-13 22:12:23 0043 LET varRecordSetQlikName_Exit='client_disabilities_1'& '_exit'
    2020-01-13 22:12:23 0045 LET varRecordSetQlikName_Interim='client_disabilities_1' & '_review'
    2020-01-13 22:12:23 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_disabilities_1', (len('client_disabilities_1'))-7))
    2020-01-13 22:12:23 0048 client_disabilities_1:
    2020-01-13 22:12:23 0049   SELECT * FROM qlik_sclient_disabilities_1
    2020-01-13 22:13:06      	9 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, 
    2020-01-13 22:13:06      484,147 lines fetched
    2020-01-13 22:13:06 0051 CustomEndFieldCheck:
    2020-01-13 22:13:06 0052   SELECT *
    2020-01-13 22:13:06 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'disabilities_1end_1'
    2020-01-13 22:13:06      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:13:06      0 lines fetched
    2020-01-13 22:13:06 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'disabilities_1end_1','disabilities_1enddate')
    2020-01-13 22:13:06 0059 client_disabilities_1_entry:
    2020-01-13 22:13:06 0060   Noconcatenate
    2020-01-13 22:13:06 0061   LOAD DISTINCT
    2020-01-13 22:13:06 0062   *,
    2020-01-13 22:13:06 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:13:06 0064   recordset_id AS 'client_DISABILITIES_1RECORDSET_ID_entry'
    2020-01-13 22:13:06 0065   RESIDENT client_disabilities_1
    2020-01-13 22:13:07      	11 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, %entry_recordset_id, client_DISABILITIES_1RECORDSET_ID_entry, 
    2020-01-13 22:13:07      484,147 lines fetched
    2020-01-13 22:13:07 0068 RS_Entry:
    2020-01-13 22:13:07 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:13:07 0070   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:13:07 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:13:07 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:13:07 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:13:07 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:13:07 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:13:07 0076   WHERE
    2020-01-13 22:13:07 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:13:07 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:13:07 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:13:07 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:13:07 0081    AND ((((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:13:07 0082                    OR (((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.disabilities_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.disabilities_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:13:07 0083   UNION
    2020-01-13 22:13:07 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:13:07 0085   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:13:07 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:13:07 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:13:07 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:13:07 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:13:07 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:13:07 0091   WHERE 
    2020-01-13 22:13:07 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:13:07 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:13:07 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:13:07 0095   AND ((((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:13:07 0096                    OR (((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.disabilities_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.disabilities_1enddate::DATE >= date(now()))))))
    2020-01-13 22:14:13      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:14:13      190,365 lines fetched
    2020-01-13 22:14:13 0100 RS_Entry_Explicit:
    2020-01-13 22:14:13 0101   Noconcatenate
    2020-01-13 22:14:13 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:14:13 0103   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:14:13 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:13 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:13 0106   WHERE 
    2020-01-13 22:14:13 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:13 0108   AND ((((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:13 0109   AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:14:13 0110                    OR (((ft.disabilities_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:13 0111 				   AND ((ft.disabilities_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:14:13 0112 				   OR ((ft.disabilities_1enddate::DATE >= date(now()))))))
    2020-01-13 22:14:47      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:14:47      318,433 lines fetched
    2020-01-13 22:14:47 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:14:47 0116   LOAD
    2020-01-13 22:14:47 0117   entry_exit_id, 
    2020-01-13 22:14:47 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:14:47 0119   question_id as %entryquestionid,
    2020-01-13 22:14:47 0120   provider_creating_id
    2020-01-13 22:14:47 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:14:47      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:14:47      351,222 lines fetched
    2020-01-13 22:14:48 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:14:48 0129 INNER JOIN(client_disabilities_1_entry)
    2020-01-13 22:14:48 0130   LOAD DISTINCT
    2020-01-13 22:14:48 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:14:48 0132   recordset_id,
    2020-01-13 22:14:48 0133   provider_creating_id AS [client_DISABILITIES_1_Provider_Creating_Entry],
    2020-01-13 22:14:48 0134   name AS [client_DISABILITIES_1_Provider_Name_Creating_Entry],
    2020-01-13 22:14:48 0135   user_creating_id AS [client_DISABILITIES_1_User_Created_By_Id_Entry],
    2020-01-13 22:14:48 0136   user_name AS [client_DISABILITIES_1_User_Created_By_Entry]
    2020-01-13 22:14:48 0137   RESIDENT RS_Entry
    2020-01-13 22:14:48      	6 fields found: Entry Exit Id, recordset_id, client_DISABILITIES_1_Provider_Creating_Entry, client_DISABILITIES_1_Provider_Name_Creating_Entry, client_DISABILITIES_1_User_Created_By_Id_Entry, client_DISABILITIES_1_User_Created_By_Entry, 
    2020-01-13 22:14:48      190,365 lines fetched
    2020-01-13 22:14:48      Joining/Keeping
    2020-01-13 22:14:48 0139 DROP TABLE RS_Entry
    2020-01-13 22:14:48 0141 DROP FIELDS client_id FROM client_disabilities_1_entry
    2020-01-13 22:14:48 0142 DROP FIELDS recordset_id FROM client_disabilities_1_entry
    2020-01-13 22:14:48 0143 DROP FIELDS [Entry Exit Id] FROM client_disabilities_1_entry
    2020-01-13 22:14:48 0146 FieldMapSaClientEntry:
    2020-01-13 22:14:48 0147   Mapping SQL
    2020-01-13 22:14:48 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:48 0149     FROM da_question dq
    2020-01-13 22:14:48 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0151     WHERE
    2020-01-13 22:14:48 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:14:48 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:14:48 0155     UNION
    2020-01-13 22:14:48 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:48 0157     FROM da_question dq
    2020-01-13 22:14:48 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0159     WHERE
    2020-01-13 22:14:48 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:14:48 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:14:48 0163      UNION
    2020-01-13 22:14:48 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:48 0165     FROM da_question dq
    2020-01-13 22:14:48 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0167     WHERE
    2020-01-13 22:14:48 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:14:48 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:14:48 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:48 0172     UNION
    2020-01-13 22:14:48 0173 
    2020-01-13 22:14:48 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:48 0175     FROM da_question dq
    2020-01-13 22:14:48 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0177     WHERE
    2020-01-13 22:14:48 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:14:48 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:14:48 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:48 0182     UNION   
    2020-01-13 22:14:48 0183     SELECT
    2020-01-13 22:14:48 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:14:48 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:48 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:48 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:14:48 0188     FROM da_question dq
    2020-01-13 22:14:48 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0190     WHERE
    2020-01-13 22:14:48 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:48 0193     UNION
    2020-01-13 22:14:48 0194 	SELECT
    2020-01-13 22:14:48 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:48 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:48 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:14:48 0198     FROM da_question dq
    2020-01-13 22:14:48 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:48 0200     WHERE
    2020-01-13 22:14:48 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:48 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:49      	2 fields found: oldnames, newnames, 
    2020-01-13 22:14:49      1,304 lines fetched
    2020-01-13 22:14:49 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:14:49 0205 DROP TABLE client_disabilities_1
    2020-01-13 22:14:49 0207 LET varStepName='STEPENTRY_' & 6 & '_of_' & 50
    2020-01-13 22:14:49 0208 STEPENTRY_6_of_50: select 1
    2020-01-13 22:14:49      	1 fields found: ?column?, 
    2020-01-13 22:14:49      1 lines fetched
    2020-01-13 22:14:49 0209 DROP TABLE STEPENTRY_6_of_50
    2020-01-13 22:14:49 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:14:49 0212 NEXT
    2020-01-13 22:14:49 0037 LET varRecordSetTableName=Peek('sp_table_name',7,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:49 0038 LET varRecordSetQlikName=Peek('qlik_table_name',7,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:49 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',7,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:49 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagebridgeworkhistory') <= 20),'dupagebridgeworkhistory' & 'end_1',left('dupagebridgeworkhistory', 20)& 'end_1')
    2020-01-13 22:14:49 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagebridgeworkhistory' & 'enddate'
    2020-01-13 22:14:49 0042 LET varRecordSetQlikName_Entry= 'client_dupagebridgeworkhistory' & '_entry'
    2020-01-13 22:14:49 0043 LET varRecordSetQlikName_Exit='client_dupagebridgeworkhistory'& '_exit'
    2020-01-13 22:14:49 0045 LET varRecordSetQlikName_Interim='client_dupagebridgeworkhistory' & '_review'
    2020-01-13 22:14:49 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_dupagebridgeworkhistory', (len('client_dupagebridgeworkhistory'))-7))
    2020-01-13 22:14:49 0048 client_dupagebridgeworkhistory:
    2020-01-13 22:14:49 0049   SELECT * FROM qlik_sclient_dupagebridgeworkhistory
    2020-01-13 22:14:51      	14 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, 
    2020-01-13 22:14:51      10,408 lines fetched
    2020-01-13 22:14:51 0051 CustomEndFieldCheck:
    2020-01-13 22:14:51 0052   SELECT *
    2020-01-13 22:14:51 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagebridgeworkhistend_1'
    2020-01-13 22:14:51      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:14:51      0 lines fetched
    2020-01-13 22:14:51 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagebridgeworkhistend_1','dupagebridgeworkhistoryenddate')
    2020-01-13 22:14:51 0059 client_dupagebridgeworkhistory_entry:
    2020-01-13 22:14:51 0060   Noconcatenate
    2020-01-13 22:14:51 0061   LOAD DISTINCT
    2020-01-13 22:14:51 0062   *,
    2020-01-13 22:14:51 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:14:51 0064   recordset_id AS 'client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_entry'
    2020-01-13 22:14:51 0065   RESIDENT client_dupagebridgeworkhistory
    2020-01-13 22:14:51      	16 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, %entry_recordset_id, client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_entry, 
    2020-01-13 22:14:51      10,408 lines fetched
    2020-01-13 22:14:51 0068 RS_Entry:
    2020-01-13 22:14:51 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:14:51 0070   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:14:51 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:51 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:14:51 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:14:51 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:51 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:14:51 0076   WHERE
    2020-01-13 22:14:51 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:14:51 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:51 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:51 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:14:51 0081    AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:14:51 0082                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.entry_date::DATE) OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))))))				   
    2020-01-13 22:14:51 0083   UNION
    2020-01-13 22:14:51 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:14:51 0085   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:14:51 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:51 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:14:51 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:14:51 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:51 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:14:51 0091   WHERE 
    2020-01-13 22:14:51 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:14:51 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:51 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:14:51 0095   AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:14:51 0096                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.entry_date::DATE) OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))))))
    2020-01-13 22:14:54      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:14:54      1,811 lines fetched
    2020-01-13 22:14:54 0100 RS_Entry_Explicit:
    2020-01-13 22:14:54 0101   Noconcatenate
    2020-01-13 22:14:54 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:14:54 0103   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:14:54 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:54 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:54 0106   WHERE 
    2020-01-13 22:14:54 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:54 0108   AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:54 0109   AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:14:54 0110                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:54 0111 				   AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:14:54 0112 				   OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))))))
    2020-01-13 22:14:56      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:14:56      2,334 lines fetched
    2020-01-13 22:14:56 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:14:56 0116   LOAD
    2020-01-13 22:14:56 0117   entry_exit_id, 
    2020-01-13 22:14:56 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:14:56 0119   question_id as %entryquestionid,
    2020-01-13 22:14:56 0120   provider_creating_id
    2020-01-13 22:14:56 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:14:56      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:14:56      353,556 lines fetched
    2020-01-13 22:14:56 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:14:56 0129 INNER JOIN(client_dupagebridgeworkhistory_entry)
    2020-01-13 22:14:56 0130   LOAD DISTINCT
    2020-01-13 22:14:56 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:14:56 0132   recordset_id,
    2020-01-13 22:14:56 0133   provider_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Entry],
    2020-01-13 22:14:56 0134   name AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Entry],
    2020-01-13 22:14:56 0135   user_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Entry],
    2020-01-13 22:14:56 0136   user_name AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Entry]
    2020-01-13 22:14:56 0137   RESIDENT RS_Entry
    2020-01-13 22:14:56      	6 fields found: Entry Exit Id, recordset_id, client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Entry, client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Entry, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Entry, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Entry, 
    2020-01-13 22:14:56      1,811 lines fetched
    2020-01-13 22:14:56      Joining/Keeping
    2020-01-13 22:14:56 0139 DROP TABLE RS_Entry
    2020-01-13 22:14:56 0141 DROP FIELDS client_id FROM client_dupagebridgeworkhistory_entry
    2020-01-13 22:14:56 0142 DROP FIELDS recordset_id FROM client_dupagebridgeworkhistory_entry
    2020-01-13 22:14:56 0143 DROP FIELDS [Entry Exit Id] FROM client_dupagebridgeworkhistory_entry
    2020-01-13 22:14:56 0146 FieldMapSaClientEntry:
    2020-01-13 22:14:56 0147   Mapping SQL
    2020-01-13 22:14:56 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:56 0149     FROM da_question dq
    2020-01-13 22:14:56 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0151     WHERE
    2020-01-13 22:14:56 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:14:56 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:14:56 0155     UNION
    2020-01-13 22:14:56 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:56 0157     FROM da_question dq
    2020-01-13 22:14:56 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0159     WHERE
    2020-01-13 22:14:56 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:14:56 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:14:56 0163      UNION
    2020-01-13 22:14:56 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:56 0165     FROM da_question dq
    2020-01-13 22:14:56 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0167     WHERE
    2020-01-13 22:14:56 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:14:56 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:14:56 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:56 0172     UNION
    2020-01-13 22:14:56 0173 
    2020-01-13 22:14:56 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:56 0175     FROM da_question dq
    2020-01-13 22:14:56 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0177     WHERE
    2020-01-13 22:14:56 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:14:56 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:14:56 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:56 0182     UNION   
    2020-01-13 22:14:56 0183     SELECT
    2020-01-13 22:14:56 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:14:56 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:56 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:56 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:14:56 0188     FROM da_question dq
    2020-01-13 22:14:56 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0190     WHERE
    2020-01-13 22:14:56 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:56 0193     UNION
    2020-01-13 22:14:56 0194 	SELECT
    2020-01-13 22:14:56 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:56 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:56 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:14:56 0198     FROM da_question dq
    2020-01-13 22:14:56 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:56 0200     WHERE
    2020-01-13 22:14:56 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:56 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:56      	2 fields found: oldnames, newnames, 
    2020-01-13 22:14:56      1,304 lines fetched
    2020-01-13 22:14:56 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:14:56 0205 DROP TABLE client_dupagebridgeworkhistory
    2020-01-13 22:14:56 0207 LET varStepName='STEPENTRY_' & 7 & '_of_' & 50
    2020-01-13 22:14:56 0208 STEPENTRY_7_of_50: select 1
    2020-01-13 22:14:56      	1 fields found: ?column?, 
    2020-01-13 22:14:56      1 lines fetched
    2020-01-13 22:14:56 0209 DROP TABLE STEPENTRY_7_of_50
    2020-01-13 22:14:56 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:14:56 0212 NEXT
    2020-01-13 22:14:56 0037 LET varRecordSetTableName=Peek('sp_table_name',8,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:56 0038 LET varRecordSetQlikName=Peek('qlik_table_name',8,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:56 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',8,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:56 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagecoccoordinatede') <= 20),'dupagecoccoordinatede' & 'end_1',left('dupagecoccoordinatede', 20)& 'end_1')
    2020-01-13 22:14:56 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagecoccoordinatede' & 'enddate'
    2020-01-13 22:14:56 0042 LET varRecordSetQlikName_Entry= 'client_dupagecoccoordinatede' & '_entry'
    2020-01-13 22:14:56 0043 LET varRecordSetQlikName_Exit='client_dupagecoccoordinatede'& '_exit'
    2020-01-13 22:14:56 0045 LET varRecordSetQlikName_Interim='client_dupagecoccoordinatede' & '_review'
    2020-01-13 22:14:56 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_dupagecoccoordinatede', (len('client_dupagecoccoordinatede'))-7))
    2020-01-13 22:14:56 0048 client_dupagecoccoordinatede:
    2020-01-13 22:14:56 0049   SELECT * FROM qlik_sclient_dupagecoccoordinatede
    2020-01-13 22:14:57      	7 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, 
    2020-01-13 22:14:57      265 lines fetched
    2020-01-13 22:14:57 0051 CustomEndFieldCheck:
    2020-01-13 22:14:57 0052   SELECT *
    2020-01-13 22:14:57 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagecoccoordinatedend_1'
    2020-01-13 22:14:57      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:14:57      0 lines fetched
    2020-01-13 22:14:57 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagecoccoordinatedend_1','dupagecoccoordinatedeenddate')
    2020-01-13 22:14:57 0059 client_dupagecoccoordinatede_entry:
    2020-01-13 22:14:57 0060   Noconcatenate
    2020-01-13 22:14:57 0061   LOAD DISTINCT
    2020-01-13 22:14:57 0062   *,
    2020-01-13 22:14:57 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:14:57 0064   recordset_id AS 'client_DUPAGECOCCOORDINATEDERECORDSET_ID_entry'
    2020-01-13 22:14:57 0065   RESIDENT client_dupagecoccoordinatede
    2020-01-13 22:14:57      	9 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, %entry_recordset_id, client_DUPAGECOCCOORDINATEDERECORDSET_ID_entry, 
    2020-01-13 22:14:57      265 lines fetched
    2020-01-13 22:14:57 0068 RS_Entry:
    2020-01-13 22:14:57 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:14:57 0070   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:14:57 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:57 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:14:57 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:14:57 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:57 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:14:57 0076   WHERE
    2020-01-13 22:14:57 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:14:57 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:57 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:57 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:14:57 0081    AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:14:57 0082                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.entry_date::DATE) OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))))))				   
    2020-01-13 22:14:57 0083   UNION
    2020-01-13 22:14:57 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:14:57 0085   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:14:57 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:57 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:14:57 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:14:57 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:57 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:14:57 0091   WHERE 
    2020-01-13 22:14:57 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:14:57 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:57 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:14:57 0095   AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:14:57 0096                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.entry_date::DATE) OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))))))
    2020-01-13 22:14:57      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:14:57      23 lines fetched
    2020-01-13 22:14:57 0100 RS_Entry_Explicit:
    2020-01-13 22:14:57 0101   Noconcatenate
    2020-01-13 22:14:57 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:14:57 0103   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:14:57 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:14:57 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:14:57 0106   WHERE 
    2020-01-13 22:14:57 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:14:57 0108   AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:57 0109   AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:14:57 0110                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:14:57 0111 				   AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:14:57 0112 				   OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))))))
    2020-01-13 22:14:58      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:14:58      164 lines fetched
    2020-01-13 22:14:58 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:14:58 0116   LOAD
    2020-01-13 22:14:58 0117   entry_exit_id, 
    2020-01-13 22:14:58 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:14:58 0119   question_id as %entryquestionid,
    2020-01-13 22:14:58 0120   provider_creating_id
    2020-01-13 22:14:58 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:14:58      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:14:58      353,720 lines fetched
    2020-01-13 22:14:58 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:14:58 0129 INNER JOIN(client_dupagecoccoordinatede_entry)
    2020-01-13 22:14:58 0130   LOAD DISTINCT
    2020-01-13 22:14:58 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:14:58 0132   recordset_id,
    2020-01-13 22:14:58 0133   provider_creating_id AS [client_DUPAGECOCCOORDINATEDE_Provider_Creating_Entry],
    2020-01-13 22:14:58 0134   name AS [client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Entry],
    2020-01-13 22:14:58 0135   user_creating_id AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Entry],
    2020-01-13 22:14:58 0136   user_name AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Entry]
    2020-01-13 22:14:58 0137   RESIDENT RS_Entry
    2020-01-13 22:14:58      	6 fields found: Entry Exit Id, recordset_id, client_DUPAGECOCCOORDINATEDE_Provider_Creating_Entry, client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Entry, client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Entry, client_DUPAGECOCCOORDINATEDE_User_Created_By_Entry, 
    2020-01-13 22:14:58      23 lines fetched
    2020-01-13 22:14:58      Joining/Keeping
    2020-01-13 22:14:58 0139 DROP TABLE RS_Entry
    2020-01-13 22:14:58 0141 DROP FIELDS client_id FROM client_dupagecoccoordinatede_entry
    2020-01-13 22:14:58 0142 DROP FIELDS recordset_id FROM client_dupagecoccoordinatede_entry
    2020-01-13 22:14:58 0143 DROP FIELDS [Entry Exit Id] FROM client_dupagecoccoordinatede_entry
    2020-01-13 22:14:58 0146 FieldMapSaClientEntry:
    2020-01-13 22:14:58 0147   Mapping SQL
    2020-01-13 22:14:58 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:58 0149     FROM da_question dq
    2020-01-13 22:14:58 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0151     WHERE
    2020-01-13 22:14:58 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:14:58 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:14:58 0155     UNION
    2020-01-13 22:14:58 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:58 0157     FROM da_question dq
    2020-01-13 22:14:58 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0159     WHERE
    2020-01-13 22:14:58 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:14:58 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:14:58 0163      UNION
    2020-01-13 22:14:58 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:14:58 0165     FROM da_question dq
    2020-01-13 22:14:58 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0167     WHERE
    2020-01-13 22:14:58 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:14:58 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:14:58 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:58 0172     UNION
    2020-01-13 22:14:58 0173 
    2020-01-13 22:14:58 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:14:58 0175     FROM da_question dq
    2020-01-13 22:14:58 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0177     WHERE
    2020-01-13 22:14:58 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:14:58 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:14:58 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:14:58 0182     UNION   
    2020-01-13 22:14:58 0183     SELECT
    2020-01-13 22:14:58 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:14:58 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:58 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:58 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:14:58 0188     FROM da_question dq
    2020-01-13 22:14:58 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0190     WHERE
    2020-01-13 22:14:58 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:58 0193     UNION
    2020-01-13 22:14:58 0194 	SELECT
    2020-01-13 22:14:58 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:58 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:14:58 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:14:58 0198     FROM da_question dq
    2020-01-13 22:14:58 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:14:58 0200     WHERE
    2020-01-13 22:14:58 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:14:58 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:14:58      	2 fields found: oldnames, newnames, 
    2020-01-13 22:14:58      1,304 lines fetched
    2020-01-13 22:14:58 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:14:58 0205 DROP TABLE client_dupagecoccoordinatede
    2020-01-13 22:14:58 0207 LET varStepName='STEPENTRY_' & 8 & '_of_' & 50
    2020-01-13 22:14:58 0208 STEPENTRY_8_of_50: select 1
    2020-01-13 22:14:58      	1 fields found: ?column?, 
    2020-01-13 22:14:58      1 lines fetched
    2020-01-13 22:14:58 0209 DROP TABLE STEPENTRY_8_of_50
    2020-01-13 22:14:58 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:14:58 0212 NEXT
    2020-01-13 22:14:58 0037 LET varRecordSetTableName=Peek('sp_table_name',9,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:58 0038 LET varRecordSetQlikName=Peek('qlik_table_name',9,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:58 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',9,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:14:58 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('emergencycontacts') <= 20),'emergencycontacts' & 'end_1',left('emergencycontacts', 20)& 'end_1')
    2020-01-13 22:14:58 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'emergencycontacts' & 'enddate'
    2020-01-13 22:14:58 0042 LET varRecordSetQlikName_Entry= 'client_emergencycontacts' & '_entry'
    2020-01-13 22:14:58 0043 LET varRecordSetQlikName_Exit='client_emergencycontacts'& '_exit'
    2020-01-13 22:14:58 0045 LET varRecordSetQlikName_Interim='client_emergencycontacts' & '_review'
    2020-01-13 22:14:58 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_emergencycontacts', (len('client_emergencycontacts'))-7))
    2020-01-13 22:14:58 0048 client_emergencycontacts:
    2020-01-13 22:14:58 0049   SELECT * FROM qlik_sclient_emergencycontacts
    2020-01-13 22:15:04      	12 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, 
    2020-01-13 22:15:04      34,455 lines fetched
    2020-01-13 22:15:04 0051 CustomEndFieldCheck:
    2020-01-13 22:15:04 0052   SELECT *
    2020-01-13 22:15:04 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'emergencycontactsend_1'
    2020-01-13 22:15:05      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:05      0 lines fetched
    2020-01-13 22:15:05 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'emergencycontactsend_1','emergencycontactsenddate')
    2020-01-13 22:15:05 0059 client_emergencycontacts_entry:
    2020-01-13 22:15:05 0060   Noconcatenate
    2020-01-13 22:15:05 0061   LOAD DISTINCT
    2020-01-13 22:15:05 0062   *,
    2020-01-13 22:15:05 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:05 0064   recordset_id AS 'client_EMERGENCYCONTACTSRECORDSET_ID_entry'
    2020-01-13 22:15:05 0065   RESIDENT client_emergencycontacts
    2020-01-13 22:15:05      	14 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, %entry_recordset_id, client_EMERGENCYCONTACTSRECORDSET_ID_entry, 
    2020-01-13 22:15:05      34,455 lines fetched
    2020-01-13 22:15:05 0068 RS_Entry:
    2020-01-13 22:15:05 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:05 0070   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:15:05 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:05 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:05 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:05 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:05 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:05 0076   WHERE
    2020-01-13 22:15:05 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:05 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:05 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:05 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:05 0081    AND ((((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:15:05 0082                    OR (((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.emergencycontactsenddate::DATE >= ee.entry_date::DATE) OR ((ft.emergencycontactsenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:05 0083   UNION
    2020-01-13 22:15:05 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:05 0085   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:15:05 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:05 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:05 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:05 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:05 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:05 0091   WHERE 
    2020-01-13 22:15:05 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:05 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:05 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:05 0095   AND ((((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:15:05 0096                    OR (((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.emergencycontactsenddate::DATE >= ee.entry_date::DATE) OR ((ft.emergencycontactsenddate::DATE >= date(now()))))))
    2020-01-13 22:15:16      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:16      9,258 lines fetched
    2020-01-13 22:15:16 0100 RS_Entry_Explicit:
    2020-01-13 22:15:16 0101   Noconcatenate
    2020-01-13 22:15:16 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:16 0103   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:15:16 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:16 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:16 0106   WHERE 
    2020-01-13 22:15:16 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:16 0108   AND ((((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:16 0109   AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:15:16 0110                    OR (((ft.emergencycontactsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:16 0111 				   AND ((ft.emergencycontactsenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:16 0112 				   OR ((ft.emergencycontactsenddate::DATE >= date(now()))))))
    2020-01-13 22:15:21      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:21      16,693 lines fetched
    2020-01-13 22:15:21 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:21 0116   LOAD
    2020-01-13 22:15:21 0117   entry_exit_id, 
    2020-01-13 22:15:21 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:21 0119   question_id as %entryquestionid,
    2020-01-13 22:15:21 0120   provider_creating_id
    2020-01-13 22:15:21 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:21      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:21      370,413 lines fetched
    2020-01-13 22:15:21 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:21 0129 INNER JOIN(client_emergencycontacts_entry)
    2020-01-13 22:15:21 0130   LOAD DISTINCT
    2020-01-13 22:15:21 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:21 0132   recordset_id,
    2020-01-13 22:15:21 0133   provider_creating_id AS [client_EMERGENCYCONTACTS_Provider_Creating_Entry],
    2020-01-13 22:15:21 0134   name AS [client_EMERGENCYCONTACTS_Provider_Name_Creating_Entry],
    2020-01-13 22:15:21 0135   user_creating_id AS [client_EMERGENCYCONTACTS_User_Created_By_Id_Entry],
    2020-01-13 22:15:21 0136   user_name AS [client_EMERGENCYCONTACTS_User_Created_By_Entry]
    2020-01-13 22:15:21 0137   RESIDENT RS_Entry
    2020-01-13 22:15:21      	6 fields found: Entry Exit Id, recordset_id, client_EMERGENCYCONTACTS_Provider_Creating_Entry, client_EMERGENCYCONTACTS_Provider_Name_Creating_Entry, client_EMERGENCYCONTACTS_User_Created_By_Id_Entry, client_EMERGENCYCONTACTS_User_Created_By_Entry, 
    2020-01-13 22:15:21      9,258 lines fetched
    2020-01-13 22:15:21      Joining/Keeping
    2020-01-13 22:15:21 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:21 0141 DROP FIELDS client_id FROM client_emergencycontacts_entry
    2020-01-13 22:15:21 0142 DROP FIELDS recordset_id FROM client_emergencycontacts_entry
    2020-01-13 22:15:21 0143 DROP FIELDS [Entry Exit Id] FROM client_emergencycontacts_entry
    2020-01-13 22:15:21 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:21 0147   Mapping SQL
    2020-01-13 22:15:21 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:21 0149     FROM da_question dq
    2020-01-13 22:15:21 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0151     WHERE
    2020-01-13 22:15:21 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:21 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:21 0155     UNION
    2020-01-13 22:15:21 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:21 0157     FROM da_question dq
    2020-01-13 22:15:21 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0159     WHERE
    2020-01-13 22:15:21 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:21 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:21 0163      UNION
    2020-01-13 22:15:21 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:21 0165     FROM da_question dq
    2020-01-13 22:15:21 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0167     WHERE
    2020-01-13 22:15:21 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:21 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:21 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:21 0172     UNION
    2020-01-13 22:15:21 0173 
    2020-01-13 22:15:21 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:21 0175     FROM da_question dq
    2020-01-13 22:15:21 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0177     WHERE
    2020-01-13 22:15:21 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:21 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:21 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:21 0182     UNION   
    2020-01-13 22:15:21 0183     SELECT
    2020-01-13 22:15:21 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:21 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:21 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:21 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:21 0188     FROM da_question dq
    2020-01-13 22:15:21 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0190     WHERE
    2020-01-13 22:15:21 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:21 0193     UNION
    2020-01-13 22:15:21 0194 	SELECT
    2020-01-13 22:15:21 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:21 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:21 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:21 0198     FROM da_question dq
    2020-01-13 22:15:21 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:21 0200     WHERE
    2020-01-13 22:15:21 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:21 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:22      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:22      1,304 lines fetched
    2020-01-13 22:15:22 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:22 0205 DROP TABLE client_emergencycontacts
    2020-01-13 22:15:22 0207 LET varStepName='STEPENTRY_' & 9 & '_of_' & 50
    2020-01-13 22:15:22 0208 STEPENTRY_9_of_50: select 1
    2020-01-13 22:15:22      	1 fields found: ?column?, 
    2020-01-13 22:15:22      1 lines fetched
    2020-01-13 22:15:22 0209 DROP TABLE STEPENTRY_9_of_50
    2020-01-13 22:15:22 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:22 0212 NEXT
    2020-01-13 22:15:22 0037 LET varRecordSetTableName=Peek('sp_table_name',10,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:22 0038 LET varRecordSetQlikName=Peek('qlik_table_name',10,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:22 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',10,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:22 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('employmentexperiencet') <= 20),'employmentexperiencet' & 'end_1',left('employmentexperiencet', 20)& 'end_1')
    2020-01-13 22:15:22 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'employmentexperiencet' & 'enddate'
    2020-01-13 22:15:22 0042 LET varRecordSetQlikName_Entry= 'client_employmentexperiencet' & '_entry'
    2020-01-13 22:15:22 0043 LET varRecordSetQlikName_Exit='client_employmentexperiencet'& '_exit'
    2020-01-13 22:15:22 0045 LET varRecordSetQlikName_Interim='client_employmentexperiencet' & '_review'
    2020-01-13 22:15:22 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_employmentexperiencet', (len('client_employmentexperiencet'))-7))
    2020-01-13 22:15:22 0048 client_employmentexperiencet:
    2020-01-13 22:15:22 0049   SELECT * FROM qlik_sclient_employmentexperiencet
    2020-01-13 22:15:22      	6 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, 
    2020-01-13 22:15:22      566 lines fetched
    2020-01-13 22:15:22 0051 CustomEndFieldCheck:
    2020-01-13 22:15:22 0052   SELECT *
    2020-01-13 22:15:22 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'employmentexperienceend_1'
    2020-01-13 22:15:22      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:22      0 lines fetched
    2020-01-13 22:15:22 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'employmentexperienceend_1','employmentexperiencetenddate')
    2020-01-13 22:15:22 0059 client_employmentexperiencet_entry:
    2020-01-13 22:15:22 0060   Noconcatenate
    2020-01-13 22:15:22 0061   LOAD DISTINCT
    2020-01-13 22:15:22 0062   *,
    2020-01-13 22:15:22 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:22 0064   recordset_id AS 'client_EMPLOYMENTEXPERIENCETRECORDSET_ID_entry'
    2020-01-13 22:15:22 0065   RESIDENT client_employmentexperiencet
    2020-01-13 22:15:22      	8 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, %entry_recordset_id, client_EMPLOYMENTEXPERIENCETRECORDSET_ID_entry, 
    2020-01-13 22:15:22      566 lines fetched
    2020-01-13 22:15:22 0068 RS_Entry:
    2020-01-13 22:15:22 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:22 0070   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:15:22 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:22 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:22 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:22 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:22 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:22 0076   WHERE
    2020-01-13 22:15:22 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:22 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:22 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:22 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:22 0081    AND ((((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:15:22 0082                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.employmentexperiencetenddate::DATE >= ee.entry_date::DATE) OR ((ft.employmentexperiencetenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:22 0083   UNION
    2020-01-13 22:15:22 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:22 0085   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:15:22 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:22 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:22 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:22 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:22 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:22 0091   WHERE 
    2020-01-13 22:15:22 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:22 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:22 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:22 0095   AND ((((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:15:22 0096                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.employmentexperiencetenddate::DATE >= ee.entry_date::DATE) OR ((ft.employmentexperiencetenddate::DATE >= date(now()))))))
    2020-01-13 22:15:23      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:23      47 lines fetched
    2020-01-13 22:15:23 0100 RS_Entry_Explicit:
    2020-01-13 22:15:23 0101   Noconcatenate
    2020-01-13 22:15:23 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:23 0103   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:15:23 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:23 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:23 0106   WHERE 
    2020-01-13 22:15:23 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:23 0108   AND ((((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:23 0109   AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:15:23 0110                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:23 0111 				   AND ((ft.employmentexperiencetenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:23 0112 				   OR ((ft.employmentexperiencetenddate::DATE >= date(now()))))))
    2020-01-13 22:15:23      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:23      234 lines fetched
    2020-01-13 22:15:23 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:23 0116   LOAD
    2020-01-13 22:15:23 0117   entry_exit_id, 
    2020-01-13 22:15:23 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:23 0119   question_id as %entryquestionid,
    2020-01-13 22:15:23 0120   provider_creating_id
    2020-01-13 22:15:23 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:23      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:23      370,647 lines fetched
    2020-01-13 22:15:23 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:23 0129 INNER JOIN(client_employmentexperiencet_entry)
    2020-01-13 22:15:23 0130   LOAD DISTINCT
    2020-01-13 22:15:23 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:23 0132   recordset_id,
    2020-01-13 22:15:23 0133   provider_creating_id AS [client_EMPLOYMENTEXPERIENCET_Provider_Creating_Entry],
    2020-01-13 22:15:23 0134   name AS [client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Entry],
    2020-01-13 22:15:23 0135   user_creating_id AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Entry],
    2020-01-13 22:15:23 0136   user_name AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Entry]
    2020-01-13 22:15:23 0137   RESIDENT RS_Entry
    2020-01-13 22:15:23      	6 fields found: Entry Exit Id, recordset_id, client_EMPLOYMENTEXPERIENCET_Provider_Creating_Entry, client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Entry, client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Entry, client_EMPLOYMENTEXPERIENCET_User_Created_By_Entry, 
    2020-01-13 22:15:23      47 lines fetched
    2020-01-13 22:15:23      Joining/Keeping
    2020-01-13 22:15:23 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:23 0141 DROP FIELDS client_id FROM client_employmentexperiencet_entry
    2020-01-13 22:15:23 0142 DROP FIELDS recordset_id FROM client_employmentexperiencet_entry
    2020-01-13 22:15:23 0143 DROP FIELDS [Entry Exit Id] FROM client_employmentexperiencet_entry
    2020-01-13 22:15:23 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:23 0147   Mapping SQL
    2020-01-13 22:15:23 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:23 0149     FROM da_question dq
    2020-01-13 22:15:23 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0151     WHERE
    2020-01-13 22:15:23 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:23 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:23 0155     UNION
    2020-01-13 22:15:23 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:23 0157     FROM da_question dq
    2020-01-13 22:15:23 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0159     WHERE
    2020-01-13 22:15:23 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:23 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:23 0163      UNION
    2020-01-13 22:15:23 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:23 0165     FROM da_question dq
    2020-01-13 22:15:23 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0167     WHERE
    2020-01-13 22:15:23 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:23 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:23 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:23 0172     UNION
    2020-01-13 22:15:23 0173 
    2020-01-13 22:15:23 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:23 0175     FROM da_question dq
    2020-01-13 22:15:23 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0177     WHERE
    2020-01-13 22:15:23 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:23 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:23 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:23 0182     UNION   
    2020-01-13 22:15:23 0183     SELECT
    2020-01-13 22:15:23 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:23 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:23 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:23 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:23 0188     FROM da_question dq
    2020-01-13 22:15:23 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0190     WHERE
    2020-01-13 22:15:23 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:23 0193     UNION
    2020-01-13 22:15:23 0194 	SELECT
    2020-01-13 22:15:23 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:23 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:23 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:23 0198     FROM da_question dq
    2020-01-13 22:15:23 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:23 0200     WHERE
    2020-01-13 22:15:23 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:23 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:24      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:24      1,304 lines fetched
    2020-01-13 22:15:24 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:24 0205 DROP TABLE client_employmentexperiencet
    2020-01-13 22:15:24 0207 LET varStepName='STEPENTRY_' & 10 & '_of_' & 50
    2020-01-13 22:15:24 0208 STEPENTRY_10_of_50: select 1
    2020-01-13 22:15:24      	1 fields found: ?column?, 
    2020-01-13 22:15:24      1 lines fetched
    2020-01-13 22:15:24 0209 DROP TABLE STEPENTRY_10_of_50
    2020-01-13 22:15:24 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:24 0212 NEXT
    2020-01-13 22:15:24 0037 LET varRecordSetTableName=Peek('sp_table_name',11,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:24 0038 LET varRecordSetQlikName=Peek('qlik_table_name',11,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:24 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',11,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:24 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('entrypointassessmentp') <= 20),'entrypointassessmentp' & 'end_1',left('entrypointassessmentp', 20)& 'end_1')
    2020-01-13 22:15:24 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'entrypointassessmentp' & 'enddate'
    2020-01-13 22:15:24 0042 LET varRecordSetQlikName_Entry= 'client_entrypointassessmentp' & '_entry'
    2020-01-13 22:15:24 0043 LET varRecordSetQlikName_Exit='client_entrypointassessmentp'& '_exit'
    2020-01-13 22:15:24 0045 LET varRecordSetQlikName_Interim='client_entrypointassessmentp' & '_review'
    2020-01-13 22:15:24 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_entrypointassessmentp', (len('client_entrypointassessmentp'))-7))
    2020-01-13 22:15:24 0048 client_entrypointassessmentp:
    2020-01-13 22:15:24 0049   SELECT * FROM qlik_sclient_entrypointassessmentp
    2020-01-13 22:15:25      	55 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, 
    2020-01-13 22:15:25      1,492 lines fetched
    2020-01-13 22:15:25 0051 CustomEndFieldCheck:
    2020-01-13 22:15:25 0052   SELECT *
    2020-01-13 22:15:25 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'entrypointassessmentend_1'
    2020-01-13 22:15:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:25      0 lines fetched
    2020-01-13 22:15:25 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'entrypointassessmentend_1','entrypointassessmentpenddate')
    2020-01-13 22:15:25 0059 client_entrypointassessmentp_entry:
    2020-01-13 22:15:25 0060   Noconcatenate
    2020-01-13 22:15:25 0061   LOAD DISTINCT
    2020-01-13 22:15:25 0062   *,
    2020-01-13 22:15:25 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:25 0064   recordset_id AS 'client_ENTRYPOINTASSESSMENTPRECORDSET_ID_entry'
    2020-01-13 22:15:25 0065   RESIDENT client_entrypointassessmentp
    2020-01-13 22:15:25      	57 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, %entry_recordset_id, client_ENTRYPOINTASSESSMENTPRECORDSET_ID_entry, 
    2020-01-13 22:15:25      1,492 lines fetched
    2020-01-13 22:15:25 0068 RS_Entry:
    2020-01-13 22:15:25 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:25 0070   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:15:25 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:25 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:25 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:25 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:25 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:25 0076   WHERE
    2020-01-13 22:15:25 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:25 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:25 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:25 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:25 0081    AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:15:25 0082                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.entrypointassessmentpenddate::DATE >= ee.entry_date::DATE) OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:25 0083   UNION
    2020-01-13 22:15:25 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:25 0085   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:15:25 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:25 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:25 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:25 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:25 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:25 0091   WHERE 
    2020-01-13 22:15:25 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:25 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:25 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:25 0095   AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:15:25 0096                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.entrypointassessmentpenddate::DATE >= ee.entry_date::DATE) OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))))))
    2020-01-13 22:15:27      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:27      863 lines fetched
    2020-01-13 22:15:27 0100 RS_Entry_Explicit:
    2020-01-13 22:15:27 0101   Noconcatenate
    2020-01-13 22:15:27 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:27 0103   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:15:27 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:27 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:27 0106   WHERE 
    2020-01-13 22:15:27 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:27 0108   AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:27 0109   AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:15:27 0110                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:27 0111 				   AND ((ft.entrypointassessmentpenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:27 0112 				   OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))))))
    2020-01-13 22:15:27      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:27      1,641 lines fetched
    2020-01-13 22:15:27 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:27 0116   LOAD
    2020-01-13 22:15:27 0117   entry_exit_id, 
    2020-01-13 22:15:27 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:27 0119   question_id as %entryquestionid,
    2020-01-13 22:15:27 0120   provider_creating_id
    2020-01-13 22:15:27 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:27      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:27      372,288 lines fetched
    2020-01-13 22:15:27 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:27 0129 INNER JOIN(client_entrypointassessmentp_entry)
    2020-01-13 22:15:27 0130   LOAD DISTINCT
    2020-01-13 22:15:27 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:27 0132   recordset_id,
    2020-01-13 22:15:27 0133   provider_creating_id AS [client_ENTRYPOINTASSESSMENTP_Provider_Creating_Entry],
    2020-01-13 22:15:27 0134   name AS [client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Entry],
    2020-01-13 22:15:27 0135   user_creating_id AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Entry],
    2020-01-13 22:15:27 0136   user_name AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Entry]
    2020-01-13 22:15:27 0137   RESIDENT RS_Entry
    2020-01-13 22:15:27      	6 fields found: Entry Exit Id, recordset_id, client_ENTRYPOINTASSESSMENTP_Provider_Creating_Entry, client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Entry, client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Entry, client_ENTRYPOINTASSESSMENTP_User_Created_By_Entry, 
    2020-01-13 22:15:27      863 lines fetched
    2020-01-13 22:15:27      Joining/Keeping
    2020-01-13 22:15:28 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:28 0141 DROP FIELDS client_id FROM client_entrypointassessmentp_entry
    2020-01-13 22:15:28 0142 DROP FIELDS recordset_id FROM client_entrypointassessmentp_entry
    2020-01-13 22:15:28 0143 DROP FIELDS [Entry Exit Id] FROM client_entrypointassessmentp_entry
    2020-01-13 22:15:28 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:28 0147   Mapping SQL
    2020-01-13 22:15:28 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:28 0149     FROM da_question dq
    2020-01-13 22:15:28 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0151     WHERE
    2020-01-13 22:15:28 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:28 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:28 0155     UNION
    2020-01-13 22:15:28 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:28 0157     FROM da_question dq
    2020-01-13 22:15:28 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0159     WHERE
    2020-01-13 22:15:28 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:28 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:28 0163      UNION
    2020-01-13 22:15:28 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:28 0165     FROM da_question dq
    2020-01-13 22:15:28 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0167     WHERE
    2020-01-13 22:15:28 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:28 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:28 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:28 0172     UNION
    2020-01-13 22:15:28 0173 
    2020-01-13 22:15:28 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:28 0175     FROM da_question dq
    2020-01-13 22:15:28 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0177     WHERE
    2020-01-13 22:15:28 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:28 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:28 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:28 0182     UNION   
    2020-01-13 22:15:28 0183     SELECT
    2020-01-13 22:15:28 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:28 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:28 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:28 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:28 0188     FROM da_question dq
    2020-01-13 22:15:28 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0190     WHERE
    2020-01-13 22:15:28 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:28 0193     UNION
    2020-01-13 22:15:28 0194 	SELECT
    2020-01-13 22:15:28 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:28 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:28 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:28 0198     FROM da_question dq
    2020-01-13 22:15:28 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:28 0200     WHERE
    2020-01-13 22:15:28 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:28 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:28      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:28      1,304 lines fetched
    2020-01-13 22:15:28 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:28 0205 DROP TABLE client_entrypointassessmentp
    2020-01-13 22:15:28 0207 LET varStepName='STEPENTRY_' & 11 & '_of_' & 50
    2020-01-13 22:15:28 0208 STEPENTRY_11_of_50: select 1
    2020-01-13 22:15:28      	1 fields found: ?column?, 
    2020-01-13 22:15:28      1 lines fetched
    2020-01-13 22:15:28 0209 DROP TABLE STEPENTRY_11_of_50
    2020-01-13 22:15:28 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:28 0212 NEXT
    2020-01-13 22:15:28 0037 LET varRecordSetTableName=Peek('sp_table_name',12,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:28 0038 LET varRecordSetQlikName=Peek('qlik_table_name',12,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:28 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',12,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:28 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('followuptoclient_1') <= 20),'followuptoclient_1' & 'end_1',left('followuptoclient_1', 20)& 'end_1')
    2020-01-13 22:15:28 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'followuptoclient_1' & 'enddate'
    2020-01-13 22:15:28 0042 LET varRecordSetQlikName_Entry= 'client_followuptoclient_1' & '_entry'
    2020-01-13 22:15:28 0043 LET varRecordSetQlikName_Exit='client_followuptoclient_1'& '_exit'
    2020-01-13 22:15:28 0045 LET varRecordSetQlikName_Interim='client_followuptoclient_1' & '_review'
    2020-01-13 22:15:28 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_followuptoclient_1', (len('client_followuptoclient_1'))-7))
    2020-01-13 22:15:28 0048 client_followuptoclient_1:
    2020-01-13 22:15:28 0049   SELECT * FROM qlik_sclient_followuptoclient_1
    2020-01-13 22:15:33      	8 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:15:33      31,809 lines fetched
    2020-01-13 22:15:33 0051 CustomEndFieldCheck:
    2020-01-13 22:15:33 0052   SELECT *
    2020-01-13 22:15:33 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'followuptoclient_1end_1'
    2020-01-13 22:15:33      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:33      0 lines fetched
    2020-01-13 22:15:33 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'followuptoclient_1end_1','followuptoclient_1enddate')
    2020-01-13 22:15:33 0059 client_followuptoclient_1_entry:
    2020-01-13 22:15:33 0060   Noconcatenate
    2020-01-13 22:15:33 0061   LOAD DISTINCT
    2020-01-13 22:15:33 0062   *,
    2020-01-13 22:15:33 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:33 0064   recordset_id AS 'client_FOLLOWUPTOCLIENT_1RECORDSET_ID_entry'
    2020-01-13 22:15:33 0065   RESIDENT client_followuptoclient_1
    2020-01-13 22:15:33      	10 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, %entry_recordset_id, client_FOLLOWUPTOCLIENT_1RECORDSET_ID_entry, 
    2020-01-13 22:15:33      31,809 lines fetched
    2020-01-13 22:15:33 0068 RS_Entry:
    2020-01-13 22:15:33 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:33 0070   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:15:33 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:33 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:33 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:33 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:33 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:33 0076   WHERE
    2020-01-13 22:15:33 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:33 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:33 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:33 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:33 0081    AND ((((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:15:33 0082                    OR (((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.followuptoclient_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.followuptoclient_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:33 0083   UNION
    2020-01-13 22:15:33 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:33 0085   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:15:33 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:33 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:33 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:33 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:33 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:33 0091   WHERE 
    2020-01-13 22:15:33 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:33 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:33 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:33 0095   AND ((((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:15:33 0096                    OR (((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.followuptoclient_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.followuptoclient_1enddate::DATE >= date(now()))))))
    2020-01-13 22:15:41      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:41      4,131 lines fetched
    2020-01-13 22:15:41 0100 RS_Entry_Explicit:
    2020-01-13 22:15:41 0101   Noconcatenate
    2020-01-13 22:15:41 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:41 0103   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:15:41 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:41 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:41 0106   WHERE 
    2020-01-13 22:15:41 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:41 0108   AND ((((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:41 0109   AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:15:41 0110                    OR (((ft.followuptoclient_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:41 0111 				   AND ((ft.followuptoclient_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:41 0112 				   OR ((ft.followuptoclient_1enddate::DATE >= date(now()))))))
    2020-01-13 22:15:45      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:45      8,362 lines fetched
    2020-01-13 22:15:45 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:45 0116   LOAD
    2020-01-13 22:15:45 0117   entry_exit_id, 
    2020-01-13 22:15:45 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:45 0119   question_id as %entryquestionid,
    2020-01-13 22:15:45 0120   provider_creating_id
    2020-01-13 22:15:45 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:45      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:45      380,650 lines fetched
    2020-01-13 22:15:45 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:45 0129 INNER JOIN(client_followuptoclient_1_entry)
    2020-01-13 22:15:45 0130   LOAD DISTINCT
    2020-01-13 22:15:45 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:45 0132   recordset_id,
    2020-01-13 22:15:45 0133   provider_creating_id AS [client_FOLLOWUPTOCLIENT_1_Provider_Creating_Entry],
    2020-01-13 22:15:45 0134   name AS [client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Entry],
    2020-01-13 22:15:45 0135   user_creating_id AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Entry],
    2020-01-13 22:15:45 0136   user_name AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Entry]
    2020-01-13 22:15:45 0137   RESIDENT RS_Entry
    2020-01-13 22:15:45      	6 fields found: Entry Exit Id, recordset_id, client_FOLLOWUPTOCLIENT_1_Provider_Creating_Entry, client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Entry, client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Entry, client_FOLLOWUPTOCLIENT_1_User_Created_By_Entry, 
    2020-01-13 22:15:45      4,131 lines fetched
    2020-01-13 22:15:45      Joining/Keeping
    2020-01-13 22:15:46 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:46 0141 DROP FIELDS client_id FROM client_followuptoclient_1_entry
    2020-01-13 22:15:46 0142 DROP FIELDS recordset_id FROM client_followuptoclient_1_entry
    2020-01-13 22:15:46 0143 DROP FIELDS [Entry Exit Id] FROM client_followuptoclient_1_entry
    2020-01-13 22:15:46 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:46 0147   Mapping SQL
    2020-01-13 22:15:46 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:46 0149     FROM da_question dq
    2020-01-13 22:15:46 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0151     WHERE
    2020-01-13 22:15:46 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:46 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:46 0155     UNION
    2020-01-13 22:15:46 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:46 0157     FROM da_question dq
    2020-01-13 22:15:46 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0159     WHERE
    2020-01-13 22:15:46 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:46 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:46 0163      UNION
    2020-01-13 22:15:46 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:46 0165     FROM da_question dq
    2020-01-13 22:15:46 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0167     WHERE
    2020-01-13 22:15:46 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:46 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:46 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:46 0172     UNION
    2020-01-13 22:15:46 0173 
    2020-01-13 22:15:46 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:46 0175     FROM da_question dq
    2020-01-13 22:15:46 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0177     WHERE
    2020-01-13 22:15:46 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:46 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:46 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:46 0182     UNION   
    2020-01-13 22:15:46 0183     SELECT
    2020-01-13 22:15:46 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:46 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:46 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:46 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:46 0188     FROM da_question dq
    2020-01-13 22:15:46 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0190     WHERE
    2020-01-13 22:15:46 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:46 0193     UNION
    2020-01-13 22:15:46 0194 	SELECT
    2020-01-13 22:15:46 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:46 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:46 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:46 0198     FROM da_question dq
    2020-01-13 22:15:46 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:46 0200     WHERE
    2020-01-13 22:15:46 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:46 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:46      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:46      1,304 lines fetched
    2020-01-13 22:15:46 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:46 0205 DROP TABLE client_followuptoclient_1
    2020-01-13 22:15:46 0207 LET varStepName='STEPENTRY_' & 12 & '_of_' & 50
    2020-01-13 22:15:46 0208 STEPENTRY_12_of_50: select 1
    2020-01-13 22:15:46      	1 fields found: ?column?, 
    2020-01-13 22:15:46      1 lines fetched
    2020-01-13 22:15:46 0209 DROP TABLE STEPENTRY_12_of_50
    2020-01-13 22:15:46 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:46 0212 NEXT
    2020-01-13 22:15:46 0037 LET varRecordSetTableName=Peek('sp_table_name',13,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:46 0038 LET varRecordSetQlikName=Peek('qlik_table_name',13,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:46 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',13,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:46 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hospitalsclincis') <= 20),'hospitalsclincis' & 'end_1',left('hospitalsclincis', 20)& 'end_1')
    2020-01-13 22:15:46 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hospitalsclincis' & 'enddate'
    2020-01-13 22:15:46 0042 LET varRecordSetQlikName_Entry= 'client_hospitalsclincis' & '_entry'
    2020-01-13 22:15:46 0043 LET varRecordSetQlikName_Exit='client_hospitalsclincis'& '_exit'
    2020-01-13 22:15:46 0045 LET varRecordSetQlikName_Interim='client_hospitalsclincis' & '_review'
    2020-01-13 22:15:46 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hospitalsclincis', (len('client_hospitalsclincis'))-7))
    2020-01-13 22:15:46 0048 client_hospitalsclincis:
    2020-01-13 22:15:46 0049   SELECT * FROM qlik_sclient_hospitalsclincis
    2020-01-13 22:15:47      	10 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, 
    2020-01-13 22:15:47      1,531 lines fetched
    2020-01-13 22:15:47 0051 CustomEndFieldCheck:
    2020-01-13 22:15:47 0052   SELECT *
    2020-01-13 22:15:47 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hospitalsclincisend_1'
    2020-01-13 22:15:47      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:47      0 lines fetched
    2020-01-13 22:15:47 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hospitalsclincisend_1','hospitalsclincisenddate')
    2020-01-13 22:15:47 0059 client_hospitalsclincis_entry:
    2020-01-13 22:15:47 0060   Noconcatenate
    2020-01-13 22:15:47 0061   LOAD DISTINCT
    2020-01-13 22:15:47 0062   *,
    2020-01-13 22:15:47 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:47 0064   recordset_id AS 'client_HOSPITALSCLINCISRECORDSET_ID_entry'
    2020-01-13 22:15:47 0065   RESIDENT client_hospitalsclincis
    2020-01-13 22:15:47      	12 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, %entry_recordset_id, client_HOSPITALSCLINCISRECORDSET_ID_entry, 
    2020-01-13 22:15:47      1,531 lines fetched
    2020-01-13 22:15:47 0068 RS_Entry:
    2020-01-13 22:15:47 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:47 0070   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:15:47 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:47 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:47 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:47 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:47 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:47 0076   WHERE
    2020-01-13 22:15:47 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:47 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:47 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:47 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:47 0081    AND ((((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:15:47 0082                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hospitalsclincisenddate::DATE >= ee.entry_date::DATE) OR ((ft.hospitalsclincisenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:47 0083   UNION
    2020-01-13 22:15:47 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:47 0085   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:15:47 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:47 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:47 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:47 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:47 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:47 0091   WHERE 
    2020-01-13 22:15:47 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:47 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:47 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:47 0095   AND ((((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:15:47 0096                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hospitalsclincisenddate::DATE >= ee.entry_date::DATE) OR ((ft.hospitalsclincisenddate::DATE >= date(now()))))))
    2020-01-13 22:15:48      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:48      120 lines fetched
    2020-01-13 22:15:48 0100 RS_Entry_Explicit:
    2020-01-13 22:15:48 0101   Noconcatenate
    2020-01-13 22:15:48 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:48 0103   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:15:48 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:48 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:48 0106   WHERE 
    2020-01-13 22:15:48 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:48 0108   AND ((((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:48 0109   AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:15:48 0110                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:48 0111 				   AND ((ft.hospitalsclincisenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:48 0112 				   OR ((ft.hospitalsclincisenddate::DATE >= date(now()))))))
    2020-01-13 22:15:48      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:48      746 lines fetched
    2020-01-13 22:15:48 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:48 0116   LOAD
    2020-01-13 22:15:48 0117   entry_exit_id, 
    2020-01-13 22:15:48 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:48 0119   question_id as %entryquestionid,
    2020-01-13 22:15:48 0120   provider_creating_id
    2020-01-13 22:15:48 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:48      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:48      381,396 lines fetched
    2020-01-13 22:15:48 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:48 0129 INNER JOIN(client_hospitalsclincis_entry)
    2020-01-13 22:15:48 0130   LOAD DISTINCT
    2020-01-13 22:15:48 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:48 0132   recordset_id,
    2020-01-13 22:15:48 0133   provider_creating_id AS [client_HOSPITALSCLINCIS_Provider_Creating_Entry],
    2020-01-13 22:15:48 0134   name AS [client_HOSPITALSCLINCIS_Provider_Name_Creating_Entry],
    2020-01-13 22:15:48 0135   user_creating_id AS [client_HOSPITALSCLINCIS_User_Created_By_Id_Entry],
    2020-01-13 22:15:48 0136   user_name AS [client_HOSPITALSCLINCIS_User_Created_By_Entry]
    2020-01-13 22:15:48 0137   RESIDENT RS_Entry
    2020-01-13 22:15:48      	6 fields found: Entry Exit Id, recordset_id, client_HOSPITALSCLINCIS_Provider_Creating_Entry, client_HOSPITALSCLINCIS_Provider_Name_Creating_Entry, client_HOSPITALSCLINCIS_User_Created_By_Id_Entry, client_HOSPITALSCLINCIS_User_Created_By_Entry, 
    2020-01-13 22:15:48      120 lines fetched
    2020-01-13 22:15:48      Joining/Keeping
    2020-01-13 22:15:48 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:48 0141 DROP FIELDS client_id FROM client_hospitalsclincis_entry
    2020-01-13 22:15:48 0142 DROP FIELDS recordset_id FROM client_hospitalsclincis_entry
    2020-01-13 22:15:48 0143 DROP FIELDS [Entry Exit Id] FROM client_hospitalsclincis_entry
    2020-01-13 22:15:48 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:48 0147   Mapping SQL
    2020-01-13 22:15:48 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:48 0149     FROM da_question dq
    2020-01-13 22:15:48 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0151     WHERE
    2020-01-13 22:15:48 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:48 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:48 0155     UNION
    2020-01-13 22:15:48 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:48 0157     FROM da_question dq
    2020-01-13 22:15:48 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0159     WHERE
    2020-01-13 22:15:48 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:48 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:48 0163      UNION
    2020-01-13 22:15:48 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:48 0165     FROM da_question dq
    2020-01-13 22:15:48 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0167     WHERE
    2020-01-13 22:15:48 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:48 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:48 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:48 0172     UNION
    2020-01-13 22:15:48 0173 
    2020-01-13 22:15:48 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:48 0175     FROM da_question dq
    2020-01-13 22:15:48 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0177     WHERE
    2020-01-13 22:15:48 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:48 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:48 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:48 0182     UNION   
    2020-01-13 22:15:48 0183     SELECT
    2020-01-13 22:15:48 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:48 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:48 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:48 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:48 0188     FROM da_question dq
    2020-01-13 22:15:48 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0190     WHERE
    2020-01-13 22:15:48 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:48 0193     UNION
    2020-01-13 22:15:48 0194 	SELECT
    2020-01-13 22:15:48 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:48 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:48 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:48 0198     FROM da_question dq
    2020-01-13 22:15:48 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:48 0200     WHERE
    2020-01-13 22:15:48 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:48 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:49      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:49      1,304 lines fetched
    2020-01-13 22:15:49 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:49 0205 DROP TABLE client_hospitalsclincis
    2020-01-13 22:15:49 0207 LET varStepName='STEPENTRY_' & 13 & '_of_' & 50
    2020-01-13 22:15:49 0208 STEPENTRY_13_of_50: select 1
    2020-01-13 22:15:49      	1 fields found: ?column?, 
    2020-01-13 22:15:49      1 lines fetched
    2020-01-13 22:15:49 0209 DROP TABLE STEPENTRY_13_of_50
    2020-01-13 22:15:49 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:49 0212 NEXT
    2020-01-13 22:15:49 0037 LET varRecordSetTableName=Peek('sp_table_name',14,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:49 0038 LET varRecordSetQlikName=Peek('qlik_table_name',14,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:49 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',14,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:49 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterestvispda') <= 20),'housinginterestvispda' & 'end_1',left('housinginterestvispda', 20)& 'end_1')
    2020-01-13 22:15:49 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterestvispda' & 'enddate'
    2020-01-13 22:15:49 0042 LET varRecordSetQlikName_Entry= 'client_housinginterestvispda' & '_entry'
    2020-01-13 22:15:49 0043 LET varRecordSetQlikName_Exit='client_housinginterestvispda'& '_exit'
    2020-01-13 22:15:49 0045 LET varRecordSetQlikName_Interim='client_housinginterestvispda' & '_review'
    2020-01-13 22:15:49 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_housinginterestvispda', (len('client_housinginterestvispda'))-7))
    2020-01-13 22:15:49 0048 client_housinginterestvispda:
    2020-01-13 22:15:49 0049   SELECT * FROM qlik_sclient_housinginterestvispda
    2020-01-13 22:15:49      	8 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, 
    2020-01-13 22:15:49      1,278 lines fetched
    2020-01-13 22:15:49 0051 CustomEndFieldCheck:
    2020-01-13 22:15:49 0052   SELECT *
    2020-01-13 22:15:49 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterestvispdend_1'
    2020-01-13 22:15:49      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:49      0 lines fetched
    2020-01-13 22:15:49 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterestvispdend_1','housinginterestvispdaenddate')
    2020-01-13 22:15:49 0059 client_housinginterestvispda_entry:
    2020-01-13 22:15:49 0060   Noconcatenate
    2020-01-13 22:15:49 0061   LOAD DISTINCT
    2020-01-13 22:15:49 0062   *,
    2020-01-13 22:15:49 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:49 0064   recordset_id AS 'client_HOUSINGINTERESTVISPDARECORDSET_ID_entry'
    2020-01-13 22:15:49 0065   RESIDENT client_housinginterestvispda
    2020-01-13 22:15:50      	10 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, %entry_recordset_id, client_HOUSINGINTERESTVISPDARECORDSET_ID_entry, 
    2020-01-13 22:15:50      1,278 lines fetched
    2020-01-13 22:15:50 0068 RS_Entry:
    2020-01-13 22:15:50 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:50 0070   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:15:50 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:50 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:50 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:50 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:50 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:50 0076   WHERE
    2020-01-13 22:15:50 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:50 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:50 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:50 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:50 0081    AND ((((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:15:50 0082                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housinginterestvispdaenddate::DATE >= ee.entry_date::DATE) OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:50 0083   UNION
    2020-01-13 22:15:50 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:50 0085   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:15:50 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:50 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:50 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:50 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:50 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:50 0091   WHERE 
    2020-01-13 22:15:50 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:50 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:50 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:50 0095   AND ((((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:15:50 0096                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housinginterestvispdaenddate::DATE >= ee.entry_date::DATE) OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))))))
    2020-01-13 22:15:50      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:50      1,154 lines fetched
    2020-01-13 22:15:50 0100 RS_Entry_Explicit:
    2020-01-13 22:15:50 0101   Noconcatenate
    2020-01-13 22:15:50 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:50 0103   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:15:50 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:50 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:50 0106   WHERE 
    2020-01-13 22:15:50 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:50 0108   AND ((((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:50 0109   AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:15:50 0110                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:50 0111 				   AND ((ft.housinginterestvispdaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:50 0112 				   OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))))))
    2020-01-13 22:15:50      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:50      1,976 lines fetched
    2020-01-13 22:15:50 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:50 0116   LOAD
    2020-01-13 22:15:50 0117   entry_exit_id, 
    2020-01-13 22:15:50 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:50 0119   question_id as %entryquestionid,
    2020-01-13 22:15:50 0120   provider_creating_id
    2020-01-13 22:15:50 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:50      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:50      383,372 lines fetched
    2020-01-13 22:15:50 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:51 0129 INNER JOIN(client_housinginterestvispda_entry)
    2020-01-13 22:15:51 0130   LOAD DISTINCT
    2020-01-13 22:15:51 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:51 0132   recordset_id,
    2020-01-13 22:15:51 0133   provider_creating_id AS [client_HOUSINGINTERESTVISPDA_Provider_Creating_Entry],
    2020-01-13 22:15:51 0134   name AS [client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Entry],
    2020-01-13 22:15:51 0135   user_creating_id AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Entry],
    2020-01-13 22:15:51 0136   user_name AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Entry]
    2020-01-13 22:15:51 0137   RESIDENT RS_Entry
    2020-01-13 22:15:51      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGINTERESTVISPDA_Provider_Creating_Entry, client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Entry, client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Entry, client_HOUSINGINTERESTVISPDA_User_Created_By_Entry, 
    2020-01-13 22:15:51      1,154 lines fetched
    2020-01-13 22:15:51      Joining/Keeping
    2020-01-13 22:15:51 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:51 0141 DROP FIELDS client_id FROM client_housinginterestvispda_entry
    2020-01-13 22:15:51 0142 DROP FIELDS recordset_id FROM client_housinginterestvispda_entry
    2020-01-13 22:15:51 0143 DROP FIELDS [Entry Exit Id] FROM client_housinginterestvispda_entry
    2020-01-13 22:15:51 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:51 0147   Mapping SQL
    2020-01-13 22:15:51 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:51 0149     FROM da_question dq
    2020-01-13 22:15:51 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0151     WHERE
    2020-01-13 22:15:51 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:51 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:51 0155     UNION
    2020-01-13 22:15:51 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:51 0157     FROM da_question dq
    2020-01-13 22:15:51 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0159     WHERE
    2020-01-13 22:15:51 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:51 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:51 0163      UNION
    2020-01-13 22:15:51 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:51 0165     FROM da_question dq
    2020-01-13 22:15:51 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0167     WHERE
    2020-01-13 22:15:51 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:51 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:51 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:51 0172     UNION
    2020-01-13 22:15:51 0173 
    2020-01-13 22:15:51 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:51 0175     FROM da_question dq
    2020-01-13 22:15:51 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0177     WHERE
    2020-01-13 22:15:51 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:51 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:51 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:51 0182     UNION   
    2020-01-13 22:15:51 0183     SELECT
    2020-01-13 22:15:51 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:51 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:51 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:51 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:51 0188     FROM da_question dq
    2020-01-13 22:15:51 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0190     WHERE
    2020-01-13 22:15:51 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:51 0193     UNION
    2020-01-13 22:15:51 0194 	SELECT
    2020-01-13 22:15:51 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:51 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:51 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:51 0198     FROM da_question dq
    2020-01-13 22:15:51 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:51 0200     WHERE
    2020-01-13 22:15:51 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:51 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:51      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:51      1,304 lines fetched
    2020-01-13 22:15:51 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:51 0205 DROP TABLE client_housinginterestvispda
    2020-01-13 22:15:51 0207 LET varStepName='STEPENTRY_' & 14 & '_of_' & 50
    2020-01-13 22:15:51 0208 STEPENTRY_14_of_50: select 1
    2020-01-13 22:15:51      	1 fields found: ?column?, 
    2020-01-13 22:15:51      1 lines fetched
    2020-01-13 22:15:51 0209 DROP TABLE STEPENTRY_14_of_50
    2020-01-13 22:15:51 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:51 0212 NEXT
    2020-01-13 22:15:51 0037 LET varRecordSetTableName=Peek('sp_table_name',15,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:51 0038 LET varRecordSetQlikName=Peek('qlik_table_name',15,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:51 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',15,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:51 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterventionof') <= 20),'housinginterventionof' & 'end_1',left('housinginterventionof', 20)& 'end_1')
    2020-01-13 22:15:51 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterventionof' & 'enddate'
    2020-01-13 22:15:51 0042 LET varRecordSetQlikName_Entry= 'client_housinginterventionof' & '_entry'
    2020-01-13 22:15:51 0043 LET varRecordSetQlikName_Exit='client_housinginterventionof'& '_exit'
    2020-01-13 22:15:51 0045 LET varRecordSetQlikName_Interim='client_housinginterventionof' & '_review'
    2020-01-13 22:15:51 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_housinginterventionof', (len('client_housinginterventionof'))-7))
    2020-01-13 22:15:51 0048 client_housinginterventionof:
    2020-01-13 22:15:51 0049   SELECT * FROM qlik_sclient_housinginterventionof
    2020-01-13 22:15:52      	21 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, 
    2020-01-13 22:15:52      977 lines fetched
    2020-01-13 22:15:52 0051 CustomEndFieldCheck:
    2020-01-13 22:15:52 0052   SELECT *
    2020-01-13 22:15:52 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterventionoend_1'
    2020-01-13 22:15:52      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:52      0 lines fetched
    2020-01-13 22:15:52 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterventionoend_1','housinginterventionofenddate')
    2020-01-13 22:15:52 0059 client_housinginterventionof_entry:
    2020-01-13 22:15:52 0060   Noconcatenate
    2020-01-13 22:15:52 0061   LOAD DISTINCT
    2020-01-13 22:15:52 0062   *,
    2020-01-13 22:15:52 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:52 0064   recordset_id AS 'client_HOUSINGINTERVENTIONOFRECORDSET_ID_entry'
    2020-01-13 22:15:52 0065   RESIDENT client_housinginterventionof
    2020-01-13 22:15:52      	23 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, %entry_recordset_id, client_HOUSINGINTERVENTIONOFRECORDSET_ID_entry, 
    2020-01-13 22:15:52      977 lines fetched
    2020-01-13 22:15:52 0068 RS_Entry:
    2020-01-13 22:15:52 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:52 0070   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:15:52 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:52 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:52 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:52 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:52 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:52 0076   WHERE
    2020-01-13 22:15:52 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:52 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:52 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:52 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:52 0081    AND ((((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:15:52 0082                    OR (((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housinginterventionofenddate::DATE >= ee.entry_date::DATE) OR ((ft.housinginterventionofenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:52 0083   UNION
    2020-01-13 22:15:52 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:52 0085   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:15:52 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:52 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:52 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:52 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:52 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:52 0091   WHERE 
    2020-01-13 22:15:52 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:52 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:52 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:52 0095   AND ((((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:15:52 0096                    OR (((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housinginterventionofenddate::DATE >= ee.entry_date::DATE) OR ((ft.housinginterventionofenddate::DATE >= date(now()))))))
    2020-01-13 22:15:53      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:53      578 lines fetched
    2020-01-13 22:15:53 0100 RS_Entry_Explicit:
    2020-01-13 22:15:53 0101   Noconcatenate
    2020-01-13 22:15:53 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:53 0103   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:15:53 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:53 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:53 0106   WHERE 
    2020-01-13 22:15:53 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:53 0108   AND ((((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:53 0109   AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:15:53 0110                    OR (((ft.housinginterventionofstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:53 0111 				   AND ((ft.housinginterventionofenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:53 0112 				   OR ((ft.housinginterventionofenddate::DATE >= date(now()))))))
    2020-01-13 22:15:53      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:53      945 lines fetched
    2020-01-13 22:15:53 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:53 0116   LOAD
    2020-01-13 22:15:53 0117   entry_exit_id, 
    2020-01-13 22:15:53 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:53 0119   question_id as %entryquestionid,
    2020-01-13 22:15:53 0120   provider_creating_id
    2020-01-13 22:15:53 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:53      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:53      384,317 lines fetched
    2020-01-13 22:15:53 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:53 0129 INNER JOIN(client_housinginterventionof_entry)
    2020-01-13 22:15:53 0130   LOAD DISTINCT
    2020-01-13 22:15:53 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:53 0132   recordset_id,
    2020-01-13 22:15:53 0133   provider_creating_id AS [client_HOUSINGINTERVENTIONOF_Provider_Creating_Entry],
    2020-01-13 22:15:53 0134   name AS [client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Entry],
    2020-01-13 22:15:53 0135   user_creating_id AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Entry],
    2020-01-13 22:15:53 0136   user_name AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Entry]
    2020-01-13 22:15:53 0137   RESIDENT RS_Entry
    2020-01-13 22:15:53      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGINTERVENTIONOF_Provider_Creating_Entry, client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Entry, client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Entry, client_HOUSINGINTERVENTIONOF_User_Created_By_Entry, 
    2020-01-13 22:15:53      578 lines fetched
    2020-01-13 22:15:53      Joining/Keeping
    2020-01-13 22:15:53 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:53 0141 DROP FIELDS client_id FROM client_housinginterventionof_entry
    2020-01-13 22:15:53 0142 DROP FIELDS recordset_id FROM client_housinginterventionof_entry
    2020-01-13 22:15:53 0143 DROP FIELDS [Entry Exit Id] FROM client_housinginterventionof_entry
    2020-01-13 22:15:53 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:53 0147   Mapping SQL
    2020-01-13 22:15:53 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:53 0149     FROM da_question dq
    2020-01-13 22:15:53 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0151     WHERE
    2020-01-13 22:15:53 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:53 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:53 0155     UNION
    2020-01-13 22:15:53 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:53 0157     FROM da_question dq
    2020-01-13 22:15:53 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0159     WHERE
    2020-01-13 22:15:53 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:53 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:53 0163      UNION
    2020-01-13 22:15:53 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:53 0165     FROM da_question dq
    2020-01-13 22:15:53 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0167     WHERE
    2020-01-13 22:15:53 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:53 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:53 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:53 0172     UNION
    2020-01-13 22:15:53 0173 
    2020-01-13 22:15:53 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:53 0175     FROM da_question dq
    2020-01-13 22:15:53 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0177     WHERE
    2020-01-13 22:15:53 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:53 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:53 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:53 0182     UNION   
    2020-01-13 22:15:53 0183     SELECT
    2020-01-13 22:15:53 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:53 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:53 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:53 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:53 0188     FROM da_question dq
    2020-01-13 22:15:53 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0190     WHERE
    2020-01-13 22:15:53 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:53 0193     UNION
    2020-01-13 22:15:53 0194 	SELECT
    2020-01-13 22:15:53 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:53 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:53 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:53 0198     FROM da_question dq
    2020-01-13 22:15:53 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:53 0200     WHERE
    2020-01-13 22:15:53 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:53 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:54      1,304 lines fetched
    2020-01-13 22:15:54 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:54 0205 DROP TABLE client_housinginterventionof
    2020-01-13 22:15:54 0207 LET varStepName='STEPENTRY_' & 15 & '_of_' & 50
    2020-01-13 22:15:54 0208 STEPENTRY_15_of_50: select 1
    2020-01-13 22:15:54      	1 fields found: ?column?, 
    2020-01-13 22:15:54      1 lines fetched
    2020-01-13 22:15:54 0209 DROP TABLE STEPENTRY_15_of_50
    2020-01-13 22:15:54 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:54 0212 NEXT
    2020-01-13 22:15:54 0037 LET varRecordSetTableName=Peek('sp_table_name',16,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:54 0038 LET varRecordSetQlikName=Peek('qlik_table_name',16,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:54 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',16,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:54 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housingplacementnotes') <= 20),'housingplacementnotes' & 'end_1',left('housingplacementnotes', 20)& 'end_1')
    2020-01-13 22:15:54 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'housingplacementnotes' & 'enddate'
    2020-01-13 22:15:54 0042 LET varRecordSetQlikName_Entry= 'client_housingplacementnotes' & '_entry'
    2020-01-13 22:15:54 0043 LET varRecordSetQlikName_Exit='client_housingplacementnotes'& '_exit'
    2020-01-13 22:15:54 0045 LET varRecordSetQlikName_Interim='client_housingplacementnotes' & '_review'
    2020-01-13 22:15:54 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_housingplacementnotes', (len('client_housingplacementnotes'))-7))
    2020-01-13 22:15:54 0048 client_housingplacementnotes:
    2020-01-13 22:15:54 0049   SELECT * FROM qlik_sclient_housingplacementnotes
    2020-01-13 22:15:54      	6 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, 
    2020-01-13 22:15:54      5,099 lines fetched
    2020-01-13 22:15:54 0051 CustomEndFieldCheck:
    2020-01-13 22:15:54 0052   SELECT *
    2020-01-13 22:15:54 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housingplacementnoteend_1'
    2020-01-13 22:15:55      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:55      0 lines fetched
    2020-01-13 22:15:55 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housingplacementnoteend_1','housingplacementnotesenddate')
    2020-01-13 22:15:55 0059 client_housingplacementnotes_entry:
    2020-01-13 22:15:55 0060   Noconcatenate
    2020-01-13 22:15:55 0061   LOAD DISTINCT
    2020-01-13 22:15:55 0062   *,
    2020-01-13 22:15:55 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:55 0064   recordset_id AS 'client_HOUSINGPLACEMENTNOTESRECORDSET_ID_entry'
    2020-01-13 22:15:55 0065   RESIDENT client_housingplacementnotes
    2020-01-13 22:15:55      	8 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, %entry_recordset_id, client_HOUSINGPLACEMENTNOTESRECORDSET_ID_entry, 
    2020-01-13 22:15:55      5,099 lines fetched
    2020-01-13 22:15:55 0068 RS_Entry:
    2020-01-13 22:15:55 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:55 0070   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:15:55 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:55 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:55 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:55 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:55 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:55 0076   WHERE
    2020-01-13 22:15:55 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:55 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:55 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:55 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:55 0081    AND ((((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:15:55 0082                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housingplacementnotesenddate::DATE >= ee.entry_date::DATE) OR ((ft.housingplacementnotesenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:55 0083   UNION
    2020-01-13 22:15:55 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:55 0085   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:15:55 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:55 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:55 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:55 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:55 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:55 0091   WHERE 
    2020-01-13 22:15:55 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:55 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:55 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:55 0095   AND ((((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:15:55 0096                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.housingplacementnotesenddate::DATE >= ee.entry_date::DATE) OR ((ft.housingplacementnotesenddate::DATE >= date(now()))))))
    2020-01-13 22:15:55      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:55      3,076 lines fetched
    2020-01-13 22:15:55 0100 RS_Entry_Explicit:
    2020-01-13 22:15:55 0101   Noconcatenate
    2020-01-13 22:15:55 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:55 0103   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:15:55 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:55 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:55 0106   WHERE 
    2020-01-13 22:15:55 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:55 0108   AND ((((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:55 0109   AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:15:55 0110                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:55 0111 				   AND ((ft.housingplacementnotesenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:55 0112 				   OR ((ft.housingplacementnotesenddate::DATE >= date(now()))))))
    2020-01-13 22:15:56      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:56      10,396 lines fetched
    2020-01-13 22:15:56 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:56 0116   LOAD
    2020-01-13 22:15:56 0117   entry_exit_id, 
    2020-01-13 22:15:56 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:56 0119   question_id as %entryquestionid,
    2020-01-13 22:15:56 0120   provider_creating_id
    2020-01-13 22:15:56 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:56      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:56      394,713 lines fetched
    2020-01-13 22:15:56 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:56 0129 INNER JOIN(client_housingplacementnotes_entry)
    2020-01-13 22:15:56 0130   LOAD DISTINCT
    2020-01-13 22:15:56 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:56 0132   recordset_id,
    2020-01-13 22:15:56 0133   provider_creating_id AS [client_HOUSINGPLACEMENTNOTES_Provider_Creating_Entry],
    2020-01-13 22:15:56 0134   name AS [client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Entry],
    2020-01-13 22:15:56 0135   user_creating_id AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Entry],
    2020-01-13 22:15:56 0136   user_name AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Entry]
    2020-01-13 22:15:56 0137   RESIDENT RS_Entry
    2020-01-13 22:15:56      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGPLACEMENTNOTES_Provider_Creating_Entry, client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Entry, client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Entry, client_HOUSINGPLACEMENTNOTES_User_Created_By_Entry, 
    2020-01-13 22:15:56      3,076 lines fetched
    2020-01-13 22:15:56      Joining/Keeping
    2020-01-13 22:15:56 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:56 0141 DROP FIELDS client_id FROM client_housingplacementnotes_entry
    2020-01-13 22:15:56 0142 DROP FIELDS recordset_id FROM client_housingplacementnotes_entry
    2020-01-13 22:15:56 0143 DROP FIELDS [Entry Exit Id] FROM client_housingplacementnotes_entry
    2020-01-13 22:15:56 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:56 0147   Mapping SQL
    2020-01-13 22:15:56 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:56 0149     FROM da_question dq
    2020-01-13 22:15:56 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0151     WHERE
    2020-01-13 22:15:56 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:56 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:56 0155     UNION
    2020-01-13 22:15:56 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:56 0157     FROM da_question dq
    2020-01-13 22:15:56 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0159     WHERE
    2020-01-13 22:15:56 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:56 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:56 0163      UNION
    2020-01-13 22:15:56 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:56 0165     FROM da_question dq
    2020-01-13 22:15:56 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0167     WHERE
    2020-01-13 22:15:56 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:56 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:56 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:56 0172     UNION
    2020-01-13 22:15:56 0173 
    2020-01-13 22:15:56 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:56 0175     FROM da_question dq
    2020-01-13 22:15:56 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0177     WHERE
    2020-01-13 22:15:56 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:56 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:56 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:56 0182     UNION   
    2020-01-13 22:15:56 0183     SELECT
    2020-01-13 22:15:56 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:56 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:56 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:56 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:56 0188     FROM da_question dq
    2020-01-13 22:15:56 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0190     WHERE
    2020-01-13 22:15:56 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:56 0193     UNION
    2020-01-13 22:15:56 0194 	SELECT
    2020-01-13 22:15:56 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:56 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:56 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:56 0198     FROM da_question dq
    2020-01-13 22:15:56 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:56 0200     WHERE
    2020-01-13 22:15:56 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:56 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:56      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:56      1,304 lines fetched
    2020-01-13 22:15:56 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:56 0205 DROP TABLE client_housingplacementnotes
    2020-01-13 22:15:56 0207 LET varStepName='STEPENTRY_' & 16 & '_of_' & 50
    2020-01-13 22:15:56 0208 STEPENTRY_16_of_50: select 1
    2020-01-13 22:15:56      	1 fields found: ?column?, 
    2020-01-13 22:15:56      1 lines fetched
    2020-01-13 22:15:56 0209 DROP TABLE STEPENTRY_16_of_50
    2020-01-13 22:15:56 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:56 0212 NEXT
    2020-01-13 22:15:56 0037 LET varRecordSetTableName=Peek('sp_table_name',17,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:56 0038 LET varRecordSetQlikName=Peek('qlik_table_name',17,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:56 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',17,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:56 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_childenrolldiff') <= 20),'hud_childenrolldiff' & 'end_1',left('hud_childenrolldiff', 20)& 'end_1')
    2020-01-13 22:15:56 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_childenrolldiff' & 'enddate'
    2020-01-13 22:15:56 0042 LET varRecordSetQlikName_Entry= 'client_hud_childenrolldiff' & '_entry'
    2020-01-13 22:15:56 0043 LET varRecordSetQlikName_Exit='client_hud_childenrolldiff'& '_exit'
    2020-01-13 22:15:56 0045 LET varRecordSetQlikName_Interim='client_hud_childenrolldiff' & '_review'
    2020-01-13 22:15:56 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_childenrolldiff', (len('client_hud_childenrolldiff'))-7))
    2020-01-13 22:15:56 0048 client_hud_childenrolldiff:
    2020-01-13 22:15:56 0049   SELECT * FROM qlik_sclient_hud_childenrolldiff
    2020-01-13 22:15:57      	5 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, 
    2020-01-13 22:15:57      33 lines fetched
    2020-01-13 22:15:57 0051 CustomEndFieldCheck:
    2020-01-13 22:15:57 0052   SELECT *
    2020-01-13 22:15:57 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_childenrolldiffend_1'
    2020-01-13 22:15:57      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:57      0 lines fetched
    2020-01-13 22:15:57 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_childenrolldiffend_1','hud_childenrolldiffenddate')
    2020-01-13 22:15:57 0059 client_hud_childenrolldiff_entry:
    2020-01-13 22:15:57 0060   Noconcatenate
    2020-01-13 22:15:57 0061   LOAD DISTINCT
    2020-01-13 22:15:57 0062   *,
    2020-01-13 22:15:57 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:57 0064   recordset_id AS 'client_HUD_CHILDENROLLDIFFRECORDSET_ID_entry'
    2020-01-13 22:15:57 0065   RESIDENT client_hud_childenrolldiff
    2020-01-13 22:15:57      	7 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, %entry_recordset_id, client_HUD_CHILDENROLLDIFFRECORDSET_ID_entry, 
    2020-01-13 22:15:57      33 lines fetched
    2020-01-13 22:15:57 0068 RS_Entry:
    2020-01-13 22:15:57 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:57 0070   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:15:57 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:57 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:57 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:57 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:57 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:57 0076   WHERE
    2020-01-13 22:15:57 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:57 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:57 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:57 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:57 0081    AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:15:57 0082                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_childenrolldiffenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:57 0083   UNION
    2020-01-13 22:15:57 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:57 0085   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:15:57 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:57 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:57 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:57 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:57 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:57 0091   WHERE 
    2020-01-13 22:15:57 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:57 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:57 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:57 0095   AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:15:57 0096                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_childenrolldiffenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))))))
    2020-01-13 22:15:57      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:57      19 lines fetched
    2020-01-13 22:15:57 0100 RS_Entry_Explicit:
    2020-01-13 22:15:57 0101   Noconcatenate
    2020-01-13 22:15:57 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:57 0103   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:15:57 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:57 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:57 0106   WHERE 
    2020-01-13 22:15:57 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:57 0108   AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:57 0109   AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:15:57 0110                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:57 0111 				   AND ((ft.hud_childenrolldiffenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:57 0112 				   OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))))))
    2020-01-13 22:15:57      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:57      26 lines fetched
    2020-01-13 22:15:57 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:57 0116   LOAD
    2020-01-13 22:15:57 0117   entry_exit_id, 
    2020-01-13 22:15:57 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:57 0119   question_id as %entryquestionid,
    2020-01-13 22:15:57 0120   provider_creating_id
    2020-01-13 22:15:57 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:57      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:57      394,739 lines fetched
    2020-01-13 22:15:57 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:57 0129 INNER JOIN(client_hud_childenrolldiff_entry)
    2020-01-13 22:15:57 0130   LOAD DISTINCT
    2020-01-13 22:15:57 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:57 0132   recordset_id,
    2020-01-13 22:15:57 0133   provider_creating_id AS [client_HUD_CHILDENROLLDIFF_Provider_Creating_Entry],
    2020-01-13 22:15:57 0134   name AS [client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Entry],
    2020-01-13 22:15:57 0135   user_creating_id AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Entry],
    2020-01-13 22:15:57 0136   user_name AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Entry]
    2020-01-13 22:15:57 0137   RESIDENT RS_Entry
    2020-01-13 22:15:58      	6 fields found: Entry Exit Id, recordset_id, client_HUD_CHILDENROLLDIFF_Provider_Creating_Entry, client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Entry, client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Entry, client_HUD_CHILDENROLLDIFF_User_Created_By_Entry, 
    2020-01-13 22:15:58      19 lines fetched
    2020-01-13 22:15:58      Joining/Keeping
    2020-01-13 22:15:58 0139 DROP TABLE RS_Entry
    2020-01-13 22:15:58 0141 DROP FIELDS client_id FROM client_hud_childenrolldiff_entry
    2020-01-13 22:15:58 0142 DROP FIELDS recordset_id FROM client_hud_childenrolldiff_entry
    2020-01-13 22:15:58 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_childenrolldiff_entry
    2020-01-13 22:15:58 0146 FieldMapSaClientEntry:
    2020-01-13 22:15:58 0147   Mapping SQL
    2020-01-13 22:15:58 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:58 0149     FROM da_question dq
    2020-01-13 22:15:58 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0151     WHERE
    2020-01-13 22:15:58 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:15:58 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:15:58 0155     UNION
    2020-01-13 22:15:58 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:58 0157     FROM da_question dq
    2020-01-13 22:15:58 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0159     WHERE
    2020-01-13 22:15:58 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:15:58 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:15:58 0163      UNION
    2020-01-13 22:15:58 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:15:58 0165     FROM da_question dq
    2020-01-13 22:15:58 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0167     WHERE
    2020-01-13 22:15:58 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:15:58 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:15:58 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:58 0172     UNION
    2020-01-13 22:15:58 0173 
    2020-01-13 22:15:58 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:15:58 0175     FROM da_question dq
    2020-01-13 22:15:58 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0177     WHERE
    2020-01-13 22:15:58 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:15:58 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:15:58 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:15:58 0182     UNION   
    2020-01-13 22:15:58 0183     SELECT
    2020-01-13 22:15:58 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:15:58 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:58 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:58 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:15:58 0188     FROM da_question dq
    2020-01-13 22:15:58 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0190     WHERE
    2020-01-13 22:15:58 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:58 0193     UNION
    2020-01-13 22:15:58 0194 	SELECT
    2020-01-13 22:15:58 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:58 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:15:58 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:15:58 0198     FROM da_question dq
    2020-01-13 22:15:58 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:15:58 0200     WHERE
    2020-01-13 22:15:58 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:15:58 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:15:58      	2 fields found: oldnames, newnames, 
    2020-01-13 22:15:58      1,304 lines fetched
    2020-01-13 22:15:58 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:15:58 0205 DROP TABLE client_hud_childenrolldiff
    2020-01-13 22:15:58 0207 LET varStepName='STEPENTRY_' & 17 & '_of_' & 50
    2020-01-13 22:15:58 0208 STEPENTRY_17_of_50: select 1
    2020-01-13 22:15:58      	1 fields found: ?column?, 
    2020-01-13 22:15:58      1 lines fetched
    2020-01-13 22:15:58 0209 DROP TABLE STEPENTRY_17_of_50
    2020-01-13 22:15:58 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:15:58 0212 NEXT
    2020-01-13 22:15:58 0037 LET varRecordSetTableName=Peek('sp_table_name',18,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:58 0038 LET varRecordSetQlikName=Peek('qlik_table_name',18,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:58 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',18,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:15:58 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_degreesearnedinfo') <= 20),'hud_degreesearnedinfo' & 'end_1',left('hud_degreesearnedinfo', 20)& 'end_1')
    2020-01-13 22:15:58 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_degreesearnedinfo' & 'enddate'
    2020-01-13 22:15:58 0042 LET varRecordSetQlikName_Entry= 'client_hud_degreesearnedinfo' & '_entry'
    2020-01-13 22:15:58 0043 LET varRecordSetQlikName_Exit='client_hud_degreesearnedinfo'& '_exit'
    2020-01-13 22:15:58 0045 LET varRecordSetQlikName_Interim='client_hud_degreesearnedinfo' & '_review'
    2020-01-13 22:15:58 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_degreesearnedinfo', (len('client_hud_degreesearnedinfo'))-7))
    2020-01-13 22:15:58 0048 client_hud_degreesearnedinfo:
    2020-01-13 22:15:58 0049   SELECT * FROM qlik_sclient_hud_degreesearnedinfo
    2020-01-13 22:15:59      	7 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, 
    2020-01-13 22:15:59      951 lines fetched
    2020-01-13 22:15:59 0051 CustomEndFieldCheck:
    2020-01-13 22:15:59 0052   SELECT *
    2020-01-13 22:15:59 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_degreesearnedinfend_1'
    2020-01-13 22:15:59      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:15:59      0 lines fetched
    2020-01-13 22:15:59 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_degreesearnedinfend_1','hud_degreesearnedinfoenddate')
    2020-01-13 22:15:59 0059 client_hud_degreesearnedinfo_entry:
    2020-01-13 22:15:59 0060   Noconcatenate
    2020-01-13 22:15:59 0061   LOAD DISTINCT
    2020-01-13 22:15:59 0062   *,
    2020-01-13 22:15:59 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:15:59 0064   recordset_id AS 'client_HUD_DEGREESEARNEDINFORECORDSET_ID_entry'
    2020-01-13 22:15:59 0065   RESIDENT client_hud_degreesearnedinfo
    2020-01-13 22:15:59      	9 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, %entry_recordset_id, client_HUD_DEGREESEARNEDINFORECORDSET_ID_entry, 
    2020-01-13 22:15:59      951 lines fetched
    2020-01-13 22:15:59 0068 RS_Entry:
    2020-01-13 22:15:59 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:59 0070   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:15:59 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:59 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:59 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:59 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:59 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:15:59 0076   WHERE
    2020-01-13 22:15:59 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:15:59 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:59 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:59 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:15:59 0081    AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:15:59 0082                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:15:59 0083   UNION
    2020-01-13 22:15:59 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:15:59 0085   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:15:59 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:59 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:15:59 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:15:59 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:59 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:15:59 0091   WHERE 
    2020-01-13 22:15:59 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:15:59 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:59 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:15:59 0095   AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:15:59 0096                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:15:59      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:15:59      73 lines fetched
    2020-01-13 22:15:59 0100 RS_Entry_Explicit:
    2020-01-13 22:15:59 0101   Noconcatenate
    2020-01-13 22:15:59 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:15:59 0103   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:15:59 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:15:59 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:15:59 0106   WHERE 
    2020-01-13 22:15:59 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:15:59 0108   AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:59 0109   AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:15:59 0110                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:15:59 0111 				   AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:15:59 0112 				   OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:15:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:15:59      253 lines fetched
    2020-01-13 22:15:59 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:15:59 0116   LOAD
    2020-01-13 22:15:59 0117   entry_exit_id, 
    2020-01-13 22:15:59 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:15:59 0119   question_id as %entryquestionid,
    2020-01-13 22:15:59 0120   provider_creating_id
    2020-01-13 22:15:59 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:15:59      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:15:59      394,992 lines fetched
    2020-01-13 22:15:59 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:15:59 0129 INNER JOIN(client_hud_degreesearnedinfo_entry)
    2020-01-13 22:15:59 0130   LOAD DISTINCT
    2020-01-13 22:15:59 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:15:59 0132   recordset_id,
    2020-01-13 22:15:59 0133   provider_creating_id AS [client_HUD_DEGREESEARNEDINFO_Provider_Creating_Entry],
    2020-01-13 22:15:59 0134   name AS [client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Entry],
    2020-01-13 22:15:59 0135   user_creating_id AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Entry],
    2020-01-13 22:15:59 0136   user_name AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Entry]
    2020-01-13 22:15:59 0137   RESIDENT RS_Entry
    2020-01-13 22:15:59      	6 fields found: Entry Exit Id, recordset_id, client_HUD_DEGREESEARNEDINFO_Provider_Creating_Entry, client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Entry, client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Entry, client_HUD_DEGREESEARNEDINFO_User_Created_By_Entry, 
    2020-01-13 22:15:59      73 lines fetched
    2020-01-13 22:15:59      Joining/Keeping
    2020-01-13 22:16:00 0139 DROP TABLE RS_Entry
    2020-01-13 22:16:00 0141 DROP FIELDS client_id FROM client_hud_degreesearnedinfo_entry
    2020-01-13 22:16:00 0142 DROP FIELDS recordset_id FROM client_hud_degreesearnedinfo_entry
    2020-01-13 22:16:00 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_degreesearnedinfo_entry
    2020-01-13 22:16:00 0146 FieldMapSaClientEntry:
    2020-01-13 22:16:00 0147   Mapping SQL
    2020-01-13 22:16:00 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:16:00 0149     FROM da_question dq
    2020-01-13 22:16:00 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0151     WHERE
    2020-01-13 22:16:00 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:16:00 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:16:00 0155     UNION
    2020-01-13 22:16:00 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:16:00 0157     FROM da_question dq
    2020-01-13 22:16:00 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0159     WHERE
    2020-01-13 22:16:00 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:16:00 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:16:00 0163      UNION
    2020-01-13 22:16:00 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:16:00 0165     FROM da_question dq
    2020-01-13 22:16:00 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0167     WHERE
    2020-01-13 22:16:00 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:16:00 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:16:00 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:16:00 0172     UNION
    2020-01-13 22:16:00 0173 
    2020-01-13 22:16:00 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:16:00 0175     FROM da_question dq
    2020-01-13 22:16:00 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0177     WHERE
    2020-01-13 22:16:00 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:16:00 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:16:00 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:16:00 0182     UNION   
    2020-01-13 22:16:00 0183     SELECT
    2020-01-13 22:16:00 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:16:00 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:16:00 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:16:00 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:16:00 0188     FROM da_question dq
    2020-01-13 22:16:00 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0190     WHERE
    2020-01-13 22:16:00 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:16:00 0193     UNION
    2020-01-13 22:16:00 0194 	SELECT
    2020-01-13 22:16:00 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:16:00 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:16:00 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:16:00 0198     FROM da_question dq
    2020-01-13 22:16:00 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:16:00 0200     WHERE
    2020-01-13 22:16:00 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:16:00 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:16:00      	2 fields found: oldnames, newnames, 
    2020-01-13 22:16:00      1,304 lines fetched
    2020-01-13 22:16:00 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:16:00 0205 DROP TABLE client_hud_degreesearnedinfo
    2020-01-13 22:16:00 0207 LET varStepName='STEPENTRY_' & 18 & '_of_' & 50
    2020-01-13 22:16:00 0208 STEPENTRY_18_of_50: select 1
    2020-01-13 22:16:00      	1 fields found: ?column?, 
    2020-01-13 22:16:00      1 lines fetched
    2020-01-13 22:16:00 0209 DROP TABLE STEPENTRY_18_of_50
    2020-01-13 22:16:00 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:16:00 0212 NEXT
    2020-01-13 22:16:00 0037 LET varRecordSetTableName=Peek('sp_table_name',19,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:16:00 0038 LET varRecordSetQlikName=Peek('qlik_table_name',19,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:16:00 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',19,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:16:00 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hudhealthinsurancesuba') <= 20),'hudhealthinsurancesuba' & 'end_1',left('hudhealthinsurancesuba', 20)& 'end_1')
    2020-01-13 22:16:00 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hudhealthinsurancesuba' & 'enddate'
    2020-01-13 22:16:00 0042 LET varRecordSetQlikName_Entry= 'client_hudhealthinsurancesuba' & '_entry'
    2020-01-13 22:16:00 0043 LET varRecordSetQlikName_Exit='client_hudhealthinsurancesuba'& '_exit'
    2020-01-13 22:16:00 0045 LET varRecordSetQlikName_Interim='client_hudhealthinsurancesuba' & '_review'
    2020-01-13 22:16:00 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hudhealthinsurancesuba', (len('client_hudhealthinsurancesuba'))-7))
    2020-01-13 22:16:00 0048 client_hudhealthinsurancesuba:
    2020-01-13 22:16:00 0049   SELECT * FROM qlik_sclient_hudhealthinsurancesuba
    2020-01-13 22:16:55      	9 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, 
    2020-01-13 22:16:55      550,217 lines fetched
    2020-01-13 22:16:55 0051 CustomEndFieldCheck:
    2020-01-13 22:16:55 0052   SELECT *
    2020-01-13 22:16:55 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hudhealthinsurancesuend_1'
    2020-01-13 22:16:55      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:16:55      0 lines fetched
    2020-01-13 22:16:55 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hudhealthinsurancesuend_1','hudhealthinsurancesubaenddate')
    2020-01-13 22:16:55 0059 client_hudhealthinsurancesuba_entry:
    2020-01-13 22:16:55 0060   Noconcatenate
    2020-01-13 22:16:55 0061   LOAD DISTINCT
    2020-01-13 22:16:55 0062   *,
    2020-01-13 22:16:55 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:16:55 0064   recordset_id AS 'client_HUDHEALTHINSURANCESUBARECORDSET_ID_entry'
    2020-01-13 22:16:55 0065   RESIDENT client_hudhealthinsurancesuba
    2020-01-13 22:16:56      	11 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, %entry_recordset_id, client_HUDHEALTHINSURANCESUBARECORDSET_ID_entry, 
    2020-01-13 22:16:56      550,217 lines fetched
    2020-01-13 22:16:56 0068 RS_Entry:
    2020-01-13 22:16:56 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:16:56 0070   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:16:56 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:16:56 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:16:56 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:16:56 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:16:56 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:16:56 0076   WHERE
    2020-01-13 22:16:56 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:16:56 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:16:56 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:16:56 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:16:56 0081    AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:16:56 0082                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.entry_date::DATE) OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:16:56 0083   UNION
    2020-01-13 22:16:56 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:16:56 0085   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:16:56 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:16:56 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:16:56 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:16:56 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:16:56 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:16:56 0091   WHERE 
    2020-01-13 22:16:56 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:16:56 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:16:56 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:16:56 0095   AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:16:56 0096                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.entry_date::DATE) OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))))))
    2020-01-13 22:18:12      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:18:12      237,592 lines fetched
    2020-01-13 22:18:12 0100 RS_Entry_Explicit:
    2020-01-13 22:18:12 0101   Noconcatenate
    2020-01-13 22:18:12 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:18:12 0103   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:18:12 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:18:12 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:18:12 0106   WHERE 
    2020-01-13 22:18:12 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:18:12 0108   AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:18:12 0109   AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:18:12 0110                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:18:12 0111 				   AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:18:12 0112 				   OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))))))
    2020-01-13 22:18:51      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:18:51      375,766 lines fetched
    2020-01-13 22:18:51 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:18:51 0116   LOAD
    2020-01-13 22:18:51 0117   entry_exit_id, 
    2020-01-13 22:18:51 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:18:51 0119   question_id as %entryquestionid,
    2020-01-13 22:18:51 0120   provider_creating_id
    2020-01-13 22:18:51 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:18:55      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:18:55      770,758 lines fetched
    2020-01-13 22:18:55 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:18:55 0129 INNER JOIN(client_hudhealthinsurancesuba_entry)
    2020-01-13 22:18:55 0130   LOAD DISTINCT
    2020-01-13 22:18:55 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:18:55 0132   recordset_id,
    2020-01-13 22:18:55 0133   provider_creating_id AS [client_HUDHEALTHINSURANCESUBA_Provider_Creating_Entry],
    2020-01-13 22:18:55 0134   name AS [client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Entry],
    2020-01-13 22:18:55 0135   user_creating_id AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Entry],
    2020-01-13 22:18:55 0136   user_name AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Entry]
    2020-01-13 22:18:55 0137   RESIDENT RS_Entry
    2020-01-13 22:18:58      	6 fields found: Entry Exit Id, recordset_id, client_HUDHEALTHINSURANCESUBA_Provider_Creating_Entry, client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Entry, client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Entry, client_HUDHEALTHINSURANCESUBA_User_Created_By_Entry, 
    2020-01-13 22:18:58      237,592 lines fetched
    2020-01-13 22:18:58      Joining/Keeping
    2020-01-13 22:19:01 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:01 0141 DROP FIELDS client_id FROM client_hudhealthinsurancesuba_entry
    2020-01-13 22:19:01 0142 DROP FIELDS recordset_id FROM client_hudhealthinsurancesuba_entry
    2020-01-13 22:19:01 0143 DROP FIELDS [Entry Exit Id] FROM client_hudhealthinsurancesuba_entry
    2020-01-13 22:19:01 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:01 0147   Mapping SQL
    2020-01-13 22:19:01 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:01 0149     FROM da_question dq
    2020-01-13 22:19:01 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0151     WHERE
    2020-01-13 22:19:01 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:01 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:01 0155     UNION
    2020-01-13 22:19:01 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:01 0157     FROM da_question dq
    2020-01-13 22:19:01 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0159     WHERE
    2020-01-13 22:19:01 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:01 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:01 0163      UNION
    2020-01-13 22:19:01 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:01 0165     FROM da_question dq
    2020-01-13 22:19:01 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0167     WHERE
    2020-01-13 22:19:01 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:01 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:01 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:01 0172     UNION
    2020-01-13 22:19:01 0173 
    2020-01-13 22:19:01 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:01 0175     FROM da_question dq
    2020-01-13 22:19:01 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0177     WHERE
    2020-01-13 22:19:01 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:01 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:01 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:01 0182     UNION   
    2020-01-13 22:19:01 0183     SELECT
    2020-01-13 22:19:01 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:01 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:01 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:01 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:01 0188     FROM da_question dq
    2020-01-13 22:19:01 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0190     WHERE
    2020-01-13 22:19:01 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:01 0193     UNION
    2020-01-13 22:19:01 0194 	SELECT
    2020-01-13 22:19:01 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:01 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:01 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:01 0198     FROM da_question dq
    2020-01-13 22:19:01 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:01 0200     WHERE
    2020-01-13 22:19:01 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:01 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:02      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:02      1,304 lines fetched
    2020-01-13 22:19:02 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:02 0205 DROP TABLE client_hudhealthinsurancesuba
    2020-01-13 22:19:02 0207 LET varStepName='STEPENTRY_' & 19 & '_of_' & 50
    2020-01-13 22:19:02 0208 STEPENTRY_19_of_50: select 1
    2020-01-13 22:19:03      	1 fields found: ?column?, 
    2020-01-13 22:19:03      1 lines fetched
    2020-01-13 22:19:03 0209 DROP TABLE STEPENTRY_19_of_50
    2020-01-13 22:19:03 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:03 0212 NEXT
    2020-01-13 22:19:03 0037 LET varRecordSetTableName=Peek('sp_table_name',20,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:03 0038 LET varRecordSetQlikName=Peek('qlik_table_name',20,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:03 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',20,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:03 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militarybranchinfo') <= 20),'hud_militarybranchinfo' & 'end_1',left('hud_militarybranchinfo', 20)& 'end_1')
    2020-01-13 22:19:03 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militarybranchinfo' & 'enddate'
    2020-01-13 22:19:03 0042 LET varRecordSetQlikName_Entry= 'client_hud_militarybranchinfo' & '_entry'
    2020-01-13 22:19:03 0043 LET varRecordSetQlikName_Exit='client_hud_militarybranchinfo'& '_exit'
    2020-01-13 22:19:03 0045 LET varRecordSetQlikName_Interim='client_hud_militarybranchinfo' & '_review'
    2020-01-13 22:19:03 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_militarybranchinfo', (len('client_hud_militarybranchinfo'))-7))
    2020-01-13 22:19:03 0048 client_hud_militarybranchinfo:
    2020-01-13 22:19:03 0049   SELECT * FROM qlik_sclient_hud_militarybranchinfo
    2020-01-13 22:19:04      	5 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, 
    2020-01-13 22:19:04      2,382 lines fetched
    2020-01-13 22:19:04 0051 CustomEndFieldCheck:
    2020-01-13 22:19:04 0052   SELECT *
    2020-01-13 22:19:04 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militarybranchinend_1'
    2020-01-13 22:19:04      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:04      0 lines fetched
    2020-01-13 22:19:04 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militarybranchinend_1','hud_militarybranchinfoenddate')
    2020-01-13 22:19:04 0059 client_hud_militarybranchinfo_entry:
    2020-01-13 22:19:04 0060   Noconcatenate
    2020-01-13 22:19:04 0061   LOAD DISTINCT
    2020-01-13 22:19:04 0062   *,
    2020-01-13 22:19:04 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:04 0064   recordset_id AS 'client_HUD_MILITARYBRANCHINFORECORDSET_ID_entry'
    2020-01-13 22:19:04 0065   RESIDENT client_hud_militarybranchinfo
    2020-01-13 22:19:05      	7 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, %entry_recordset_id, client_HUD_MILITARYBRANCHINFORECORDSET_ID_entry, 
    2020-01-13 22:19:05      2,382 lines fetched
    2020-01-13 22:19:05 0068 RS_Entry:
    2020-01-13 22:19:05 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:05 0070   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:19:05 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:05 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:05 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:05 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:05 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:05 0076   WHERE
    2020-01-13 22:19:05 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:05 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:05 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:05 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:05 0081    AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:05 0082                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:05 0083   UNION
    2020-01-13 22:19:05 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:05 0085   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:19:05 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:05 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:05 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:05 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:05 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:05 0091   WHERE 
    2020-01-13 22:19:05 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:05 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:05 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:05 0095   AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:05 0096                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:06      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:06      22 lines fetched
    2020-01-13 22:19:06 0100 RS_Entry_Explicit:
    2020-01-13 22:19:06 0101   Noconcatenate
    2020-01-13 22:19:06 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:06 0103   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:19:06 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:06 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:06 0106   WHERE 
    2020-01-13 22:19:06 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:06 0108   AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:06 0109   AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:06 0110                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:06 0111 				   AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:06 0112 				   OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:07      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:07      125 lines fetched
    2020-01-13 22:19:07 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:07 0116   LOAD
    2020-01-13 22:19:07 0117   entry_exit_id, 
    2020-01-13 22:19:07 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:07 0119   question_id as %entryquestionid,
    2020-01-13 22:19:07 0120   provider_creating_id
    2020-01-13 22:19:07 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:07      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:07      770,883 lines fetched
    2020-01-13 22:19:07 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:07 0129 INNER JOIN(client_hud_militarybranchinfo_entry)
    2020-01-13 22:19:07 0130   LOAD DISTINCT
    2020-01-13 22:19:07 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:07 0132   recordset_id,
    2020-01-13 22:19:07 0133   provider_creating_id AS [client_HUD_MILITARYBRANCHINFO_Provider_Creating_Entry],
    2020-01-13 22:19:07 0134   name AS [client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Entry],
    2020-01-13 22:19:07 0135   user_creating_id AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Entry],
    2020-01-13 22:19:07 0136   user_name AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Entry]
    2020-01-13 22:19:07 0137   RESIDENT RS_Entry
    2020-01-13 22:19:07      	6 fields found: Entry Exit Id, recordset_id, client_HUD_MILITARYBRANCHINFO_Provider_Creating_Entry, client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Entry, client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Entry, client_HUD_MILITARYBRANCHINFO_User_Created_By_Entry, 
    2020-01-13 22:19:07      22 lines fetched
    2020-01-13 22:19:07      Joining/Keeping
    2020-01-13 22:19:07 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:07 0141 DROP FIELDS client_id FROM client_hud_militarybranchinfo_entry
    2020-01-13 22:19:07 0142 DROP FIELDS recordset_id FROM client_hud_militarybranchinfo_entry
    2020-01-13 22:19:07 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_militarybranchinfo_entry
    2020-01-13 22:19:07 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:07 0147   Mapping SQL
    2020-01-13 22:19:07 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:07 0149     FROM da_question dq
    2020-01-13 22:19:07 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0151     WHERE
    2020-01-13 22:19:07 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:07 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:07 0155     UNION
    2020-01-13 22:19:07 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:07 0157     FROM da_question dq
    2020-01-13 22:19:07 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0159     WHERE
    2020-01-13 22:19:07 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:07 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:07 0163      UNION
    2020-01-13 22:19:07 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:07 0165     FROM da_question dq
    2020-01-13 22:19:07 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0167     WHERE
    2020-01-13 22:19:07 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:07 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:07 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:07 0172     UNION
    2020-01-13 22:19:07 0173 
    2020-01-13 22:19:07 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:07 0175     FROM da_question dq
    2020-01-13 22:19:07 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0177     WHERE
    2020-01-13 22:19:07 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:07 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:07 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:07 0182     UNION   
    2020-01-13 22:19:07 0183     SELECT
    2020-01-13 22:19:07 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:07 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:07 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:07 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:07 0188     FROM da_question dq
    2020-01-13 22:19:07 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0190     WHERE
    2020-01-13 22:19:07 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:07 0193     UNION
    2020-01-13 22:19:07 0194 	SELECT
    2020-01-13 22:19:07 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:07 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:07 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:07 0198     FROM da_question dq
    2020-01-13 22:19:07 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:07 0200     WHERE
    2020-01-13 22:19:07 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:07 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:08      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:08      1,304 lines fetched
    2020-01-13 22:19:08 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:08 0205 DROP TABLE client_hud_militarybranchinfo
    2020-01-13 22:19:08 0207 LET varStepName='STEPENTRY_' & 20 & '_of_' & 50
    2020-01-13 22:19:08 0208 STEPENTRY_20_of_50: select 1
    2020-01-13 22:19:08      	1 fields found: ?column?, 
    2020-01-13 22:19:08      1 lines fetched
    2020-01-13 22:19:08 0209 DROP TABLE STEPENTRY_20_of_50
    2020-01-13 22:19:08 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:08 0212 NEXT
    2020-01-13 22:19:08 0037 LET varRecordSetTableName=Peek('sp_table_name',21,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:08 0038 LET varRecordSetQlikName=Peek('qlik_table_name',21,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:08 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',21,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:08 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militaryserverainfo') <= 20),'hud_militaryserverainfo' & 'end_1',left('hud_militaryserverainfo', 20)& 'end_1')
    2020-01-13 22:19:08 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militaryserverainfo' & 'enddate'
    2020-01-13 22:19:08 0042 LET varRecordSetQlikName_Entry= 'client_hud_militaryserverainfo' & '_entry'
    2020-01-13 22:19:08 0043 LET varRecordSetQlikName_Exit='client_hud_militaryserverainfo'& '_exit'
    2020-01-13 22:19:08 0045 LET varRecordSetQlikName_Interim='client_hud_militaryserverainfo' & '_review'
    2020-01-13 22:19:08 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_militaryserverainfo', (len('client_hud_militaryserverainfo'))-7))
    2020-01-13 22:19:08 0048 client_hud_militaryserverainfo:
    2020-01-13 22:19:08 0049   SELECT * FROM qlik_sclient_hud_militaryserverainfo
    2020-01-13 22:19:08      	5 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, 
    2020-01-13 22:19:08      2,145 lines fetched
    2020-01-13 22:19:08 0051 CustomEndFieldCheck:
    2020-01-13 22:19:08 0052   SELECT *
    2020-01-13 22:19:08 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militaryserveraiend_1'
    2020-01-13 22:19:08      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:08      0 lines fetched
    2020-01-13 22:19:08 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militaryserveraiend_1','hud_militaryserverainfoenddate')
    2020-01-13 22:19:08 0059 client_hud_militaryserverainfo_entry:
    2020-01-13 22:19:08 0060   Noconcatenate
    2020-01-13 22:19:08 0061   LOAD DISTINCT
    2020-01-13 22:19:08 0062   *,
    2020-01-13 22:19:08 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:08 0064   recordset_id AS 'client_HUD_MILITARYSERVERAINFORECORDSET_ID_entry'
    2020-01-13 22:19:08 0065   RESIDENT client_hud_militaryserverainfo
    2020-01-13 22:19:08      	7 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, %entry_recordset_id, client_HUD_MILITARYSERVERAINFORECORDSET_ID_entry, 
    2020-01-13 22:19:08      2,145 lines fetched
    2020-01-13 22:19:09 0068 RS_Entry:
    2020-01-13 22:19:09 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:09 0070   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:19:09 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:09 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:09 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:09 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:09 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:09 0076   WHERE
    2020-01-13 22:19:09 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:09 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:09 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:09 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:09 0081    AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:09 0082                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:09 0083   UNION
    2020-01-13 22:19:09 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:09 0085   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:19:09 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:09 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:09 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:09 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:09 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:09 0091   WHERE 
    2020-01-13 22:19:09 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:09 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:09 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:09 0095   AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:09 0096                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:09      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:09      29 lines fetched
    2020-01-13 22:19:09 0100 RS_Entry_Explicit:
    2020-01-13 22:19:09 0101   Noconcatenate
    2020-01-13 22:19:09 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:09 0103   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:19:09 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:09 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:09 0106   WHERE 
    2020-01-13 22:19:09 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:09 0108   AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:09 0109   AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:09 0110                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:09 0111 				   AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:09 0112 				   OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:09      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:09      139 lines fetched
    2020-01-13 22:19:09 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:09 0116   LOAD
    2020-01-13 22:19:09 0117   entry_exit_id, 
    2020-01-13 22:19:09 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:09 0119   question_id as %entryquestionid,
    2020-01-13 22:19:09 0120   provider_creating_id
    2020-01-13 22:19:09 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:09      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:09      771,022 lines fetched
    2020-01-13 22:19:09 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:09 0129 INNER JOIN(client_hud_militaryserverainfo_entry)
    2020-01-13 22:19:09 0130   LOAD DISTINCT
    2020-01-13 22:19:09 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:09 0132   recordset_id,
    2020-01-13 22:19:09 0133   provider_creating_id AS [client_HUD_MILITARYSERVERAINFO_Provider_Creating_Entry],
    2020-01-13 22:19:09 0134   name AS [client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Entry],
    2020-01-13 22:19:09 0135   user_creating_id AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Entry],
    2020-01-13 22:19:09 0136   user_name AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Entry]
    2020-01-13 22:19:09 0137   RESIDENT RS_Entry
    2020-01-13 22:19:09      	6 fields found: Entry Exit Id, recordset_id, client_HUD_MILITARYSERVERAINFO_Provider_Creating_Entry, client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Entry, client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Entry, client_HUD_MILITARYSERVERAINFO_User_Created_By_Entry, 
    2020-01-13 22:19:09      29 lines fetched
    2020-01-13 22:19:09      Joining/Keeping
    2020-01-13 22:19:10 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:10 0141 DROP FIELDS client_id FROM client_hud_militaryserverainfo_entry
    2020-01-13 22:19:10 0142 DROP FIELDS recordset_id FROM client_hud_militaryserverainfo_entry
    2020-01-13 22:19:10 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_militaryserverainfo_entry
    2020-01-13 22:19:10 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:10 0147   Mapping SQL
    2020-01-13 22:19:10 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:10 0149     FROM da_question dq
    2020-01-13 22:19:10 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0151     WHERE
    2020-01-13 22:19:10 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:10 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:10 0155     UNION
    2020-01-13 22:19:10 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:10 0157     FROM da_question dq
    2020-01-13 22:19:10 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0159     WHERE
    2020-01-13 22:19:10 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:10 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:10 0163      UNION
    2020-01-13 22:19:10 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:10 0165     FROM da_question dq
    2020-01-13 22:19:10 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0167     WHERE
    2020-01-13 22:19:10 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:10 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:10 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:10 0172     UNION
    2020-01-13 22:19:10 0173 
    2020-01-13 22:19:10 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:10 0175     FROM da_question dq
    2020-01-13 22:19:10 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0177     WHERE
    2020-01-13 22:19:10 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:10 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:10 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:10 0182     UNION   
    2020-01-13 22:19:10 0183     SELECT
    2020-01-13 22:19:10 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:10 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:10 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:10 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:10 0188     FROM da_question dq
    2020-01-13 22:19:10 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0190     WHERE
    2020-01-13 22:19:10 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:10 0193     UNION
    2020-01-13 22:19:10 0194 	SELECT
    2020-01-13 22:19:10 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:10 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:10 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:10 0198     FROM da_question dq
    2020-01-13 22:19:10 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:10 0200     WHERE
    2020-01-13 22:19:10 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:10 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:10      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:10      1,304 lines fetched
    2020-01-13 22:19:10 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:10 0205 DROP TABLE client_hud_militaryserverainfo
    2020-01-13 22:19:10 0207 LET varStepName='STEPENTRY_' & 21 & '_of_' & 50
    2020-01-13 22:19:10 0208 STEPENTRY_21_of_50: select 1
    2020-01-13 22:19:10      	1 fields found: ?column?, 
    2020-01-13 22:19:10      1 lines fetched
    2020-01-13 22:19:10 0209 DROP TABLE STEPENTRY_21_of_50
    2020-01-13 22:19:10 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:10 0212 NEXT
    2020-01-13 22:19:10 0037 LET varRecordSetTableName=Peek('sp_table_name',22,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:10 0038 LET varRecordSetQlikName=Peek('qlik_table_name',22,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:10 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',22,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:10 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_vetinfo') <= 20),'hud_vetinfo' & 'end_1',left('hud_vetinfo', 20)& 'end_1')
    2020-01-13 22:19:10 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_vetinfo' & 'enddate'
    2020-01-13 22:19:10 0042 LET varRecordSetQlikName_Entry= 'client_hud_vetinfo' & '_entry'
    2020-01-13 22:19:10 0043 LET varRecordSetQlikName_Exit='client_hud_vetinfo'& '_exit'
    2020-01-13 22:19:10 0045 LET varRecordSetQlikName_Interim='client_hud_vetinfo' & '_review'
    2020-01-13 22:19:10 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_vetinfo', (len('client_hud_vetinfo'))-7))
    2020-01-13 22:19:10 0048 client_hud_vetinfo:
    2020-01-13 22:19:10 0049   SELECT * FROM qlik_sclient_hud_vetinfo
    2020-01-13 22:19:11      	14 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, 
    2020-01-13 22:19:11      2,222 lines fetched
    2020-01-13 22:19:11 0051 CustomEndFieldCheck:
    2020-01-13 22:19:11 0052   SELECT *
    2020-01-13 22:19:11 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_vetinfoend_1'
    2020-01-13 22:19:11      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:11      0 lines fetched
    2020-01-13 22:19:11 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_vetinfoend_1','hud_vetinfoenddate')
    2020-01-13 22:19:11 0059 client_hud_vetinfo_entry:
    2020-01-13 22:19:11 0060   Noconcatenate
    2020-01-13 22:19:11 0061   LOAD DISTINCT
    2020-01-13 22:19:11 0062   *,
    2020-01-13 22:19:11 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:11 0064   recordset_id AS 'client_HUD_VETINFORECORDSET_ID_entry'
    2020-01-13 22:19:11 0065   RESIDENT client_hud_vetinfo
    2020-01-13 22:19:11      	16 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, %entry_recordset_id, client_HUD_VETINFORECORDSET_ID_entry, 
    2020-01-13 22:19:11      2,222 lines fetched
    2020-01-13 22:19:11 0068 RS_Entry:
    2020-01-13 22:19:11 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:11 0070   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:19:11 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:11 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:11 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:11 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:11 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:11 0076   WHERE
    2020-01-13 22:19:11 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:11 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:11 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:11 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:11 0081    AND ((((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:11 0082                    OR (((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_vetinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_vetinfoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:11 0083   UNION
    2020-01-13 22:19:11 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:11 0085   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:19:11 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:11 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:11 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:11 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:11 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:11 0091   WHERE 
    2020-01-13 22:19:11 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:11 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:11 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:11 0095   AND ((((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:11 0096                    OR (((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_vetinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_vetinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:12      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:12      8 lines fetched
    2020-01-13 22:19:12 0100 RS_Entry_Explicit:
    2020-01-13 22:19:12 0101   Noconcatenate
    2020-01-13 22:19:12 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:12 0103   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:19:12 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:12 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:12 0106   WHERE 
    2020-01-13 22:19:12 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:12 0108   AND ((((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:12 0109   AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:12 0110                    OR (((ft.hud_vetinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:12 0111 				   AND ((ft.hud_vetinfoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:12 0112 				   OR ((ft.hud_vetinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:13      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:13      12 lines fetched
    2020-01-13 22:19:13 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:13 0116   LOAD
    2020-01-13 22:19:13 0117   entry_exit_id, 
    2020-01-13 22:19:13 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:13 0119   question_id as %entryquestionid,
    2020-01-13 22:19:13 0120   provider_creating_id
    2020-01-13 22:19:13 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:13      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:13      771,034 lines fetched
    2020-01-13 22:19:13 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:13 0129 INNER JOIN(client_hud_vetinfo_entry)
    2020-01-13 22:19:13 0130   LOAD DISTINCT
    2020-01-13 22:19:13 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:13 0132   recordset_id,
    2020-01-13 22:19:13 0133   provider_creating_id AS [client_HUD_VETINFO_Provider_Creating_Entry],
    2020-01-13 22:19:13 0134   name AS [client_HUD_VETINFO_Provider_Name_Creating_Entry],
    2020-01-13 22:19:13 0135   user_creating_id AS [client_HUD_VETINFO_User_Created_By_Id_Entry],
    2020-01-13 22:19:13 0136   user_name AS [client_HUD_VETINFO_User_Created_By_Entry]
    2020-01-13 22:19:13 0137   RESIDENT RS_Entry
    2020-01-13 22:19:13      	6 fields found: Entry Exit Id, recordset_id, client_HUD_VETINFO_Provider_Creating_Entry, client_HUD_VETINFO_Provider_Name_Creating_Entry, client_HUD_VETINFO_User_Created_By_Id_Entry, client_HUD_VETINFO_User_Created_By_Entry, 
    2020-01-13 22:19:13      8 lines fetched
    2020-01-13 22:19:13      Joining/Keeping
    2020-01-13 22:19:13 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:13 0141 DROP FIELDS client_id FROM client_hud_vetinfo_entry
    2020-01-13 22:19:13 0142 DROP FIELDS recordset_id FROM client_hud_vetinfo_entry
    2020-01-13 22:19:13 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_vetinfo_entry
    2020-01-13 22:19:13 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:13 0147   Mapping SQL
    2020-01-13 22:19:13 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:13 0149     FROM da_question dq
    2020-01-13 22:19:13 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0151     WHERE
    2020-01-13 22:19:13 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:13 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:13 0155     UNION
    2020-01-13 22:19:13 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:13 0157     FROM da_question dq
    2020-01-13 22:19:13 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0159     WHERE
    2020-01-13 22:19:13 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:13 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:13 0163      UNION
    2020-01-13 22:19:13 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:13 0165     FROM da_question dq
    2020-01-13 22:19:13 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0167     WHERE
    2020-01-13 22:19:13 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:13 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:13 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:13 0172     UNION
    2020-01-13 22:19:13 0173 
    2020-01-13 22:19:13 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:13 0175     FROM da_question dq
    2020-01-13 22:19:13 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0177     WHERE
    2020-01-13 22:19:13 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:13 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:13 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:13 0182     UNION   
    2020-01-13 22:19:13 0183     SELECT
    2020-01-13 22:19:13 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:13 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:13 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:13 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:13 0188     FROM da_question dq
    2020-01-13 22:19:13 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0190     WHERE
    2020-01-13 22:19:13 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:13 0193     UNION
    2020-01-13 22:19:13 0194 	SELECT
    2020-01-13 22:19:13 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:13 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:13 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:13 0198     FROM da_question dq
    2020-01-13 22:19:13 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:13 0200     WHERE
    2020-01-13 22:19:13 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:13 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:13      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:13      1,304 lines fetched
    2020-01-13 22:19:13 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:13 0205 DROP TABLE client_hud_vetinfo
    2020-01-13 22:19:13 0207 LET varStepName='STEPENTRY_' & 22 & '_of_' & 50
    2020-01-13 22:19:13 0208 STEPENTRY_22_of_50: select 1
    2020-01-13 22:19:14      	1 fields found: ?column?, 
    2020-01-13 22:19:14      1 lines fetched
    2020-01-13 22:19:14 0209 DROP TABLE STEPENTRY_22_of_50
    2020-01-13 22:19:14 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:14 0212 NEXT
    2020-01-13 22:19:14 0037 LET varRecordSetTableName=Peek('sp_table_name',23,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:14 0038 LET varRecordSetQlikName=Peek('qlik_table_name',23,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:14 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',23,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:14 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_warzoneinfo') <= 20),'hud_warzoneinfo' & 'end_1',left('hud_warzoneinfo', 20)& 'end_1')
    2020-01-13 22:19:14 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_warzoneinfo' & 'enddate'
    2020-01-13 22:19:14 0042 LET varRecordSetQlikName_Entry= 'client_hud_warzoneinfo' & '_entry'
    2020-01-13 22:19:14 0043 LET varRecordSetQlikName_Exit='client_hud_warzoneinfo'& '_exit'
    2020-01-13 22:19:14 0045 LET varRecordSetQlikName_Interim='client_hud_warzoneinfo' & '_review'
    2020-01-13 22:19:14 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_hud_warzoneinfo', (len('client_hud_warzoneinfo'))-7))
    2020-01-13 22:19:14 0048 client_hud_warzoneinfo:
    2020-01-13 22:19:14 0049   SELECT * FROM qlik_sclient_hud_warzoneinfo
    2020-01-13 22:19:14      	7 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, 
    2020-01-13 22:19:14      362 lines fetched
    2020-01-13 22:19:14 0051 CustomEndFieldCheck:
    2020-01-13 22:19:14 0052   SELECT *
    2020-01-13 22:19:14 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_warzoneinfoend_1'
    2020-01-13 22:19:14      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:14      0 lines fetched
    2020-01-13 22:19:14 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_warzoneinfoend_1','hud_warzoneinfoenddate')
    2020-01-13 22:19:14 0059 client_hud_warzoneinfo_entry:
    2020-01-13 22:19:14 0060   Noconcatenate
    2020-01-13 22:19:14 0061   LOAD DISTINCT
    2020-01-13 22:19:14 0062   *,
    2020-01-13 22:19:14 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:14 0064   recordset_id AS 'client_HUD_WARZONEINFORECORDSET_ID_entry'
    2020-01-13 22:19:14 0065   RESIDENT client_hud_warzoneinfo
    2020-01-13 22:19:14      	9 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, %entry_recordset_id, client_HUD_WARZONEINFORECORDSET_ID_entry, 
    2020-01-13 22:19:14      362 lines fetched
    2020-01-13 22:19:14 0068 RS_Entry:
    2020-01-13 22:19:14 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:14 0070   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:19:14 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:14 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:14 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:14 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:14 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:14 0076   WHERE
    2020-01-13 22:19:14 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:14 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:14 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:14 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:14 0081    AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:14 0082                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_warzoneinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:14 0083   UNION
    2020-01-13 22:19:14 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:14 0085   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:19:14 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:14 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:14 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:14 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:14 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:14 0091   WHERE 
    2020-01-13 22:19:14 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:14 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:14 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:14 0095   AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:14 0096                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.hud_warzoneinfoenddate::DATE >= ee.entry_date::DATE) OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:14      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:14      13 lines fetched
    2020-01-13 22:19:14 0100 RS_Entry_Explicit:
    2020-01-13 22:19:14 0101   Noconcatenate
    2020-01-13 22:19:14 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:14 0103   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:19:14 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:14 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:14 0106   WHERE 
    2020-01-13 22:19:14 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:14 0108   AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:14 0109   AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:19:14 0110                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:14 0111 				   AND ((ft.hud_warzoneinfoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:14 0112 				   OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))))))
    2020-01-13 22:19:15      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:15      42 lines fetched
    2020-01-13 22:19:15 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:15 0116   LOAD
    2020-01-13 22:19:15 0117   entry_exit_id, 
    2020-01-13 22:19:15 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:15 0119   question_id as %entryquestionid,
    2020-01-13 22:19:15 0120   provider_creating_id
    2020-01-13 22:19:15 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:15      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:15      771,076 lines fetched
    2020-01-13 22:19:15 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:15 0129 INNER JOIN(client_hud_warzoneinfo_entry)
    2020-01-13 22:19:15 0130   LOAD DISTINCT
    2020-01-13 22:19:15 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:15 0132   recordset_id,
    2020-01-13 22:19:15 0133   provider_creating_id AS [client_HUD_WARZONEINFO_Provider_Creating_Entry],
    2020-01-13 22:19:15 0134   name AS [client_HUD_WARZONEINFO_Provider_Name_Creating_Entry],
    2020-01-13 22:19:15 0135   user_creating_id AS [client_HUD_WARZONEINFO_User_Created_By_Id_Entry],
    2020-01-13 22:19:15 0136   user_name AS [client_HUD_WARZONEINFO_User_Created_By_Entry]
    2020-01-13 22:19:15 0137   RESIDENT RS_Entry
    2020-01-13 22:19:15      	6 fields found: Entry Exit Id, recordset_id, client_HUD_WARZONEINFO_Provider_Creating_Entry, client_HUD_WARZONEINFO_Provider_Name_Creating_Entry, client_HUD_WARZONEINFO_User_Created_By_Id_Entry, client_HUD_WARZONEINFO_User_Created_By_Entry, 
    2020-01-13 22:19:15      13 lines fetched
    2020-01-13 22:19:15      Joining/Keeping
    2020-01-13 22:19:15 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:15 0141 DROP FIELDS client_id FROM client_hud_warzoneinfo_entry
    2020-01-13 22:19:15 0142 DROP FIELDS recordset_id FROM client_hud_warzoneinfo_entry
    2020-01-13 22:19:15 0143 DROP FIELDS [Entry Exit Id] FROM client_hud_warzoneinfo_entry
    2020-01-13 22:19:15 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:15 0147   Mapping SQL
    2020-01-13 22:19:15 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:15 0149     FROM da_question dq
    2020-01-13 22:19:15 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0151     WHERE
    2020-01-13 22:19:15 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:15 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:15 0155     UNION
    2020-01-13 22:19:15 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:15 0157     FROM da_question dq
    2020-01-13 22:19:15 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0159     WHERE
    2020-01-13 22:19:15 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:15 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:15 0163      UNION
    2020-01-13 22:19:15 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:15 0165     FROM da_question dq
    2020-01-13 22:19:15 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0167     WHERE
    2020-01-13 22:19:15 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:15 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:15 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:15 0172     UNION
    2020-01-13 22:19:15 0173 
    2020-01-13 22:19:15 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:15 0175     FROM da_question dq
    2020-01-13 22:19:15 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0177     WHERE
    2020-01-13 22:19:15 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:15 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:15 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:15 0182     UNION   
    2020-01-13 22:19:15 0183     SELECT
    2020-01-13 22:19:15 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:15 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:15 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:15 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:15 0188     FROM da_question dq
    2020-01-13 22:19:15 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0190     WHERE
    2020-01-13 22:19:15 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:15 0193     UNION
    2020-01-13 22:19:15 0194 	SELECT
    2020-01-13 22:19:15 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:15 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:15 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:15 0198     FROM da_question dq
    2020-01-13 22:19:15 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:15 0200     WHERE
    2020-01-13 22:19:15 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:15 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:15      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:15      1,304 lines fetched
    2020-01-13 22:19:15 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:15 0205 DROP TABLE client_hud_warzoneinfo
    2020-01-13 22:19:15 0207 LET varStepName='STEPENTRY_' & 23 & '_of_' & 50
    2020-01-13 22:19:15 0208 STEPENTRY_23_of_50: select 1
    2020-01-13 22:19:15      	1 fields found: ?column?, 
    2020-01-13 22:19:15      1 lines fetched
    2020-01-13 22:19:15 0209 DROP TABLE STEPENTRY_23_of_50
    2020-01-13 22:19:15 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:15 0212 NEXT
    2020-01-13 22:19:15 0037 LET varRecordSetTableName=Peek('sp_table_name',24,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:15 0038 LET varRecordSetQlikName=Peek('qlik_table_name',24,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:15 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',24,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:15 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medicalproblems') <= 20),'medicalproblems' & 'end_1',left('medicalproblems', 20)& 'end_1')
    2020-01-13 22:19:15 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'medicalproblems' & 'enddate'
    2020-01-13 22:19:15 0042 LET varRecordSetQlikName_Entry= 'client_medicalproblems' & '_entry'
    2020-01-13 22:19:15 0043 LET varRecordSetQlikName_Exit='client_medicalproblems'& '_exit'
    2020-01-13 22:19:15 0045 LET varRecordSetQlikName_Interim='client_medicalproblems' & '_review'
    2020-01-13 22:19:15 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_medicalproblems', (len('client_medicalproblems'))-7))
    2020-01-13 22:19:15 0048 client_medicalproblems:
    2020-01-13 22:19:15 0049   SELECT * FROM qlik_sclient_medicalproblems
    2020-01-13 22:19:16      	11 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, 
    2020-01-13 22:19:16      3,543 lines fetched
    2020-01-13 22:19:16 0051 CustomEndFieldCheck:
    2020-01-13 22:19:16 0052   SELECT *
    2020-01-13 22:19:16 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medicalproblemsend_1'
    2020-01-13 22:19:16      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:16      0 lines fetched
    2020-01-13 22:19:16 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medicalproblemsend_1','medicalproblemsenddate')
    2020-01-13 22:19:16 0059 client_medicalproblems_entry:
    2020-01-13 22:19:16 0060   Noconcatenate
    2020-01-13 22:19:16 0061   LOAD DISTINCT
    2020-01-13 22:19:16 0062   *,
    2020-01-13 22:19:16 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:16 0064   recordset_id AS 'client_MEDICALPROBLEMSRECORDSET_ID_entry'
    2020-01-13 22:19:16 0065   RESIDENT client_medicalproblems
    2020-01-13 22:19:16      	13 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, %entry_recordset_id, client_MEDICALPROBLEMSRECORDSET_ID_entry, 
    2020-01-13 22:19:16      3,543 lines fetched
    2020-01-13 22:19:16 0068 RS_Entry:
    2020-01-13 22:19:16 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:16 0070   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:19:16 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:16 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:16 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:16 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:16 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:16 0076   WHERE
    2020-01-13 22:19:16 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:16 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:16 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:16 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:16 0081    AND ((((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:19:16 0082                    OR (((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.medicalproblemsenddate::DATE >= ee.entry_date::DATE) OR ((ft.medicalproblemsenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:16 0083   UNION
    2020-01-13 22:19:16 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:16 0085   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:19:16 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:16 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:16 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:16 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:16 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:16 0091   WHERE 
    2020-01-13 22:19:16 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:16 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:16 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:16 0095   AND ((((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:19:16 0096                    OR (((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.medicalproblemsenddate::DATE >= ee.entry_date::DATE) OR ((ft.medicalproblemsenddate::DATE >= date(now()))))))
    2020-01-13 22:19:17      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:17      295 lines fetched
    2020-01-13 22:19:17 0100 RS_Entry_Explicit:
    2020-01-13 22:19:17 0101   Noconcatenate
    2020-01-13 22:19:17 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:17 0103   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:19:17 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:17 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:17 0106   WHERE 
    2020-01-13 22:19:17 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:17 0108   AND ((((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:17 0109   AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:19:17 0110                    OR (((ft.medicalproblemsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:17 0111 				   AND ((ft.medicalproblemsenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:17 0112 				   OR ((ft.medicalproblemsenddate::DATE >= date(now()))))))
    2020-01-13 22:19:18      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:18      1,731 lines fetched
    2020-01-13 22:19:18 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:18 0116   LOAD
    2020-01-13 22:19:18 0117   entry_exit_id, 
    2020-01-13 22:19:18 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:18 0119   question_id as %entryquestionid,
    2020-01-13 22:19:18 0120   provider_creating_id
    2020-01-13 22:19:18 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:18      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:18      772,807 lines fetched
    2020-01-13 22:19:18 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:18 0129 INNER JOIN(client_medicalproblems_entry)
    2020-01-13 22:19:18 0130   LOAD DISTINCT
    2020-01-13 22:19:18 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:18 0132   recordset_id,
    2020-01-13 22:19:18 0133   provider_creating_id AS [client_MEDICALPROBLEMS_Provider_Creating_Entry],
    2020-01-13 22:19:18 0134   name AS [client_MEDICALPROBLEMS_Provider_Name_Creating_Entry],
    2020-01-13 22:19:18 0135   user_creating_id AS [client_MEDICALPROBLEMS_User_Created_By_Id_Entry],
    2020-01-13 22:19:18 0136   user_name AS [client_MEDICALPROBLEMS_User_Created_By_Entry]
    2020-01-13 22:19:18 0137   RESIDENT RS_Entry
    2020-01-13 22:19:18      	6 fields found: Entry Exit Id, recordset_id, client_MEDICALPROBLEMS_Provider_Creating_Entry, client_MEDICALPROBLEMS_Provider_Name_Creating_Entry, client_MEDICALPROBLEMS_User_Created_By_Id_Entry, client_MEDICALPROBLEMS_User_Created_By_Entry, 
    2020-01-13 22:19:18      295 lines fetched
    2020-01-13 22:19:18      Joining/Keeping
    2020-01-13 22:19:18 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:18 0141 DROP FIELDS client_id FROM client_medicalproblems_entry
    2020-01-13 22:19:18 0142 DROP FIELDS recordset_id FROM client_medicalproblems_entry
    2020-01-13 22:19:18 0143 DROP FIELDS [Entry Exit Id] FROM client_medicalproblems_entry
    2020-01-13 22:19:18 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:18 0147   Mapping SQL
    2020-01-13 22:19:18 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:18 0149     FROM da_question dq
    2020-01-13 22:19:18 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0151     WHERE
    2020-01-13 22:19:18 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:18 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:18 0155     UNION
    2020-01-13 22:19:18 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:18 0157     FROM da_question dq
    2020-01-13 22:19:18 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0159     WHERE
    2020-01-13 22:19:18 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:18 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:18 0163      UNION
    2020-01-13 22:19:18 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:18 0165     FROM da_question dq
    2020-01-13 22:19:18 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0167     WHERE
    2020-01-13 22:19:18 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:18 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:18 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:18 0172     UNION
    2020-01-13 22:19:18 0173 
    2020-01-13 22:19:18 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:18 0175     FROM da_question dq
    2020-01-13 22:19:18 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0177     WHERE
    2020-01-13 22:19:18 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:18 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:18 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:18 0182     UNION   
    2020-01-13 22:19:18 0183     SELECT
    2020-01-13 22:19:18 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:18 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:18 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:18 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:18 0188     FROM da_question dq
    2020-01-13 22:19:18 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0190     WHERE
    2020-01-13 22:19:18 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:18 0193     UNION
    2020-01-13 22:19:18 0194 	SELECT
    2020-01-13 22:19:18 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:18 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:18 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:18 0198     FROM da_question dq
    2020-01-13 22:19:18 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:18 0200     WHERE
    2020-01-13 22:19:18 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:18 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:18      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:18      1,304 lines fetched
    2020-01-13 22:19:18 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:18 0205 DROP TABLE client_medicalproblems
    2020-01-13 22:19:18 0207 LET varStepName='STEPENTRY_' & 24 & '_of_' & 50
    2020-01-13 22:19:18 0208 STEPENTRY_24_of_50: select 1
    2020-01-13 22:19:19      	1 fields found: ?column?, 
    2020-01-13 22:19:19      1 lines fetched
    2020-01-13 22:19:19 0209 DROP TABLE STEPENTRY_24_of_50
    2020-01-13 22:19:19 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:19 0212 NEXT
    2020-01-13 22:19:19 0037 LET varRecordSetTableName=Peek('sp_table_name',25,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:19 0038 LET varRecordSetQlikName=Peek('qlik_table_name',25,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:19 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',25,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:19 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medication_1') <= 20),'medication_1' & 'end_1',left('medication_1', 20)& 'end_1')
    2020-01-13 22:19:19 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'medication_1' & 'enddate'
    2020-01-13 22:19:19 0042 LET varRecordSetQlikName_Entry= 'client_medication_1' & '_entry'
    2020-01-13 22:19:19 0043 LET varRecordSetQlikName_Exit='client_medication_1'& '_exit'
    2020-01-13 22:19:19 0045 LET varRecordSetQlikName_Interim='client_medication_1' & '_review'
    2020-01-13 22:19:19 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_medication_1', (len('client_medication_1'))-7))
    2020-01-13 22:19:19 0048 client_medication_1:
    2020-01-13 22:19:19 0049   SELECT * FROM qlik_sclient_medication_1
    2020-01-13 22:19:20      	16 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, 
    2020-01-13 22:19:20      1,605 lines fetched
    2020-01-13 22:19:20 0051 CustomEndFieldCheck:
    2020-01-13 22:19:20 0052   SELECT *
    2020-01-13 22:19:20 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medication_1end_1'
    2020-01-13 22:19:22      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:22      0 lines fetched
    2020-01-13 22:19:22 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medication_1end_1','medication_1enddate')
    2020-01-13 22:19:22 0059 client_medication_1_entry:
    2020-01-13 22:19:22 0060   Noconcatenate
    2020-01-13 22:19:22 0061   LOAD DISTINCT
    2020-01-13 22:19:22 0062   *,
    2020-01-13 22:19:22 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:22 0064   recordset_id AS 'client_MEDICATION_1RECORDSET_ID_entry'
    2020-01-13 22:19:22 0065   RESIDENT client_medication_1
    2020-01-13 22:19:22      	18 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, %entry_recordset_id, client_MEDICATION_1RECORDSET_ID_entry, 
    2020-01-13 22:19:22      1,605 lines fetched
    2020-01-13 22:19:22 0068 RS_Entry:
    2020-01-13 22:19:22 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:22 0070   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:19:22 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:22 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:22 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:22 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:22 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:22 0076   WHERE
    2020-01-13 22:19:22 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:22 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:22 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:22 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:22 0081    AND ((((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:22 0082                    OR (((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.medication_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.medication_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:22 0083   UNION
    2020-01-13 22:19:22 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:22 0085   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:19:22 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:22 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:22 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:22 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:22 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:22 0091   WHERE 
    2020-01-13 22:19:22 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:22 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:22 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:22 0095   AND ((((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:22 0096                    OR (((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.medication_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.medication_1enddate::DATE >= date(now()))))))
    2020-01-13 22:19:24      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:24      97 lines fetched
    2020-01-13 22:19:24 0100 RS_Entry_Explicit:
    2020-01-13 22:19:24 0101   Noconcatenate
    2020-01-13 22:19:24 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:24 0103   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:19:24 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:24 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:24 0106   WHERE 
    2020-01-13 22:19:24 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:24 0108   AND ((((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:24 0109   AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:24 0110                    OR (((ft.medication_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:24 0111 				   AND ((ft.medication_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:24 0112 				   OR ((ft.medication_1enddate::DATE >= date(now()))))))
    2020-01-13 22:19:26      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:26      812 lines fetched
    2020-01-13 22:19:26 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:26 0116   LOAD
    2020-01-13 22:19:26 0117   entry_exit_id, 
    2020-01-13 22:19:26 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:26 0119   question_id as %entryquestionid,
    2020-01-13 22:19:26 0120   provider_creating_id
    2020-01-13 22:19:26 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:26      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:26      773,619 lines fetched
    2020-01-13 22:19:26 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:26 0129 INNER JOIN(client_medication_1_entry)
    2020-01-13 22:19:26 0130   LOAD DISTINCT
    2020-01-13 22:19:26 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:26 0132   recordset_id,
    2020-01-13 22:19:26 0133   provider_creating_id AS [client_MEDICATION_1_Provider_Creating_Entry],
    2020-01-13 22:19:26 0134   name AS [client_MEDICATION_1_Provider_Name_Creating_Entry],
    2020-01-13 22:19:26 0135   user_creating_id AS [client_MEDICATION_1_User_Created_By_Id_Entry],
    2020-01-13 22:19:26 0136   user_name AS [client_MEDICATION_1_User_Created_By_Entry]
    2020-01-13 22:19:26 0137   RESIDENT RS_Entry
    2020-01-13 22:19:26      	6 fields found: Entry Exit Id, recordset_id, client_MEDICATION_1_Provider_Creating_Entry, client_MEDICATION_1_Provider_Name_Creating_Entry, client_MEDICATION_1_User_Created_By_Id_Entry, client_MEDICATION_1_User_Created_By_Entry, 
    2020-01-13 22:19:26      97 lines fetched
    2020-01-13 22:19:26      Joining/Keeping
    2020-01-13 22:19:26 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:26 0141 DROP FIELDS client_id FROM client_medication_1_entry
    2020-01-13 22:19:26 0142 DROP FIELDS recordset_id FROM client_medication_1_entry
    2020-01-13 22:19:26 0143 DROP FIELDS [Entry Exit Id] FROM client_medication_1_entry
    2020-01-13 22:19:26 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:26 0147   Mapping SQL
    2020-01-13 22:19:26 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:26 0149     FROM da_question dq
    2020-01-13 22:19:26 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0151     WHERE
    2020-01-13 22:19:26 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:26 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:26 0155     UNION
    2020-01-13 22:19:26 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:26 0157     FROM da_question dq
    2020-01-13 22:19:26 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0159     WHERE
    2020-01-13 22:19:26 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:26 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:26 0163      UNION
    2020-01-13 22:19:26 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:26 0165     FROM da_question dq
    2020-01-13 22:19:26 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0167     WHERE
    2020-01-13 22:19:26 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:26 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:26 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:26 0172     UNION
    2020-01-13 22:19:26 0173 
    2020-01-13 22:19:26 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:26 0175     FROM da_question dq
    2020-01-13 22:19:26 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0177     WHERE
    2020-01-13 22:19:26 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:26 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:26 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:26 0182     UNION   
    2020-01-13 22:19:26 0183     SELECT
    2020-01-13 22:19:26 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:26 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:26 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:26 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:26 0188     FROM da_question dq
    2020-01-13 22:19:26 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0190     WHERE
    2020-01-13 22:19:26 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:26 0193     UNION
    2020-01-13 22:19:26 0194 	SELECT
    2020-01-13 22:19:26 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:26 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:26 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:26 0198     FROM da_question dq
    2020-01-13 22:19:26 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:26 0200     WHERE
    2020-01-13 22:19:26 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:26 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:28      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:28      1,304 lines fetched
    2020-01-13 22:19:28 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:28 0205 DROP TABLE client_medication_1
    2020-01-13 22:19:29 0207 LET varStepName='STEPENTRY_' & 25 & '_of_' & 50
    2020-01-13 22:19:29 0208 STEPENTRY_25_of_50: select 1
    2020-01-13 22:19:29      	1 fields found: ?column?, 
    2020-01-13 22:19:29      1 lines fetched
    2020-01-13 22:19:29 0209 DROP TABLE STEPENTRY_25_of_50
    2020-01-13 22:19:29 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:29 0212 NEXT
    2020-01-13 22:19:29 0037 LET varRecordSetTableName=Peek('sp_table_name',26,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:29 0038 LET varRecordSetQlikName=Peek('qlik_table_name',26,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:29 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',26,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:29 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthassessmen_1') <= 20),'mentalhealthassessmen_1' & 'end_1',left('mentalhealthassessmen_1', 20)& 'end_1')
    2020-01-13 22:19:29 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthassessmen_1' & 'enddate'
    2020-01-13 22:19:29 0042 LET varRecordSetQlikName_Entry= 'client_mentalhealthassessmen_1' & '_entry'
    2020-01-13 22:19:29 0043 LET varRecordSetQlikName_Exit='client_mentalhealthassessmen_1'& '_exit'
    2020-01-13 22:19:29 0045 LET varRecordSetQlikName_Interim='client_mentalhealthassessmen_1' & '_review'
    2020-01-13 22:19:29 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_mentalhealthassessmen_1', (len('client_mentalhealthassessmen_1'))-7))
    2020-01-13 22:19:29 0048 client_mentalhealthassessmen_1:
    2020-01-13 22:19:29 0049   SELECT * FROM qlik_sclient_mentalhealthassessmen_1
    2020-01-13 22:19:30      	6 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, 
    2020-01-13 22:19:30      2,444 lines fetched
    2020-01-13 22:19:30 0051 CustomEndFieldCheck:
    2020-01-13 22:19:30 0052   SELECT *
    2020-01-13 22:19:30 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthassessmeend_1'
    2020-01-13 22:19:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:30      0 lines fetched
    2020-01-13 22:19:30 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthassessmeend_1','mentalhealthassessmen_1enddate')
    2020-01-13 22:19:30 0059 client_mentalhealthassessmen_1_entry:
    2020-01-13 22:19:30 0060   Noconcatenate
    2020-01-13 22:19:30 0061   LOAD DISTINCT
    2020-01-13 22:19:30 0062   *,
    2020-01-13 22:19:30 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:30 0064   recordset_id AS 'client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_entry'
    2020-01-13 22:19:30 0065   RESIDENT client_mentalhealthassessmen_1
    2020-01-13 22:19:30      	8 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, %entry_recordset_id, client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_entry, 
    2020-01-13 22:19:30      2,444 lines fetched
    2020-01-13 22:19:30 0068 RS_Entry:
    2020-01-13 22:19:30 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:30 0070   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:19:30 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:30 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:30 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:30 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:30 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:30 0076   WHERE
    2020-01-13 22:19:30 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:30 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:30 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:30 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:30 0081    AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:30 0082                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:30 0083   UNION
    2020-01-13 22:19:30 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:30 0085   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:19:30 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:30 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:30 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:30 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:30 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:30 0091   WHERE 
    2020-01-13 22:19:30 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:30 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:30 0095   AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:30 0096                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))))))
    2020-01-13 22:19:31      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:31      290 lines fetched
    2020-01-13 22:19:31 0100 RS_Entry_Explicit:
    2020-01-13 22:19:31 0101   Noconcatenate
    2020-01-13 22:19:31 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:31 0103   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:19:31 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:31 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:31 0106   WHERE 
    2020-01-13 22:19:31 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:31 0108   AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:31 0109   AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:19:31 0110                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:31 0111 				   AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:31 0112 				   OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))))))
    2020-01-13 22:19:31      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:31      1,510 lines fetched
    2020-01-13 22:19:31 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:31 0116   LOAD
    2020-01-13 22:19:31 0117   entry_exit_id, 
    2020-01-13 22:19:31 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:31 0119   question_id as %entryquestionid,
    2020-01-13 22:19:31 0120   provider_creating_id
    2020-01-13 22:19:31 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:31      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:31      775,129 lines fetched
    2020-01-13 22:19:31 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:31 0129 INNER JOIN(client_mentalhealthassessmen_1_entry)
    2020-01-13 22:19:31 0130   LOAD DISTINCT
    2020-01-13 22:19:31 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:31 0132   recordset_id,
    2020-01-13 22:19:31 0133   provider_creating_id AS [client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Entry],
    2020-01-13 22:19:31 0134   name AS [client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Entry],
    2020-01-13 22:19:31 0135   user_creating_id AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Entry],
    2020-01-13 22:19:31 0136   user_name AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Entry]
    2020-01-13 22:19:31 0137   RESIDENT RS_Entry
    2020-01-13 22:19:31      	6 fields found: Entry Exit Id, recordset_id, client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Entry, client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Entry, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Entry, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Entry, 
    2020-01-13 22:19:31      290 lines fetched
    2020-01-13 22:19:31      Joining/Keeping
    2020-01-13 22:19:31 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:31 0141 DROP FIELDS client_id FROM client_mentalhealthassessmen_1_entry
    2020-01-13 22:19:31 0142 DROP FIELDS recordset_id FROM client_mentalhealthassessmen_1_entry
    2020-01-13 22:19:31 0143 DROP FIELDS [Entry Exit Id] FROM client_mentalhealthassessmen_1_entry
    2020-01-13 22:19:31 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:31 0147   Mapping SQL
    2020-01-13 22:19:31 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:31 0149     FROM da_question dq
    2020-01-13 22:19:31 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0151     WHERE
    2020-01-13 22:19:31 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:31 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:31 0155     UNION
    2020-01-13 22:19:31 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:31 0157     FROM da_question dq
    2020-01-13 22:19:31 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0159     WHERE
    2020-01-13 22:19:31 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:31 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:31 0163      UNION
    2020-01-13 22:19:31 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:31 0165     FROM da_question dq
    2020-01-13 22:19:31 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0167     WHERE
    2020-01-13 22:19:31 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:31 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:31 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:31 0172     UNION
    2020-01-13 22:19:31 0173 
    2020-01-13 22:19:31 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:31 0175     FROM da_question dq
    2020-01-13 22:19:31 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0177     WHERE
    2020-01-13 22:19:31 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:31 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:31 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:31 0182     UNION   
    2020-01-13 22:19:31 0183     SELECT
    2020-01-13 22:19:31 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:31 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:31 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:31 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:31 0188     FROM da_question dq
    2020-01-13 22:19:31 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0190     WHERE
    2020-01-13 22:19:31 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:31 0193     UNION
    2020-01-13 22:19:31 0194 	SELECT
    2020-01-13 22:19:31 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:31 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:31 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:31 0198     FROM da_question dq
    2020-01-13 22:19:31 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:31 0200     WHERE
    2020-01-13 22:19:31 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:31 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:31      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:31      1,304 lines fetched
    2020-01-13 22:19:31 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:31 0205 DROP TABLE client_mentalhealthassessmen_1
    2020-01-13 22:19:31 0207 LET varStepName='STEPENTRY_' & 26 & '_of_' & 50
    2020-01-13 22:19:31 0208 STEPENTRY_26_of_50: select 1
    2020-01-13 22:19:31      	1 fields found: ?column?, 
    2020-01-13 22:19:31      1 lines fetched
    2020-01-13 22:19:31 0209 DROP TABLE STEPENTRY_26_of_50
    2020-01-13 22:19:31 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:31 0212 NEXT
    2020-01-13 22:19:31 0037 LET varRecordSetTableName=Peek('sp_table_name',27,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:31 0038 LET varRecordSetQlikName=Peek('qlik_table_name',27,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:31 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',27,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:31 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthtreatment') <= 20),'mentalhealthtreatment' & 'end_1',left('mentalhealthtreatment', 20)& 'end_1')
    2020-01-13 22:19:31 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthtreatment' & 'enddate'
    2020-01-13 22:19:31 0042 LET varRecordSetQlikName_Entry= 'client_mentalhealthtreatment' & '_entry'
    2020-01-13 22:19:31 0043 LET varRecordSetQlikName_Exit='client_mentalhealthtreatment'& '_exit'
    2020-01-13 22:19:31 0045 LET varRecordSetQlikName_Interim='client_mentalhealthtreatment' & '_review'
    2020-01-13 22:19:31 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_mentalhealthtreatment', (len('client_mentalhealthtreatment'))-7))
    2020-01-13 22:19:31 0048 client_mentalhealthtreatment:
    2020-01-13 22:19:31 0049   SELECT * FROM qlik_sclient_mentalhealthtreatment
    2020-01-13 22:19:32      	6 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, 
    2020-01-13 22:19:32      1,655 lines fetched
    2020-01-13 22:19:32 0051 CustomEndFieldCheck:
    2020-01-13 22:19:32 0052   SELECT *
    2020-01-13 22:19:32 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthtreatmenend_1'
    2020-01-13 22:19:32      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:19:32      0 lines fetched
    2020-01-13 22:19:32 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthtreatmenend_1','mentalhealthtreatmentenddate')
    2020-01-13 22:19:32 0059 client_mentalhealthtreatment_entry:
    2020-01-13 22:19:32 0060   Noconcatenate
    2020-01-13 22:19:32 0061   LOAD DISTINCT
    2020-01-13 22:19:32 0062   *,
    2020-01-13 22:19:32 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:19:32 0064   recordset_id AS 'client_MENTALHEALTHTREATMENTRECORDSET_ID_entry'
    2020-01-13 22:19:32 0065   RESIDENT client_mentalhealthtreatment
    2020-01-13 22:19:32      	8 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, %entry_recordset_id, client_MENTALHEALTHTREATMENTRECORDSET_ID_entry, 
    2020-01-13 22:19:32      1,655 lines fetched
    2020-01-13 22:19:32 0068 RS_Entry:
    2020-01-13 22:19:32 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:32 0070   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:19:32 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:32 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:32 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:32 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:32 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:19:32 0076   WHERE
    2020-01-13 22:19:32 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:19:32 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:32 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:32 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:19:32 0081    AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:19:32 0082                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.entry_date::DATE) OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))))))				   
    2020-01-13 22:19:32 0083   UNION
    2020-01-13 22:19:32 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:19:32 0085   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:19:32 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:32 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:19:32 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:19:32 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:32 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:19:32 0091   WHERE 
    2020-01-13 22:19:32 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:19:32 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:32 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:19:32 0095   AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:19:32 0096                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.entry_date::DATE) OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))))))
    2020-01-13 22:19:33      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:19:33      290 lines fetched
    2020-01-13 22:19:33 0100 RS_Entry_Explicit:
    2020-01-13 22:19:33 0101   Noconcatenate
    2020-01-13 22:19:33 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:19:33 0103   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:19:33 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:19:33 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:19:33 0106   WHERE 
    2020-01-13 22:19:33 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:19:33 0108   AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:33 0109   AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:19:33 0110                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:19:33 0111 				   AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:19:33 0112 				   OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))))))
    2020-01-13 22:19:33      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:19:33      845 lines fetched
    2020-01-13 22:19:33 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:19:33 0116   LOAD
    2020-01-13 22:19:33 0117   entry_exit_id, 
    2020-01-13 22:19:33 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:19:33 0119   question_id as %entryquestionid,
    2020-01-13 22:19:33 0120   provider_creating_id
    2020-01-13 22:19:33 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:19:33      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:19:33      775,974 lines fetched
    2020-01-13 22:19:33 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:19:33 0129 INNER JOIN(client_mentalhealthtreatment_entry)
    2020-01-13 22:19:33 0130   LOAD DISTINCT
    2020-01-13 22:19:33 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:19:33 0132   recordset_id,
    2020-01-13 22:19:33 0133   provider_creating_id AS [client_MENTALHEALTHTREATMENT_Provider_Creating_Entry],
    2020-01-13 22:19:33 0134   name AS [client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Entry],
    2020-01-13 22:19:33 0135   user_creating_id AS [client_MENTALHEALTHTREATMENT_User_Created_By_Id_Entry],
    2020-01-13 22:19:33 0136   user_name AS [client_MENTALHEALTHTREATMENT_User_Created_By_Entry]
    2020-01-13 22:19:33 0137   RESIDENT RS_Entry
    2020-01-13 22:19:33      	6 fields found: Entry Exit Id, recordset_id, client_MENTALHEALTHTREATMENT_Provider_Creating_Entry, client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Entry, client_MENTALHEALTHTREATMENT_User_Created_By_Id_Entry, client_MENTALHEALTHTREATMENT_User_Created_By_Entry, 
    2020-01-13 22:19:33      290 lines fetched
    2020-01-13 22:19:33      Joining/Keeping
    2020-01-13 22:19:33 0139 DROP TABLE RS_Entry
    2020-01-13 22:19:33 0141 DROP FIELDS client_id FROM client_mentalhealthtreatment_entry
    2020-01-13 22:19:33 0142 DROP FIELDS recordset_id FROM client_mentalhealthtreatment_entry
    2020-01-13 22:19:33 0143 DROP FIELDS [Entry Exit Id] FROM client_mentalhealthtreatment_entry
    2020-01-13 22:19:33 0146 FieldMapSaClientEntry:
    2020-01-13 22:19:33 0147   Mapping SQL
    2020-01-13 22:19:33 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:33 0149     FROM da_question dq
    2020-01-13 22:19:33 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0151     WHERE
    2020-01-13 22:19:33 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:19:33 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:19:33 0155     UNION
    2020-01-13 22:19:33 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:33 0157     FROM da_question dq
    2020-01-13 22:19:33 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0159     WHERE
    2020-01-13 22:19:33 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:19:33 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:19:33 0163      UNION
    2020-01-13 22:19:33 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:19:33 0165     FROM da_question dq
    2020-01-13 22:19:33 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0167     WHERE
    2020-01-13 22:19:33 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:19:33 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:19:33 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:33 0172     UNION
    2020-01-13 22:19:33 0173 
    2020-01-13 22:19:33 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:19:33 0175     FROM da_question dq
    2020-01-13 22:19:33 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0177     WHERE
    2020-01-13 22:19:33 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:19:33 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:19:33 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:19:33 0182     UNION   
    2020-01-13 22:19:33 0183     SELECT
    2020-01-13 22:19:33 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:19:33 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:33 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:33 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:19:33 0188     FROM da_question dq
    2020-01-13 22:19:33 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0190     WHERE
    2020-01-13 22:19:33 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:33 0193     UNION
    2020-01-13 22:19:33 0194 	SELECT
    2020-01-13 22:19:33 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:33 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:19:33 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:19:33 0198     FROM da_question dq
    2020-01-13 22:19:33 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:19:33 0200     WHERE
    2020-01-13 22:19:33 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:19:33 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:19:34      	2 fields found: oldnames, newnames, 
    2020-01-13 22:19:34      1,304 lines fetched
    2020-01-13 22:19:34 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:19:34 0205 DROP TABLE client_mentalhealthtreatment
    2020-01-13 22:19:34 0207 LET varStepName='STEPENTRY_' & 27 & '_of_' & 50
    2020-01-13 22:19:34 0208 STEPENTRY_27_of_50: select 1
    2020-01-13 22:19:34      	1 fields found: ?column?, 
    2020-01-13 22:19:34      1 lines fetched
    2020-01-13 22:19:34 0209 DROP TABLE STEPENTRY_27_of_50
    2020-01-13 22:19:34 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:19:34 0212 NEXT
    2020-01-13 22:19:34 0037 LET varRecordSetTableName=Peek('sp_table_name',28,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:34 0038 LET varRecordSetQlikName=Peek('qlik_table_name',28,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:34 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',28,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:19:34 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('monthlyincome') <= 20),'monthlyincome' & 'end_1',left('monthlyincome', 20)& 'end_1')
    2020-01-13 22:19:34 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'monthlyincome' & 'enddate'
    2020-01-13 22:19:34 0042 LET varRecordSetQlikName_Entry= 'client_monthlyincome' & '_entry'
    2020-01-13 22:19:34 0043 LET varRecordSetQlikName_Exit='client_monthlyincome'& '_exit'
    2020-01-13 22:19:34 0045 LET varRecordSetQlikName_Interim='client_monthlyincome' & '_review'
    2020-01-13 22:19:34 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_monthlyincome', (len('client_monthlyincome'))-7))
    2020-01-13 22:19:34 0048 client_monthlyincome:
    2020-01-13 22:19:34 0049   SELECT * FROM qlik_sclient_monthlyincome
    2020-01-13 22:20:41      	9 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, 
    2020-01-13 22:20:41      927,126 lines fetched
    2020-01-13 22:20:41 0051 CustomEndFieldCheck:
    2020-01-13 22:20:41 0052   SELECT *
    2020-01-13 22:20:41 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'monthlyincomeend_1'
    2020-01-13 22:20:41      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:20:41      0 lines fetched
    2020-01-13 22:20:41 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'monthlyincomeend_1','monthlyincomeenddate')
    2020-01-13 22:20:41 0059 client_monthlyincome_entry:
    2020-01-13 22:20:41 0060   Noconcatenate
    2020-01-13 22:20:41 0061   LOAD DISTINCT
    2020-01-13 22:20:41 0062   *,
    2020-01-13 22:20:41 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:20:41 0064   recordset_id AS 'client_MONTHLYINCOMERECORDSET_ID_entry'
    2020-01-13 22:20:41 0065   RESIDENT client_monthlyincome
    2020-01-13 22:20:43      	11 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, %entry_recordset_id, client_MONTHLYINCOMERECORDSET_ID_entry, 
    2020-01-13 22:20:43      927,126 lines fetched
    2020-01-13 22:20:43 0068 RS_Entry:
    2020-01-13 22:20:43 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:20:43 0070   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:20:43 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:20:43 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:20:43 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:20:43 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:20:43 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:20:43 0076   WHERE
    2020-01-13 22:20:43 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:20:43 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:20:43 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:20:43 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:20:43 0081    AND ((((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:20:43 0082                    OR (((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.monthlyincomeenddate::DATE >= ee.entry_date::DATE) OR ((ft.monthlyincomeenddate::DATE >= date(now()))))))				   
    2020-01-13 22:20:43 0083   UNION
    2020-01-13 22:20:43 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:20:43 0085   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:20:43 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:20:43 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:20:43 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:20:43 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:20:43 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:20:43 0091   WHERE 
    2020-01-13 22:20:43 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:20:43 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:20:43 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:20:43 0095   AND ((((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:20:43 0096                    OR (((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.monthlyincomeenddate::DATE >= ee.entry_date::DATE) OR ((ft.monthlyincomeenddate::DATE >= date(now()))))))
    2020-01-13 22:22:25      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:22:25      367,587 lines fetched
    2020-01-13 22:22:25 0100 RS_Entry_Explicit:
    2020-01-13 22:22:25 0101   Noconcatenate
    2020-01-13 22:22:25 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:22:25 0103   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:22:25 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:22:25 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:22:25 0106   WHERE 
    2020-01-13 22:22:25 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:22:25 0108   AND ((((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:22:25 0109   AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:22:25 0110                    OR (((ft.monthlyincomestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:22:25 0111 				   AND ((ft.monthlyincomeenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:22:25 0112 				   OR ((ft.monthlyincomeenddate::DATE >= date(now()))))))
    2020-01-13 22:23:17      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:17      588,948 lines fetched
    2020-01-13 22:23:17 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:17 0116   LOAD
    2020-01-13 22:23:17 0117   entry_exit_id, 
    2020-01-13 22:23:17 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:17 0119   question_id as %entryquestionid,
    2020-01-13 22:23:17 0120   provider_creating_id
    2020-01-13 22:23:17 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:18      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:18      1,364,922 lines fetched
    2020-01-13 22:23:18 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:18 0129 INNER JOIN(client_monthlyincome_entry)
    2020-01-13 22:23:18 0130   LOAD DISTINCT
    2020-01-13 22:23:18 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:18 0132   recordset_id,
    2020-01-13 22:23:18 0133   provider_creating_id AS [client_MONTHLYINCOME_Provider_Creating_Entry],
    2020-01-13 22:23:18 0134   name AS [client_MONTHLYINCOME_Provider_Name_Creating_Entry],
    2020-01-13 22:23:18 0135   user_creating_id AS [client_MONTHLYINCOME_User_Created_By_Id_Entry],
    2020-01-13 22:23:18 0136   user_name AS [client_MONTHLYINCOME_User_Created_By_Entry]
    2020-01-13 22:23:18 0137   RESIDENT RS_Entry
    2020-01-13 22:23:19      	6 fields found: Entry Exit Id, recordset_id, client_MONTHLYINCOME_Provider_Creating_Entry, client_MONTHLYINCOME_Provider_Name_Creating_Entry, client_MONTHLYINCOME_User_Created_By_Id_Entry, client_MONTHLYINCOME_User_Created_By_Entry, 
    2020-01-13 22:23:19      367,587 lines fetched
    2020-01-13 22:23:19      Joining/Keeping
    2020-01-13 22:23:20 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:20 0141 DROP FIELDS client_id FROM client_monthlyincome_entry
    2020-01-13 22:23:20 0142 DROP FIELDS recordset_id FROM client_monthlyincome_entry
    2020-01-13 22:23:20 0143 DROP FIELDS [Entry Exit Id] FROM client_monthlyincome_entry
    2020-01-13 22:23:20 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:20 0147   Mapping SQL
    2020-01-13 22:23:20 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:20 0149     FROM da_question dq
    2020-01-13 22:23:20 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0151     WHERE
    2020-01-13 22:23:20 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:20 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:20 0155     UNION
    2020-01-13 22:23:20 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:20 0157     FROM da_question dq
    2020-01-13 22:23:20 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0159     WHERE
    2020-01-13 22:23:20 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:20 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:20 0163      UNION
    2020-01-13 22:23:20 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:20 0165     FROM da_question dq
    2020-01-13 22:23:20 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0167     WHERE
    2020-01-13 22:23:20 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:20 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:20 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:20 0172     UNION
    2020-01-13 22:23:20 0173 
    2020-01-13 22:23:20 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:20 0175     FROM da_question dq
    2020-01-13 22:23:20 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0177     WHERE
    2020-01-13 22:23:20 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:20 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:20 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:20 0182     UNION   
    2020-01-13 22:23:20 0183     SELECT
    2020-01-13 22:23:20 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:20 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:20 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:20 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:20 0188     FROM da_question dq
    2020-01-13 22:23:20 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0190     WHERE
    2020-01-13 22:23:20 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:20 0193     UNION
    2020-01-13 22:23:20 0194 	SELECT
    2020-01-13 22:23:20 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:20 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:20 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:20 0198     FROM da_question dq
    2020-01-13 22:23:20 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:20 0200     WHERE
    2020-01-13 22:23:20 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:20 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:20      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:20      1,304 lines fetched
    2020-01-13 22:23:20 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:20 0205 DROP TABLE client_monthlyincome
    2020-01-13 22:23:20 0207 LET varStepName='STEPENTRY_' & 28 & '_of_' & 50
    2020-01-13 22:23:20 0208 STEPENTRY_28_of_50: select 1
    2020-01-13 22:23:21      	1 fields found: ?column?, 
    2020-01-13 22:23:21      1 lines fetched
    2020-01-13 22:23:21 0209 DROP TABLE STEPENTRY_28_of_50
    2020-01-13 22:23:21 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:21 0212 NEXT
    2020-01-13 22:23:21 0037 LET varRecordSetTableName=Peek('sp_table_name',29,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:21 0038 LET varRecordSetQlikName=Peek('qlik_table_name',29,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:21 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',29,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:21 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0101employmentindi') <= 20),'npi0101employmentindi' & 'end_1',left('npi0101employmentindi', 20)& 'end_1')
    2020-01-13 22:23:21 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0101employmentindi' & 'enddate'
    2020-01-13 22:23:21 0042 LET varRecordSetQlikName_Entry= 'client_npi0101employmentindi' & '_entry'
    2020-01-13 22:23:21 0043 LET varRecordSetQlikName_Exit='client_npi0101employmentindi'& '_exit'
    2020-01-13 22:23:21 0045 LET varRecordSetQlikName_Interim='client_npi0101employmentindi' & '_review'
    2020-01-13 22:23:21 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_npi0101employmentindi', (len('client_npi0101employmentindi'))-7))
    2020-01-13 22:23:21 0048 client_npi0101employmentindi:
    2020-01-13 22:23:21 0049   SELECT * FROM qlik_sclient_npi0101employmentindi
    2020-01-13 22:23:21      	7 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, 
    2020-01-13 22:23:21      38 lines fetched
    2020-01-13 22:23:21 0051 CustomEndFieldCheck:
    2020-01-13 22:23:21 0052   SELECT *
    2020-01-13 22:23:21 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0101employmentindend_1'
    2020-01-13 22:23:21      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:21      0 lines fetched
    2020-01-13 22:23:21 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0101employmentindend_1','npi0101employmentindienddate')
    2020-01-13 22:23:21 0059 client_npi0101employmentindi_entry:
    2020-01-13 22:23:21 0060   Noconcatenate
    2020-01-13 22:23:21 0061   LOAD DISTINCT
    2020-01-13 22:23:21 0062   *,
    2020-01-13 22:23:21 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:21 0064   recordset_id AS 'client_NPI0101EMPLOYMENTINDIRECORDSET_ID_entry'
    2020-01-13 22:23:21 0065   RESIDENT client_npi0101employmentindi
    2020-01-13 22:23:21      	9 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, %entry_recordset_id, client_NPI0101EMPLOYMENTINDIRECORDSET_ID_entry, 
    2020-01-13 22:23:21      38 lines fetched
    2020-01-13 22:23:21 0068 RS_Entry:
    2020-01-13 22:23:21 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:21 0070   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:23:21 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:21 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:21 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:21 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:21 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:21 0076   WHERE
    2020-01-13 22:23:21 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:21 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:21 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:21 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:21 0081    AND ((((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:23:21 0082                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0101employmentindienddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0101employmentindienddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:21 0083   UNION
    2020-01-13 22:23:21 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:21 0085   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:23:21 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:21 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:21 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:21 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:21 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:21 0091   WHERE 
    2020-01-13 22:23:21 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:21 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:21 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:21 0095   AND ((((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:23:21 0096                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0101employmentindienddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0101employmentindienddate::DATE >= date(now()))))))
    2020-01-13 22:23:22      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:22      19 lines fetched
    2020-01-13 22:23:22 0100 RS_Entry_Explicit:
    2020-01-13 22:23:22 0101   Noconcatenate
    2020-01-13 22:23:22 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:22 0103   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:23:22 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:22 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:22 0106   WHERE 
    2020-01-13 22:23:22 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:22 0108   AND ((((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:22 0109   AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:23:22 0110                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:22 0111 				   AND ((ft.npi0101employmentindienddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:22 0112 				   OR ((ft.npi0101employmentindienddate::DATE >= date(now()))))))
    2020-01-13 22:23:22      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:22      22 lines fetched
    2020-01-13 22:23:22 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:22 0116   LOAD
    2020-01-13 22:23:22 0117   entry_exit_id, 
    2020-01-13 22:23:22 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:22 0119   question_id as %entryquestionid,
    2020-01-13 22:23:22 0120   provider_creating_id
    2020-01-13 22:23:22 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:22      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:22      1,364,944 lines fetched
    2020-01-13 22:23:22 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:22 0129 INNER JOIN(client_npi0101employmentindi_entry)
    2020-01-13 22:23:22 0130   LOAD DISTINCT
    2020-01-13 22:23:22 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:22 0132   recordset_id,
    2020-01-13 22:23:22 0133   provider_creating_id AS [client_NPI0101EMPLOYMENTINDI_Provider_Creating_Entry],
    2020-01-13 22:23:22 0134   name AS [client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Entry],
    2020-01-13 22:23:22 0135   user_creating_id AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Entry],
    2020-01-13 22:23:22 0136   user_name AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Entry]
    2020-01-13 22:23:22 0137   RESIDENT RS_Entry
    2020-01-13 22:23:22      	6 fields found: Entry Exit Id, recordset_id, client_NPI0101EMPLOYMENTINDI_Provider_Creating_Entry, client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Entry, client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Entry, client_NPI0101EMPLOYMENTINDI_User_Created_By_Entry, 
    2020-01-13 22:23:22      19 lines fetched
    2020-01-13 22:23:22      Joining/Keeping
    2020-01-13 22:23:22 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:22 0141 DROP FIELDS client_id FROM client_npi0101employmentindi_entry
    2020-01-13 22:23:22 0142 DROP FIELDS recordset_id FROM client_npi0101employmentindi_entry
    2020-01-13 22:23:22 0143 DROP FIELDS [Entry Exit Id] FROM client_npi0101employmentindi_entry
    2020-01-13 22:23:22 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:22 0147   Mapping SQL
    2020-01-13 22:23:22 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:22 0149     FROM da_question dq
    2020-01-13 22:23:22 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0151     WHERE
    2020-01-13 22:23:22 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:22 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:22 0155     UNION
    2020-01-13 22:23:22 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:22 0157     FROM da_question dq
    2020-01-13 22:23:22 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0159     WHERE
    2020-01-13 22:23:22 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:22 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:22 0163      UNION
    2020-01-13 22:23:22 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:22 0165     FROM da_question dq
    2020-01-13 22:23:22 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0167     WHERE
    2020-01-13 22:23:22 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:22 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:22 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:22 0172     UNION
    2020-01-13 22:23:22 0173 
    2020-01-13 22:23:22 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:22 0175     FROM da_question dq
    2020-01-13 22:23:22 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0177     WHERE
    2020-01-13 22:23:22 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:22 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:22 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:22 0182     UNION   
    2020-01-13 22:23:22 0183     SELECT
    2020-01-13 22:23:22 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:22 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:22 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:22 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:22 0188     FROM da_question dq
    2020-01-13 22:23:22 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0190     WHERE
    2020-01-13 22:23:22 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:22 0193     UNION
    2020-01-13 22:23:22 0194 	SELECT
    2020-01-13 22:23:22 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:22 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:22 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:22 0198     FROM da_question dq
    2020-01-13 22:23:22 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:22 0200     WHERE
    2020-01-13 22:23:22 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:22 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:23      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:23      1,304 lines fetched
    2020-01-13 22:23:23 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:23 0205 DROP TABLE client_npi0101employmentindi
    2020-01-13 22:23:23 0207 LET varStepName='STEPENTRY_' & 29 & '_of_' & 50
    2020-01-13 22:23:23 0208 STEPENTRY_29_of_50: select 1
    2020-01-13 22:23:23      	1 fields found: ?column?, 
    2020-01-13 22:23:23      1 lines fetched
    2020-01-13 22:23:23 0209 DROP TABLE STEPENTRY_29_of_50
    2020-01-13 22:23:23 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:23 0212 NEXT
    2020-01-13 22:23:23 0037 LET varRecordSetTableName=Peek('sp_table_name',30,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:23 0038 LET varRecordSetQlikName=Peek('qlik_table_name',30,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:23 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',30,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:23 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0102educationandco') <= 20),'npi0102educationandco' & 'end_1',left('npi0102educationandco', 20)& 'end_1')
    2020-01-13 22:23:23 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0102educationandco' & 'enddate'
    2020-01-13 22:23:23 0042 LET varRecordSetQlikName_Entry= 'client_npi0102educationandco' & '_entry'
    2020-01-13 22:23:23 0043 LET varRecordSetQlikName_Exit='client_npi0102educationandco'& '_exit'
    2020-01-13 22:23:23 0045 LET varRecordSetQlikName_Interim='client_npi0102educationandco' & '_review'
    2020-01-13 22:23:23 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_npi0102educationandco', (len('client_npi0102educationandco'))-7))
    2020-01-13 22:23:23 0048 client_npi0102educationandco:
    2020-01-13 22:23:23 0049   SELECT * FROM qlik_sclient_npi0102educationandco
    2020-01-13 22:23:23      	7 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, 
    2020-01-13 22:23:23      43 lines fetched
    2020-01-13 22:23:23 0051 CustomEndFieldCheck:
    2020-01-13 22:23:23 0052   SELECT *
    2020-01-13 22:23:23 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0102educationandcend_1'
    2020-01-13 22:23:23      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:23      0 lines fetched
    2020-01-13 22:23:23 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0102educationandcend_1','npi0102educationandcoenddate')
    2020-01-13 22:23:23 0059 client_npi0102educationandco_entry:
    2020-01-13 22:23:23 0060   Noconcatenate
    2020-01-13 22:23:23 0061   LOAD DISTINCT
    2020-01-13 22:23:23 0062   *,
    2020-01-13 22:23:23 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:23 0064   recordset_id AS 'client_NPI0102EDUCATIONANDCORECORDSET_ID_entry'
    2020-01-13 22:23:23 0065   RESIDENT client_npi0102educationandco
    2020-01-13 22:23:23      	9 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, %entry_recordset_id, client_NPI0102EDUCATIONANDCORECORDSET_ID_entry, 
    2020-01-13 22:23:23      43 lines fetched
    2020-01-13 22:23:23 0068 RS_Entry:
    2020-01-13 22:23:23 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:23 0070   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:23:23 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:23 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:23 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:23 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:23 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:23 0076   WHERE
    2020-01-13 22:23:23 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:23 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:23 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:23 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:23 0081    AND ((((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:23:23 0082                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0102educationandcoenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:23 0083   UNION
    2020-01-13 22:23:23 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:23 0085   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:23:23 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:23 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:23 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:23 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:23 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:23 0091   WHERE 
    2020-01-13 22:23:23 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:23 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:23 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:23 0095   AND ((((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:23:23 0096                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0102educationandcoenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))))))
    2020-01-13 22:23:24      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:24      25 lines fetched
    2020-01-13 22:23:24 0100 RS_Entry_Explicit:
    2020-01-13 22:23:24 0101   Noconcatenate
    2020-01-13 22:23:24 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:24 0103   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:23:24 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:24 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:24 0106   WHERE 
    2020-01-13 22:23:24 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:24 0108   AND ((((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:24 0109   AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:23:24 0110                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:24 0111 				   AND ((ft.npi0102educationandcoenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:24 0112 				   OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))))))
    2020-01-13 22:23:24      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:24      31 lines fetched
    2020-01-13 22:23:24 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:24 0116   LOAD
    2020-01-13 22:23:24 0117   entry_exit_id, 
    2020-01-13 22:23:24 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:24 0119   question_id as %entryquestionid,
    2020-01-13 22:23:24 0120   provider_creating_id
    2020-01-13 22:23:24 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:24      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:24      1,364,975 lines fetched
    2020-01-13 22:23:24 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:24 0129 INNER JOIN(client_npi0102educationandco_entry)
    2020-01-13 22:23:24 0130   LOAD DISTINCT
    2020-01-13 22:23:24 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:24 0132   recordset_id,
    2020-01-13 22:23:24 0133   provider_creating_id AS [client_NPI0102EDUCATIONANDCO_Provider_Creating_Entry],
    2020-01-13 22:23:24 0134   name AS [client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Entry],
    2020-01-13 22:23:24 0135   user_creating_id AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Entry],
    2020-01-13 22:23:24 0136   user_name AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Entry]
    2020-01-13 22:23:24 0137   RESIDENT RS_Entry
    2020-01-13 22:23:24      	6 fields found: Entry Exit Id, recordset_id, client_NPI0102EDUCATIONANDCO_Provider_Creating_Entry, client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Entry, client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Entry, client_NPI0102EDUCATIONANDCO_User_Created_By_Entry, 
    2020-01-13 22:23:24      25 lines fetched
    2020-01-13 22:23:24      Joining/Keeping
    2020-01-13 22:23:24 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:24 0141 DROP FIELDS client_id FROM client_npi0102educationandco_entry
    2020-01-13 22:23:24 0142 DROP FIELDS recordset_id FROM client_npi0102educationandco_entry
    2020-01-13 22:23:24 0143 DROP FIELDS [Entry Exit Id] FROM client_npi0102educationandco_entry
    2020-01-13 22:23:24 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:24 0147   Mapping SQL
    2020-01-13 22:23:24 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:24 0149     FROM da_question dq
    2020-01-13 22:23:24 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0151     WHERE
    2020-01-13 22:23:24 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:24 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:24 0155     UNION
    2020-01-13 22:23:24 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:24 0157     FROM da_question dq
    2020-01-13 22:23:24 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0159     WHERE
    2020-01-13 22:23:24 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:24 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:24 0163      UNION
    2020-01-13 22:23:24 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:24 0165     FROM da_question dq
    2020-01-13 22:23:24 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0167     WHERE
    2020-01-13 22:23:24 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:24 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:24 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:24 0172     UNION
    2020-01-13 22:23:24 0173 
    2020-01-13 22:23:24 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:24 0175     FROM da_question dq
    2020-01-13 22:23:24 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0177     WHERE
    2020-01-13 22:23:24 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:24 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:24 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:24 0182     UNION   
    2020-01-13 22:23:24 0183     SELECT
    2020-01-13 22:23:24 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:24 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:24 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:24 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:24 0188     FROM da_question dq
    2020-01-13 22:23:24 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0190     WHERE
    2020-01-13 22:23:24 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:24 0193     UNION
    2020-01-13 22:23:24 0194 	SELECT
    2020-01-13 22:23:24 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:24 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:24 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:24 0198     FROM da_question dq
    2020-01-13 22:23:24 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:24 0200     WHERE
    2020-01-13 22:23:24 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:24 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:25      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:25      1,304 lines fetched
    2020-01-13 22:23:25 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:25 0205 DROP TABLE client_npi0102educationandco
    2020-01-13 22:23:25 0207 LET varStepName='STEPENTRY_' & 30 & '_of_' & 50
    2020-01-13 22:23:25 0208 STEPENTRY_30_of_50: select 1
    2020-01-13 22:23:25      	1 fields found: ?column?, 
    2020-01-13 22:23:25      1 lines fetched
    2020-01-13 22:23:25 0209 DROP TABLE STEPENTRY_30_of_50
    2020-01-13 22:23:25 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:25 0212 NEXT
    2020-01-13 22:23:25 0037 LET varRecordSetTableName=Peek('sp_table_name',31,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:25 0038 LET varRecordSetQlikName=Peek('qlik_table_name',31,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:25 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',31,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:25 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0103incomeandasset') <= 20),'npi0103incomeandasset' & 'end_1',left('npi0103incomeandasset', 20)& 'end_1')
    2020-01-13 22:23:25 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0103incomeandasset' & 'enddate'
    2020-01-13 22:23:25 0042 LET varRecordSetQlikName_Entry= 'client_npi0103incomeandasset' & '_entry'
    2020-01-13 22:23:25 0043 LET varRecordSetQlikName_Exit='client_npi0103incomeandasset'& '_exit'
    2020-01-13 22:23:25 0045 LET varRecordSetQlikName_Interim='client_npi0103incomeandasset' & '_review'
    2020-01-13 22:23:25 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_npi0103incomeandasset', (len('client_npi0103incomeandasset'))-7))
    2020-01-13 22:23:25 0048 client_npi0103incomeandasset:
    2020-01-13 22:23:25 0049   SELECT * FROM qlik_sclient_npi0103incomeandasset
    2020-01-13 22:23:25      	7 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, 
    2020-01-13 22:23:25      37 lines fetched
    2020-01-13 22:23:25 0051 CustomEndFieldCheck:
    2020-01-13 22:23:25 0052   SELECT *
    2020-01-13 22:23:25 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0103incomeandasseend_1'
    2020-01-13 22:23:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:25      0 lines fetched
    2020-01-13 22:23:25 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0103incomeandasseend_1','npi0103incomeandassetenddate')
    2020-01-13 22:23:25 0059 client_npi0103incomeandasset_entry:
    2020-01-13 22:23:25 0060   Noconcatenate
    2020-01-13 22:23:25 0061   LOAD DISTINCT
    2020-01-13 22:23:25 0062   *,
    2020-01-13 22:23:25 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:25 0064   recordset_id AS 'client_NPI0103INCOMEANDASSETRECORDSET_ID_entry'
    2020-01-13 22:23:25 0065   RESIDENT client_npi0103incomeandasset
    2020-01-13 22:23:25      	9 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, %entry_recordset_id, client_NPI0103INCOMEANDASSETRECORDSET_ID_entry, 
    2020-01-13 22:23:25      37 lines fetched
    2020-01-13 22:23:25 0068 RS_Entry:
    2020-01-13 22:23:25 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:25 0070   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:23:25 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:25 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:25 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:25 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:25 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:25 0076   WHERE
    2020-01-13 22:23:25 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:25 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:25 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:25 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:25 0081    AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:23:25 0082                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0103incomeandassetenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:25 0083   UNION
    2020-01-13 22:23:25 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:25 0085   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:23:25 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:25 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:25 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:25 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:25 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:25 0091   WHERE 
    2020-01-13 22:23:25 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:25 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:25 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:25 0095   AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:23:25 0096                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0103incomeandassetenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))))))
    2020-01-13 22:23:26      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:26      18 lines fetched
    2020-01-13 22:23:26 0100 RS_Entry_Explicit:
    2020-01-13 22:23:26 0101   Noconcatenate
    2020-01-13 22:23:26 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:26 0103   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:23:26 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:26 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:26 0106   WHERE 
    2020-01-13 22:23:26 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:26 0108   AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:26 0109   AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:23:26 0110                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:26 0111 				   AND ((ft.npi0103incomeandassetenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:26 0112 				   OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))))))
    2020-01-13 22:23:26      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:26      24 lines fetched
    2020-01-13 22:23:26 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:26 0116   LOAD
    2020-01-13 22:23:26 0117   entry_exit_id, 
    2020-01-13 22:23:26 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:26 0119   question_id as %entryquestionid,
    2020-01-13 22:23:26 0120   provider_creating_id
    2020-01-13 22:23:26 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:26      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:26      1,364,999 lines fetched
    2020-01-13 22:23:26 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:26 0129 INNER JOIN(client_npi0103incomeandasset_entry)
    2020-01-13 22:23:26 0130   LOAD DISTINCT
    2020-01-13 22:23:26 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:26 0132   recordset_id,
    2020-01-13 22:23:26 0133   provider_creating_id AS [client_NPI0103INCOMEANDASSET_Provider_Creating_Entry],
    2020-01-13 22:23:26 0134   name AS [client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Entry],
    2020-01-13 22:23:26 0135   user_creating_id AS [client_NPI0103INCOMEANDASSET_User_Created_By_Id_Entry],
    2020-01-13 22:23:26 0136   user_name AS [client_NPI0103INCOMEANDASSET_User_Created_By_Entry]
    2020-01-13 22:23:26 0137   RESIDENT RS_Entry
    2020-01-13 22:23:26      	6 fields found: Entry Exit Id, recordset_id, client_NPI0103INCOMEANDASSET_Provider_Creating_Entry, client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Entry, client_NPI0103INCOMEANDASSET_User_Created_By_Id_Entry, client_NPI0103INCOMEANDASSET_User_Created_By_Entry, 
    2020-01-13 22:23:26      18 lines fetched
    2020-01-13 22:23:26      Joining/Keeping
    2020-01-13 22:23:26 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:26 0141 DROP FIELDS client_id FROM client_npi0103incomeandasset_entry
    2020-01-13 22:23:26 0142 DROP FIELDS recordset_id FROM client_npi0103incomeandasset_entry
    2020-01-13 22:23:26 0143 DROP FIELDS [Entry Exit Id] FROM client_npi0103incomeandasset_entry
    2020-01-13 22:23:26 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:26 0147   Mapping SQL
    2020-01-13 22:23:26 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:26 0149     FROM da_question dq
    2020-01-13 22:23:26 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0151     WHERE
    2020-01-13 22:23:26 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:26 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:26 0155     UNION
    2020-01-13 22:23:26 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:26 0157     FROM da_question dq
    2020-01-13 22:23:26 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0159     WHERE
    2020-01-13 22:23:26 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:26 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:26 0163      UNION
    2020-01-13 22:23:26 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:26 0165     FROM da_question dq
    2020-01-13 22:23:26 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0167     WHERE
    2020-01-13 22:23:26 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:26 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:26 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:26 0172     UNION
    2020-01-13 22:23:26 0173 
    2020-01-13 22:23:26 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:26 0175     FROM da_question dq
    2020-01-13 22:23:26 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0177     WHERE
    2020-01-13 22:23:26 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:26 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:26 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:26 0182     UNION   
    2020-01-13 22:23:26 0183     SELECT
    2020-01-13 22:23:26 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:26 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:26 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:26 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:26 0188     FROM da_question dq
    2020-01-13 22:23:26 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0190     WHERE
    2020-01-13 22:23:26 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:26 0193     UNION
    2020-01-13 22:23:26 0194 	SELECT
    2020-01-13 22:23:26 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:26 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:26 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:26 0198     FROM da_question dq
    2020-01-13 22:23:26 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:26 0200     WHERE
    2020-01-13 22:23:26 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:26 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:27      1,304 lines fetched
    2020-01-13 22:23:27 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:27 0205 DROP TABLE client_npi0103incomeandasset
    2020-01-13 22:23:27 0207 LET varStepName='STEPENTRY_' & 31 & '_of_' & 50
    2020-01-13 22:23:27 0208 STEPENTRY_31_of_50: select 1
    2020-01-13 22:23:27      	1 fields found: ?column?, 
    2020-01-13 22:23:27      1 lines fetched
    2020-01-13 22:23:27 0209 DROP TABLE STEPENTRY_31_of_50
    2020-01-13 22:23:27 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:27 0212 NEXT
    2020-01-13 22:23:27 0037 LET varRecordSetTableName=Peek('sp_table_name',32,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:27 0038 LET varRecordSetQlikName=Peek('qlik_table_name',32,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:27 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',32,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:27 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0105healthandsocia') <= 20),'npi0105healthandsocia' & 'end_1',left('npi0105healthandsocia', 20)& 'end_1')
    2020-01-13 22:23:27 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0105healthandsocia' & 'enddate'
    2020-01-13 22:23:27 0042 LET varRecordSetQlikName_Entry= 'client_npi0105healthandsocia' & '_entry'
    2020-01-13 22:23:27 0043 LET varRecordSetQlikName_Exit='client_npi0105healthandsocia'& '_exit'
    2020-01-13 22:23:27 0045 LET varRecordSetQlikName_Interim='client_npi0105healthandsocia' & '_review'
    2020-01-13 22:23:27 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_npi0105healthandsocia', (len('client_npi0105healthandsocia'))-7))
    2020-01-13 22:23:27 0048 client_npi0105healthandsocia:
    2020-01-13 22:23:27 0049   SELECT * FROM qlik_sclient_npi0105healthandsocia
    2020-01-13 22:23:27      	7 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, 
    2020-01-13 22:23:27      21 lines fetched
    2020-01-13 22:23:27 0051 CustomEndFieldCheck:
    2020-01-13 22:23:27 0052   SELECT *
    2020-01-13 22:23:27 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0105healthandsociend_1'
    2020-01-13 22:23:27      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:27      0 lines fetched
    2020-01-13 22:23:27 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0105healthandsociend_1','npi0105healthandsociaenddate')
    2020-01-13 22:23:27 0059 client_npi0105healthandsocia_entry:
    2020-01-13 22:23:27 0060   Noconcatenate
    2020-01-13 22:23:27 0061   LOAD DISTINCT
    2020-01-13 22:23:27 0062   *,
    2020-01-13 22:23:27 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:27 0064   recordset_id AS 'client_NPI0105HEALTHANDSOCIARECORDSET_ID_entry'
    2020-01-13 22:23:27 0065   RESIDENT client_npi0105healthandsocia
    2020-01-13 22:23:28      	9 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, %entry_recordset_id, client_NPI0105HEALTHANDSOCIARECORDSET_ID_entry, 
    2020-01-13 22:23:28      21 lines fetched
    2020-01-13 22:23:28 0068 RS_Entry:
    2020-01-13 22:23:28 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:28 0070   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:23:28 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:28 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:28 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:28 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:28 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:28 0076   WHERE
    2020-01-13 22:23:28 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:28 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:28 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:28 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:28 0081    AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:23:28 0082                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0105healthandsociaenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:28 0083   UNION
    2020-01-13 22:23:28 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:28 0085   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:23:28 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:28 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:28 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:28 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:28 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:28 0091   WHERE 
    2020-01-13 22:23:28 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:28 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:28 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:28 0095   AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:23:28 0096                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0105healthandsociaenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))))))
    2020-01-13 22:23:28      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:28      11 lines fetched
    2020-01-13 22:23:28 0100 RS_Entry_Explicit:
    2020-01-13 22:23:28 0101   Noconcatenate
    2020-01-13 22:23:28 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:28 0103   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:23:28 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:28 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:28 0106   WHERE 
    2020-01-13 22:23:28 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:28 0108   AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:28 0109   AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:23:28 0110                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:28 0111 				   AND ((ft.npi0105healthandsociaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:28 0112 				   OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))))))
    2020-01-13 22:23:28      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:28      16 lines fetched
    2020-01-13 22:23:28 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:28 0116   LOAD
    2020-01-13 22:23:28 0117   entry_exit_id, 
    2020-01-13 22:23:28 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:28 0119   question_id as %entryquestionid,
    2020-01-13 22:23:28 0120   provider_creating_id
    2020-01-13 22:23:28 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:28      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:28      1,365,015 lines fetched
    2020-01-13 22:23:28 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:28 0129 INNER JOIN(client_npi0105healthandsocia_entry)
    2020-01-13 22:23:28 0130   LOAD DISTINCT
    2020-01-13 22:23:28 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:28 0132   recordset_id,
    2020-01-13 22:23:28 0133   provider_creating_id AS [client_NPI0105HEALTHANDSOCIA_Provider_Creating_Entry],
    2020-01-13 22:23:28 0134   name AS [client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Entry],
    2020-01-13 22:23:28 0135   user_creating_id AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Entry],
    2020-01-13 22:23:28 0136   user_name AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Entry]
    2020-01-13 22:23:28 0137   RESIDENT RS_Entry
    2020-01-13 22:23:28      	6 fields found: Entry Exit Id, recordset_id, client_NPI0105HEALTHANDSOCIA_Provider_Creating_Entry, client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Entry, client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Entry, client_NPI0105HEALTHANDSOCIA_User_Created_By_Entry, 
    2020-01-13 22:23:28      11 lines fetched
    2020-01-13 22:23:28      Joining/Keeping
    2020-01-13 22:23:28 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:28 0141 DROP FIELDS client_id FROM client_npi0105healthandsocia_entry
    2020-01-13 22:23:28 0142 DROP FIELDS recordset_id FROM client_npi0105healthandsocia_entry
    2020-01-13 22:23:28 0143 DROP FIELDS [Entry Exit Id] FROM client_npi0105healthandsocia_entry
    2020-01-13 22:23:28 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:28 0147   Mapping SQL
    2020-01-13 22:23:28 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:28 0149     FROM da_question dq
    2020-01-13 22:23:28 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0151     WHERE
    2020-01-13 22:23:28 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:28 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:28 0155     UNION
    2020-01-13 22:23:28 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:28 0157     FROM da_question dq
    2020-01-13 22:23:28 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0159     WHERE
    2020-01-13 22:23:28 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:28 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:28 0163      UNION
    2020-01-13 22:23:28 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:28 0165     FROM da_question dq
    2020-01-13 22:23:28 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0167     WHERE
    2020-01-13 22:23:28 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:28 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:28 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:28 0172     UNION
    2020-01-13 22:23:28 0173 
    2020-01-13 22:23:28 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:28 0175     FROM da_question dq
    2020-01-13 22:23:28 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0177     WHERE
    2020-01-13 22:23:28 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:28 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:28 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:28 0182     UNION   
    2020-01-13 22:23:28 0183     SELECT
    2020-01-13 22:23:28 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:28 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:28 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:28 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:28 0188     FROM da_question dq
    2020-01-13 22:23:28 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0190     WHERE
    2020-01-13 22:23:28 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:28 0193     UNION
    2020-01-13 22:23:28 0194 	SELECT
    2020-01-13 22:23:28 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:28 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:28 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:28 0198     FROM da_question dq
    2020-01-13 22:23:28 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:28 0200     WHERE
    2020-01-13 22:23:28 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:28 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:29      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:29      1,304 lines fetched
    2020-01-13 22:23:29 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:29 0205 DROP TABLE client_npi0105healthandsocia
    2020-01-13 22:23:29 0207 LET varStepName='STEPENTRY_' & 32 & '_of_' & 50
    2020-01-13 22:23:29 0208 STEPENTRY_32_of_50: select 1
    2020-01-13 22:23:29      	1 fields found: ?column?, 
    2020-01-13 22:23:29      1 lines fetched
    2020-01-13 22:23:29 0209 DROP TABLE STEPENTRY_32_of_50
    2020-01-13 22:23:29 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:29 0212 NEXT
    2020-01-13 22:23:29 0037 LET varRecordSetTableName=Peek('sp_table_name',33,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:29 0038 LET varRecordSetQlikName=Peek('qlik_table_name',33,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:29 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',33,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:29 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0106civicengagemen') <= 20),'npi0106civicengagemen' & 'end_1',left('npi0106civicengagemen', 20)& 'end_1')
    2020-01-13 22:23:29 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0106civicengagemen' & 'enddate'
    2020-01-13 22:23:29 0042 LET varRecordSetQlikName_Entry= 'client_npi0106civicengagemen' & '_entry'
    2020-01-13 22:23:29 0043 LET varRecordSetQlikName_Exit='client_npi0106civicengagemen'& '_exit'
    2020-01-13 22:23:29 0045 LET varRecordSetQlikName_Interim='client_npi0106civicengagemen' & '_review'
    2020-01-13 22:23:29 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_npi0106civicengagemen', (len('client_npi0106civicengagemen'))-7))
    2020-01-13 22:23:29 0048 client_npi0106civicengagemen:
    2020-01-13 22:23:29 0049   SELECT * FROM qlik_sclient_npi0106civicengagemen
    2020-01-13 22:23:29      	7 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, 
    2020-01-13 22:23:29      45 lines fetched
    2020-01-13 22:23:29 0051 CustomEndFieldCheck:
    2020-01-13 22:23:29 0052   SELECT *
    2020-01-13 22:23:29 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0106civicengagemeend_1'
    2020-01-13 22:23:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:30      0 lines fetched
    2020-01-13 22:23:30 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0106civicengagemeend_1','npi0106civicengagemenenddate')
    2020-01-13 22:23:30 0059 client_npi0106civicengagemen_entry:
    2020-01-13 22:23:30 0060   Noconcatenate
    2020-01-13 22:23:30 0061   LOAD DISTINCT
    2020-01-13 22:23:30 0062   *,
    2020-01-13 22:23:30 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:30 0064   recordset_id AS 'client_NPI0106CIVICENGAGEMENRECORDSET_ID_entry'
    2020-01-13 22:23:30 0065   RESIDENT client_npi0106civicengagemen
    2020-01-13 22:23:30      	9 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, %entry_recordset_id, client_NPI0106CIVICENGAGEMENRECORDSET_ID_entry, 
    2020-01-13 22:23:30      45 lines fetched
    2020-01-13 22:23:30 0068 RS_Entry:
    2020-01-13 22:23:30 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:30 0070   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:23:30 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:30 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:30 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:30 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:30 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:30 0076   WHERE
    2020-01-13 22:23:30 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:30 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:30 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:30 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:30 0081    AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:23:30 0082                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0106civicengagemenenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:30 0083   UNION
    2020-01-13 22:23:30 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:30 0085   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:23:30 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:30 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:30 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:30 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:30 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:30 0091   WHERE 
    2020-01-13 22:23:30 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:30 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:30 0095   AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:23:30 0096                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.npi0106civicengagemenenddate::DATE >= ee.entry_date::DATE) OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))))))
    2020-01-13 22:23:30      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:30      27 lines fetched
    2020-01-13 22:23:30 0100 RS_Entry_Explicit:
    2020-01-13 22:23:30 0101   Noconcatenate
    2020-01-13 22:23:30 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:30 0103   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:23:30 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:30 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:30 0106   WHERE 
    2020-01-13 22:23:30 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:30 0108   AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:30 0109   AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:23:30 0110                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:30 0111 				   AND ((ft.npi0106civicengagemenenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:30 0112 				   OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))))))
    2020-01-13 22:23:30      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:30      33 lines fetched
    2020-01-13 22:23:30 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:30 0116   LOAD
    2020-01-13 22:23:30 0117   entry_exit_id, 
    2020-01-13 22:23:30 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:30 0119   question_id as %entryquestionid,
    2020-01-13 22:23:30 0120   provider_creating_id
    2020-01-13 22:23:30 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:30      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:30      1,365,048 lines fetched
    2020-01-13 22:23:30 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:30 0129 INNER JOIN(client_npi0106civicengagemen_entry)
    2020-01-13 22:23:30 0130   LOAD DISTINCT
    2020-01-13 22:23:30 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:30 0132   recordset_id,
    2020-01-13 22:23:30 0133   provider_creating_id AS [client_NPI0106CIVICENGAGEMEN_Provider_Creating_Entry],
    2020-01-13 22:23:30 0134   name AS [client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Entry],
    2020-01-13 22:23:30 0135   user_creating_id AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Entry],
    2020-01-13 22:23:30 0136   user_name AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Entry]
    2020-01-13 22:23:30 0137   RESIDENT RS_Entry
    2020-01-13 22:23:30      	6 fields found: Entry Exit Id, recordset_id, client_NPI0106CIVICENGAGEMEN_Provider_Creating_Entry, client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Entry, client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Entry, client_NPI0106CIVICENGAGEMEN_User_Created_By_Entry, 
    2020-01-13 22:23:30      27 lines fetched
    2020-01-13 22:23:30      Joining/Keeping
    2020-01-13 22:23:30 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:31 0141 DROP FIELDS client_id FROM client_npi0106civicengagemen_entry
    2020-01-13 22:23:31 0142 DROP FIELDS recordset_id FROM client_npi0106civicengagemen_entry
    2020-01-13 22:23:31 0143 DROP FIELDS [Entry Exit Id] FROM client_npi0106civicengagemen_entry
    2020-01-13 22:23:31 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:31 0147   Mapping SQL
    2020-01-13 22:23:31 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:31 0149     FROM da_question dq
    2020-01-13 22:23:31 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0151     WHERE
    2020-01-13 22:23:31 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:31 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:31 0155     UNION
    2020-01-13 22:23:31 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:31 0157     FROM da_question dq
    2020-01-13 22:23:31 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0159     WHERE
    2020-01-13 22:23:31 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:31 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:31 0163      UNION
    2020-01-13 22:23:31 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:31 0165     FROM da_question dq
    2020-01-13 22:23:31 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0167     WHERE
    2020-01-13 22:23:31 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:31 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:31 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:31 0172     UNION
    2020-01-13 22:23:31 0173 
    2020-01-13 22:23:31 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:31 0175     FROM da_question dq
    2020-01-13 22:23:31 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0177     WHERE
    2020-01-13 22:23:31 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:31 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:31 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:31 0182     UNION   
    2020-01-13 22:23:31 0183     SELECT
    2020-01-13 22:23:31 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:31 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:31 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:31 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:31 0188     FROM da_question dq
    2020-01-13 22:23:31 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0190     WHERE
    2020-01-13 22:23:31 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:31 0193     UNION
    2020-01-13 22:23:31 0194 	SELECT
    2020-01-13 22:23:31 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:31 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:31 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:31 0198     FROM da_question dq
    2020-01-13 22:23:31 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:31 0200     WHERE
    2020-01-13 22:23:31 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:31 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:31      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:31      1,304 lines fetched
    2020-01-13 22:23:31 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:31 0205 DROP TABLE client_npi0106civicengagemen
    2020-01-13 22:23:31 0207 LET varStepName='STEPENTRY_' & 33 & '_of_' & 50
    2020-01-13 22:23:31 0208 STEPENTRY_33_of_50: select 1
    2020-01-13 22:23:31      	1 fields found: ?column?, 
    2020-01-13 22:23:31      1 lines fetched
    2020-01-13 22:23:31 0209 DROP TABLE STEPENTRY_33_of_50
    2020-01-13 22:23:31 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:31 0212 NEXT
    2020-01-13 22:23:31 0037 LET varRecordSetTableName=Peek('sp_table_name',34,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:31 0038 LET varRecordSetQlikName=Peek('qlik_table_name',34,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:31 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',34,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:31 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('physicianinformation') <= 20),'physicianinformation' & 'end_1',left('physicianinformation', 20)& 'end_1')
    2020-01-13 22:23:31 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'physicianinformation' & 'enddate'
    2020-01-13 22:23:31 0042 LET varRecordSetQlikName_Entry= 'client_physicianinformation' & '_entry'
    2020-01-13 22:23:31 0043 LET varRecordSetQlikName_Exit='client_physicianinformation'& '_exit'
    2020-01-13 22:23:31 0045 LET varRecordSetQlikName_Interim='client_physicianinformation' & '_review'
    2020-01-13 22:23:31 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_physicianinformation', (len('client_physicianinformation'))-7))
    2020-01-13 22:23:31 0048 client_physicianinformation:
    2020-01-13 22:23:31 0049   SELECT * FROM qlik_sclient_physicianinformation
    2020-01-13 22:23:34      	12 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, 
    2020-01-13 22:23:34      22,428 lines fetched
    2020-01-13 22:23:34 0051 CustomEndFieldCheck:
    2020-01-13 22:23:34 0052   SELECT *
    2020-01-13 22:23:34 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'physicianinformationend_1'
    2020-01-13 22:23:34      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:34      0 lines fetched
    2020-01-13 22:23:34 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'physicianinformationend_1','physicianinformationenddate')
    2020-01-13 22:23:34 0059 client_physicianinformation_entry:
    2020-01-13 22:23:34 0060   Noconcatenate
    2020-01-13 22:23:34 0061   LOAD DISTINCT
    2020-01-13 22:23:34 0062   *,
    2020-01-13 22:23:34 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:34 0064   recordset_id AS 'client_PHYSICIANINFORMATIONRECORDSET_ID_entry'
    2020-01-13 22:23:34 0065   RESIDENT client_physicianinformation
    2020-01-13 22:23:34      	14 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, %entry_recordset_id, client_PHYSICIANINFORMATIONRECORDSET_ID_entry, 
    2020-01-13 22:23:34      22,428 lines fetched
    2020-01-13 22:23:34 0068 RS_Entry:
    2020-01-13 22:23:34 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:34 0070   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:23:34 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:34 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:34 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:34 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:34 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:34 0076   WHERE
    2020-01-13 22:23:34 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:34 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:34 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:34 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:34 0081    AND ((((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:23:34 0082                    OR (((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.physicianinformationenddate::DATE >= ee.entry_date::DATE) OR ((ft.physicianinformationenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:34 0083   UNION
    2020-01-13 22:23:34 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:34 0085   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:23:34 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:34 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:34 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:34 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:34 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:34 0091   WHERE 
    2020-01-13 22:23:34 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:34 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:34 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:34 0095   AND ((((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:23:34 0096                    OR (((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.physicianinformationenddate::DATE >= ee.entry_date::DATE) OR ((ft.physicianinformationenddate::DATE >= date(now()))))))
    2020-01-13 22:23:40      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:40      104 lines fetched
    2020-01-13 22:23:40 0100 RS_Entry_Explicit:
    2020-01-13 22:23:40 0101   Noconcatenate
    2020-01-13 22:23:40 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:40 0103   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:23:40 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:40 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:40 0106   WHERE 
    2020-01-13 22:23:40 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:40 0108   AND ((((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:40 0109   AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:23:40 0110                    OR (((ft.physicianinformationstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:40 0111 				   AND ((ft.physicianinformationenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:40 0112 				   OR ((ft.physicianinformationenddate::DATE >= date(now()))))))
    2020-01-13 22:23:43      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:43      660 lines fetched
    2020-01-13 22:23:43 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:43 0116   LOAD
    2020-01-13 22:23:43 0117   entry_exit_id, 
    2020-01-13 22:23:43 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:43 0119   question_id as %entryquestionid,
    2020-01-13 22:23:43 0120   provider_creating_id
    2020-01-13 22:23:43 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:43      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:43      1,365,708 lines fetched
    2020-01-13 22:23:43 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:43 0129 INNER JOIN(client_physicianinformation_entry)
    2020-01-13 22:23:43 0130   LOAD DISTINCT
    2020-01-13 22:23:43 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:43 0132   recordset_id,
    2020-01-13 22:23:43 0133   provider_creating_id AS [client_PHYSICIANINFORMATION_Provider_Creating_Entry],
    2020-01-13 22:23:43 0134   name AS [client_PHYSICIANINFORMATION_Provider_Name_Creating_Entry],
    2020-01-13 22:23:43 0135   user_creating_id AS [client_PHYSICIANINFORMATION_User_Created_By_Id_Entry],
    2020-01-13 22:23:43 0136   user_name AS [client_PHYSICIANINFORMATION_User_Created_By_Entry]
    2020-01-13 22:23:43 0137   RESIDENT RS_Entry
    2020-01-13 22:23:43      	6 fields found: Entry Exit Id, recordset_id, client_PHYSICIANINFORMATION_Provider_Creating_Entry, client_PHYSICIANINFORMATION_Provider_Name_Creating_Entry, client_PHYSICIANINFORMATION_User_Created_By_Id_Entry, client_PHYSICIANINFORMATION_User_Created_By_Entry, 
    2020-01-13 22:23:43      104 lines fetched
    2020-01-13 22:23:43      Joining/Keeping
    2020-01-13 22:23:43 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:43 0141 DROP FIELDS client_id FROM client_physicianinformation_entry
    2020-01-13 22:23:43 0142 DROP FIELDS recordset_id FROM client_physicianinformation_entry
    2020-01-13 22:23:43 0143 DROP FIELDS [Entry Exit Id] FROM client_physicianinformation_entry
    2020-01-13 22:23:43 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:43 0147   Mapping SQL
    2020-01-13 22:23:43 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:43 0149     FROM da_question dq
    2020-01-13 22:23:43 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0151     WHERE
    2020-01-13 22:23:43 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:43 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:43 0155     UNION
    2020-01-13 22:23:43 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:43 0157     FROM da_question dq
    2020-01-13 22:23:43 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0159     WHERE
    2020-01-13 22:23:43 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:43 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:43 0163      UNION
    2020-01-13 22:23:43 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:43 0165     FROM da_question dq
    2020-01-13 22:23:43 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0167     WHERE
    2020-01-13 22:23:43 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:43 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:43 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:43 0172     UNION
    2020-01-13 22:23:43 0173 
    2020-01-13 22:23:43 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:43 0175     FROM da_question dq
    2020-01-13 22:23:43 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0177     WHERE
    2020-01-13 22:23:43 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:43 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:43 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:43 0182     UNION   
    2020-01-13 22:23:43 0183     SELECT
    2020-01-13 22:23:43 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:43 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:43 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:43 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:43 0188     FROM da_question dq
    2020-01-13 22:23:43 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0190     WHERE
    2020-01-13 22:23:43 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:43 0193     UNION
    2020-01-13 22:23:43 0194 	SELECT
    2020-01-13 22:23:43 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:43 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:43 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:43 0198     FROM da_question dq
    2020-01-13 22:23:43 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:43 0200     WHERE
    2020-01-13 22:23:43 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:43 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:43      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:43      1,304 lines fetched
    2020-01-13 22:23:43 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:43 0205 DROP TABLE client_physicianinformation
    2020-01-13 22:23:43 0207 LET varStepName='STEPENTRY_' & 34 & '_of_' & 50
    2020-01-13 22:23:43 0208 STEPENTRY_34_of_50: select 1
    2020-01-13 22:23:44      	1 fields found: ?column?, 
    2020-01-13 22:23:44      1 lines fetched
    2020-01-13 22:23:44 0209 DROP TABLE STEPENTRY_34_of_50
    2020-01-13 22:23:44 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:44 0212 NEXT
    2020-01-13 22:23:44 0037 LET varRecordSetTableName=Peek('sp_table_name',35,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:44 0038 LET varRecordSetQlikName=Peek('qlik_table_name',35,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:44 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',35,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:44 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('referredtomentalhealt_1') <= 20),'referredtomentalhealt_1' & 'end_1',left('referredtomentalhealt_1', 20)& 'end_1')
    2020-01-13 22:23:44 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'referredtomentalhealt_1' & 'enddate'
    2020-01-13 22:23:44 0042 LET varRecordSetQlikName_Entry= 'client_referredtomentalhealt_1' & '_entry'
    2020-01-13 22:23:44 0043 LET varRecordSetQlikName_Exit='client_referredtomentalhealt_1'& '_exit'
    2020-01-13 22:23:44 0045 LET varRecordSetQlikName_Interim='client_referredtomentalhealt_1' & '_review'
    2020-01-13 22:23:44 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_referredtomentalhealt_1', (len('client_referredtomentalhealt_1'))-7))
    2020-01-13 22:23:44 0048 client_referredtomentalhealt_1:
    2020-01-13 22:23:44 0049   SELECT * FROM qlik_sclient_referredtomentalhealt_1
    2020-01-13 22:23:44      	7 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, 
    2020-01-13 22:23:44      221 lines fetched
    2020-01-13 22:23:44 0051 CustomEndFieldCheck:
    2020-01-13 22:23:44 0052   SELECT *
    2020-01-13 22:23:44 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'referredtomentalhealend_1'
    2020-01-13 22:23:44      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:44      0 lines fetched
    2020-01-13 22:23:44 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'referredtomentalhealend_1','referredtomentalhealt_1enddate')
    2020-01-13 22:23:44 0059 client_referredtomentalhealt_1_entry:
    2020-01-13 22:23:44 0060   Noconcatenate
    2020-01-13 22:23:44 0061   LOAD DISTINCT
    2020-01-13 22:23:44 0062   *,
    2020-01-13 22:23:44 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:44 0064   recordset_id AS 'client_REFERREDTOMENTALHEALT_1RECORDSET_ID_entry'
    2020-01-13 22:23:44 0065   RESIDENT client_referredtomentalhealt_1
    2020-01-13 22:23:44      	9 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, %entry_recordset_id, client_REFERREDTOMENTALHEALT_1RECORDSET_ID_entry, 
    2020-01-13 22:23:44      221 lines fetched
    2020-01-13 22:23:44 0068 RS_Entry:
    2020-01-13 22:23:44 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:44 0070   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:23:44 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:44 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:44 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:44 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:44 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:44 0076   WHERE
    2020-01-13 22:23:44 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:44 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:44 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:44 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:44 0081    AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:44 0082                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:44 0083   UNION
    2020-01-13 22:23:44 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:44 0085   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:23:44 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:44 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:44 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:44 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:44 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:44 0091   WHERE 
    2020-01-13 22:23:44 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:44 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:44 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:44 0095   AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:44 0096                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))))))
    2020-01-13 22:23:44      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:44      12 lines fetched
    2020-01-13 22:23:44 0100 RS_Entry_Explicit:
    2020-01-13 22:23:44 0101   Noconcatenate
    2020-01-13 22:23:44 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:44 0103   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:23:44 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:44 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:44 0106   WHERE 
    2020-01-13 22:23:44 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:44 0108   AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:44 0109   AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:44 0110                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:44 0111 				   AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:44 0112 				   OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))))))
    2020-01-13 22:23:45      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:45      85 lines fetched
    2020-01-13 22:23:45 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:45 0116   LOAD
    2020-01-13 22:23:45 0117   entry_exit_id, 
    2020-01-13 22:23:45 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:45 0119   question_id as %entryquestionid,
    2020-01-13 22:23:45 0120   provider_creating_id
    2020-01-13 22:23:45 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:45      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:45      1,365,793 lines fetched
    2020-01-13 22:23:45 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:45 0129 INNER JOIN(client_referredtomentalhealt_1_entry)
    2020-01-13 22:23:45 0130   LOAD DISTINCT
    2020-01-13 22:23:45 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:45 0132   recordset_id,
    2020-01-13 22:23:45 0133   provider_creating_id AS [client_REFERREDTOMENTALHEALT_1_Provider_Creating_Entry],
    2020-01-13 22:23:45 0134   name AS [client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Entry],
    2020-01-13 22:23:45 0135   user_creating_id AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Entry],
    2020-01-13 22:23:45 0136   user_name AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Entry]
    2020-01-13 22:23:45 0137   RESIDENT RS_Entry
    2020-01-13 22:23:45      	6 fields found: Entry Exit Id, recordset_id, client_REFERREDTOMENTALHEALT_1_Provider_Creating_Entry, client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Entry, client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Entry, client_REFERREDTOMENTALHEALT_1_User_Created_By_Entry, 
    2020-01-13 22:23:45      12 lines fetched
    2020-01-13 22:23:45      Joining/Keeping
    2020-01-13 22:23:45 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:45 0141 DROP FIELDS client_id FROM client_referredtomentalhealt_1_entry
    2020-01-13 22:23:45 0142 DROP FIELDS recordset_id FROM client_referredtomentalhealt_1_entry
    2020-01-13 22:23:45 0143 DROP FIELDS [Entry Exit Id] FROM client_referredtomentalhealt_1_entry
    2020-01-13 22:23:45 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:45 0147   Mapping SQL
    2020-01-13 22:23:45 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:45 0149     FROM da_question dq
    2020-01-13 22:23:45 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0151     WHERE
    2020-01-13 22:23:45 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:45 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:45 0155     UNION
    2020-01-13 22:23:45 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:45 0157     FROM da_question dq
    2020-01-13 22:23:45 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0159     WHERE
    2020-01-13 22:23:45 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:45 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:45 0163      UNION
    2020-01-13 22:23:45 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:45 0165     FROM da_question dq
    2020-01-13 22:23:45 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0167     WHERE
    2020-01-13 22:23:45 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:45 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:45 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:45 0172     UNION
    2020-01-13 22:23:45 0173 
    2020-01-13 22:23:45 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:45 0175     FROM da_question dq
    2020-01-13 22:23:45 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0177     WHERE
    2020-01-13 22:23:45 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:45 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:45 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:45 0182     UNION   
    2020-01-13 22:23:45 0183     SELECT
    2020-01-13 22:23:45 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:45 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:45 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:45 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:45 0188     FROM da_question dq
    2020-01-13 22:23:45 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0190     WHERE
    2020-01-13 22:23:45 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:45 0193     UNION
    2020-01-13 22:23:45 0194 	SELECT
    2020-01-13 22:23:45 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:45 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:45 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:45 0198     FROM da_question dq
    2020-01-13 22:23:45 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:45 0200     WHERE
    2020-01-13 22:23:45 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:45 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:45      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:45      1,304 lines fetched
    2020-01-13 22:23:45 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:45 0205 DROP TABLE client_referredtomentalhealt_1
    2020-01-13 22:23:45 0207 LET varStepName='STEPENTRY_' & 35 & '_of_' & 50
    2020-01-13 22:23:45 0208 STEPENTRY_35_of_50: select 1
    2020-01-13 22:23:46      	1 fields found: ?column?, 
    2020-01-13 22:23:46      1 lines fetched
    2020-01-13 22:23:46 0209 DROP TABLE STEPENTRY_35_of_50
    2020-01-13 22:23:46 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:46 0212 NEXT
    2020-01-13 22:23:46 0037 LET varRecordSetTableName=Peek('sp_table_name',36,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:46 0038 LET varRecordSetQlikName=Peek('qlik_table_name',36,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:46 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',36,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:46 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('rhymisoutreachsub') <= 20),'rhymisoutreachsub' & 'end_1',left('rhymisoutreachsub', 20)& 'end_1')
    2020-01-13 22:23:46 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'rhymisoutreachsub' & 'enddate'
    2020-01-13 22:23:46 0042 LET varRecordSetQlikName_Entry= 'client_rhymisoutreachsub' & '_entry'
    2020-01-13 22:23:46 0043 LET varRecordSetQlikName_Exit='client_rhymisoutreachsub'& '_exit'
    2020-01-13 22:23:46 0045 LET varRecordSetQlikName_Interim='client_rhymisoutreachsub' & '_review'
    2020-01-13 22:23:46 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_rhymisoutreachsub', (len('client_rhymisoutreachsub'))-7))
    2020-01-13 22:23:46 0048 client_rhymisoutreachsub:
    2020-01-13 22:23:46 0049   SELECT * FROM qlik_sclient_rhymisoutreachsub
    2020-01-13 22:23:46      	8 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, 
    2020-01-13 22:23:46      203 lines fetched
    2020-01-13 22:23:46 0051 CustomEndFieldCheck:
    2020-01-13 22:23:46 0052   SELECT *
    2020-01-13 22:23:46 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'rhymisoutreachsubend_1'
    2020-01-13 22:23:46      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:46      0 lines fetched
    2020-01-13 22:23:46 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'rhymisoutreachsubend_1','rhymisoutreachsubenddate')
    2020-01-13 22:23:46 0059 client_rhymisoutreachsub_entry:
    2020-01-13 22:23:46 0060   Noconcatenate
    2020-01-13 22:23:46 0061   LOAD DISTINCT
    2020-01-13 22:23:46 0062   *,
    2020-01-13 22:23:46 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:46 0064   recordset_id AS 'client_RHYMISOUTREACHSUBRECORDSET_ID_entry'
    2020-01-13 22:23:46 0065   RESIDENT client_rhymisoutreachsub
    2020-01-13 22:23:46      	10 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, %entry_recordset_id, client_RHYMISOUTREACHSUBRECORDSET_ID_entry, 
    2020-01-13 22:23:46      203 lines fetched
    2020-01-13 22:23:46 0068 RS_Entry:
    2020-01-13 22:23:46 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:46 0070   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:23:46 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:46 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:46 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:46 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:46 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:46 0076   WHERE
    2020-01-13 22:23:46 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:46 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:46 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:46 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:46 0081    AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:23:46 0082                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.rhymisoutreachsubenddate::DATE >= ee.entry_date::DATE) OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:46 0083   UNION
    2020-01-13 22:23:46 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:46 0085   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:23:46 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:46 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:46 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:46 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:46 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:46 0091   WHERE 
    2020-01-13 22:23:46 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:46 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:46 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:46 0095   AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:23:46 0096                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.rhymisoutreachsubenddate::DATE >= ee.entry_date::DATE) OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))))))
    2020-01-13 22:23:47      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:47      134 lines fetched
    2020-01-13 22:23:47 0100 RS_Entry_Explicit:
    2020-01-13 22:23:47 0101   Noconcatenate
    2020-01-13 22:23:47 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:47 0103   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:23:47 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:47 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:47 0106   WHERE 
    2020-01-13 22:23:47 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:47 0108   AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:47 0109   AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:23:47 0110                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:47 0111 				   AND ((ft.rhymisoutreachsubenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:47 0112 				   OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))))))
    2020-01-13 22:23:47      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:47      176 lines fetched
    2020-01-13 22:23:47 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:47 0116   LOAD
    2020-01-13 22:23:47 0117   entry_exit_id, 
    2020-01-13 22:23:47 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:47 0119   question_id as %entryquestionid,
    2020-01-13 22:23:47 0120   provider_creating_id
    2020-01-13 22:23:47 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:47      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:47      1,365,969 lines fetched
    2020-01-13 22:23:47 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:47 0129 INNER JOIN(client_rhymisoutreachsub_entry)
    2020-01-13 22:23:47 0130   LOAD DISTINCT
    2020-01-13 22:23:47 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:47 0132   recordset_id,
    2020-01-13 22:23:47 0133   provider_creating_id AS [client_RHYMISOUTREACHSUB_Provider_Creating_Entry],
    2020-01-13 22:23:47 0134   name AS [client_RHYMISOUTREACHSUB_Provider_Name_Creating_Entry],
    2020-01-13 22:23:47 0135   user_creating_id AS [client_RHYMISOUTREACHSUB_User_Created_By_Id_Entry],
    2020-01-13 22:23:47 0136   user_name AS [client_RHYMISOUTREACHSUB_User_Created_By_Entry]
    2020-01-13 22:23:47 0137   RESIDENT RS_Entry
    2020-01-13 22:23:47      	6 fields found: Entry Exit Id, recordset_id, client_RHYMISOUTREACHSUB_Provider_Creating_Entry, client_RHYMISOUTREACHSUB_Provider_Name_Creating_Entry, client_RHYMISOUTREACHSUB_User_Created_By_Id_Entry, client_RHYMISOUTREACHSUB_User_Created_By_Entry, 
    2020-01-13 22:23:47      134 lines fetched
    2020-01-13 22:23:47      Joining/Keeping
    2020-01-13 22:23:47 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:47 0141 DROP FIELDS client_id FROM client_rhymisoutreachsub_entry
    2020-01-13 22:23:47 0142 DROP FIELDS recordset_id FROM client_rhymisoutreachsub_entry
    2020-01-13 22:23:47 0143 DROP FIELDS [Entry Exit Id] FROM client_rhymisoutreachsub_entry
    2020-01-13 22:23:47 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:47 0147   Mapping SQL
    2020-01-13 22:23:47 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:47 0149     FROM da_question dq
    2020-01-13 22:23:47 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0151     WHERE
    2020-01-13 22:23:47 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:47 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:47 0155     UNION
    2020-01-13 22:23:47 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:47 0157     FROM da_question dq
    2020-01-13 22:23:47 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0159     WHERE
    2020-01-13 22:23:47 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:47 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:47 0163      UNION
    2020-01-13 22:23:47 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:47 0165     FROM da_question dq
    2020-01-13 22:23:47 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0167     WHERE
    2020-01-13 22:23:47 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:47 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:47 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:47 0172     UNION
    2020-01-13 22:23:47 0173 
    2020-01-13 22:23:47 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:47 0175     FROM da_question dq
    2020-01-13 22:23:47 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0177     WHERE
    2020-01-13 22:23:47 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:47 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:47 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:47 0182     UNION   
    2020-01-13 22:23:47 0183     SELECT
    2020-01-13 22:23:47 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:47 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:47 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:47 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:47 0188     FROM da_question dq
    2020-01-13 22:23:47 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0190     WHERE
    2020-01-13 22:23:47 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:47 0193     UNION
    2020-01-13 22:23:47 0194 	SELECT
    2020-01-13 22:23:47 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:47 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:47 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:47 0198     FROM da_question dq
    2020-01-13 22:23:47 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:47 0200     WHERE
    2020-01-13 22:23:47 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:47 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:48      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:48      1,304 lines fetched
    2020-01-13 22:23:48 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:48 0205 DROP TABLE client_rhymisoutreachsub
    2020-01-13 22:23:48 0207 LET varStepName='STEPENTRY_' & 36 & '_of_' & 50
    2020-01-13 22:23:48 0208 STEPENTRY_36_of_50: select 1
    2020-01-13 22:23:48      	1 fields found: ?column?, 
    2020-01-13 22:23:48      1 lines fetched
    2020-01-13 22:23:48 0209 DROP TABLE STEPENTRY_36_of_50
    2020-01-13 22:23:48 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:48 0212 NEXT
    2020-01-13 22:23:48 0037 LET varRecordSetTableName=Peek('sp_table_name',37,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:48 0038 LET varRecordSetQlikName=Peek('qlik_table_name',37,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:48 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',37,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:48 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('schoolattendance_1') <= 20),'schoolattendance_1' & 'end_1',left('schoolattendance_1', 20)& 'end_1')
    2020-01-13 22:23:48 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'schoolattendance_1' & 'enddate'
    2020-01-13 22:23:48 0042 LET varRecordSetQlikName_Entry= 'client_schoolattendance_1' & '_entry'
    2020-01-13 22:23:48 0043 LET varRecordSetQlikName_Exit='client_schoolattendance_1'& '_exit'
    2020-01-13 22:23:48 0045 LET varRecordSetQlikName_Interim='client_schoolattendance_1' & '_review'
    2020-01-13 22:23:48 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_schoolattendance_1', (len('client_schoolattendance_1'))-7))
    2020-01-13 22:23:48 0048 client_schoolattendance_1:
    2020-01-13 22:23:48 0049   SELECT * FROM qlik_sclient_schoolattendance_1
    2020-01-13 22:23:48      	12 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, 
    2020-01-13 22:23:48      2,702 lines fetched
    2020-01-13 22:23:48 0051 CustomEndFieldCheck:
    2020-01-13 22:23:48 0052   SELECT *
    2020-01-13 22:23:48 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'schoolattendance_1end_1'
    2020-01-13 22:23:49      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:49      0 lines fetched
    2020-01-13 22:23:49 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'schoolattendance_1end_1','schoolattendance_1enddate')
    2020-01-13 22:23:49 0059 client_schoolattendance_1_entry:
    2020-01-13 22:23:49 0060   Noconcatenate
    2020-01-13 22:23:49 0061   LOAD DISTINCT
    2020-01-13 22:23:49 0062   *,
    2020-01-13 22:23:49 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:49 0064   recordset_id AS 'client_SCHOOLATTENDANCE_1RECORDSET_ID_entry'
    2020-01-13 22:23:49 0065   RESIDENT client_schoolattendance_1
    2020-01-13 22:23:49      	14 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, %entry_recordset_id, client_SCHOOLATTENDANCE_1RECORDSET_ID_entry, 
    2020-01-13 22:23:49      2,702 lines fetched
    2020-01-13 22:23:49 0068 RS_Entry:
    2020-01-13 22:23:49 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:49 0070   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:23:49 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:49 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:49 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:49 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:49 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:49 0076   WHERE
    2020-01-13 22:23:49 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:49 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:49 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:49 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:49 0081    AND ((((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:49 0082                    OR (((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.schoolattendance_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.schoolattendance_1enddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:49 0083   UNION
    2020-01-13 22:23:49 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:49 0085   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:23:49 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:49 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:49 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:49 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:49 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:49 0091   WHERE 
    2020-01-13 22:23:49 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:49 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:49 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:49 0095   AND ((((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:49 0096                    OR (((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) AND ((ft.schoolattendance_1enddate::DATE >= ee.entry_date::DATE) OR ((ft.schoolattendance_1enddate::DATE >= date(now()))))))
    2020-01-13 22:23:50      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:50      786 lines fetched
    2020-01-13 22:23:50 0100 RS_Entry_Explicit:
    2020-01-13 22:23:50 0101   Noconcatenate
    2020-01-13 22:23:50 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:50 0103   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:23:50 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:50 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:50 0106   WHERE 
    2020-01-13 22:23:50 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:50 0108   AND ((((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:50 0109   AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:23:50 0110                    OR (((ft.schoolattendance_1startdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:50 0111 				   AND ((ft.schoolattendance_1enddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:50 0112 				   OR ((ft.schoolattendance_1enddate::DATE >= date(now()))))))
    2020-01-13 22:23:50      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:50      1,107 lines fetched
    2020-01-13 22:23:50 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:50 0116   LOAD
    2020-01-13 22:23:50 0117   entry_exit_id, 
    2020-01-13 22:23:50 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:50 0119   question_id as %entryquestionid,
    2020-01-13 22:23:50 0120   provider_creating_id
    2020-01-13 22:23:50 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:51      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:51      1,367,076 lines fetched
    2020-01-13 22:23:51 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:51 0129 INNER JOIN(client_schoolattendance_1_entry)
    2020-01-13 22:23:51 0130   LOAD DISTINCT
    2020-01-13 22:23:51 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:51 0132   recordset_id,
    2020-01-13 22:23:51 0133   provider_creating_id AS [client_SCHOOLATTENDANCE_1_Provider_Creating_Entry],
    2020-01-13 22:23:51 0134   name AS [client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Entry],
    2020-01-13 22:23:51 0135   user_creating_id AS [client_SCHOOLATTENDANCE_1_User_Created_By_Id_Entry],
    2020-01-13 22:23:51 0136   user_name AS [client_SCHOOLATTENDANCE_1_User_Created_By_Entry]
    2020-01-13 22:23:51 0137   RESIDENT RS_Entry
    2020-01-13 22:23:51      	6 fields found: Entry Exit Id, recordset_id, client_SCHOOLATTENDANCE_1_Provider_Creating_Entry, client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Entry, client_SCHOOLATTENDANCE_1_User_Created_By_Id_Entry, client_SCHOOLATTENDANCE_1_User_Created_By_Entry, 
    2020-01-13 22:23:51      786 lines fetched
    2020-01-13 22:23:51      Joining/Keeping
    2020-01-13 22:23:51 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:51 0141 DROP FIELDS client_id FROM client_schoolattendance_1_entry
    2020-01-13 22:23:51 0142 DROP FIELDS recordset_id FROM client_schoolattendance_1_entry
    2020-01-13 22:23:51 0143 DROP FIELDS [Entry Exit Id] FROM client_schoolattendance_1_entry
    2020-01-13 22:23:51 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:51 0147   Mapping SQL
    2020-01-13 22:23:51 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:51 0149     FROM da_question dq
    2020-01-13 22:23:51 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0151     WHERE
    2020-01-13 22:23:51 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:51 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:51 0155     UNION
    2020-01-13 22:23:51 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:51 0157     FROM da_question dq
    2020-01-13 22:23:51 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0159     WHERE
    2020-01-13 22:23:51 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:51 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:51 0163      UNION
    2020-01-13 22:23:51 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:51 0165     FROM da_question dq
    2020-01-13 22:23:51 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0167     WHERE
    2020-01-13 22:23:51 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:51 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:51 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:51 0172     UNION
    2020-01-13 22:23:51 0173 
    2020-01-13 22:23:51 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:51 0175     FROM da_question dq
    2020-01-13 22:23:51 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0177     WHERE
    2020-01-13 22:23:51 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:51 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:51 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:51 0182     UNION   
    2020-01-13 22:23:51 0183     SELECT
    2020-01-13 22:23:51 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:51 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:51 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:51 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:51 0188     FROM da_question dq
    2020-01-13 22:23:51 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0190     WHERE
    2020-01-13 22:23:51 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:51 0193     UNION
    2020-01-13 22:23:51 0194 	SELECT
    2020-01-13 22:23:51 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:51 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:51 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:51 0198     FROM da_question dq
    2020-01-13 22:23:51 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:51 0200     WHERE
    2020-01-13 22:23:51 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:51 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:51      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:51      1,304 lines fetched
    2020-01-13 22:23:51 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:51 0205 DROP TABLE client_schoolattendance_1
    2020-01-13 22:23:51 0207 LET varStepName='STEPENTRY_' & 37 & '_of_' & 50
    2020-01-13 22:23:51 0208 STEPENTRY_37_of_50: select 1
    2020-01-13 22:23:51      	1 fields found: ?column?, 
    2020-01-13 22:23:51      1 lines fetched
    2020-01-13 22:23:51 0209 DROP TABLE STEPENTRY_37_of_50
    2020-01-13 22:23:51 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:51 0212 NEXT
    2020-01-13 22:23:51 0037 LET varRecordSetTableName=Peek('sp_table_name',38,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:51 0038 LET varRecordSetQlikName=Peek('qlik_table_name',38,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:51 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',38,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:51 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabuseassessm') <= 20),'substanceabuseassessm' & 'end_1',left('substanceabuseassessm', 20)& 'end_1')
    2020-01-13 22:23:51 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabuseassessm' & 'enddate'
    2020-01-13 22:23:51 0042 LET varRecordSetQlikName_Entry= 'client_substanceabuseassessm' & '_entry'
    2020-01-13 22:23:51 0043 LET varRecordSetQlikName_Exit='client_substanceabuseassessm'& '_exit'
    2020-01-13 22:23:51 0045 LET varRecordSetQlikName_Interim='client_substanceabuseassessm' & '_review'
    2020-01-13 22:23:51 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_substanceabuseassessm', (len('client_substanceabuseassessm'))-7))
    2020-01-13 22:23:51 0048 client_substanceabuseassessm:
    2020-01-13 22:23:51 0049   SELECT * FROM qlik_sclient_substanceabuseassessm
    2020-01-13 22:23:52      	8 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, 
    2020-01-13 22:23:52      2,232 lines fetched
    2020-01-13 22:23:52 0051 CustomEndFieldCheck:
    2020-01-13 22:23:52 0052   SELECT *
    2020-01-13 22:23:52 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabuseassessend_1'
    2020-01-13 22:23:52      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:52      0 lines fetched
    2020-01-13 22:23:52 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabuseassessend_1','substanceabuseassessmenddate')
    2020-01-13 22:23:52 0059 client_substanceabuseassessm_entry:
    2020-01-13 22:23:52 0060   Noconcatenate
    2020-01-13 22:23:52 0061   LOAD DISTINCT
    2020-01-13 22:23:52 0062   *,
    2020-01-13 22:23:52 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:52 0064   recordset_id AS 'client_SUBSTANCEABUSEASSESSMRECORDSET_ID_entry'
    2020-01-13 22:23:52 0065   RESIDENT client_substanceabuseassessm
    2020-01-13 22:23:52      	10 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, %entry_recordset_id, client_SUBSTANCEABUSEASSESSMRECORDSET_ID_entry, 
    2020-01-13 22:23:52      2,232 lines fetched
    2020-01-13 22:23:52 0068 RS_Entry:
    2020-01-13 22:23:52 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:52 0070   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:23:52 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:52 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:52 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:52 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:52 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:52 0076   WHERE
    2020-01-13 22:23:52 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:52 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:52 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:52 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:52 0081    AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:23:52 0082                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceabuseassessmenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:52 0083   UNION
    2020-01-13 22:23:52 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:52 0085   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:23:52 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:52 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:52 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:52 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:52 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:52 0091   WHERE 
    2020-01-13 22:23:52 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:52 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:52 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:52 0095   AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:23:52 0096                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceabuseassessmenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))))))
    2020-01-13 22:23:53      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:53      260 lines fetched
    2020-01-13 22:23:53 0100 RS_Entry_Explicit:
    2020-01-13 22:23:53 0101   Noconcatenate
    2020-01-13 22:23:53 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:53 0103   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:23:53 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:53 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:53 0106   WHERE 
    2020-01-13 22:23:53 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:53 0108   AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:53 0109   AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:23:53 0110                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:53 0111 				   AND ((ft.substanceabuseassessmenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:53 0112 				   OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))))))
    2020-01-13 22:23:53      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:53      1,396 lines fetched
    2020-01-13 22:23:53 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:53 0116   LOAD
    2020-01-13 22:23:53 0117   entry_exit_id, 
    2020-01-13 22:23:53 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:53 0119   question_id as %entryquestionid,
    2020-01-13 22:23:53 0120   provider_creating_id
    2020-01-13 22:23:53 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:53      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:53      1,368,472 lines fetched
    2020-01-13 22:23:53 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:53 0129 INNER JOIN(client_substanceabuseassessm_entry)
    2020-01-13 22:23:53 0130   LOAD DISTINCT
    2020-01-13 22:23:53 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:53 0132   recordset_id,
    2020-01-13 22:23:53 0133   provider_creating_id AS [client_SUBSTANCEABUSEASSESSM_Provider_Creating_Entry],
    2020-01-13 22:23:53 0134   name AS [client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Entry],
    2020-01-13 22:23:53 0135   user_creating_id AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Entry],
    2020-01-13 22:23:53 0136   user_name AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Entry]
    2020-01-13 22:23:53 0137   RESIDENT RS_Entry
    2020-01-13 22:23:53      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEABUSEASSESSM_Provider_Creating_Entry, client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Entry, client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Entry, client_SUBSTANCEABUSEASSESSM_User_Created_By_Entry, 
    2020-01-13 22:23:53      260 lines fetched
    2020-01-13 22:23:53      Joining/Keeping
    2020-01-13 22:23:53 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:53 0141 DROP FIELDS client_id FROM client_substanceabuseassessm_entry
    2020-01-13 22:23:53 0142 DROP FIELDS recordset_id FROM client_substanceabuseassessm_entry
    2020-01-13 22:23:53 0143 DROP FIELDS [Entry Exit Id] FROM client_substanceabuseassessm_entry
    2020-01-13 22:23:53 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:53 0147   Mapping SQL
    2020-01-13 22:23:53 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:53 0149     FROM da_question dq
    2020-01-13 22:23:53 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0151     WHERE
    2020-01-13 22:23:53 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:53 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:53 0155     UNION
    2020-01-13 22:23:53 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:53 0157     FROM da_question dq
    2020-01-13 22:23:53 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0159     WHERE
    2020-01-13 22:23:53 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:53 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:53 0163      UNION
    2020-01-13 22:23:53 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:53 0165     FROM da_question dq
    2020-01-13 22:23:53 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0167     WHERE
    2020-01-13 22:23:53 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:53 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:53 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:53 0172     UNION
    2020-01-13 22:23:53 0173 
    2020-01-13 22:23:53 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:53 0175     FROM da_question dq
    2020-01-13 22:23:53 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0177     WHERE
    2020-01-13 22:23:53 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:53 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:53 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:53 0182     UNION   
    2020-01-13 22:23:53 0183     SELECT
    2020-01-13 22:23:53 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:53 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:53 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:53 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:53 0188     FROM da_question dq
    2020-01-13 22:23:53 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0190     WHERE
    2020-01-13 22:23:53 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:53 0193     UNION
    2020-01-13 22:23:53 0194 	SELECT
    2020-01-13 22:23:53 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:53 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:53 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:53 0198     FROM da_question dq
    2020-01-13 22:23:53 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:53 0200     WHERE
    2020-01-13 22:23:53 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:53 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:54      1,304 lines fetched
    2020-01-13 22:23:54 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:54 0205 DROP TABLE client_substanceabuseassessm
    2020-01-13 22:23:54 0207 LET varStepName='STEPENTRY_' & 38 & '_of_' & 50
    2020-01-13 22:23:54 0208 STEPENTRY_38_of_50: select 1
    2020-01-13 22:23:54      	1 fields found: ?column?, 
    2020-01-13 22:23:54      1 lines fetched
    2020-01-13 22:23:54 0209 DROP TABLE STEPENTRY_38_of_50
    2020-01-13 22:23:54 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:54 0212 NEXT
    2020-01-13 22:23:54 0037 LET varRecordSetTableName=Peek('sp_table_name',39,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:54 0038 LET varRecordSetQlikName=Peek('qlik_table_name',39,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:54 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',39,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:54 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabusetreatment') <= 20),'substanceabusetreatment' & 'end_1',left('substanceabusetreatment', 20)& 'end_1')
    2020-01-13 22:23:54 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabusetreatment' & 'enddate'
    2020-01-13 22:23:54 0042 LET varRecordSetQlikName_Entry= 'client_substanceabusetreatment' & '_entry'
    2020-01-13 22:23:54 0043 LET varRecordSetQlikName_Exit='client_substanceabusetreatment'& '_exit'
    2020-01-13 22:23:54 0045 LET varRecordSetQlikName_Interim='client_substanceabusetreatment' & '_review'
    2020-01-13 22:23:54 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_substanceabusetreatment', (len('client_substanceabusetreatment'))-7))
    2020-01-13 22:23:54 0048 client_substanceabusetreatment:
    2020-01-13 22:23:54 0049   SELECT * FROM qlik_sclient_substanceabusetreatment
    2020-01-13 22:23:54      	6 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, 
    2020-01-13 22:23:54      2,102 lines fetched
    2020-01-13 22:23:54 0051 CustomEndFieldCheck:
    2020-01-13 22:23:54 0052   SELECT *
    2020-01-13 22:23:54 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabusetreatmend_1'
    2020-01-13 22:23:55      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:55      0 lines fetched
    2020-01-13 22:23:55 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabusetreatmend_1','substanceabusetreatmentenddate')
    2020-01-13 22:23:55 0059 client_substanceabusetreatment_entry:
    2020-01-13 22:23:55 0060   Noconcatenate
    2020-01-13 22:23:55 0061   LOAD DISTINCT
    2020-01-13 22:23:55 0062   *,
    2020-01-13 22:23:55 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:55 0064   recordset_id AS 'client_SUBSTANCEABUSETREATMENTRECORDSET_ID_entry'
    2020-01-13 22:23:55 0065   RESIDENT client_substanceabusetreatment
    2020-01-13 22:23:55      	8 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, %entry_recordset_id, client_SUBSTANCEABUSETREATMENTRECORDSET_ID_entry, 
    2020-01-13 22:23:55      2,102 lines fetched
    2020-01-13 22:23:55 0068 RS_Entry:
    2020-01-13 22:23:55 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:55 0070   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:23:55 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:55 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:55 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:55 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:55 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:55 0076   WHERE
    2020-01-13 22:23:55 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:55 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:55 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:55 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:55 0081    AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:23:55 0082                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceabusetreatmentenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:55 0083   UNION
    2020-01-13 22:23:55 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:55 0085   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:23:55 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:55 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:55 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:55 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:55 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:55 0091   WHERE 
    2020-01-13 22:23:55 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:55 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:55 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:55 0095   AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:23:55 0096                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceabusetreatmentenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))))))
    2020-01-13 22:23:55      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:55      193 lines fetched
    2020-01-13 22:23:55 0100 RS_Entry_Explicit:
    2020-01-13 22:23:55 0101   Noconcatenate
    2020-01-13 22:23:55 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:55 0103   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:23:55 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:55 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:55 0106   WHERE 
    2020-01-13 22:23:55 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:55 0108   AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:55 0109   AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:23:55 0110                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:55 0111 				   AND ((ft.substanceabusetreatmentenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:55 0112 				   OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))))))
    2020-01-13 22:23:56      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:56      702 lines fetched
    2020-01-13 22:23:56 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:56 0116   LOAD
    2020-01-13 22:23:56 0117   entry_exit_id, 
    2020-01-13 22:23:56 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:56 0119   question_id as %entryquestionid,
    2020-01-13 22:23:56 0120   provider_creating_id
    2020-01-13 22:23:56 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:56      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:56      1,369,174 lines fetched
    2020-01-13 22:23:56 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:56 0129 INNER JOIN(client_substanceabusetreatment_entry)
    2020-01-13 22:23:56 0130   LOAD DISTINCT
    2020-01-13 22:23:56 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:56 0132   recordset_id,
    2020-01-13 22:23:56 0133   provider_creating_id AS [client_SUBSTANCEABUSETREATMENT_Provider_Creating_Entry],
    2020-01-13 22:23:56 0134   name AS [client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Entry],
    2020-01-13 22:23:56 0135   user_creating_id AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Entry],
    2020-01-13 22:23:56 0136   user_name AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Entry]
    2020-01-13 22:23:56 0137   RESIDENT RS_Entry
    2020-01-13 22:23:56      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEABUSETREATMENT_Provider_Creating_Entry, client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Entry, client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Entry, client_SUBSTANCEABUSETREATMENT_User_Created_By_Entry, 
    2020-01-13 22:23:56      193 lines fetched
    2020-01-13 22:23:56      Joining/Keeping
    2020-01-13 22:23:56 0139 DROP TABLE RS_Entry
    2020-01-13 22:23:56 0141 DROP FIELDS client_id FROM client_substanceabusetreatment_entry
    2020-01-13 22:23:56 0142 DROP FIELDS recordset_id FROM client_substanceabusetreatment_entry
    2020-01-13 22:23:56 0143 DROP FIELDS [Entry Exit Id] FROM client_substanceabusetreatment_entry
    2020-01-13 22:23:56 0146 FieldMapSaClientEntry:
    2020-01-13 22:23:56 0147   Mapping SQL
    2020-01-13 22:23:56 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:56 0149     FROM da_question dq
    2020-01-13 22:23:56 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0151     WHERE
    2020-01-13 22:23:56 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:23:56 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:23:56 0155     UNION
    2020-01-13 22:23:56 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:56 0157     FROM da_question dq
    2020-01-13 22:23:56 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0159     WHERE
    2020-01-13 22:23:56 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:23:56 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:23:56 0163      UNION
    2020-01-13 22:23:56 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:23:56 0165     FROM da_question dq
    2020-01-13 22:23:56 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0167     WHERE
    2020-01-13 22:23:56 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:23:56 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:23:56 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:56 0172     UNION
    2020-01-13 22:23:56 0173 
    2020-01-13 22:23:56 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:23:56 0175     FROM da_question dq
    2020-01-13 22:23:56 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0177     WHERE
    2020-01-13 22:23:56 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:23:56 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:23:56 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:23:56 0182     UNION   
    2020-01-13 22:23:56 0183     SELECT
    2020-01-13 22:23:56 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:23:56 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:56 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:56 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:23:56 0188     FROM da_question dq
    2020-01-13 22:23:56 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0190     WHERE
    2020-01-13 22:23:56 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:56 0193     UNION
    2020-01-13 22:23:56 0194 	SELECT
    2020-01-13 22:23:56 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:56 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:23:56 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:23:56 0198     FROM da_question dq
    2020-01-13 22:23:56 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:23:56 0200     WHERE
    2020-01-13 22:23:56 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:23:56 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:23:56      	2 fields found: oldnames, newnames, 
    2020-01-13 22:23:56      1,304 lines fetched
    2020-01-13 22:23:56 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:23:56 0205 DROP TABLE client_substanceabusetreatment
    2020-01-13 22:23:56 0207 LET varStepName='STEPENTRY_' & 39 & '_of_' & 50
    2020-01-13 22:23:56 0208 STEPENTRY_39_of_50: select 1
    2020-01-13 22:23:57      	1 fields found: ?column?, 
    2020-01-13 22:23:57      1 lines fetched
    2020-01-13 22:23:57 0209 DROP TABLE STEPENTRY_39_of_50
    2020-01-13 22:23:57 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:23:57 0212 NEXT
    2020-01-13 22:23:57 0037 LET varRecordSetTableName=Peek('sp_table_name',40,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:57 0038 LET varRecordSetQlikName=Peek('qlik_table_name',40,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:57 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',40,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:23:57 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceusage') <= 20),'substanceusage' & 'end_1',left('substanceusage', 20)& 'end_1')
    2020-01-13 22:23:57 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceusage' & 'enddate'
    2020-01-13 22:23:57 0042 LET varRecordSetQlikName_Entry= 'client_substanceusage' & '_entry'
    2020-01-13 22:23:57 0043 LET varRecordSetQlikName_Exit='client_substanceusage'& '_exit'
    2020-01-13 22:23:57 0045 LET varRecordSetQlikName_Interim='client_substanceusage' & '_review'
    2020-01-13 22:23:57 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_substanceusage', (len('client_substanceusage'))-7))
    2020-01-13 22:23:57 0048 client_substanceusage:
    2020-01-13 22:23:57 0049   SELECT * FROM qlik_sclient_substanceusage
    2020-01-13 22:23:58      	8 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, 
    2020-01-13 22:23:58      2,463 lines fetched
    2020-01-13 22:23:58 0051 CustomEndFieldCheck:
    2020-01-13 22:23:58 0052   SELECT *
    2020-01-13 22:23:58 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceusageend_1'
    2020-01-13 22:23:58      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:23:58      0 lines fetched
    2020-01-13 22:23:58 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceusageend_1','substanceusageenddate')
    2020-01-13 22:23:58 0059 client_substanceusage_entry:
    2020-01-13 22:23:58 0060   Noconcatenate
    2020-01-13 22:23:58 0061   LOAD DISTINCT
    2020-01-13 22:23:58 0062   *,
    2020-01-13 22:23:58 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:23:58 0064   recordset_id AS 'client_SUBSTANCEUSAGERECORDSET_ID_entry'
    2020-01-13 22:23:58 0065   RESIDENT client_substanceusage
    2020-01-13 22:23:58      	10 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, %entry_recordset_id, client_SUBSTANCEUSAGERECORDSET_ID_entry, 
    2020-01-13 22:23:58      2,463 lines fetched
    2020-01-13 22:23:58 0068 RS_Entry:
    2020-01-13 22:23:58 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:58 0070   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:23:58 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:58 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:58 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:58 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:58 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:23:58 0076   WHERE
    2020-01-13 22:23:58 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:23:58 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:58 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:58 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:23:58 0081    AND ((((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:23:58 0082                    OR (((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceusageenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceusageenddate::DATE >= date(now()))))))				   
    2020-01-13 22:23:58 0083   UNION
    2020-01-13 22:23:58 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:23:58 0085   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:23:58 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:58 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:23:58 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:23:58 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:58 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:23:58 0091   WHERE 
    2020-01-13 22:23:58 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:23:58 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:58 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:23:58 0095   AND ((((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:23:58 0096                    OR (((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) AND ((ft.substanceusageenddate::DATE >= ee.entry_date::DATE) OR ((ft.substanceusageenddate::DATE >= date(now()))))))
    2020-01-13 22:23:59      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:23:59      383 lines fetched
    2020-01-13 22:23:59 0100 RS_Entry_Explicit:
    2020-01-13 22:23:59 0101   Noconcatenate
    2020-01-13 22:23:59 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:23:59 0103   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:23:59 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:23:59 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:23:59 0106   WHERE 
    2020-01-13 22:23:59 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:23:59 0108   AND ((((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:59 0109   AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:23:59 0110                    OR (((ft.substanceusagestartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:23:59 0111 				   AND ((ft.substanceusageenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:23:59 0112 				   OR ((ft.substanceusageenddate::DATE >= date(now()))))))
    2020-01-13 22:23:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:23:59      1,204 lines fetched
    2020-01-13 22:23:59 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:23:59 0116   LOAD
    2020-01-13 22:23:59 0117   entry_exit_id, 
    2020-01-13 22:23:59 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:23:59 0119   question_id as %entryquestionid,
    2020-01-13 22:23:59 0120   provider_creating_id
    2020-01-13 22:23:59 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:23:59      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:23:59      1,370,378 lines fetched
    2020-01-13 22:23:59 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:23:59 0129 INNER JOIN(client_substanceusage_entry)
    2020-01-13 22:23:59 0130   LOAD DISTINCT
    2020-01-13 22:23:59 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:23:59 0132   recordset_id,
    2020-01-13 22:23:59 0133   provider_creating_id AS [client_SUBSTANCEUSAGE_Provider_Creating_Entry],
    2020-01-13 22:23:59 0134   name AS [client_SUBSTANCEUSAGE_Provider_Name_Creating_Entry],
    2020-01-13 22:23:59 0135   user_creating_id AS [client_SUBSTANCEUSAGE_User_Created_By_Id_Entry],
    2020-01-13 22:23:59 0136   user_name AS [client_SUBSTANCEUSAGE_User_Created_By_Entry]
    2020-01-13 22:23:59 0137   RESIDENT RS_Entry
    2020-01-13 22:23:59      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEUSAGE_Provider_Creating_Entry, client_SUBSTANCEUSAGE_Provider_Name_Creating_Entry, client_SUBSTANCEUSAGE_User_Created_By_Id_Entry, client_SUBSTANCEUSAGE_User_Created_By_Entry, 
    2020-01-13 22:23:59      383 lines fetched
    2020-01-13 22:23:59      Joining/Keeping
    2020-01-13 22:24:00 0139 DROP TABLE RS_Entry
    2020-01-13 22:24:00 0141 DROP FIELDS client_id FROM client_substanceusage_entry
    2020-01-13 22:24:00 0142 DROP FIELDS recordset_id FROM client_substanceusage_entry
    2020-01-13 22:24:00 0143 DROP FIELDS [Entry Exit Id] FROM client_substanceusage_entry
    2020-01-13 22:24:00 0146 FieldMapSaClientEntry:
    2020-01-13 22:24:00 0147   Mapping SQL
    2020-01-13 22:24:00 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:24:00 0149     FROM da_question dq
    2020-01-13 22:24:00 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0151     WHERE
    2020-01-13 22:24:00 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:24:00 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:24:00 0155     UNION
    2020-01-13 22:24:00 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:24:00 0157     FROM da_question dq
    2020-01-13 22:24:00 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0159     WHERE
    2020-01-13 22:24:00 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:24:00 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:24:00 0163      UNION
    2020-01-13 22:24:00 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:24:00 0165     FROM da_question dq
    2020-01-13 22:24:00 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0167     WHERE
    2020-01-13 22:24:00 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:24:00 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:24:00 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:24:00 0172     UNION
    2020-01-13 22:24:00 0173 
    2020-01-13 22:24:00 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:24:00 0175     FROM da_question dq
    2020-01-13 22:24:00 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0177     WHERE
    2020-01-13 22:24:00 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:24:00 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:24:00 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:24:00 0182     UNION   
    2020-01-13 22:24:00 0183     SELECT
    2020-01-13 22:24:00 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:24:00 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:00 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:00 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:24:00 0188     FROM da_question dq
    2020-01-13 22:24:00 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0190     WHERE
    2020-01-13 22:24:00 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:24:00 0193     UNION
    2020-01-13 22:24:00 0194 	SELECT
    2020-01-13 22:24:00 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:00 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:00 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:24:00 0198     FROM da_question dq
    2020-01-13 22:24:00 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:00 0200     WHERE
    2020-01-13 22:24:00 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:00 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:24:00      	2 fields found: oldnames, newnames, 
    2020-01-13 22:24:00      1,304 lines fetched
    2020-01-13 22:24:00 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:24:00 0205 DROP TABLE client_substanceusage
    2020-01-13 22:24:00 0207 LET varStepName='STEPENTRY_' & 40 & '_of_' & 50
    2020-01-13 22:24:00 0208 STEPENTRY_40_of_50: select 1
    2020-01-13 22:24:00      	1 fields found: ?column?, 
    2020-01-13 22:24:00      1 lines fetched
    2020-01-13 22:24:00 0209 DROP TABLE STEPENTRY_40_of_50
    2020-01-13 22:24:00 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:24:00 0212 NEXT
    2020-01-13 22:24:00 0037 LET varRecordSetTableName=Peek('sp_table_name',41,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:00 0038 LET varRecordSetQlikName=Peek('qlik_table_name',41,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:00 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',41,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:00 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_hud_currentlivingsituation') <= 20),'svp_hud_currentlivingsituation' & 'end_1',left('svp_hud_currentlivingsituation', 20)& 'end_1')
    2020-01-13 22:24:00 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_hud_currentlivingsituation' & 'enddate'
    2020-01-13 22:24:00 0042 LET varRecordSetQlikName_Entry= 'client_svp_hud_currentlivingsituation' & '_entry'
    2020-01-13 22:24:00 0043 LET varRecordSetQlikName_Exit='client_svp_hud_currentlivingsituation'& '_exit'
    2020-01-13 22:24:00 0045 LET varRecordSetQlikName_Interim='client_svp_hud_currentlivingsituation' & '_review'
    2020-01-13 22:24:00 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svp_hud_currentlivingsituation', (len('client_svp_hud_currentlivingsituation'))-7))
    2020-01-13 22:24:00 0048 client_svp_hud_currentlivingsituation:
    2020-01-13 22:24:00 0049   SELECT * FROM qlik_sclient_svp_hud_currentlivingsituation
    2020-01-13 22:24:02      	14 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, 
    2020-01-13 22:24:02      9,421 lines fetched
    2020-01-13 22:24:02 0051 CustomEndFieldCheck:
    2020-01-13 22:24:02 0052   SELECT *
    2020-01-13 22:24:02 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_hud_currentlivinend_1'
    2020-01-13 22:24:02      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:24:02      0 lines fetched
    2020-01-13 22:24:02 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_hud_currentlivinend_1','svp_hud_currentlivingsituationenddate')
    2020-01-13 22:24:02 0059 client_svp_hud_currentlivingsituation_entry:
    2020-01-13 22:24:02 0060   Noconcatenate
    2020-01-13 22:24:02 0061   LOAD DISTINCT
    2020-01-13 22:24:02 0062   *,
    2020-01-13 22:24:02 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:24:02 0064   recordset_id AS 'client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_entry'
    2020-01-13 22:24:02 0065   RESIDENT client_svp_hud_currentlivingsituation
    2020-01-13 22:24:02      	16 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, %entry_recordset_id, client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_entry, 
    2020-01-13 22:24:02      9,421 lines fetched
    2020-01-13 22:24:02 0068 RS_Entry:
    2020-01-13 22:24:02 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:24:02 0070   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:24:02 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:24:02 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:24:02 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:24:02 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:24:02 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:24:02 0076   WHERE
    2020-01-13 22:24:02 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:24:02 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:02 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:02 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:24:02 0081    AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:24:02 0082                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))))))				   
    2020-01-13 22:24:02 0083   UNION
    2020-01-13 22:24:02 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:24:02 0085   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:24:02 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:24:02 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:24:02 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:24:02 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:24:02 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:24:02 0091   WHERE 
    2020-01-13 22:24:02 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:24:02 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:02 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:24:02 0095   AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:24:02 0096                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))))))
    2020-01-13 22:24:05      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:24:05      4,757 lines fetched
    2020-01-13 22:24:05 0100 RS_Entry_Explicit:
    2020-01-13 22:24:05 0101   Noconcatenate
    2020-01-13 22:24:05 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:24:05 0103   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:24:05 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:24:05 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:24:05 0106   WHERE 
    2020-01-13 22:24:05 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:05 0108   AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:24:05 0109   AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:24:05 0110                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:24:05 0111 				   AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:24:05 0112 				   OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))))))
    2020-01-13 22:24:06      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:24:06      8,076 lines fetched
    2020-01-13 22:24:06 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:24:06 0116   LOAD
    2020-01-13 22:24:06 0117   entry_exit_id, 
    2020-01-13 22:24:06 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:24:06 0119   question_id as %entryquestionid,
    2020-01-13 22:24:06 0120   provider_creating_id
    2020-01-13 22:24:06 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:24:06      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:24:06      1,378,454 lines fetched
    2020-01-13 22:24:06 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:24:06 0129 INNER JOIN(client_svp_hud_currentlivingsituation_entry)
    2020-01-13 22:24:06 0130   LOAD DISTINCT
    2020-01-13 22:24:06 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:24:06 0132   recordset_id,
    2020-01-13 22:24:06 0133   provider_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Entry],
    2020-01-13 22:24:06 0134   name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Entry],
    2020-01-13 22:24:06 0135   user_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Entry],
    2020-01-13 22:24:06 0136   user_name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Entry]
    2020-01-13 22:24:06 0137   RESIDENT RS_Entry
    2020-01-13 22:24:06      	6 fields found: Entry Exit Id, recordset_id, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Entry, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Entry, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Entry, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Entry, 
    2020-01-13 22:24:06      4,757 lines fetched
    2020-01-13 22:24:06      Joining/Keeping
    2020-01-13 22:24:07 0139 DROP TABLE RS_Entry
    2020-01-13 22:24:07 0141 DROP FIELDS client_id FROM client_svp_hud_currentlivingsituation_entry
    2020-01-13 22:24:07 0142 DROP FIELDS recordset_id FROM client_svp_hud_currentlivingsituation_entry
    2020-01-13 22:24:07 0143 DROP FIELDS [Entry Exit Id] FROM client_svp_hud_currentlivingsituation_entry
    2020-01-13 22:24:07 0146 FieldMapSaClientEntry:
    2020-01-13 22:24:07 0147   Mapping SQL
    2020-01-13 22:24:07 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:24:07 0149     FROM da_question dq
    2020-01-13 22:24:07 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0151     WHERE
    2020-01-13 22:24:07 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:24:07 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:24:07 0155     UNION
    2020-01-13 22:24:07 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:24:07 0157     FROM da_question dq
    2020-01-13 22:24:07 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0159     WHERE
    2020-01-13 22:24:07 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:24:07 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:24:07 0163      UNION
    2020-01-13 22:24:07 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:24:07 0165     FROM da_question dq
    2020-01-13 22:24:07 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0167     WHERE
    2020-01-13 22:24:07 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:24:07 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:24:07 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:24:07 0172     UNION
    2020-01-13 22:24:07 0173 
    2020-01-13 22:24:07 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:24:07 0175     FROM da_question dq
    2020-01-13 22:24:07 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0177     WHERE
    2020-01-13 22:24:07 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:24:07 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:24:07 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:24:07 0182     UNION   
    2020-01-13 22:24:07 0183     SELECT
    2020-01-13 22:24:07 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:24:07 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:07 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:07 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:24:07 0188     FROM da_question dq
    2020-01-13 22:24:07 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0190     WHERE
    2020-01-13 22:24:07 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:24:07 0193     UNION
    2020-01-13 22:24:07 0194 	SELECT
    2020-01-13 22:24:07 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:07 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:24:07 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:24:07 0198     FROM da_question dq
    2020-01-13 22:24:07 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:24:07 0200     WHERE
    2020-01-13 22:24:07 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:24:07 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:24:07      	2 fields found: oldnames, newnames, 
    2020-01-13 22:24:07      1,304 lines fetched
    2020-01-13 22:24:07 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:24:07 0205 DROP TABLE client_svp_hud_currentlivingsituation
    2020-01-13 22:24:07 0207 LET varStepName='STEPENTRY_' & 41 & '_of_' & 50
    2020-01-13 22:24:07 0208 STEPENTRY_41_of_50: select 1
    2020-01-13 22:24:07      	1 fields found: ?column?, 
    2020-01-13 22:24:07      1 lines fetched
    2020-01-13 22:24:07 0209 DROP TABLE STEPENTRY_41_of_50
    2020-01-13 22:24:07 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:24:07 0212 NEXT
    2020-01-13 22:24:07 0037 LET varRecordSetTableName=Peek('sp_table_name',42,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:07 0038 LET varRecordSetQlikName=Peek('qlik_table_name',42,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:07 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',42,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:24:07 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_noncashbenefits') <= 20),'svp_noncashbenefits' & 'end_1',left('svp_noncashbenefits', 20)& 'end_1')
    2020-01-13 22:24:07 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_noncashbenefits' & 'enddate'
    2020-01-13 22:24:07 0042 LET varRecordSetQlikName_Entry= 'client_svp_noncashbenefits' & '_entry'
    2020-01-13 22:24:07 0043 LET varRecordSetQlikName_Exit='client_svp_noncashbenefits'& '_exit'
    2020-01-13 22:24:07 0045 LET varRecordSetQlikName_Interim='client_svp_noncashbenefits' & '_review'
    2020-01-13 22:24:07 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svp_noncashbenefits', (len('client_svp_noncashbenefits'))-7))
    2020-01-13 22:24:07 0048 client_svp_noncashbenefits:
    2020-01-13 22:24:07 0049   SELECT * FROM qlik_sclient_svp_noncashbenefits
    2020-01-13 22:24:41      	9 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, 
    2020-01-13 22:24:41      454,272 lines fetched
    2020-01-13 22:24:41 0051 CustomEndFieldCheck:
    2020-01-13 22:24:41 0052   SELECT *
    2020-01-13 22:24:41 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_noncashbenefitsend_1'
    2020-01-13 22:24:41      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:24:41      0 lines fetched
    2020-01-13 22:24:41 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_noncashbenefitsend_1','svp_noncashbenefitsenddate')
    2020-01-13 22:24:41 0059 client_svp_noncashbenefits_entry:
    2020-01-13 22:24:41 0060   Noconcatenate
    2020-01-13 22:24:41 0061   LOAD DISTINCT
    2020-01-13 22:24:41 0062   *,
    2020-01-13 22:24:41 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:24:41 0064   recordset_id AS 'client_SVP_NONCASHBENEFITSRECORDSET_ID_entry'
    2020-01-13 22:24:41 0065   RESIDENT client_svp_noncashbenefits
    2020-01-13 22:24:42      	11 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, %entry_recordset_id, client_SVP_NONCASHBENEFITSRECORDSET_ID_entry, 
    2020-01-13 22:24:42      454,272 lines fetched
    2020-01-13 22:24:42 0068 RS_Entry:
    2020-01-13 22:24:42 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:24:42 0070   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:24:42 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:24:42 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:24:42 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:24:42 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:24:42 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:24:42 0076   WHERE
    2020-01-13 22:24:42 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:24:42 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:42 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:42 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:24:42 0081    AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:24:42 0082                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))))))				   
    2020-01-13 22:24:42 0083   UNION
    2020-01-13 22:24:42 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:24:42 0085   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:24:42 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:24:42 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:24:42 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:24:42 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:24:42 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:24:42 0091   WHERE 
    2020-01-13 22:24:42 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:24:42 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:24:42 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:24:42 0095   AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:24:42 0096                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))))))
    2020-01-13 22:25:32      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:25:32      159,437 lines fetched
    2020-01-13 22:25:32 0100 RS_Entry_Explicit:
    2020-01-13 22:25:32 0101   Noconcatenate
    2020-01-13 22:25:32 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:25:32 0103   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:25:32 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:25:32 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:25:32 0106   WHERE 
    2020-01-13 22:25:32 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:25:32 0108   AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:25:32 0109   AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:25:32 0110                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:25:32 0111 				   AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:25:32 0112 				   OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))))))
    2020-01-13 22:25:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:25:59      263,525 lines fetched
    2020-01-13 22:25:59 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:25:59 0116   LOAD
    2020-01-13 22:25:59 0117   entry_exit_id, 
    2020-01-13 22:25:59 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:25:59 0119   question_id as %entryquestionid,
    2020-01-13 22:25:59 0120   provider_creating_id
    2020-01-13 22:25:59 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:00      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:00      1,641,979 lines fetched
    2020-01-13 22:26:00 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:00 0129 INNER JOIN(client_svp_noncashbenefits_entry)
    2020-01-13 22:26:00 0130   LOAD DISTINCT
    2020-01-13 22:26:00 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:00 0132   recordset_id,
    2020-01-13 22:26:00 0133   provider_creating_id AS [client_SVP_NONCASHBENEFITS_Provider_Creating_Entry],
    2020-01-13 22:26:00 0134   name AS [client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Entry],
    2020-01-13 22:26:00 0135   user_creating_id AS [client_SVP_NONCASHBENEFITS_User_Created_By_Id_Entry],
    2020-01-13 22:26:00 0136   user_name AS [client_SVP_NONCASHBENEFITS_User_Created_By_Entry]
    2020-01-13 22:26:00 0137   RESIDENT RS_Entry
    2020-01-13 22:26:01      	6 fields found: Entry Exit Id, recordset_id, client_SVP_NONCASHBENEFITS_Provider_Creating_Entry, client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Entry, client_SVP_NONCASHBENEFITS_User_Created_By_Id_Entry, client_SVP_NONCASHBENEFITS_User_Created_By_Entry, 
    2020-01-13 22:26:01      159,437 lines fetched
    2020-01-13 22:26:01      Joining/Keeping
    2020-01-13 22:26:02 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:02 0141 DROP FIELDS client_id FROM client_svp_noncashbenefits_entry
    2020-01-13 22:26:02 0142 DROP FIELDS recordset_id FROM client_svp_noncashbenefits_entry
    2020-01-13 22:26:02 0143 DROP FIELDS [Entry Exit Id] FROM client_svp_noncashbenefits_entry
    2020-01-13 22:26:02 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:02 0147   Mapping SQL
    2020-01-13 22:26:02 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:02 0149     FROM da_question dq
    2020-01-13 22:26:02 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0151     WHERE
    2020-01-13 22:26:02 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:02 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:02 0155     UNION
    2020-01-13 22:26:02 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:02 0157     FROM da_question dq
    2020-01-13 22:26:02 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0159     WHERE
    2020-01-13 22:26:02 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:02 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:02 0163      UNION
    2020-01-13 22:26:02 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:02 0165     FROM da_question dq
    2020-01-13 22:26:02 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0167     WHERE
    2020-01-13 22:26:02 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:02 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:02 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:02 0172     UNION
    2020-01-13 22:26:02 0173 
    2020-01-13 22:26:02 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:02 0175     FROM da_question dq
    2020-01-13 22:26:02 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0177     WHERE
    2020-01-13 22:26:02 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:02 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:02 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:02 0182     UNION   
    2020-01-13 22:26:02 0183     SELECT
    2020-01-13 22:26:02 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:02 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:02 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:02 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:02 0188     FROM da_question dq
    2020-01-13 22:26:02 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0190     WHERE
    2020-01-13 22:26:02 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:02 0193     UNION
    2020-01-13 22:26:02 0194 	SELECT
    2020-01-13 22:26:02 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:02 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:02 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:02 0198     FROM da_question dq
    2020-01-13 22:26:02 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:02 0200     WHERE
    2020-01-13 22:26:02 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:02 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:02      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:02      1,304 lines fetched
    2020-01-13 22:26:02 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:02 0205 DROP TABLE client_svp_noncashbenefits
    2020-01-13 22:26:02 0207 LET varStepName='STEPENTRY_' & 42 & '_of_' & 50
    2020-01-13 22:26:02 0208 STEPENTRY_42_of_50: select 1
    2020-01-13 22:26:02      	1 fields found: ?column?, 
    2020-01-13 22:26:02      1 lines fetched
    2020-01-13 22:26:02 0209 DROP TABLE STEPENTRY_42_of_50
    2020-01-13 22:26:02 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:02 0212 NEXT
    2020-01-13 22:26:02 0037 LET varRecordSetTableName=Peek('sp_table_name',43,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:02 0038 LET varRecordSetQlikName=Peek('qlik_table_name',43,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:02 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',43,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:02 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_outreach') <= 20),'svp_outreach' & 'end_1',left('svp_outreach', 20)& 'end_1')
    2020-01-13 22:26:02 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_outreach' & 'enddate'
    2020-01-13 22:26:02 0042 LET varRecordSetQlikName_Entry= 'client_svp_outreach' & '_entry'
    2020-01-13 22:26:02 0043 LET varRecordSetQlikName_Exit='client_svp_outreach'& '_exit'
    2020-01-13 22:26:02 0045 LET varRecordSetQlikName_Interim='client_svp_outreach' & '_review'
    2020-01-13 22:26:02 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svp_outreach', (len('client_svp_outreach'))-7))
    2020-01-13 22:26:02 0048 client_svp_outreach:
    2020-01-13 22:26:02 0049   SELECT * FROM qlik_sclient_svp_outreach
    2020-01-13 22:26:03      	8 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, 
    2020-01-13 22:26:03      8,687 lines fetched
    2020-01-13 22:26:03 0051 CustomEndFieldCheck:
    2020-01-13 22:26:03 0052   SELECT *
    2020-01-13 22:26:03 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_outreachend_1'
    2020-01-13 22:26:03      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:03      0 lines fetched
    2020-01-13 22:26:03 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_outreachend_1','svp_outreachenddate')
    2020-01-13 22:26:03 0059 client_svp_outreach_entry:
    2020-01-13 22:26:03 0060   Noconcatenate
    2020-01-13 22:26:03 0061   LOAD DISTINCT
    2020-01-13 22:26:03 0062   *,
    2020-01-13 22:26:03 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:03 0064   recordset_id AS 'client_SVP_OUTREACHRECORDSET_ID_entry'
    2020-01-13 22:26:03 0065   RESIDENT client_svp_outreach
    2020-01-13 22:26:04      	10 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, %entry_recordset_id, client_SVP_OUTREACHRECORDSET_ID_entry, 
    2020-01-13 22:26:04      8,687 lines fetched
    2020-01-13 22:26:04 0068 RS_Entry:
    2020-01-13 22:26:04 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:04 0070   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:26:04 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:04 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:04 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:04 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:04 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:04 0076   WHERE
    2020-01-13 22:26:04 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:04 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:04 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:04 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:04 0081    AND ((((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:26:04 0082                    OR (((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_outreachenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_outreachenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:04 0083   UNION
    2020-01-13 22:26:04 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:04 0085   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:26:04 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:04 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:04 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:04 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:04 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:04 0091   WHERE 
    2020-01-13 22:26:04 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:04 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:04 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:04 0095   AND ((((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:26:04 0096                    OR (((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svp_outreachenddate::DATE >= ee.entry_date::DATE) OR ((ft.svp_outreachenddate::DATE >= date(now()))))))
    2020-01-13 22:26:05      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:05      4,415 lines fetched
    2020-01-13 22:26:05 0100 RS_Entry_Explicit:
    2020-01-13 22:26:05 0101   Noconcatenate
    2020-01-13 22:26:05 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:05 0103   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:26:05 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:05 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:05 0106   WHERE 
    2020-01-13 22:26:05 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:05 0108   AND ((((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:05 0109   AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:26:05 0110                    OR (((ft.svp_outreachstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:05 0111 				   AND ((ft.svp_outreachenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:05 0112 				   OR ((ft.svp_outreachenddate::DATE >= date(now()))))))
    2020-01-13 22:26:06      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:06      7,564 lines fetched
    2020-01-13 22:26:06 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:06 0116   LOAD
    2020-01-13 22:26:06 0117   entry_exit_id, 
    2020-01-13 22:26:06 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:06 0119   question_id as %entryquestionid,
    2020-01-13 22:26:06 0120   provider_creating_id
    2020-01-13 22:26:06 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:06      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:06      1,649,543 lines fetched
    2020-01-13 22:26:06 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:06 0129 INNER JOIN(client_svp_outreach_entry)
    2020-01-13 22:26:06 0130   LOAD DISTINCT
    2020-01-13 22:26:06 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:06 0132   recordset_id,
    2020-01-13 22:26:06 0133   provider_creating_id AS [client_SVP_OUTREACH_Provider_Creating_Entry],
    2020-01-13 22:26:06 0134   name AS [client_SVP_OUTREACH_Provider_Name_Creating_Entry],
    2020-01-13 22:26:06 0135   user_creating_id AS [client_SVP_OUTREACH_User_Created_By_Id_Entry],
    2020-01-13 22:26:06 0136   user_name AS [client_SVP_OUTREACH_User_Created_By_Entry]
    2020-01-13 22:26:06 0137   RESIDENT RS_Entry
    2020-01-13 22:26:06      	6 fields found: Entry Exit Id, recordset_id, client_SVP_OUTREACH_Provider_Creating_Entry, client_SVP_OUTREACH_Provider_Name_Creating_Entry, client_SVP_OUTREACH_User_Created_By_Id_Entry, client_SVP_OUTREACH_User_Created_By_Entry, 
    2020-01-13 22:26:06      4,415 lines fetched
    2020-01-13 22:26:06      Joining/Keeping
    2020-01-13 22:26:07 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:07 0141 DROP FIELDS client_id FROM client_svp_outreach_entry
    2020-01-13 22:26:07 0142 DROP FIELDS recordset_id FROM client_svp_outreach_entry
    2020-01-13 22:26:07 0143 DROP FIELDS [Entry Exit Id] FROM client_svp_outreach_entry
    2020-01-13 22:26:07 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:07 0147   Mapping SQL
    2020-01-13 22:26:07 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:07 0149     FROM da_question dq
    2020-01-13 22:26:07 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0151     WHERE
    2020-01-13 22:26:07 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:07 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:07 0155     UNION
    2020-01-13 22:26:07 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:07 0157     FROM da_question dq
    2020-01-13 22:26:07 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0159     WHERE
    2020-01-13 22:26:07 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:07 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:07 0163      UNION
    2020-01-13 22:26:07 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:07 0165     FROM da_question dq
    2020-01-13 22:26:07 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0167     WHERE
    2020-01-13 22:26:07 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:07 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:07 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:07 0172     UNION
    2020-01-13 22:26:07 0173 
    2020-01-13 22:26:07 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:07 0175     FROM da_question dq
    2020-01-13 22:26:07 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0177     WHERE
    2020-01-13 22:26:07 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:07 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:07 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:07 0182     UNION   
    2020-01-13 22:26:07 0183     SELECT
    2020-01-13 22:26:07 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:07 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:07 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:07 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:07 0188     FROM da_question dq
    2020-01-13 22:26:07 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0190     WHERE
    2020-01-13 22:26:07 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:07 0193     UNION
    2020-01-13 22:26:07 0194 	SELECT
    2020-01-13 22:26:07 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:07 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:07 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:07 0198     FROM da_question dq
    2020-01-13 22:26:07 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:07 0200     WHERE
    2020-01-13 22:26:07 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:07 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:07      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:07      1,304 lines fetched
    2020-01-13 22:26:07 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:07 0205 DROP TABLE client_svp_outreach
    2020-01-13 22:26:07 0207 LET varStepName='STEPENTRY_' & 43 & '_of_' & 50
    2020-01-13 22:26:07 0208 STEPENTRY_43_of_50: select 1
    2020-01-13 22:26:07      	1 fields found: ?column?, 
    2020-01-13 22:26:07      1 lines fetched
    2020-01-13 22:26:07 0209 DROP TABLE STEPENTRY_43_of_50
    2020-01-13 22:26:07 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:07 0212 NEXT
    2020-01-13 22:26:07 0037 LET varRecordSetTableName=Peek('sp_table_name',44,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:07 0038 LET varRecordSetQlikName=Peek('qlik_table_name',44,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:07 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',44,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:07 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svptayvispdatv1_0_suba') <= 20),'svptayvispdatv1_0_suba' & 'end_1',left('svptayvispdatv1_0_suba', 20)& 'end_1')
    2020-01-13 22:26:07 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svptayvispdatv1_0_suba' & 'enddate'
    2020-01-13 22:26:07 0042 LET varRecordSetQlikName_Entry= 'client_svptayvispdatv1_0_suba' & '_entry'
    2020-01-13 22:26:07 0043 LET varRecordSetQlikName_Exit='client_svptayvispdatv1_0_suba'& '_exit'
    2020-01-13 22:26:07 0045 LET varRecordSetQlikName_Interim='client_svptayvispdatv1_0_suba' & '_review'
    2020-01-13 22:26:07 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svptayvispdatv1_0_suba', (len('client_svptayvispdatv1_0_suba'))-7))
    2020-01-13 22:26:07 0048 client_svptayvispdatv1_0_suba:
    2020-01-13 22:26:07 0049   SELECT * FROM qlik_sclient_svptayvispdatv1_0_suba
    2020-01-13 22:26:08      	51 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, 
    2020-01-13 22:26:08      292 lines fetched
    2020-01-13 22:26:08 0051 CustomEndFieldCheck:
    2020-01-13 22:26:08 0052   SELECT *
    2020-01-13 22:26:08 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svptayvispdatv1_0_suend_1'
    2020-01-13 22:26:08      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:08      0 lines fetched
    2020-01-13 22:26:08 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svptayvispdatv1_0_suend_1','svptayvispdatv1_0_subaenddate')
    2020-01-13 22:26:08 0059 client_svptayvispdatv1_0_suba_entry:
    2020-01-13 22:26:08 0060   Noconcatenate
    2020-01-13 22:26:08 0061   LOAD DISTINCT
    2020-01-13 22:26:08 0062   *,
    2020-01-13 22:26:08 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:08 0064   recordset_id AS 'client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_entry'
    2020-01-13 22:26:08 0065   RESIDENT client_svptayvispdatv1_0_suba
    2020-01-13 22:26:08      	53 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, %entry_recordset_id, client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_entry, 
    2020-01-13 22:26:08      292 lines fetched
    2020-01-13 22:26:08 0068 RS_Entry:
    2020-01-13 22:26:08 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:08 0070   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:26:08 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:08 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:08 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:08 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:08 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:08 0076   WHERE
    2020-01-13 22:26:08 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:08 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:08 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:08 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:08 0081    AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:08 0082                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:08 0083   UNION
    2020-01-13 22:26:08 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:08 0085   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:26:08 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:08 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:08 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:08 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:08 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:08 0091   WHERE 
    2020-01-13 22:26:08 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:08 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:08 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:08 0095   AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:08 0096                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:09      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:09      229 lines fetched
    2020-01-13 22:26:09 0100 RS_Entry_Explicit:
    2020-01-13 22:26:09 0101   Noconcatenate
    2020-01-13 22:26:09 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:09 0103   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:26:09 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:09 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:09 0106   WHERE 
    2020-01-13 22:26:09 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:09 0108   AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:09 0109   AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:09 0110                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:09 0111 				   AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:09 0112 				   OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:09      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:09      367 lines fetched
    2020-01-13 22:26:09 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:09 0116   LOAD
    2020-01-13 22:26:09 0117   entry_exit_id, 
    2020-01-13 22:26:09 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:09 0119   question_id as %entryquestionid,
    2020-01-13 22:26:09 0120   provider_creating_id
    2020-01-13 22:26:09 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:09      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:09      1,649,910 lines fetched
    2020-01-13 22:26:09 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:09 0129 INNER JOIN(client_svptayvispdatv1_0_suba_entry)
    2020-01-13 22:26:09 0130   LOAD DISTINCT
    2020-01-13 22:26:09 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:09 0132   recordset_id,
    2020-01-13 22:26:09 0133   provider_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Entry],
    2020-01-13 22:26:09 0134   name AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Entry],
    2020-01-13 22:26:09 0135   user_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Entry],
    2020-01-13 22:26:09 0136   user_name AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Entry]
    2020-01-13 22:26:09 0137   RESIDENT RS_Entry
    2020-01-13 22:26:09      	6 fields found: Entry Exit Id, recordset_id, client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Entry, client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Entry, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Entry, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Entry, 
    2020-01-13 22:26:09      229 lines fetched
    2020-01-13 22:26:09      Joining/Keeping
    2020-01-13 22:26:10 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:10 0141 DROP FIELDS client_id FROM client_svptayvispdatv1_0_suba_entry
    2020-01-13 22:26:10 0142 DROP FIELDS recordset_id FROM client_svptayvispdatv1_0_suba_entry
    2020-01-13 22:26:10 0143 DROP FIELDS [Entry Exit Id] FROM client_svptayvispdatv1_0_suba_entry
    2020-01-13 22:26:10 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:10 0147   Mapping SQL
    2020-01-13 22:26:10 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:10 0149     FROM da_question dq
    2020-01-13 22:26:10 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0151     WHERE
    2020-01-13 22:26:10 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:10 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:10 0155     UNION
    2020-01-13 22:26:10 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:10 0157     FROM da_question dq
    2020-01-13 22:26:10 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0159     WHERE
    2020-01-13 22:26:10 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:10 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:10 0163      UNION
    2020-01-13 22:26:10 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:10 0165     FROM da_question dq
    2020-01-13 22:26:10 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0167     WHERE
    2020-01-13 22:26:10 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:10 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:10 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:10 0172     UNION
    2020-01-13 22:26:10 0173 
    2020-01-13 22:26:10 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:10 0175     FROM da_question dq
    2020-01-13 22:26:10 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0177     WHERE
    2020-01-13 22:26:10 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:10 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:10 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:10 0182     UNION   
    2020-01-13 22:26:10 0183     SELECT
    2020-01-13 22:26:10 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:10 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:10 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:10 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:10 0188     FROM da_question dq
    2020-01-13 22:26:10 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0190     WHERE
    2020-01-13 22:26:10 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:10 0193     UNION
    2020-01-13 22:26:10 0194 	SELECT
    2020-01-13 22:26:10 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:10 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:10 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:10 0198     FROM da_question dq
    2020-01-13 22:26:10 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:10 0200     WHERE
    2020-01-13 22:26:10 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:10 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:10      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:10      1,304 lines fetched
    2020-01-13 22:26:10 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:10 0205 DROP TABLE client_svptayvispdatv1_0_suba
    2020-01-13 22:26:10 0207 LET varStepName='STEPENTRY_' & 44 & '_of_' & 50
    2020-01-13 22:26:10 0208 STEPENTRY_44_of_50: select 1
    2020-01-13 22:26:10      	1 fields found: ?column?, 
    2020-01-13 22:26:10      1 lines fetched
    2020-01-13 22:26:10 0209 DROP TABLE STEPENTRY_44_of_50
    2020-01-13 22:26:10 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:10 0212 NEXT
    2020-01-13 22:26:10 0037 LET varRecordSetTableName=Peek('sp_table_name',45,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:10 0038 LET varRecordSetQlikName=Peek('qlik_table_name',45,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:10 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',45,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:10 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvifspdatv2_0_suba') <= 20),'svpvifspdatv2_0_suba' & 'end_1',left('svpvifspdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:26:10 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvifspdatv2_0_suba' & 'enddate'
    2020-01-13 22:26:10 0042 LET varRecordSetQlikName_Entry= 'client_svpvifspdatv2_0_suba' & '_entry'
    2020-01-13 22:26:10 0043 LET varRecordSetQlikName_Exit='client_svpvifspdatv2_0_suba'& '_exit'
    2020-01-13 22:26:10 0045 LET varRecordSetQlikName_Interim='client_svpvifspdatv2_0_suba' & '_review'
    2020-01-13 22:26:10 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svpvifspdatv2_0_suba', (len('client_svpvifspdatv2_0_suba'))-7))
    2020-01-13 22:26:10 0048 client_svpvifspdatv2_0_suba:
    2020-01-13 22:26:10 0049   SELECT * FROM qlik_sclient_svpvifspdatv2_0_suba
    2020-01-13 22:26:11      	65 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, 
    2020-01-13 22:26:11      849 lines fetched
    2020-01-13 22:26:11 0051 CustomEndFieldCheck:
    2020-01-13 22:26:11 0052   SELECT *
    2020-01-13 22:26:11 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvifspdatv2_0_subaend_1'
    2020-01-13 22:26:11      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:11      0 lines fetched
    2020-01-13 22:26:11 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvifspdatv2_0_subaend_1','svpvifspdatv2_0_subaenddate')
    2020-01-13 22:26:11 0059 client_svpvifspdatv2_0_suba_entry:
    2020-01-13 22:26:11 0060   Noconcatenate
    2020-01-13 22:26:11 0061   LOAD DISTINCT
    2020-01-13 22:26:11 0062   *,
    2020-01-13 22:26:11 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:11 0064   recordset_id AS 'client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_entry'
    2020-01-13 22:26:11 0065   RESIDENT client_svpvifspdatv2_0_suba
    2020-01-13 22:26:12      	67 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, %entry_recordset_id, client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_entry, 
    2020-01-13 22:26:12      849 lines fetched
    2020-01-13 22:26:12 0068 RS_Entry:
    2020-01-13 22:26:12 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:12 0070   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:26:12 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:12 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:12 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:12 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:12 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:12 0076   WHERE
    2020-01-13 22:26:12 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:12 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:12 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:12 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:12 0081    AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:12 0082                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:12 0083   UNION
    2020-01-13 22:26:12 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:12 0085   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:26:12 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:12 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:12 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:12 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:12 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:12 0091   WHERE 
    2020-01-13 22:26:12 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:12 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:12 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:12 0095   AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:12 0096                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:13      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:13      542 lines fetched
    2020-01-13 22:26:13 0100 RS_Entry_Explicit:
    2020-01-13 22:26:13 0101   Noconcatenate
    2020-01-13 22:26:13 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:13 0103   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:26:13 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:13 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:13 0106   WHERE 
    2020-01-13 22:26:13 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:13 0108   AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:13 0109   AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:13 0110                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:13 0111 				   AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:13 0112 				   OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:14      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:14      1,431 lines fetched
    2020-01-13 22:26:14 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:14 0116   LOAD
    2020-01-13 22:26:14 0117   entry_exit_id, 
    2020-01-13 22:26:14 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:14 0119   question_id as %entryquestionid,
    2020-01-13 22:26:14 0120   provider_creating_id
    2020-01-13 22:26:14 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:14      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:14      1,651,341 lines fetched
    2020-01-13 22:26:14 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:14 0129 INNER JOIN(client_svpvifspdatv2_0_suba_entry)
    2020-01-13 22:26:14 0130   LOAD DISTINCT
    2020-01-13 22:26:14 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:14 0132   recordset_id,
    2020-01-13 22:26:14 0133   provider_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Entry],
    2020-01-13 22:26:14 0134   name AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Entry],
    2020-01-13 22:26:14 0135   user_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Entry],
    2020-01-13 22:26:14 0136   user_name AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Entry]
    2020-01-13 22:26:14 0137   RESIDENT RS_Entry
    2020-01-13 22:26:14      	6 fields found: Entry Exit Id, recordset_id, client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Entry, client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Entry, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Entry, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Entry, 
    2020-01-13 22:26:14      542 lines fetched
    2020-01-13 22:26:14      Joining/Keeping
    2020-01-13 22:26:15 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:15 0141 DROP FIELDS client_id FROM client_svpvifspdatv2_0_suba_entry
    2020-01-13 22:26:15 0142 DROP FIELDS recordset_id FROM client_svpvifspdatv2_0_suba_entry
    2020-01-13 22:26:15 0143 DROP FIELDS [Entry Exit Id] FROM client_svpvifspdatv2_0_suba_entry
    2020-01-13 22:26:15 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:15 0147   Mapping SQL
    2020-01-13 22:26:15 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:15 0149     FROM da_question dq
    2020-01-13 22:26:15 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0151     WHERE
    2020-01-13 22:26:15 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:15 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:15 0155     UNION
    2020-01-13 22:26:15 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:15 0157     FROM da_question dq
    2020-01-13 22:26:15 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0159     WHERE
    2020-01-13 22:26:15 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:15 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:15 0163      UNION
    2020-01-13 22:26:15 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:15 0165     FROM da_question dq
    2020-01-13 22:26:15 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0167     WHERE
    2020-01-13 22:26:15 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:15 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:15 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:15 0172     UNION
    2020-01-13 22:26:15 0173 
    2020-01-13 22:26:15 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:15 0175     FROM da_question dq
    2020-01-13 22:26:15 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0177     WHERE
    2020-01-13 22:26:15 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:15 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:15 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:15 0182     UNION   
    2020-01-13 22:26:15 0183     SELECT
    2020-01-13 22:26:15 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:15 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:15 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:15 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:15 0188     FROM da_question dq
    2020-01-13 22:26:15 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0190     WHERE
    2020-01-13 22:26:15 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:15 0193     UNION
    2020-01-13 22:26:15 0194 	SELECT
    2020-01-13 22:26:15 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:15 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:15 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:15 0198     FROM da_question dq
    2020-01-13 22:26:15 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:15 0200     WHERE
    2020-01-13 22:26:15 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:15 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:15      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:15      1,304 lines fetched
    2020-01-13 22:26:15 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:15 0205 DROP TABLE client_svpvifspdatv2_0_suba
    2020-01-13 22:26:15 0207 LET varStepName='STEPENTRY_' & 45 & '_of_' & 50
    2020-01-13 22:26:15 0208 STEPENTRY_45_of_50: select 1
    2020-01-13 22:26:15      	1 fields found: ?column?, 
    2020-01-13 22:26:15      1 lines fetched
    2020-01-13 22:26:15 0209 DROP TABLE STEPENTRY_45_of_50
    2020-01-13 22:26:15 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:15 0212 NEXT
    2020-01-13 22:26:15 0037 LET varRecordSetTableName=Peek('sp_table_name',46,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:15 0038 LET varRecordSetQlikName=Peek('qlik_table_name',46,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:15 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',46,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:15 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvispdatv2_0_suba') <= 20),'svpvispdatv2_0_suba' & 'end_1',left('svpvispdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:26:15 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvispdatv2_0_suba' & 'enddate'
    2020-01-13 22:26:15 0042 LET varRecordSetQlikName_Entry= 'client_svpvispdatv2_0_suba' & '_entry'
    2020-01-13 22:26:15 0043 LET varRecordSetQlikName_Exit='client_svpvispdatv2_0_suba'& '_exit'
    2020-01-13 22:26:15 0045 LET varRecordSetQlikName_Interim='client_svpvispdatv2_0_suba' & '_review'
    2020-01-13 22:26:15 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_svpvispdatv2_0_suba', (len('client_svpvispdatv2_0_suba'))-7))
    2020-01-13 22:26:15 0048 client_svpvispdatv2_0_suba:
    2020-01-13 22:26:15 0049   SELECT * FROM qlik_sclient_svpvispdatv2_0_suba
    2020-01-13 22:26:18      	45 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, 
    2020-01-13 22:26:18      4,059 lines fetched
    2020-01-13 22:26:18 0051 CustomEndFieldCheck:
    2020-01-13 22:26:18 0052   SELECT *
    2020-01-13 22:26:18 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvispdatv2_0_subaend_1'
    2020-01-13 22:26:18      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:18      0 lines fetched
    2020-01-13 22:26:18 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvispdatv2_0_subaend_1','svpvispdatv2_0_subaenddate')
    2020-01-13 22:26:18 0059 client_svpvispdatv2_0_suba_entry:
    2020-01-13 22:26:18 0060   Noconcatenate
    2020-01-13 22:26:18 0061   LOAD DISTINCT
    2020-01-13 22:26:18 0062   *,
    2020-01-13 22:26:18 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:18 0064   recordset_id AS 'client_SVPVISPDATV2_0_SUBARECORDSET_ID_entry'
    2020-01-13 22:26:18 0065   RESIDENT client_svpvispdatv2_0_suba
    2020-01-13 22:26:18      	47 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, %entry_recordset_id, client_SVPVISPDATV2_0_SUBARECORDSET_ID_entry, 
    2020-01-13 22:26:18      4,059 lines fetched
    2020-01-13 22:26:18 0068 RS_Entry:
    2020-01-13 22:26:18 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:18 0070   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:26:18 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:18 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:18 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:18 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:18 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:18 0076   WHERE
    2020-01-13 22:26:18 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:18 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:18 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:18 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:18 0081    AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:18 0082                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:18 0083   UNION
    2020-01-13 22:26:18 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:18 0085   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:26:18 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:18 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:18 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:18 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:18 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:18 0091   WHERE 
    2020-01-13 22:26:18 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:18 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:18 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:18 0095   AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:18 0096                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:22      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:22      2,656 lines fetched
    2020-01-13 22:26:22 0100 RS_Entry_Explicit:
    2020-01-13 22:26:22 0101   Noconcatenate
    2020-01-13 22:26:22 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:22 0103   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:26:22 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:22 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:22 0106   WHERE 
    2020-01-13 22:26:22 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:22 0108   AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:22 0109   AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:26:22 0110                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:22 0111 				   AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:22 0112 				   OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))))))
    2020-01-13 22:26:25      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:25      6,371 lines fetched
    2020-01-13 22:26:25 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:25 0116   LOAD
    2020-01-13 22:26:25 0117   entry_exit_id, 
    2020-01-13 22:26:25 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:25 0119   question_id as %entryquestionid,
    2020-01-13 22:26:25 0120   provider_creating_id
    2020-01-13 22:26:25 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:25      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:25      1,657,712 lines fetched
    2020-01-13 22:26:25 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:25 0129 INNER JOIN(client_svpvispdatv2_0_suba_entry)
    2020-01-13 22:26:25 0130   LOAD DISTINCT
    2020-01-13 22:26:25 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:25 0132   recordset_id,
    2020-01-13 22:26:25 0133   provider_creating_id AS [client_SVPVISPDATV2_0_SUBA_Provider_Creating_Entry],
    2020-01-13 22:26:25 0134   name AS [client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Entry],
    2020-01-13 22:26:25 0135   user_creating_id AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Entry],
    2020-01-13 22:26:25 0136   user_name AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Entry]
    2020-01-13 22:26:25 0137   RESIDENT RS_Entry
    2020-01-13 22:26:25      	6 fields found: Entry Exit Id, recordset_id, client_SVPVISPDATV2_0_SUBA_Provider_Creating_Entry, client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Entry, client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Entry, client_SVPVISPDATV2_0_SUBA_User_Created_By_Entry, 
    2020-01-13 22:26:25      2,656 lines fetched
    2020-01-13 22:26:25      Joining/Keeping
    2020-01-13 22:26:25 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:25 0141 DROP FIELDS client_id FROM client_svpvispdatv2_0_suba_entry
    2020-01-13 22:26:25 0142 DROP FIELDS recordset_id FROM client_svpvispdatv2_0_suba_entry
    2020-01-13 22:26:25 0143 DROP FIELDS [Entry Exit Id] FROM client_svpvispdatv2_0_suba_entry
    2020-01-13 22:26:25 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:25 0147   Mapping SQL
    2020-01-13 22:26:25 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:25 0149     FROM da_question dq
    2020-01-13 22:26:25 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0151     WHERE
    2020-01-13 22:26:25 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:25 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:25 0155     UNION
    2020-01-13 22:26:25 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:25 0157     FROM da_question dq
    2020-01-13 22:26:25 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0159     WHERE
    2020-01-13 22:26:25 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:25 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:25 0163      UNION
    2020-01-13 22:26:25 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:25 0165     FROM da_question dq
    2020-01-13 22:26:25 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0167     WHERE
    2020-01-13 22:26:25 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:25 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:25 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:25 0172     UNION
    2020-01-13 22:26:25 0173 
    2020-01-13 22:26:25 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:25 0175     FROM da_question dq
    2020-01-13 22:26:25 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0177     WHERE
    2020-01-13 22:26:25 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:25 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:25 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:25 0182     UNION   
    2020-01-13 22:26:25 0183     SELECT
    2020-01-13 22:26:25 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:25 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:25 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:25 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:25 0188     FROM da_question dq
    2020-01-13 22:26:25 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0190     WHERE
    2020-01-13 22:26:25 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:25 0193     UNION
    2020-01-13 22:26:25 0194 	SELECT
    2020-01-13 22:26:25 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:25 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:25 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:25 0198     FROM da_question dq
    2020-01-13 22:26:25 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:25 0200     WHERE
    2020-01-13 22:26:25 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:25 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:26      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:26      1,304 lines fetched
    2020-01-13 22:26:26 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:26 0205 DROP TABLE client_svpvispdatv2_0_suba
    2020-01-13 22:26:26 0207 LET varStepName='STEPENTRY_' & 46 & '_of_' & 50
    2020-01-13 22:26:26 0208 STEPENTRY_46_of_50: select 1
    2020-01-13 22:26:26      	1 fields found: ?column?, 
    2020-01-13 22:26:26      1 lines fetched
    2020-01-13 22:26:26 0209 DROP TABLE STEPENTRY_46_of_50
    2020-01-13 22:26:26 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:26 0212 NEXT
    2020-01-13 22:26:26 0037 LET varRecordSetTableName=Peek('sp_table_name',47,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:26 0038 LET varRecordSetQlikName=Peek('qlik_table_name',47,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:26 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',47,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:26 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('thoughtcontent') <= 20),'thoughtcontent' & 'end_1',left('thoughtcontent', 20)& 'end_1')
    2020-01-13 22:26:26 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'thoughtcontent' & 'enddate'
    2020-01-13 22:26:26 0042 LET varRecordSetQlikName_Entry= 'client_thoughtcontent' & '_entry'
    2020-01-13 22:26:26 0043 LET varRecordSetQlikName_Exit='client_thoughtcontent'& '_exit'
    2020-01-13 22:26:26 0045 LET varRecordSetQlikName_Interim='client_thoughtcontent' & '_review'
    2020-01-13 22:26:26 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_thoughtcontent', (len('client_thoughtcontent'))-7))
    2020-01-13 22:26:26 0048 client_thoughtcontent:
    2020-01-13 22:26:26 0049   SELECT * FROM qlik_sclient_thoughtcontent
    2020-01-13 22:26:26      	10 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, 
    2020-01-13 22:26:26      2,124 lines fetched
    2020-01-13 22:26:26 0051 CustomEndFieldCheck:
    2020-01-13 22:26:26 0052   SELECT *
    2020-01-13 22:26:26 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'thoughtcontentend_1'
    2020-01-13 22:26:27      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:27      0 lines fetched
    2020-01-13 22:26:27 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'thoughtcontentend_1','thoughtcontentenddate')
    2020-01-13 22:26:27 0059 client_thoughtcontent_entry:
    2020-01-13 22:26:27 0060   Noconcatenate
    2020-01-13 22:26:27 0061   LOAD DISTINCT
    2020-01-13 22:26:27 0062   *,
    2020-01-13 22:26:27 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:27 0064   recordset_id AS 'client_THOUGHTCONTENTRECORDSET_ID_entry'
    2020-01-13 22:26:27 0065   RESIDENT client_thoughtcontent
    2020-01-13 22:26:27      	12 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, %entry_recordset_id, client_THOUGHTCONTENTRECORDSET_ID_entry, 
    2020-01-13 22:26:27      2,124 lines fetched
    2020-01-13 22:26:27 0068 RS_Entry:
    2020-01-13 22:26:27 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:27 0070   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:26:27 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:27 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:27 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:27 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:27 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:27 0076   WHERE
    2020-01-13 22:26:27 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:27 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:27 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:27 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:27 0081    AND ((((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:26:27 0082                    OR (((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.thoughtcontentenddate::DATE >= ee.entry_date::DATE) OR ((ft.thoughtcontentenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:27 0083   UNION
    2020-01-13 22:26:27 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:27 0085   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:26:27 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:27 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:27 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:27 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:27 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:27 0091   WHERE 
    2020-01-13 22:26:27 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:27 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:27 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:27 0095   AND ((((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:26:27 0096                    OR (((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.thoughtcontentenddate::DATE >= ee.entry_date::DATE) OR ((ft.thoughtcontentenddate::DATE >= date(now()))))))
    2020-01-13 22:26:28      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:28      310 lines fetched
    2020-01-13 22:26:28 0100 RS_Entry_Explicit:
    2020-01-13 22:26:28 0101   Noconcatenate
    2020-01-13 22:26:28 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:28 0103   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:26:28 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:28 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:28 0106   WHERE 
    2020-01-13 22:26:28 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:28 0108   AND ((((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:28 0109   AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:26:28 0110                    OR (((ft.thoughtcontentstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:28 0111 				   AND ((ft.thoughtcontentenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:28 0112 				   OR ((ft.thoughtcontentenddate::DATE >= date(now()))))))
    2020-01-13 22:26:28      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:28      1,412 lines fetched
    2020-01-13 22:26:28 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:28 0116   LOAD
    2020-01-13 22:26:28 0117   entry_exit_id, 
    2020-01-13 22:26:28 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:28 0119   question_id as %entryquestionid,
    2020-01-13 22:26:28 0120   provider_creating_id
    2020-01-13 22:26:28 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:28      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:28      1,659,124 lines fetched
    2020-01-13 22:26:28 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:28 0129 INNER JOIN(client_thoughtcontent_entry)
    2020-01-13 22:26:28 0130   LOAD DISTINCT
    2020-01-13 22:26:28 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:28 0132   recordset_id,
    2020-01-13 22:26:28 0133   provider_creating_id AS [client_THOUGHTCONTENT_Provider_Creating_Entry],
    2020-01-13 22:26:28 0134   name AS [client_THOUGHTCONTENT_Provider_Name_Creating_Entry],
    2020-01-13 22:26:28 0135   user_creating_id AS [client_THOUGHTCONTENT_User_Created_By_Id_Entry],
    2020-01-13 22:26:28 0136   user_name AS [client_THOUGHTCONTENT_User_Created_By_Entry]
    2020-01-13 22:26:28 0137   RESIDENT RS_Entry
    2020-01-13 22:26:28      	6 fields found: Entry Exit Id, recordset_id, client_THOUGHTCONTENT_Provider_Creating_Entry, client_THOUGHTCONTENT_Provider_Name_Creating_Entry, client_THOUGHTCONTENT_User_Created_By_Id_Entry, client_THOUGHTCONTENT_User_Created_By_Entry, 
    2020-01-13 22:26:28      310 lines fetched
    2020-01-13 22:26:28      Joining/Keeping
    2020-01-13 22:26:28 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:29 0141 DROP FIELDS client_id FROM client_thoughtcontent_entry
    2020-01-13 22:26:29 0142 DROP FIELDS recordset_id FROM client_thoughtcontent_entry
    2020-01-13 22:26:29 0143 DROP FIELDS [Entry Exit Id] FROM client_thoughtcontent_entry
    2020-01-13 22:26:29 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:29 0147   Mapping SQL
    2020-01-13 22:26:29 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:29 0149     FROM da_question dq
    2020-01-13 22:26:29 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0151     WHERE
    2020-01-13 22:26:29 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:29 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:29 0155     UNION
    2020-01-13 22:26:29 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:29 0157     FROM da_question dq
    2020-01-13 22:26:29 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0159     WHERE
    2020-01-13 22:26:29 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:29 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:29 0163      UNION
    2020-01-13 22:26:29 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:29 0165     FROM da_question dq
    2020-01-13 22:26:29 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0167     WHERE
    2020-01-13 22:26:29 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:29 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:29 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:29 0172     UNION
    2020-01-13 22:26:29 0173 
    2020-01-13 22:26:29 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:29 0175     FROM da_question dq
    2020-01-13 22:26:29 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0177     WHERE
    2020-01-13 22:26:29 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:29 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:29 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:29 0182     UNION   
    2020-01-13 22:26:29 0183     SELECT
    2020-01-13 22:26:29 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:29 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:29 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:29 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:29 0188     FROM da_question dq
    2020-01-13 22:26:29 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0190     WHERE
    2020-01-13 22:26:29 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:29 0193     UNION
    2020-01-13 22:26:29 0194 	SELECT
    2020-01-13 22:26:29 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:29 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:29 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:29 0198     FROM da_question dq
    2020-01-13 22:26:29 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:29 0200     WHERE
    2020-01-13 22:26:29 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:29 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:29      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:29      1,304 lines fetched
    2020-01-13 22:26:29 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:29 0205 DROP TABLE client_thoughtcontent
    2020-01-13 22:26:29 0207 LET varStepName='STEPENTRY_' & 47 & '_of_' & 50
    2020-01-13 22:26:29 0208 STEPENTRY_47_of_50: select 1
    2020-01-13 22:26:29      	1 fields found: ?column?, 
    2020-01-13 22:26:29      1 lines fetched
    2020-01-13 22:26:29 0209 DROP TABLE STEPENTRY_47_of_50
    2020-01-13 22:26:29 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:29 0212 NEXT
    2020-01-13 22:26:29 0037 LET varRecordSetTableName=Peek('sp_table_name',48,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:29 0038 LET varRecordSetQlikName=Peek('qlik_table_name',48,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:29 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',48,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:29 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('waitliststatus') <= 20),'waitliststatus' & 'end_1',left('waitliststatus', 20)& 'end_1')
    2020-01-13 22:26:29 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'waitliststatus' & 'enddate'
    2020-01-13 22:26:29 0042 LET varRecordSetQlikName_Entry= 'client_waitliststatus' & '_entry'
    2020-01-13 22:26:29 0043 LET varRecordSetQlikName_Exit='client_waitliststatus'& '_exit'
    2020-01-13 22:26:29 0045 LET varRecordSetQlikName_Interim='client_waitliststatus' & '_review'
    2020-01-13 22:26:29 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_waitliststatus', (len('client_waitliststatus'))-7))
    2020-01-13 22:26:29 0048 client_waitliststatus:
    2020-01-13 22:26:29 0049   SELECT * FROM qlik_sclient_waitliststatus
    2020-01-13 22:26:29      	12 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, 
    2020-01-13 22:26:29      1,224 lines fetched
    2020-01-13 22:26:29 0051 CustomEndFieldCheck:
    2020-01-13 22:26:29 0052   SELECT *
    2020-01-13 22:26:29 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'waitliststatusend_1'
    2020-01-13 22:26:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:30      0 lines fetched
    2020-01-13 22:26:30 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'waitliststatusend_1','waitliststatusenddate')
    2020-01-13 22:26:30 0059 client_waitliststatus_entry:
    2020-01-13 22:26:30 0060   Noconcatenate
    2020-01-13 22:26:30 0061   LOAD DISTINCT
    2020-01-13 22:26:30 0062   *,
    2020-01-13 22:26:30 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:30 0064   recordset_id AS 'client_WAITLISTSTATUSRECORDSET_ID_entry'
    2020-01-13 22:26:30 0065   RESIDENT client_waitliststatus
    2020-01-13 22:26:30      	14 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, %entry_recordset_id, client_WAITLISTSTATUSRECORDSET_ID_entry, 
    2020-01-13 22:26:30      1,224 lines fetched
    2020-01-13 22:26:30 0068 RS_Entry:
    2020-01-13 22:26:30 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:30 0070   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:26:30 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:30 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:30 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:30 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:30 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:30 0076   WHERE
    2020-01-13 22:26:30 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:30 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:30 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:30 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:30 0081    AND ((((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:26:30 0082                    OR (((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.waitliststatusenddate::DATE >= ee.entry_date::DATE) OR ((ft.waitliststatusenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:30 0083   UNION
    2020-01-13 22:26:30 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:30 0085   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:26:30 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:30 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:30 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:30 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:30 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:30 0091   WHERE 
    2020-01-13 22:26:30 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:30 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:30 0095   AND ((((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:26:30 0096                    OR (((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) AND ((ft.waitliststatusenddate::DATE >= ee.entry_date::DATE) OR ((ft.waitliststatusenddate::DATE >= date(now()))))))
    2020-01-13 22:26:31      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:31      159 lines fetched
    2020-01-13 22:26:31 0100 RS_Entry_Explicit:
    2020-01-13 22:26:31 0101   Noconcatenate
    2020-01-13 22:26:31 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:31 0103   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:26:31 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:31 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:31 0106   WHERE 
    2020-01-13 22:26:31 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:31 0108   AND ((((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:31 0109   AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:26:31 0110                    OR (((ft.waitliststatusstartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:31 0111 				   AND ((ft.waitliststatusenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:31 0112 				   OR ((ft.waitliststatusenddate::DATE >= date(now()))))))
    2020-01-13 22:26:31      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:31      393 lines fetched
    2020-01-13 22:26:31 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:31 0116   LOAD
    2020-01-13 22:26:31 0117   entry_exit_id, 
    2020-01-13 22:26:31 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:31 0119   question_id as %entryquestionid,
    2020-01-13 22:26:31 0120   provider_creating_id
    2020-01-13 22:26:31 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:31      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:31      1,659,517 lines fetched
    2020-01-13 22:26:31 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:31 0129 INNER JOIN(client_waitliststatus_entry)
    2020-01-13 22:26:31 0130   LOAD DISTINCT
    2020-01-13 22:26:31 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:31 0132   recordset_id,
    2020-01-13 22:26:31 0133   provider_creating_id AS [client_WAITLISTSTATUS_Provider_Creating_Entry],
    2020-01-13 22:26:31 0134   name AS [client_WAITLISTSTATUS_Provider_Name_Creating_Entry],
    2020-01-13 22:26:31 0135   user_creating_id AS [client_WAITLISTSTATUS_User_Created_By_Id_Entry],
    2020-01-13 22:26:31 0136   user_name AS [client_WAITLISTSTATUS_User_Created_By_Entry]
    2020-01-13 22:26:31 0137   RESIDENT RS_Entry
    2020-01-13 22:26:31      	6 fields found: Entry Exit Id, recordset_id, client_WAITLISTSTATUS_Provider_Creating_Entry, client_WAITLISTSTATUS_Provider_Name_Creating_Entry, client_WAITLISTSTATUS_User_Created_By_Id_Entry, client_WAITLISTSTATUS_User_Created_By_Entry, 
    2020-01-13 22:26:31      159 lines fetched
    2020-01-13 22:26:31      Joining/Keeping
    2020-01-13 22:26:31 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:31 0141 DROP FIELDS client_id FROM client_waitliststatus_entry
    2020-01-13 22:26:31 0142 DROP FIELDS recordset_id FROM client_waitliststatus_entry
    2020-01-13 22:26:31 0143 DROP FIELDS [Entry Exit Id] FROM client_waitliststatus_entry
    2020-01-13 22:26:31 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:31 0147   Mapping SQL
    2020-01-13 22:26:31 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:31 0149     FROM da_question dq
    2020-01-13 22:26:31 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0151     WHERE
    2020-01-13 22:26:31 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:31 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:31 0155     UNION
    2020-01-13 22:26:31 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:31 0157     FROM da_question dq
    2020-01-13 22:26:31 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0159     WHERE
    2020-01-13 22:26:31 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:31 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:31 0163      UNION
    2020-01-13 22:26:31 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:31 0165     FROM da_question dq
    2020-01-13 22:26:31 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0167     WHERE
    2020-01-13 22:26:31 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:31 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:31 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:31 0172     UNION
    2020-01-13 22:26:31 0173 
    2020-01-13 22:26:31 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:31 0175     FROM da_question dq
    2020-01-13 22:26:31 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0177     WHERE
    2020-01-13 22:26:31 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:31 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:31 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:31 0182     UNION   
    2020-01-13 22:26:31 0183     SELECT
    2020-01-13 22:26:31 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:31 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:31 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:31 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:31 0188     FROM da_question dq
    2020-01-13 22:26:31 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0190     WHERE
    2020-01-13 22:26:31 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:31 0193     UNION
    2020-01-13 22:26:31 0194 	SELECT
    2020-01-13 22:26:31 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:31 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:31 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:31 0198     FROM da_question dq
    2020-01-13 22:26:31 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:31 0200     WHERE
    2020-01-13 22:26:31 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:31 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:32      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:32      1,304 lines fetched
    2020-01-13 22:26:32 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:32 0205 DROP TABLE client_waitliststatus
    2020-01-13 22:26:32 0207 LET varStepName='STEPENTRY_' & 48 & '_of_' & 50
    2020-01-13 22:26:32 0208 STEPENTRY_48_of_50: select 1
    2020-01-13 22:26:32      	1 fields found: ?column?, 
    2020-01-13 22:26:32      1 lines fetched
    2020-01-13 22:26:32 0209 DROP TABLE STEPENTRY_48_of_50
    2020-01-13 22:26:32 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:32 0212 NEXT
    2020-01-13 22:26:32 0037 LET varRecordSetTableName=Peek('sp_table_name',49,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:32 0038 LET varRecordSetQlikName=Peek('qlik_table_name',49,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:32 0039 LET varRecordSetTableNameOnly=Peek('table_name_only',49,'RECORDSET_LIST_ENTRY')
    2020-01-13 22:26:32 0040 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('workhistory') <= 20),'workhistory' & 'end_1',left('workhistory', 20)& 'end_1')
    2020-01-13 22:26:32 0041 LET varRecordSetTableNameOnlyTruncEndDate = 'workhistory' & 'enddate'
    2020-01-13 22:26:32 0042 LET varRecordSetQlikName_Entry= 'client_workhistory' & '_entry'
    2020-01-13 22:26:32 0043 LET varRecordSetQlikName_Exit='client_workhistory'& '_exit'
    2020-01-13 22:26:32 0045 LET varRecordSetQlikName_Interim='client_workhistory' & '_review'
    2020-01-13 22:26:32 0046 LET varRecordSetQlikName_Ucase_Entry=Upper(right('client_workhistory', (len('client_workhistory'))-7))
    2020-01-13 22:26:32 0048 client_workhistory:
    2020-01-13 22:26:32 0049   SELECT * FROM qlik_sclient_workhistory
    2020-01-13 22:26:35      	18 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, 
    2020-01-13 22:26:35      21,428 lines fetched
    2020-01-13 22:26:35 0051 CustomEndFieldCheck:
    2020-01-13 22:26:35 0052   SELECT *
    2020-01-13 22:26:35 0053   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'workhistoryend_1'
    2020-01-13 22:26:36      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:26:36      0 lines fetched
    2020-01-13 22:26:36 0056 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'workhistoryend_1','workhistoryenddate')
    2020-01-13 22:26:36 0059 client_workhistory_entry:
    2020-01-13 22:26:36 0060   Noconcatenate
    2020-01-13 22:26:36 0061   LOAD DISTINCT
    2020-01-13 22:26:36 0062   *,
    2020-01-13 22:26:36 0063    recordset_id as %entry_recordset_id,
    2020-01-13 22:26:36 0064   recordset_id AS 'client_WORKHISTORYRECORDSET_ID_entry'
    2020-01-13 22:26:36 0065   RESIDENT client_workhistory
    2020-01-13 22:26:36      	20 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, %entry_recordset_id, client_WORKHISTORYRECORDSET_ID_entry, 
    2020-01-13 22:26:36      21,428 lines fetched
    2020-01-13 22:26:36 0068 RS_Entry:
    2020-01-13 22:26:36 0069   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:36 0070   FROM qlik_sclient_workhistory ft
    2020-01-13 22:26:36 0071   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:36 0072   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:36 0073   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:36 0074   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:36 0075   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:26:36 0076   WHERE
    2020-01-13 22:26:36 0077 -- (dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:26:36 0078 --  (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:36 0079   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:36 0080   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:26:36 0081    AND ((((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:26:36 0082                    OR (((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) AND ((ft.workhistoryenddate::DATE >= ee.entry_date::DATE) OR ((ft.workhistoryenddate::DATE >= date(now()))))))				   
    2020-01-13 22:26:36 0083   UNION
    2020-01-13 22:26:36 0084   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:26:36 0085   FROM qlik_sclient_workhistory ft
    2020-01-13 22:26:36 0086   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:36 0087   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:26:36 0088   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:26:36 0089   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:36 0090   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:26:36 0091   WHERE 
    2020-01-13 22:26:36 0092   --(dr.date_effective >= '2019-01-01'::DATE)AND 
    2020-01-13 22:26:36 0093   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:36 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:26:36 0095   AND ((((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:26:36 0096                    OR (((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) AND ((ft.workhistoryenddate::DATE >= ee.entry_date::DATE) OR ((ft.workhistoryenddate::DATE >= date(now()))))))
    2020-01-13 22:26:42      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:26:42      892 lines fetched
    2020-01-13 22:26:42 0100 RS_Entry_Explicit:
    2020-01-13 22:26:42 0101   Noconcatenate
    2020-01-13 22:26:42 0102     SELECT DISTINCT ee.entry_exit_id, ft.recordset_id,dr.question_id,dr.provider_creating_id
    2020-01-13 22:26:42 0103   FROM qlik_sclient_workhistory ft
    2020-01-13 22:26:42 0104   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:26:42 0105   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:26:42 0106   WHERE 
    2020-01-13 22:26:42 0107   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:26:42 0108   AND ((((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:42 0109   AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:26:42 0110                    OR (((ft.workhistorystartdate::DATE <= ee.entry_date::DATE)) 
    2020-01-13 22:26:42 0111 				   AND ((ft.workhistoryenddate::DATE >= ee.entry_date::DATE) 
    2020-01-13 22:26:42 0112 				   OR ((ft.workhistoryenddate::DATE >= date(now()))))))
    2020-01-13 22:26:45      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:26:45      2,470 lines fetched
    2020-01-13 22:26:45 0115 CONCATENATE(Recordset_security_entry)
    2020-01-13 22:26:45 0116   LOAD
    2020-01-13 22:26:45 0117   entry_exit_id, 
    2020-01-13 22:26:45 0118   recordset_id as %entry_recordset_id,
    2020-01-13 22:26:45 0119   question_id as %entryquestionid,
    2020-01-13 22:26:45 0120   provider_creating_id
    2020-01-13 22:26:45 0121   RESIDENT RS_Entry_Explicit
    2020-01-13 22:26:45      	4 fields found: entry_exit_id, %entry_recordset_id, %entryquestionid, provider_creating_id, 
    2020-01-13 22:26:45      1,661,987 lines fetched
    2020-01-13 22:26:45 0122 DROP TABLE RS_Entry_Explicit
    2020-01-13 22:26:45 0129 INNER JOIN(client_workhistory_entry)
    2020-01-13 22:26:45 0130   LOAD DISTINCT
    2020-01-13 22:26:45 0131   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:26:45 0132   recordset_id,
    2020-01-13 22:26:45 0133   provider_creating_id AS [client_WORKHISTORY_Provider_Creating_Entry],
    2020-01-13 22:26:45 0134   name AS [client_WORKHISTORY_Provider_Name_Creating_Entry],
    2020-01-13 22:26:45 0135   user_creating_id AS [client_WORKHISTORY_User_Created_By_Id_Entry],
    2020-01-13 22:26:45 0136   user_name AS [client_WORKHISTORY_User_Created_By_Entry]
    2020-01-13 22:26:45 0137   RESIDENT RS_Entry
    2020-01-13 22:26:45      	6 fields found: Entry Exit Id, recordset_id, client_WORKHISTORY_Provider_Creating_Entry, client_WORKHISTORY_Provider_Name_Creating_Entry, client_WORKHISTORY_User_Created_By_Id_Entry, client_WORKHISTORY_User_Created_By_Entry, 
    2020-01-13 22:26:45      892 lines fetched
    2020-01-13 22:26:45      Joining/Keeping
    2020-01-13 22:26:46 0139 DROP TABLE RS_Entry
    2020-01-13 22:26:46 0141 DROP FIELDS client_id FROM client_workhistory_entry
    2020-01-13 22:26:46 0142 DROP FIELDS recordset_id FROM client_workhistory_entry
    2020-01-13 22:26:46 0143 DROP FIELDS [Entry Exit Id] FROM client_workhistory_entry
    2020-01-13 22:26:46 0146 FieldMapSaClientEntry:
    2020-01-13 22:26:46 0147   Mapping SQL
    2020-01-13 22:26:46 0148     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:46 0149     FROM da_question dq
    2020-01-13 22:26:46 0150     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0151     WHERE
    2020-01-13 22:26:46 0152       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0153       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:26:46 0154       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:26:46 0155     UNION
    2020-01-13 22:26:46 0156     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:46 0157     FROM da_question dq
    2020-01-13 22:26:46 0158     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0159     WHERE
    2020-01-13 22:26:46 0160       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0161       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:26:46 0162       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:26:46 0163      UNION
    2020-01-13 22:26:46 0164      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_entry'  AS newnames  
    2020-01-13 22:26:46 0165     FROM da_question dq
    2020-01-13 22:26:46 0166     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0167     WHERE
    2020-01-13 22:26:46 0168       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0169       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:26:46 0170       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:26:46 0171           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:46 0172     UNION
    2020-01-13 22:26:46 0173 
    2020-01-13 22:26:46 0174     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_entry'  AS newnames  
    2020-01-13 22:26:46 0175     FROM da_question dq
    2020-01-13 22:26:46 0176     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0177     WHERE
    2020-01-13 22:26:46 0178       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0179       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:26:46 0180       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:26:46 0181           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:26:46 0182     UNION   
    2020-01-13 22:26:46 0183     SELECT
    2020-01-13 22:26:46 0184     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:26:46 0185 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:46 0186 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:46 0187     END AS oldnames, 'client_' || dq.virt_field_name || '_entry' AS newnames 
    2020-01-13 22:26:46 0188     FROM da_question dq
    2020-01-13 22:26:46 0189     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0190     WHERE
    2020-01-13 22:26:46 0191       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0192 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:46 0193     UNION
    2020-01-13 22:26:46 0194 	SELECT
    2020-01-13 22:26:46 0195     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:46 0196 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:26:46 0197     END AS oldnames, 'client_' || dq.virt_field_name || '1_entry' AS newnames 
    2020-01-13 22:26:46 0198     FROM da_question dq
    2020-01-13 22:26:46 0199     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:26:46 0200     WHERE
    2020-01-13 22:26:46 0201       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:26:46 0202 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:26:46      	2 fields found: oldnames, newnames, 
    2020-01-13 22:26:46      1,304 lines fetched
    2020-01-13 22:26:46 0203 Rename Fields using FieldMapSaClientEntry
    2020-01-13 22:26:46 0205 DROP TABLE client_workhistory
    2020-01-13 22:26:46 0207 LET varStepName='STEPENTRY_' & 49 & '_of_' & 50
    2020-01-13 22:26:46 0208 STEPENTRY_49_of_50: select 1
    2020-01-13 22:26:46      	1 fields found: ?column?, 
    2020-01-13 22:26:46      1 lines fetched
    2020-01-13 22:26:46 0209 DROP TABLE STEPENTRY_49_of_50
    2020-01-13 22:26:46 0210 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:26:46 0212 NEXT
  2020-01-13 22:26:46 0214 DROP TABLE RECORDSET_LIST_ENTRY
  2020-01-13 22:26:46 0217 RECORDSET_LIST_EXIT:
  2020-01-13 22:26:46 0218 
  2020-01-13 22:26:46 0219 SELECT table_name AS sp_table_name, 'client_' || SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS qlik_table_name,  SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS table_name_only
  2020-01-13 22:26:46 0220 FROM information_schema.tables
  2020-01-13 22:26:46 0221 WHERE table_name ILIKE 'qlik_sclient_%'
  2020-01-13 22:26:46 0222 ORDER BY table_name
  2020-01-13 22:26:46      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:26:46      50 lines fetched
  2020-01-13 22:26:46 0224 LET NumRows=NoOfRows('RECORDSET_LIST_EXIT')
  2020-01-13 22:26:46 0226 FOR i=0 to 50-1
    2020-01-13 22:26:46 0228 LET varRecordSetTableName=Peek('sp_table_name',0,'RECORDSET_LIST_EXIT')
    2020-01-13 22:26:46 0229 LET varRecordSetQlikName=Peek('qlik_table_name',0,'RECORDSET_LIST_EXIT')
    2020-01-13 22:26:46 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',0,'RECORDSET_LIST_EXIT')
    2020-01-13 22:26:46 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('address_1') <= 20),'address_1' & 'end_1',left('address_1', 20)& 'end_1')
    2020-01-13 22:26:46 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'address_1' & 'enddate'
    2020-01-13 22:26:46 0233 LET varRecordSetQlikName_Entry= 'client_address_1' & '_entry'
    2020-01-13 22:26:46 0234 LET varRecordSetQlikName_Exit='client_address_1'& '_exit'
    2020-01-13 22:26:46 0236 LET varRecordSetQlikName_Interim='client_address_1' & '_review'
    2020-01-13 22:26:46 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_address_1', (len('client_address_1'))-7))
    2020-01-13 22:26:46 0239 client_address_1:
    2020-01-13 22:26:46 0240   SELECT * FROM qlik_sclient_address_1
    2020-01-13 22:27:11      	18 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, 
    2020-01-13 22:27:11      128,827 lines fetched
    2020-01-13 22:27:11 0243 client_address_1_exit:
    2020-01-13 22:27:11 0244   Noconcatenate
    2020-01-13 22:27:11 0245   LOAD DISTINCT
    2020-01-13 22:27:11 0246   *,
    2020-01-13 22:27:11 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:27:11 0248   recordset_id AS 'client_ADDRESS_1RECORDSET_ID_exit'
    2020-01-13 22:27:11 0249   RESIDENT client_address_1
    2020-01-13 22:27:11      	20 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, %exit_recordset_id, client_ADDRESS_1RECORDSET_ID_exit, 
    2020-01-13 22:27:11      128,827 lines fetched
    2020-01-13 22:27:11 0251 client_address_1:
    2020-01-13 22:27:11 0252   SELECT * FROM qlik_sclient_address_1
    2020-01-13 22:27:36      	18 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, 
    2020-01-13 22:27:36      257,654 lines fetched
    2020-01-13 22:27:36 0254 CustomEndFieldCheck:
    2020-01-13 22:27:36 0255   SELECT *
    2020-01-13 22:27:36 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'address_1end_1'
    2020-01-13 22:27:36      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:27:36      0 lines fetched
    2020-01-13 22:27:36 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'address_1end_1','address_1enddate')
    2020-01-13 22:27:36 0262 RS_Exit:
    2020-01-13 22:27:36 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:27:36 0264   FROM qlik_sclient_address_1 ft
    2020-01-13 22:27:36 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:27:36 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:27:36 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:27:36 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:27:36 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:27:36 0270   WHERE 
    2020-01-13 22:27:36 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:27:36 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:27:36 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:27:36 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:27:36 0275   AND ((((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:27:36 0276                    OR (((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.address_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.address_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:27:36 0277   
    2020-01-13 22:27:36 0278   UNION
    2020-01-13 22:27:36 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:27:36 0280   FROM qlik_sclient_address_1 ft
    2020-01-13 22:27:36 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:27:36 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:27:36 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:27:36 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:27:36 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:27:36 0286   WHERE 
    2020-01-13 22:27:36 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:27:36 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:27:36 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:27:36 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:27:36 0291   AND ((((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:27:36 0292                    OR (((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.address_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.address_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:23      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:23      13,273 lines fetched
    2020-01-13 22:28:23 0296 RS_Exit_Explicit:
    2020-01-13 22:28:23 0297   Noconcatenate
    2020-01-13 22:28:23 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:23 0299   FROM qlik_sclient_address_1 ft
    2020-01-13 22:28:23 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:23 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:23 0302   WHERE 
    2020-01-13 22:28:23 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:23 0304   AND ((((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.address_1enddate::DATE IS NULL)) 
    2020-01-13 22:28:23 0305                    OR (((ft.address_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.address_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.address_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.address_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:47      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:47      25,073 lines fetched
    2020-01-13 22:28:47 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:47 0310   LOAD
    2020-01-13 22:28:47 0311   entry_exit_id, 
    2020-01-13 22:28:47 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:47 0313   question_id as %exitquestionid,
    2020-01-13 22:28:47 0314   provider_creating_id
    2020-01-13 22:28:47 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:47      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:47      25,073 lines fetched
    2020-01-13 22:28:47 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:47 0318 INNER JOIN(client_address_1_exit)
    2020-01-13 22:28:47 0319   LOAD DISTINCT
    2020-01-13 22:28:47 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:47 0321   recordset_id,
    2020-01-13 22:28:47 0322   provider_creating_id AS [client_ADDRESS_1_Provider_Creating_Exit],
    2020-01-13 22:28:47 0323   name AS [client_ADDRESS_1_Provider_Name_Creating_Exit],
    2020-01-13 22:28:47 0324   user_creating_id AS [client_ADDRESS_1_User_Created_By_Id_Exit],
    2020-01-13 22:28:47 0325   user_name AS [client_ADDRESS_1_User_Created_By_Exit]
    2020-01-13 22:28:47 0326   RESIDENT RS_Exit
    2020-01-13 22:28:47      	6 fields found: Entry Exit Id, recordset_id, client_ADDRESS_1_Provider_Creating_Exit, client_ADDRESS_1_Provider_Name_Creating_Exit, client_ADDRESS_1_User_Created_By_Id_Exit, client_ADDRESS_1_User_Created_By_Exit, 
    2020-01-13 22:28:47      13,273 lines fetched
    2020-01-13 22:28:47      Joining/Keeping
    2020-01-13 22:28:47 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:47 0330 DROP FIELDS client_id FROM client_address_1_exit
    2020-01-13 22:28:47 0331 DROP FIELDS recordset_id FROM client_address_1_exit
    2020-01-13 22:28:47 0332 DROP FIELDS [Entry Exit Id] FROM client_address_1_exit
    2020-01-13 22:28:47 0335 FieldMapSaClientExit:
    2020-01-13 22:28:47 0336   Mapping SQL
    2020-01-13 22:28:47 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:47 0338     FROM da_question dq
    2020-01-13 22:28:47 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0340     WHERE
    2020-01-13 22:28:47 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:47 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:47 0344     UNION
    2020-01-13 22:28:47 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:47 0346     FROM da_question dq
    2020-01-13 22:28:47 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0348     WHERE
    2020-01-13 22:28:47 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:47 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:47 0352      UNION
    2020-01-13 22:28:47 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:47 0354     FROM da_question dq
    2020-01-13 22:28:47 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0356     WHERE
    2020-01-13 22:28:47 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:47 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:47 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:47 0361     UNION
    2020-01-13 22:28:47 0362 
    2020-01-13 22:28:47 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:47 0364     FROM da_question dq
    2020-01-13 22:28:47 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0366     WHERE
    2020-01-13 22:28:47 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:47 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:47 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:47 0371     UNION   
    2020-01-13 22:28:47 0372     SELECT
    2020-01-13 22:28:47 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:47 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:47 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:47 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:47 0377     FROM da_question dq
    2020-01-13 22:28:47 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0379     WHERE
    2020-01-13 22:28:47 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:47 0382     UNION
    2020-01-13 22:28:47 0383 	SELECT
    2020-01-13 22:28:47 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:47 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:47 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:47 0387     FROM da_question dq
    2020-01-13 22:28:47 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:47 0389     WHERE
    2020-01-13 22:28:47 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:47 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:48      	2 fields found: oldnames, newnames, 
    2020-01-13 22:28:48      1,304 lines fetched
    2020-01-13 22:28:48 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:28:48 0394 DROP TABLE client_address_1
    2020-01-13 22:28:48 0396 LET varStepName='STEPEXIT_' & 0 & '_of_' & 50
    2020-01-13 22:28:48 0397 STEPEXIT_0_of_50: select 1
    2020-01-13 22:28:48      	1 fields found: ?column?, 
    2020-01-13 22:28:48      1 lines fetched
    2020-01-13 22:28:48 0398 DROP TABLE STEPEXIT_0_of_50
    2020-01-13 22:28:48 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:28:48 0401 NEXT
    2020-01-13 22:28:48 0228 LET varRecordSetTableName=Peek('sp_table_name',1,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:48 0229 LET varRecordSetQlikName=Peek('qlik_table_name',1,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:48 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',1,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:48 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('agesstagesquestionnai') <= 20),'agesstagesquestionnai' & 'end_1',left('agesstagesquestionnai', 20)& 'end_1')
    2020-01-13 22:28:48 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'agesstagesquestionnai' & 'enddate'
    2020-01-13 22:28:48 0233 LET varRecordSetQlikName_Entry= 'client_agesstagesquestionnai' & '_entry'
    2020-01-13 22:28:48 0234 LET varRecordSetQlikName_Exit='client_agesstagesquestionnai'& '_exit'
    2020-01-13 22:28:48 0236 LET varRecordSetQlikName_Interim='client_agesstagesquestionnai' & '_review'
    2020-01-13 22:28:48 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_agesstagesquestionnai', (len('client_agesstagesquestionnai'))-7))
    2020-01-13 22:28:48 0239 client_agesstagesquestionnai:
    2020-01-13 22:28:48 0240   SELECT * FROM qlik_sclient_agesstagesquestionnai
    2020-01-13 22:28:48      	9 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, 
    2020-01-13 22:28:48      244 lines fetched
    2020-01-13 22:28:48 0243 client_agesstagesquestionnai_exit:
    2020-01-13 22:28:48 0244   Noconcatenate
    2020-01-13 22:28:48 0245   LOAD DISTINCT
    2020-01-13 22:28:48 0246   *,
    2020-01-13 22:28:48 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:48 0248   recordset_id AS 'client_AGESSTAGESQUESTIONNAIRECORDSET_ID_exit'
    2020-01-13 22:28:48 0249   RESIDENT client_agesstagesquestionnai
    2020-01-13 22:28:48      	11 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, %exit_recordset_id, client_AGESSTAGESQUESTIONNAIRECORDSET_ID_exit, 
    2020-01-13 22:28:48      244 lines fetched
    2020-01-13 22:28:48 0251 client_agesstagesquestionnai:
    2020-01-13 22:28:48 0252   SELECT * FROM qlik_sclient_agesstagesquestionnai
    2020-01-13 22:28:48      	9 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, 
    2020-01-13 22:28:48      488 lines fetched
    2020-01-13 22:28:48 0254 CustomEndFieldCheck:
    2020-01-13 22:28:48 0255   SELECT *
    2020-01-13 22:28:48 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'agesstagesquestionnaend_1'
    2020-01-13 22:28:49      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:28:49      0 lines fetched
    2020-01-13 22:28:49 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'agesstagesquestionnaend_1','agesstagesquestionnaienddate')
    2020-01-13 22:28:49 0262 RS_Exit:
    2020-01-13 22:28:49 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:49 0264   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:28:49 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:49 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:49 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:49 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:49 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:28:49 0270   WHERE 
    2020-01-13 22:28:49 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:28:49 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:49 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:28:49 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:28:49 0275   AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:28:49 0276                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.agesstagesquestionnaienddate::DATE >= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:28:49 0277   
    2020-01-13 22:28:49 0278   UNION
    2020-01-13 22:28:49 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:49 0280   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:28:49 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:49 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:49 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:49 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:49 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:28:49 0286   WHERE 
    2020-01-13 22:28:49 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:28:49 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:49 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:28:49 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:28:49 0291   AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:28:49 0292                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.agesstagesquestionnaienddate::DATE >= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:49      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:49      198 lines fetched
    2020-01-13 22:28:49 0296 RS_Exit_Explicit:
    2020-01-13 22:28:49 0297   Noconcatenate
    2020-01-13 22:28:49 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:49 0299   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:28:49 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:49 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:49 0302   WHERE 
    2020-01-13 22:28:49 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:49 0304   AND ((((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.agesstagesquestionnaienddate::DATE IS NULL)) 
    2020-01-13 22:28:49 0305                    OR (((ft.agesstagesquestionnaistartdate::DATE <= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.agesstagesquestionnaienddate::DATE >= ee.exit_date::DATE) OR ((ft.agesstagesquestionnaienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:49      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:49      531 lines fetched
    2020-01-13 22:28:49 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:49 0310   LOAD
    2020-01-13 22:28:49 0311   entry_exit_id, 
    2020-01-13 22:28:49 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:49 0313   question_id as %exitquestionid,
    2020-01-13 22:28:49 0314   provider_creating_id
    2020-01-13 22:28:49 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:49      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:49      25,604 lines fetched
    2020-01-13 22:28:49 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:49 0318 INNER JOIN(client_agesstagesquestionnai_exit)
    2020-01-13 22:28:49 0319   LOAD DISTINCT
    2020-01-13 22:28:49 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:49 0321   recordset_id,
    2020-01-13 22:28:49 0322   provider_creating_id AS [client_AGESSTAGESQUESTIONNAI_Provider_Creating_Exit],
    2020-01-13 22:28:49 0323   name AS [client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Exit],
    2020-01-13 22:28:49 0324   user_creating_id AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Exit],
    2020-01-13 22:28:49 0325   user_name AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Exit]
    2020-01-13 22:28:49 0326   RESIDENT RS_Exit
    2020-01-13 22:28:49      	6 fields found: Entry Exit Id, recordset_id, client_AGESSTAGESQUESTIONNAI_Provider_Creating_Exit, client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Exit, client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Exit, client_AGESSTAGESQUESTIONNAI_User_Created_By_Exit, 
    2020-01-13 22:28:49      198 lines fetched
    2020-01-13 22:28:49      Joining/Keeping
    2020-01-13 22:28:49 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:49 0330 DROP FIELDS client_id FROM client_agesstagesquestionnai_exit
    2020-01-13 22:28:49 0331 DROP FIELDS recordset_id FROM client_agesstagesquestionnai_exit
    2020-01-13 22:28:49 0332 DROP FIELDS [Entry Exit Id] FROM client_agesstagesquestionnai_exit
    2020-01-13 22:28:49 0335 FieldMapSaClientExit:
    2020-01-13 22:28:49 0336   Mapping SQL
    2020-01-13 22:28:49 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:49 0338     FROM da_question dq
    2020-01-13 22:28:49 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0340     WHERE
    2020-01-13 22:28:49 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:49 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:49 0344     UNION
    2020-01-13 22:28:49 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:49 0346     FROM da_question dq
    2020-01-13 22:28:49 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0348     WHERE
    2020-01-13 22:28:49 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:49 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:49 0352      UNION
    2020-01-13 22:28:49 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:49 0354     FROM da_question dq
    2020-01-13 22:28:49 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0356     WHERE
    2020-01-13 22:28:49 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:49 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:49 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:49 0361     UNION
    2020-01-13 22:28:49 0362 
    2020-01-13 22:28:49 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:49 0364     FROM da_question dq
    2020-01-13 22:28:49 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0366     WHERE
    2020-01-13 22:28:49 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:49 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:49 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:49 0371     UNION   
    2020-01-13 22:28:49 0372     SELECT
    2020-01-13 22:28:49 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:49 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:49 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:49 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:49 0377     FROM da_question dq
    2020-01-13 22:28:49 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0379     WHERE
    2020-01-13 22:28:49 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:49 0382     UNION
    2020-01-13 22:28:49 0383 	SELECT
    2020-01-13 22:28:49 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:49 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:49 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:49 0387     FROM da_question dq
    2020-01-13 22:28:49 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:49 0389     WHERE
    2020-01-13 22:28:49 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:49 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:49      	2 fields found: oldnames, newnames, 
    2020-01-13 22:28:49      1,304 lines fetched
    2020-01-13 22:28:49 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:28:49 0394 DROP TABLE client_agesstagesquestionnai
    2020-01-13 22:28:49 0396 LET varStepName='STEPEXIT_' & 1 & '_of_' & 50
    2020-01-13 22:28:49 0397 STEPEXIT_1_of_50: select 1
    2020-01-13 22:28:50      	1 fields found: ?column?, 
    2020-01-13 22:28:50      1 lines fetched
    2020-01-13 22:28:50 0398 DROP TABLE STEPEXIT_1_of_50
    2020-01-13 22:28:50 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:28:50 0401 NEXT
    2020-01-13 22:28:50 0228 LET varRecordSetTableName=Peek('sp_table_name',2,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:50 0229 LET varRecordSetQlikName=Peek('qlik_table_name',2,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:50 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',2,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:50 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('arrestrecord') <= 20),'arrestrecord' & 'end_1',left('arrestrecord', 20)& 'end_1')
    2020-01-13 22:28:50 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'arrestrecord' & 'enddate'
    2020-01-13 22:28:50 0233 LET varRecordSetQlikName_Entry= 'client_arrestrecord' & '_entry'
    2020-01-13 22:28:50 0234 LET varRecordSetQlikName_Exit='client_arrestrecord'& '_exit'
    2020-01-13 22:28:50 0236 LET varRecordSetQlikName_Interim='client_arrestrecord' & '_review'
    2020-01-13 22:28:50 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_arrestrecord', (len('client_arrestrecord'))-7))
    2020-01-13 22:28:50 0239 client_arrestrecord:
    2020-01-13 22:28:50 0240   SELECT * FROM qlik_sclient_arrestrecord
    2020-01-13 22:28:50      	9 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, 
    2020-01-13 22:28:50      249 lines fetched
    2020-01-13 22:28:50 0243 client_arrestrecord_exit:
    2020-01-13 22:28:50 0244   Noconcatenate
    2020-01-13 22:28:50 0245   LOAD DISTINCT
    2020-01-13 22:28:50 0246   *,
    2020-01-13 22:28:50 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:50 0248   recordset_id AS 'client_ARRESTRECORDRECORDSET_ID_exit'
    2020-01-13 22:28:50 0249   RESIDENT client_arrestrecord
    2020-01-13 22:28:50      	11 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, %exit_recordset_id, client_ARRESTRECORDRECORDSET_ID_exit, 
    2020-01-13 22:28:50      249 lines fetched
    2020-01-13 22:28:50 0251 client_arrestrecord:
    2020-01-13 22:28:50 0252   SELECT * FROM qlik_sclient_arrestrecord
    2020-01-13 22:28:50      	9 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, 
    2020-01-13 22:28:50      498 lines fetched
    2020-01-13 22:28:50 0254 CustomEndFieldCheck:
    2020-01-13 22:28:50 0255   SELECT *
    2020-01-13 22:28:50 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'arrestrecordend_1'
    2020-01-13 22:28:50      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:28:50      0 lines fetched
    2020-01-13 22:28:50 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'arrestrecordend_1','arrestrecordenddate')
    2020-01-13 22:28:50 0262 RS_Exit:
    2020-01-13 22:28:50 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:50 0264   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:28:50 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:50 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:50 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:50 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:50 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:28:50 0270   WHERE 
    2020-01-13 22:28:50 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:28:50 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:50 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:28:50 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:28:50 0275   AND ((((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:28:50 0276                    OR (((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.arrestrecordenddate::DATE >= ee.exit_date::DATE) OR ((ft.arrestrecordenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:28:50 0277   
    2020-01-13 22:28:50 0278   UNION
    2020-01-13 22:28:50 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:50 0280   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:28:50 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:50 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:50 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:50 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:50 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:28:50 0286   WHERE 
    2020-01-13 22:28:50 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:28:50 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:50 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:28:50 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:28:50 0291   AND ((((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:28:50 0292                    OR (((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.arrestrecordenddate::DATE >= ee.exit_date::DATE) OR ((ft.arrestrecordenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:51      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:51      4 lines fetched
    2020-01-13 22:28:51 0296 RS_Exit_Explicit:
    2020-01-13 22:28:51 0297   Noconcatenate
    2020-01-13 22:28:51 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:51 0299   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:28:51 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:51 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:51 0302   WHERE 
    2020-01-13 22:28:51 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:51 0304   AND ((((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.arrestrecordenddate::DATE IS NULL)) 
    2020-01-13 22:28:51 0305                    OR (((ft.arrestrecordstartdate::DATE <= ee.exit_date::DATE) OR ((ft.arrestrecordstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.arrestrecordenddate::DATE >= ee.exit_date::DATE) OR ((ft.arrestrecordenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:51      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:51      15 lines fetched
    2020-01-13 22:28:51 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:51 0310   LOAD
    2020-01-13 22:28:51 0311   entry_exit_id, 
    2020-01-13 22:28:51 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:51 0313   question_id as %exitquestionid,
    2020-01-13 22:28:51 0314   provider_creating_id
    2020-01-13 22:28:51 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:51      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:51      25,619 lines fetched
    2020-01-13 22:28:51 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:51 0318 INNER JOIN(client_arrestrecord_exit)
    2020-01-13 22:28:51 0319   LOAD DISTINCT
    2020-01-13 22:28:51 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:51 0321   recordset_id,
    2020-01-13 22:28:51 0322   provider_creating_id AS [client_ARRESTRECORD_Provider_Creating_Exit],
    2020-01-13 22:28:51 0323   name AS [client_ARRESTRECORD_Provider_Name_Creating_Exit],
    2020-01-13 22:28:51 0324   user_creating_id AS [client_ARRESTRECORD_User_Created_By_Id_Exit],
    2020-01-13 22:28:51 0325   user_name AS [client_ARRESTRECORD_User_Created_By_Exit]
    2020-01-13 22:28:51 0326   RESIDENT RS_Exit
    2020-01-13 22:28:51      	6 fields found: Entry Exit Id, recordset_id, client_ARRESTRECORD_Provider_Creating_Exit, client_ARRESTRECORD_Provider_Name_Creating_Exit, client_ARRESTRECORD_User_Created_By_Id_Exit, client_ARRESTRECORD_User_Created_By_Exit, 
    2020-01-13 22:28:51      4 lines fetched
    2020-01-13 22:28:51      Joining/Keeping
    2020-01-13 22:28:51 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:51 0330 DROP FIELDS client_id FROM client_arrestrecord_exit
    2020-01-13 22:28:51 0331 DROP FIELDS recordset_id FROM client_arrestrecord_exit
    2020-01-13 22:28:51 0332 DROP FIELDS [Entry Exit Id] FROM client_arrestrecord_exit
    2020-01-13 22:28:51 0335 FieldMapSaClientExit:
    2020-01-13 22:28:51 0336   Mapping SQL
    2020-01-13 22:28:51 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:51 0338     FROM da_question dq
    2020-01-13 22:28:51 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0340     WHERE
    2020-01-13 22:28:51 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:51 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:51 0344     UNION
    2020-01-13 22:28:51 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:51 0346     FROM da_question dq
    2020-01-13 22:28:51 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0348     WHERE
    2020-01-13 22:28:51 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:51 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:51 0352      UNION
    2020-01-13 22:28:51 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:51 0354     FROM da_question dq
    2020-01-13 22:28:51 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0356     WHERE
    2020-01-13 22:28:51 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:51 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:51 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:51 0361     UNION
    2020-01-13 22:28:51 0362 
    2020-01-13 22:28:51 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:51 0364     FROM da_question dq
    2020-01-13 22:28:51 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0366     WHERE
    2020-01-13 22:28:51 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:51 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:51 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:51 0371     UNION   
    2020-01-13 22:28:51 0372     SELECT
    2020-01-13 22:28:51 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:51 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:51 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:51 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:51 0377     FROM da_question dq
    2020-01-13 22:28:51 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0379     WHERE
    2020-01-13 22:28:51 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:51 0382     UNION
    2020-01-13 22:28:51 0383 	SELECT
    2020-01-13 22:28:51 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:51 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:51 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:51 0387     FROM da_question dq
    2020-01-13 22:28:51 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:51 0389     WHERE
    2020-01-13 22:28:51 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:51 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:51      	2 fields found: oldnames, newnames, 
    2020-01-13 22:28:51      1,304 lines fetched
    2020-01-13 22:28:51 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:28:51 0394 DROP TABLE client_arrestrecord
    2020-01-13 22:28:51 0396 LET varStepName='STEPEXIT_' & 2 & '_of_' & 50
    2020-01-13 22:28:51 0397 STEPEXIT_2_of_50: select 1
    2020-01-13 22:28:51      	1 fields found: ?column?, 
    2020-01-13 22:28:51      1 lines fetched
    2020-01-13 22:28:51 0398 DROP TABLE STEPEXIT_2_of_50
    2020-01-13 22:28:51 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:28:51 0401 NEXT
    2020-01-13 22:28:51 0228 LET varRecordSetTableName=Peek('sp_table_name',3,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:51 0229 LET varRecordSetQlikName=Peek('qlik_table_name',3,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:51 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',3,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:51 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bnlstatus') <= 20),'bnlstatus' & 'end_1',left('bnlstatus', 20)& 'end_1')
    2020-01-13 22:28:51 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'bnlstatus' & 'enddate'
    2020-01-13 22:28:51 0233 LET varRecordSetQlikName_Entry= 'client_bnlstatus' & '_entry'
    2020-01-13 22:28:51 0234 LET varRecordSetQlikName_Exit='client_bnlstatus'& '_exit'
    2020-01-13 22:28:51 0236 LET varRecordSetQlikName_Interim='client_bnlstatus' & '_review'
    2020-01-13 22:28:51 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_bnlstatus', (len('client_bnlstatus'))-7))
    2020-01-13 22:28:51 0239 client_bnlstatus:
    2020-01-13 22:28:51 0240   SELECT * FROM qlik_sclient_bnlstatus
    2020-01-13 22:28:52      	7 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, 
    2020-01-13 22:28:52      3,117 lines fetched
    2020-01-13 22:28:52 0243 client_bnlstatus_exit:
    2020-01-13 22:28:52 0244   Noconcatenate
    2020-01-13 22:28:52 0245   LOAD DISTINCT
    2020-01-13 22:28:52 0246   *,
    2020-01-13 22:28:52 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:52 0248   recordset_id AS 'client_BNLSTATUSRECORDSET_ID_exit'
    2020-01-13 22:28:52 0249   RESIDENT client_bnlstatus
    2020-01-13 22:28:52      	9 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, %exit_recordset_id, client_BNLSTATUSRECORDSET_ID_exit, 
    2020-01-13 22:28:52      3,117 lines fetched
    2020-01-13 22:28:52 0251 client_bnlstatus:
    2020-01-13 22:28:52 0252   SELECT * FROM qlik_sclient_bnlstatus
    2020-01-13 22:28:52      	7 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, 
    2020-01-13 22:28:52      6,234 lines fetched
    2020-01-13 22:28:52 0254 CustomEndFieldCheck:
    2020-01-13 22:28:52 0255   SELECT *
    2020-01-13 22:28:52 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bnlstatusend_1'
    2020-01-13 22:28:52      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:28:52      0 lines fetched
    2020-01-13 22:28:52 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bnlstatusend_1','bnlstatusenddate')
    2020-01-13 22:28:52 0262 RS_Exit:
    2020-01-13 22:28:52 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:52 0264   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:28:52 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:52 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:52 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:52 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:52 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:28:52 0270   WHERE 
    2020-01-13 22:28:52 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:28:52 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:52 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:28:52 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:28:52 0275   AND ((((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:28:52 0276                    OR (((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bnlstatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.bnlstatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:28:52 0277   
    2020-01-13 22:28:52 0278   UNION
    2020-01-13 22:28:52 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:52 0280   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:28:52 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:52 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:52 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:52 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:52 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:28:52 0286   WHERE 
    2020-01-13 22:28:52 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:28:52 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:52 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:28:52 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:28:52 0291   AND ((((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:28:52 0292                    OR (((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bnlstatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.bnlstatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:53      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:53      1,044 lines fetched
    2020-01-13 22:28:53 0296 RS_Exit_Explicit:
    2020-01-13 22:28:53 0297   Noconcatenate
    2020-01-13 22:28:53 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:53 0299   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:28:53 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:53 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:53 0302   WHERE 
    2020-01-13 22:28:53 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:53 0304   AND ((((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bnlstatusenddate::DATE IS NULL)) 
    2020-01-13 22:28:53 0305                    OR (((ft.bnlstatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.bnlstatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bnlstatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.bnlstatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:53      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:53      4,872 lines fetched
    2020-01-13 22:28:53 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:53 0310   LOAD
    2020-01-13 22:28:53 0311   entry_exit_id, 
    2020-01-13 22:28:53 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:53 0313   question_id as %exitquestionid,
    2020-01-13 22:28:53 0314   provider_creating_id
    2020-01-13 22:28:53 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:53      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:53      30,491 lines fetched
    2020-01-13 22:28:53 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:53 0318 INNER JOIN(client_bnlstatus_exit)
    2020-01-13 22:28:53 0319   LOAD DISTINCT
    2020-01-13 22:28:53 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:53 0321   recordset_id,
    2020-01-13 22:28:53 0322   provider_creating_id AS [client_BNLSTATUS_Provider_Creating_Exit],
    2020-01-13 22:28:53 0323   name AS [client_BNLSTATUS_Provider_Name_Creating_Exit],
    2020-01-13 22:28:53 0324   user_creating_id AS [client_BNLSTATUS_User_Created_By_Id_Exit],
    2020-01-13 22:28:53 0325   user_name AS [client_BNLSTATUS_User_Created_By_Exit]
    2020-01-13 22:28:53 0326   RESIDENT RS_Exit
    2020-01-13 22:28:53      	6 fields found: Entry Exit Id, recordset_id, client_BNLSTATUS_Provider_Creating_Exit, client_BNLSTATUS_Provider_Name_Creating_Exit, client_BNLSTATUS_User_Created_By_Id_Exit, client_BNLSTATUS_User_Created_By_Exit, 
    2020-01-13 22:28:53      1,044 lines fetched
    2020-01-13 22:28:53      Joining/Keeping
    2020-01-13 22:28:53 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:53 0330 DROP FIELDS client_id FROM client_bnlstatus_exit
    2020-01-13 22:28:53 0331 DROP FIELDS recordset_id FROM client_bnlstatus_exit
    2020-01-13 22:28:53 0332 DROP FIELDS [Entry Exit Id] FROM client_bnlstatus_exit
    2020-01-13 22:28:53 0335 FieldMapSaClientExit:
    2020-01-13 22:28:53 0336   Mapping SQL
    2020-01-13 22:28:53 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:53 0338     FROM da_question dq
    2020-01-13 22:28:53 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0340     WHERE
    2020-01-13 22:28:53 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:53 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:53 0344     UNION
    2020-01-13 22:28:53 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:53 0346     FROM da_question dq
    2020-01-13 22:28:53 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0348     WHERE
    2020-01-13 22:28:53 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:53 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:53 0352      UNION
    2020-01-13 22:28:53 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:53 0354     FROM da_question dq
    2020-01-13 22:28:53 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0356     WHERE
    2020-01-13 22:28:53 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:53 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:53 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:53 0361     UNION
    2020-01-13 22:28:53 0362 
    2020-01-13 22:28:53 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:53 0364     FROM da_question dq
    2020-01-13 22:28:53 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0366     WHERE
    2020-01-13 22:28:53 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:53 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:53 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:53 0371     UNION   
    2020-01-13 22:28:53 0372     SELECT
    2020-01-13 22:28:53 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:53 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:53 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:53 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:53 0377     FROM da_question dq
    2020-01-13 22:28:53 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0379     WHERE
    2020-01-13 22:28:53 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:53 0382     UNION
    2020-01-13 22:28:53 0383 	SELECT
    2020-01-13 22:28:53 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:53 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:53 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:53 0387     FROM da_question dq
    2020-01-13 22:28:53 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:53 0389     WHERE
    2020-01-13 22:28:53 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:53 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:28:54      1,304 lines fetched
    2020-01-13 22:28:54 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:28:54 0394 DROP TABLE client_bnlstatus
    2020-01-13 22:28:54 0396 LET varStepName='STEPEXIT_' & 3 & '_of_' & 50
    2020-01-13 22:28:54 0397 STEPEXIT_3_of_50: select 1
    2020-01-13 22:28:54      	1 fields found: ?column?, 
    2020-01-13 22:28:54      1 lines fetched
    2020-01-13 22:28:54 0398 DROP TABLE STEPEXIT_3_of_50
    2020-01-13 22:28:54 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:28:54 0401 NEXT
    2020-01-13 22:28:54 0228 LET varRecordSetTableName=Peek('sp_table_name',4,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:54 0229 LET varRecordSetQlikName=Peek('qlik_table_name',4,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:54 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',4,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:54 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bridgeprogramcriteria') <= 20),'bridgeprogramcriteria' & 'end_1',left('bridgeprogramcriteria', 20)& 'end_1')
    2020-01-13 22:28:54 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'bridgeprogramcriteria' & 'enddate'
    2020-01-13 22:28:54 0233 LET varRecordSetQlikName_Entry= 'client_bridgeprogramcriteria' & '_entry'
    2020-01-13 22:28:54 0234 LET varRecordSetQlikName_Exit='client_bridgeprogramcriteria'& '_exit'
    2020-01-13 22:28:54 0236 LET varRecordSetQlikName_Interim='client_bridgeprogramcriteria' & '_review'
    2020-01-13 22:28:54 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_bridgeprogramcriteria', (len('client_bridgeprogramcriteria'))-7))
    2020-01-13 22:28:54 0239 client_bridgeprogramcriteria:
    2020-01-13 22:28:54 0240   SELECT * FROM qlik_sclient_bridgeprogramcriteria
    2020-01-13 22:28:54      	6 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, 
    2020-01-13 22:28:54      4,854 lines fetched
    2020-01-13 22:28:54 0243 client_bridgeprogramcriteria_exit:
    2020-01-13 22:28:54 0244   Noconcatenate
    2020-01-13 22:28:54 0245   LOAD DISTINCT
    2020-01-13 22:28:54 0246   *,
    2020-01-13 22:28:54 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:54 0248   recordset_id AS 'client_BRIDGEPROGRAMCRITERIARECORDSET_ID_exit'
    2020-01-13 22:28:54 0249   RESIDENT client_bridgeprogramcriteria
    2020-01-13 22:28:54      	8 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, %exit_recordset_id, client_BRIDGEPROGRAMCRITERIARECORDSET_ID_exit, 
    2020-01-13 22:28:54      4,854 lines fetched
    2020-01-13 22:28:55 0251 client_bridgeprogramcriteria:
    2020-01-13 22:28:55 0252   SELECT * FROM qlik_sclient_bridgeprogramcriteria
    2020-01-13 22:28:55      	6 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, 
    2020-01-13 22:28:55      9,708 lines fetched
    2020-01-13 22:28:55 0254 CustomEndFieldCheck:
    2020-01-13 22:28:55 0255   SELECT *
    2020-01-13 22:28:55 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bridgeprogramcriteriend_1'
    2020-01-13 22:28:56      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:28:56      0 lines fetched
    2020-01-13 22:28:56 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bridgeprogramcriteriend_1','bridgeprogramcriteriaenddate')
    2020-01-13 22:28:56 0262 RS_Exit:
    2020-01-13 22:28:56 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:56 0264   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:28:56 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:56 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:56 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:56 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:56 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:28:56 0270   WHERE 
    2020-01-13 22:28:56 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:28:56 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:56 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:28:56 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:28:56 0275   AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:28:56 0276                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:28:56 0277   
    2020-01-13 22:28:56 0278   UNION
    2020-01-13 22:28:56 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:56 0280   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:28:56 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:56 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:56 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:56 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:56 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:28:56 0286   WHERE 
    2020-01-13 22:28:56 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:28:56 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:56 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:28:56 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:28:56 0291   AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:28:56 0292                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:57      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:57      4,639 lines fetched
    2020-01-13 22:28:57 0296 RS_Exit_Explicit:
    2020-01-13 22:28:57 0297   Noconcatenate
    2020-01-13 22:28:57 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:57 0299   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:28:57 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:57 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:57 0302   WHERE 
    2020-01-13 22:28:57 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:57 0304   AND ((((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.bridgeprogramcriteriaenddate::DATE IS NULL)) 
    2020-01-13 22:28:57 0305                    OR (((ft.bridgeprogramcriteriastartdate::DATE <= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.bridgeprogramcriteriaenddate::DATE >= ee.exit_date::DATE) OR ((ft.bridgeprogramcriteriaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:57      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:57      6,045 lines fetched
    2020-01-13 22:28:57 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:57 0310   LOAD
    2020-01-13 22:28:57 0311   entry_exit_id, 
    2020-01-13 22:28:57 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:57 0313   question_id as %exitquestionid,
    2020-01-13 22:28:57 0314   provider_creating_id
    2020-01-13 22:28:57 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:57      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:57      36,536 lines fetched
    2020-01-13 22:28:57 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:57 0318 INNER JOIN(client_bridgeprogramcriteria_exit)
    2020-01-13 22:28:57 0319   LOAD DISTINCT
    2020-01-13 22:28:57 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:57 0321   recordset_id,
    2020-01-13 22:28:57 0322   provider_creating_id AS [client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Exit],
    2020-01-13 22:28:57 0323   name AS [client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Exit],
    2020-01-13 22:28:57 0324   user_creating_id AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Exit],
    2020-01-13 22:28:57 0325   user_name AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Exit]
    2020-01-13 22:28:57 0326   RESIDENT RS_Exit
    2020-01-13 22:28:57      	6 fields found: Entry Exit Id, recordset_id, client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Exit, client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Exit, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Exit, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Exit, 
    2020-01-13 22:28:57      4,639 lines fetched
    2020-01-13 22:28:57      Joining/Keeping
    2020-01-13 22:28:57 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:57 0330 DROP FIELDS client_id FROM client_bridgeprogramcriteria_exit
    2020-01-13 22:28:57 0331 DROP FIELDS recordset_id FROM client_bridgeprogramcriteria_exit
    2020-01-13 22:28:57 0332 DROP FIELDS [Entry Exit Id] FROM client_bridgeprogramcriteria_exit
    2020-01-13 22:28:57 0335 FieldMapSaClientExit:
    2020-01-13 22:28:57 0336   Mapping SQL
    2020-01-13 22:28:57 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:57 0338     FROM da_question dq
    2020-01-13 22:28:57 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0340     WHERE
    2020-01-13 22:28:57 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:57 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:57 0344     UNION
    2020-01-13 22:28:57 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:57 0346     FROM da_question dq
    2020-01-13 22:28:57 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0348     WHERE
    2020-01-13 22:28:57 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:57 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:57 0352      UNION
    2020-01-13 22:28:57 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:57 0354     FROM da_question dq
    2020-01-13 22:28:57 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0356     WHERE
    2020-01-13 22:28:57 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:57 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:57 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:57 0361     UNION
    2020-01-13 22:28:57 0362 
    2020-01-13 22:28:57 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:57 0364     FROM da_question dq
    2020-01-13 22:28:57 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0366     WHERE
    2020-01-13 22:28:57 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:57 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:57 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:57 0371     UNION   
    2020-01-13 22:28:57 0372     SELECT
    2020-01-13 22:28:57 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:57 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:57 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:57 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:57 0377     FROM da_question dq
    2020-01-13 22:28:57 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0379     WHERE
    2020-01-13 22:28:57 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:57 0382     UNION
    2020-01-13 22:28:57 0383 	SELECT
    2020-01-13 22:28:57 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:57 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:57 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:57 0387     FROM da_question dq
    2020-01-13 22:28:57 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:57 0389     WHERE
    2020-01-13 22:28:57 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:57 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:58      	2 fields found: oldnames, newnames, 
    2020-01-13 22:28:58      1,304 lines fetched
    2020-01-13 22:28:58 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:28:58 0394 DROP TABLE client_bridgeprogramcriteria
    2020-01-13 22:28:58 0396 LET varStepName='STEPEXIT_' & 4 & '_of_' & 50
    2020-01-13 22:28:58 0397 STEPEXIT_4_of_50: select 1
    2020-01-13 22:28:58      	1 fields found: ?column?, 
    2020-01-13 22:28:58      1 lines fetched
    2020-01-13 22:28:58 0398 DROP TABLE STEPEXIT_4_of_50
    2020-01-13 22:28:58 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:28:58 0401 NEXT
    2020-01-13 22:28:58 0228 LET varRecordSetTableName=Peek('sp_table_name',5,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:58 0229 LET varRecordSetQlikName=Peek('qlik_table_name',5,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:58 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',5,'RECORDSET_LIST_EXIT')
    2020-01-13 22:28:58 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('cedocumentationreview') <= 20),'cedocumentationreview' & 'end_1',left('cedocumentationreview', 20)& 'end_1')
    2020-01-13 22:28:58 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'cedocumentationreview' & 'enddate'
    2020-01-13 22:28:58 0233 LET varRecordSetQlikName_Entry= 'client_cedocumentationreview' & '_entry'
    2020-01-13 22:28:58 0234 LET varRecordSetQlikName_Exit='client_cedocumentationreview'& '_exit'
    2020-01-13 22:28:58 0236 LET varRecordSetQlikName_Interim='client_cedocumentationreview' & '_review'
    2020-01-13 22:28:58 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_cedocumentationreview', (len('client_cedocumentationreview'))-7))
    2020-01-13 22:28:58 0239 client_cedocumentationreview:
    2020-01-13 22:28:58 0240   SELECT * FROM qlik_sclient_cedocumentationreview
    2020-01-13 22:28:58      	6 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, 
    2020-01-13 22:28:58      712 lines fetched
    2020-01-13 22:28:58 0243 client_cedocumentationreview_exit:
    2020-01-13 22:28:58 0244   Noconcatenate
    2020-01-13 22:28:58 0245   LOAD DISTINCT
    2020-01-13 22:28:58 0246   *,
    2020-01-13 22:28:58 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:58 0248   recordset_id AS 'client_CEDOCUMENTATIONREVIEWRECORDSET_ID_exit'
    2020-01-13 22:28:58 0249   RESIDENT client_cedocumentationreview
    2020-01-13 22:28:58      	8 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, %exit_recordset_id, client_CEDOCUMENTATIONREVIEWRECORDSET_ID_exit, 
    2020-01-13 22:28:58      712 lines fetched
    2020-01-13 22:28:58 0251 client_cedocumentationreview:
    2020-01-13 22:28:58 0252   SELECT * FROM qlik_sclient_cedocumentationreview
    2020-01-13 22:28:59      	6 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, 
    2020-01-13 22:28:59      1,424 lines fetched
    2020-01-13 22:28:59 0254 CustomEndFieldCheck:
    2020-01-13 22:28:59 0255   SELECT *
    2020-01-13 22:28:59 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'cedocumentationrevieend_1'
    2020-01-13 22:28:59      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:28:59      0 lines fetched
    2020-01-13 22:28:59 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'cedocumentationrevieend_1','cedocumentationreviewenddate')
    2020-01-13 22:28:59 0262 RS_Exit:
    2020-01-13 22:28:59 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:59 0264   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:28:59 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:59 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:59 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:59 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:59 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:28:59 0270   WHERE 
    2020-01-13 22:28:59 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:28:59 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:59 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:28:59 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:28:59 0275   AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:28:59 0276                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.cedocumentationreviewenddate::DATE >= ee.exit_date::DATE) OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:28:59 0277   
    2020-01-13 22:28:59 0278   UNION
    2020-01-13 22:28:59 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:28:59 0280   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:28:59 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:59 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:28:59 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:28:59 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:59 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:28:59 0286   WHERE 
    2020-01-13 22:28:59 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:28:59 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:28:59 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:28:59 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:28:59 0291   AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:28:59 0292                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.cedocumentationreviewenddate::DATE >= ee.exit_date::DATE) OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:59      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:28:59      263 lines fetched
    2020-01-13 22:28:59 0296 RS_Exit_Explicit:
    2020-01-13 22:28:59 0297   Noconcatenate
    2020-01-13 22:28:59 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:28:59 0299   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:28:59 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:28:59 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:28:59 0302   WHERE 
    2020-01-13 22:28:59 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:28:59 0304   AND ((((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.cedocumentationreviewenddate::DATE IS NULL)) 
    2020-01-13 22:28:59 0305                    OR (((ft.cedocumentationreviewstartdate::DATE <= ee.exit_date::DATE) OR ((ft.cedocumentationreviewstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.cedocumentationreviewenddate::DATE >= ee.exit_date::DATE) OR ((ft.cedocumentationreviewenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:28:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:28:59      1,173 lines fetched
    2020-01-13 22:28:59 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:28:59 0310   LOAD
    2020-01-13 22:28:59 0311   entry_exit_id, 
    2020-01-13 22:28:59 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:28:59 0313   question_id as %exitquestionid,
    2020-01-13 22:28:59 0314   provider_creating_id
    2020-01-13 22:28:59 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:28:59      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:28:59      37,709 lines fetched
    2020-01-13 22:28:59 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:28:59 0318 INNER JOIN(client_cedocumentationreview_exit)
    2020-01-13 22:28:59 0319   LOAD DISTINCT
    2020-01-13 22:28:59 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:28:59 0321   recordset_id,
    2020-01-13 22:28:59 0322   provider_creating_id AS [client_CEDOCUMENTATIONREVIEW_Provider_Creating_Exit],
    2020-01-13 22:28:59 0323   name AS [client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Exit],
    2020-01-13 22:28:59 0324   user_creating_id AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Exit],
    2020-01-13 22:28:59 0325   user_name AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Exit]
    2020-01-13 22:28:59 0326   RESIDENT RS_Exit
    2020-01-13 22:28:59      	6 fields found: Entry Exit Id, recordset_id, client_CEDOCUMENTATIONREVIEW_Provider_Creating_Exit, client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Exit, client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Exit, client_CEDOCUMENTATIONREVIEW_User_Created_By_Exit, 
    2020-01-13 22:28:59      263 lines fetched
    2020-01-13 22:28:59      Joining/Keeping
    2020-01-13 22:28:59 0328 DROP TABLE RS_Exit
    2020-01-13 22:28:59 0330 DROP FIELDS client_id FROM client_cedocumentationreview_exit
    2020-01-13 22:28:59 0331 DROP FIELDS recordset_id FROM client_cedocumentationreview_exit
    2020-01-13 22:28:59 0332 DROP FIELDS [Entry Exit Id] FROM client_cedocumentationreview_exit
    2020-01-13 22:28:59 0335 FieldMapSaClientExit:
    2020-01-13 22:28:59 0336   Mapping SQL
    2020-01-13 22:28:59 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:59 0338     FROM da_question dq
    2020-01-13 22:28:59 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0340     WHERE
    2020-01-13 22:28:59 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:28:59 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:28:59 0344     UNION
    2020-01-13 22:28:59 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:59 0346     FROM da_question dq
    2020-01-13 22:28:59 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0348     WHERE
    2020-01-13 22:28:59 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:28:59 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:28:59 0352      UNION
    2020-01-13 22:28:59 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:28:59 0354     FROM da_question dq
    2020-01-13 22:28:59 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0356     WHERE
    2020-01-13 22:28:59 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:28:59 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:28:59 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:59 0361     UNION
    2020-01-13 22:28:59 0362 
    2020-01-13 22:28:59 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:28:59 0364     FROM da_question dq
    2020-01-13 22:28:59 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0366     WHERE
    2020-01-13 22:28:59 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:28:59 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:28:59 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:28:59 0371     UNION   
    2020-01-13 22:28:59 0372     SELECT
    2020-01-13 22:28:59 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:28:59 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:59 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:59 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:28:59 0377     FROM da_question dq
    2020-01-13 22:28:59 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0379     WHERE
    2020-01-13 22:28:59 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:28:59 0382     UNION
    2020-01-13 22:28:59 0383 	SELECT
    2020-01-13 22:28:59 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:59 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:28:59 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:28:59 0387     FROM da_question dq
    2020-01-13 22:28:59 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:28:59 0389     WHERE
    2020-01-13 22:28:59 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:28:59 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:29:00      	2 fields found: oldnames, newnames, 
    2020-01-13 22:29:00      1,304 lines fetched
    2020-01-13 22:29:00 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:29:00 0394 DROP TABLE client_cedocumentationreview
    2020-01-13 22:29:00 0396 LET varStepName='STEPEXIT_' & 5 & '_of_' & 50
    2020-01-13 22:29:00 0397 STEPEXIT_5_of_50: select 1
    2020-01-13 22:29:00      	1 fields found: ?column?, 
    2020-01-13 22:29:00      1 lines fetched
    2020-01-13 22:29:00 0398 DROP TABLE STEPEXIT_5_of_50
    2020-01-13 22:29:00 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:29:00 0401 NEXT
    2020-01-13 22:29:00 0228 LET varRecordSetTableName=Peek('sp_table_name',6,'RECORDSET_LIST_EXIT')
    2020-01-13 22:29:00 0229 LET varRecordSetQlikName=Peek('qlik_table_name',6,'RECORDSET_LIST_EXIT')
    2020-01-13 22:29:00 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',6,'RECORDSET_LIST_EXIT')
    2020-01-13 22:29:00 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('disabilities_1') <= 20),'disabilities_1' & 'end_1',left('disabilities_1', 20)& 'end_1')
    2020-01-13 22:29:00 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'disabilities_1' & 'enddate'
    2020-01-13 22:29:00 0233 LET varRecordSetQlikName_Entry= 'client_disabilities_1' & '_entry'
    2020-01-13 22:29:00 0234 LET varRecordSetQlikName_Exit='client_disabilities_1'& '_exit'
    2020-01-13 22:29:00 0236 LET varRecordSetQlikName_Interim='client_disabilities_1' & '_review'
    2020-01-13 22:29:00 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_disabilities_1', (len('client_disabilities_1'))-7))
    2020-01-13 22:29:00 0239 client_disabilities_1:
    2020-01-13 22:29:00 0240   SELECT * FROM qlik_sclient_disabilities_1
    2020-01-13 22:29:33      	9 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, 
    2020-01-13 22:29:33      484,147 lines fetched
    2020-01-13 22:29:33 0243 client_disabilities_1_exit:
    2020-01-13 22:29:33 0244   Noconcatenate
    2020-01-13 22:29:33 0245   LOAD DISTINCT
    2020-01-13 22:29:33 0246   *,
    2020-01-13 22:29:33 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:29:33 0248   recordset_id AS 'client_DISABILITIES_1RECORDSET_ID_exit'
    2020-01-13 22:29:33 0249   RESIDENT client_disabilities_1
    2020-01-13 22:29:34      	11 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, %exit_recordset_id, client_DISABILITIES_1RECORDSET_ID_exit, 
    2020-01-13 22:29:34      484,147 lines fetched
    2020-01-13 22:29:34 0251 client_disabilities_1:
    2020-01-13 22:29:34 0252   SELECT * FROM qlik_sclient_disabilities_1
    2020-01-13 22:30:07      	9 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, 
    2020-01-13 22:30:07      968,294 lines fetched
    2020-01-13 22:30:07 0254 CustomEndFieldCheck:
    2020-01-13 22:30:07 0255   SELECT *
    2020-01-13 22:30:07 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'disabilities_1end_1'
    2020-01-13 22:30:08      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:30:08      0 lines fetched
    2020-01-13 22:30:08 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'disabilities_1end_1','disabilities_1enddate')
    2020-01-13 22:30:08 0262 RS_Exit:
    2020-01-13 22:30:08 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:30:08 0264   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:30:08 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:30:08 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:30:08 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:30:08 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:30:08 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:30:08 0270   WHERE 
    2020-01-13 22:30:08 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:30:08 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:30:08 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:30:08 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:30:08 0275   AND ((((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:30:08 0276                    OR (((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.disabilities_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.disabilities_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:30:08 0277   
    2020-01-13 22:30:08 0278   UNION
    2020-01-13 22:30:08 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:30:08 0280   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:30:08 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:30:08 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:30:08 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:30:08 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:30:08 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:30:08 0286   WHERE 
    2020-01-13 22:30:08 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:30:08 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:30:08 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:30:08 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:30:08 0291   AND ((((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:30:08 0292                    OR (((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.disabilities_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.disabilities_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:13      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:31:13      199,035 lines fetched
    2020-01-13 22:31:13 0296 RS_Exit_Explicit:
    2020-01-13 22:31:13 0297   Noconcatenate
    2020-01-13 22:31:13 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:31:13 0299   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:31:13 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:13 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:13 0302   WHERE 
    2020-01-13 22:31:13 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:31:13 0304   AND ((((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.disabilities_1enddate::DATE IS NULL)) 
    2020-01-13 22:31:13 0305                    OR (((ft.disabilities_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.disabilities_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.disabilities_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.disabilities_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:46      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:31:46      364,894 lines fetched
    2020-01-13 22:31:46 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:31:46 0310   LOAD
    2020-01-13 22:31:46 0311   entry_exit_id, 
    2020-01-13 22:31:46 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:31:46 0313   question_id as %exitquestionid,
    2020-01-13 22:31:46 0314   provider_creating_id
    2020-01-13 22:31:46 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:31:46      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:31:46      402,603 lines fetched
    2020-01-13 22:31:46 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:31:46 0318 INNER JOIN(client_disabilities_1_exit)
    2020-01-13 22:31:46 0319   LOAD DISTINCT
    2020-01-13 22:31:46 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:31:46 0321   recordset_id,
    2020-01-13 22:31:46 0322   provider_creating_id AS [client_DISABILITIES_1_Provider_Creating_Exit],
    2020-01-13 22:31:46 0323   name AS [client_DISABILITIES_1_Provider_Name_Creating_Exit],
    2020-01-13 22:31:46 0324   user_creating_id AS [client_DISABILITIES_1_User_Created_By_Id_Exit],
    2020-01-13 22:31:46 0325   user_name AS [client_DISABILITIES_1_User_Created_By_Exit]
    2020-01-13 22:31:46 0326   RESIDENT RS_Exit
    2020-01-13 22:31:47      	6 fields found: Entry Exit Id, recordset_id, client_DISABILITIES_1_Provider_Creating_Exit, client_DISABILITIES_1_Provider_Name_Creating_Exit, client_DISABILITIES_1_User_Created_By_Id_Exit, client_DISABILITIES_1_User_Created_By_Exit, 
    2020-01-13 22:31:47      199,035 lines fetched
    2020-01-13 22:31:47      Joining/Keeping
    2020-01-13 22:31:47 0328 DROP TABLE RS_Exit
    2020-01-13 22:31:47 0330 DROP FIELDS client_id FROM client_disabilities_1_exit
    2020-01-13 22:31:47 0331 DROP FIELDS recordset_id FROM client_disabilities_1_exit
    2020-01-13 22:31:47 0332 DROP FIELDS [Entry Exit Id] FROM client_disabilities_1_exit
    2020-01-13 22:31:47 0335 FieldMapSaClientExit:
    2020-01-13 22:31:47 0336   Mapping SQL
    2020-01-13 22:31:47 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:47 0338     FROM da_question dq
    2020-01-13 22:31:47 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0340     WHERE
    2020-01-13 22:31:47 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:31:47 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:31:47 0344     UNION
    2020-01-13 22:31:47 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:47 0346     FROM da_question dq
    2020-01-13 22:31:47 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0348     WHERE
    2020-01-13 22:31:47 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:31:47 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:31:47 0352      UNION
    2020-01-13 22:31:47 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:47 0354     FROM da_question dq
    2020-01-13 22:31:47 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0356     WHERE
    2020-01-13 22:31:47 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:31:47 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:31:47 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:47 0361     UNION
    2020-01-13 22:31:47 0362 
    2020-01-13 22:31:47 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:47 0364     FROM da_question dq
    2020-01-13 22:31:47 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0366     WHERE
    2020-01-13 22:31:47 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:31:47 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:31:47 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:47 0371     UNION   
    2020-01-13 22:31:47 0372     SELECT
    2020-01-13 22:31:47 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:31:47 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:47 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:47 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:31:47 0377     FROM da_question dq
    2020-01-13 22:31:47 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0379     WHERE
    2020-01-13 22:31:47 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:47 0382     UNION
    2020-01-13 22:31:47 0383 	SELECT
    2020-01-13 22:31:47 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:47 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:47 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:31:47 0387     FROM da_question dq
    2020-01-13 22:31:47 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:47 0389     WHERE
    2020-01-13 22:31:47 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:47 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:48      	2 fields found: oldnames, newnames, 
    2020-01-13 22:31:48      1,304 lines fetched
    2020-01-13 22:31:48 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:31:48 0394 DROP TABLE client_disabilities_1
    2020-01-13 22:31:48 0396 LET varStepName='STEPEXIT_' & 6 & '_of_' & 50
    2020-01-13 22:31:48 0397 STEPEXIT_6_of_50: select 1
    2020-01-13 22:31:48      	1 fields found: ?column?, 
    2020-01-13 22:31:48      1 lines fetched
    2020-01-13 22:31:48 0398 DROP TABLE STEPEXIT_6_of_50
    2020-01-13 22:31:48 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:31:48 0401 NEXT
    2020-01-13 22:31:48 0228 LET varRecordSetTableName=Peek('sp_table_name',7,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:48 0229 LET varRecordSetQlikName=Peek('qlik_table_name',7,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:48 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',7,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:48 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagebridgeworkhistory') <= 20),'dupagebridgeworkhistory' & 'end_1',left('dupagebridgeworkhistory', 20)& 'end_1')
    2020-01-13 22:31:48 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagebridgeworkhistory' & 'enddate'
    2020-01-13 22:31:48 0233 LET varRecordSetQlikName_Entry= 'client_dupagebridgeworkhistory' & '_entry'
    2020-01-13 22:31:48 0234 LET varRecordSetQlikName_Exit='client_dupagebridgeworkhistory'& '_exit'
    2020-01-13 22:31:48 0236 LET varRecordSetQlikName_Interim='client_dupagebridgeworkhistory' & '_review'
    2020-01-13 22:31:48 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_dupagebridgeworkhistory', (len('client_dupagebridgeworkhistory'))-7))
    2020-01-13 22:31:48 0239 client_dupagebridgeworkhistory:
    2020-01-13 22:31:48 0240   SELECT * FROM qlik_sclient_dupagebridgeworkhistory
    2020-01-13 22:31:50      	14 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, 
    2020-01-13 22:31:50      10,408 lines fetched
    2020-01-13 22:31:50 0243 client_dupagebridgeworkhistory_exit:
    2020-01-13 22:31:50 0244   Noconcatenate
    2020-01-13 22:31:50 0245   LOAD DISTINCT
    2020-01-13 22:31:50 0246   *,
    2020-01-13 22:31:50 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:31:50 0248   recordset_id AS 'client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_exit'
    2020-01-13 22:31:50 0249   RESIDENT client_dupagebridgeworkhistory
    2020-01-13 22:31:50      	16 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, %exit_recordset_id, client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_exit, 
    2020-01-13 22:31:50      10,408 lines fetched
    2020-01-13 22:31:50 0251 client_dupagebridgeworkhistory:
    2020-01-13 22:31:50 0252   SELECT * FROM qlik_sclient_dupagebridgeworkhistory
    2020-01-13 22:31:51      	14 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, 
    2020-01-13 22:31:51      20,816 lines fetched
    2020-01-13 22:31:51 0254 CustomEndFieldCheck:
    2020-01-13 22:31:51 0255   SELECT *
    2020-01-13 22:31:51 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagebridgeworkhistend_1'
    2020-01-13 22:31:52      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:31:52      0 lines fetched
    2020-01-13 22:31:52 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagebridgeworkhistend_1','dupagebridgeworkhistoryenddate')
    2020-01-13 22:31:52 0262 RS_Exit:
    2020-01-13 22:31:52 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:31:52 0264   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:31:52 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:52 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:31:52 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:31:52 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:52 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:31:52 0270   WHERE 
    2020-01-13 22:31:52 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:31:52 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:31:52 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:31:52 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:31:52 0275   AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:31:52 0276                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:31:52 0277   
    2020-01-13 22:31:52 0278   UNION
    2020-01-13 22:31:52 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:31:52 0280   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:31:52 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:52 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:31:52 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:31:52 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:52 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:31:52 0286   WHERE 
    2020-01-13 22:31:52 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:31:52 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:31:52 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:31:52 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:31:52 0291   AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:31:52 0292                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:55      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:31:55      1,994 lines fetched
    2020-01-13 22:31:55 0296 RS_Exit_Explicit:
    2020-01-13 22:31:55 0297   Noconcatenate
    2020-01-13 22:31:55 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:31:55 0299   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:31:55 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:55 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:55 0302   WHERE 
    2020-01-13 22:31:55 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:31:55 0304   AND ((((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagebridgeworkhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:31:55 0305                    OR (((ft.dupagebridgeworkhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagebridgeworkhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagebridgeworkhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:57      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:31:57      2,595 lines fetched
    2020-01-13 22:31:57 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:31:57 0310   LOAD
    2020-01-13 22:31:57 0311   entry_exit_id, 
    2020-01-13 22:31:57 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:31:57 0313   question_id as %exitquestionid,
    2020-01-13 22:31:57 0314   provider_creating_id
    2020-01-13 22:31:57 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:31:57      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:31:57      405,198 lines fetched
    2020-01-13 22:31:57 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:31:57 0318 INNER JOIN(client_dupagebridgeworkhistory_exit)
    2020-01-13 22:31:57 0319   LOAD DISTINCT
    2020-01-13 22:31:57 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:31:57 0321   recordset_id,
    2020-01-13 22:31:57 0322   provider_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Exit],
    2020-01-13 22:31:57 0323   name AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Exit],
    2020-01-13 22:31:57 0324   user_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Exit],
    2020-01-13 22:31:57 0325   user_name AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Exit]
    2020-01-13 22:31:57 0326   RESIDENT RS_Exit
    2020-01-13 22:31:57      	6 fields found: Entry Exit Id, recordset_id, client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Exit, client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Exit, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Exit, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Exit, 
    2020-01-13 22:31:57      1,994 lines fetched
    2020-01-13 22:31:57      Joining/Keeping
    2020-01-13 22:31:57 0328 DROP TABLE RS_Exit
    2020-01-13 22:31:57 0330 DROP FIELDS client_id FROM client_dupagebridgeworkhistory_exit
    2020-01-13 22:31:57 0331 DROP FIELDS recordset_id FROM client_dupagebridgeworkhistory_exit
    2020-01-13 22:31:57 0332 DROP FIELDS [Entry Exit Id] FROM client_dupagebridgeworkhistory_exit
    2020-01-13 22:31:57 0335 FieldMapSaClientExit:
    2020-01-13 22:31:57 0336   Mapping SQL
    2020-01-13 22:31:57 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:57 0338     FROM da_question dq
    2020-01-13 22:31:57 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0340     WHERE
    2020-01-13 22:31:57 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:31:57 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:31:57 0344     UNION
    2020-01-13 22:31:57 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:57 0346     FROM da_question dq
    2020-01-13 22:31:57 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0348     WHERE
    2020-01-13 22:31:57 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:31:57 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:31:57 0352      UNION
    2020-01-13 22:31:57 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:57 0354     FROM da_question dq
    2020-01-13 22:31:57 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0356     WHERE
    2020-01-13 22:31:57 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:31:57 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:31:57 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:57 0361     UNION
    2020-01-13 22:31:57 0362 
    2020-01-13 22:31:57 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:57 0364     FROM da_question dq
    2020-01-13 22:31:57 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0366     WHERE
    2020-01-13 22:31:57 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:31:57 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:31:57 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:57 0371     UNION   
    2020-01-13 22:31:57 0372     SELECT
    2020-01-13 22:31:57 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:31:57 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:57 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:57 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:31:57 0377     FROM da_question dq
    2020-01-13 22:31:57 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0379     WHERE
    2020-01-13 22:31:57 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:57 0382     UNION
    2020-01-13 22:31:57 0383 	SELECT
    2020-01-13 22:31:57 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:57 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:57 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:31:57 0387     FROM da_question dq
    2020-01-13 22:31:57 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:57 0389     WHERE
    2020-01-13 22:31:57 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:57 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:57      	2 fields found: oldnames, newnames, 
    2020-01-13 22:31:57      1,304 lines fetched
    2020-01-13 22:31:57 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:31:57 0394 DROP TABLE client_dupagebridgeworkhistory
    2020-01-13 22:31:57 0396 LET varStepName='STEPEXIT_' & 7 & '_of_' & 50
    2020-01-13 22:31:57 0397 STEPEXIT_7_of_50: select 1
    2020-01-13 22:31:57      	1 fields found: ?column?, 
    2020-01-13 22:31:57      1 lines fetched
    2020-01-13 22:31:57 0398 DROP TABLE STEPEXIT_7_of_50
    2020-01-13 22:31:57 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:31:57 0401 NEXT
    2020-01-13 22:31:57 0228 LET varRecordSetTableName=Peek('sp_table_name',8,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:57 0229 LET varRecordSetQlikName=Peek('qlik_table_name',8,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:57 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',8,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:57 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagecoccoordinatede') <= 20),'dupagecoccoordinatede' & 'end_1',left('dupagecoccoordinatede', 20)& 'end_1')
    2020-01-13 22:31:57 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagecoccoordinatede' & 'enddate'
    2020-01-13 22:31:57 0233 LET varRecordSetQlikName_Entry= 'client_dupagecoccoordinatede' & '_entry'
    2020-01-13 22:31:57 0234 LET varRecordSetQlikName_Exit='client_dupagecoccoordinatede'& '_exit'
    2020-01-13 22:31:57 0236 LET varRecordSetQlikName_Interim='client_dupagecoccoordinatede' & '_review'
    2020-01-13 22:31:57 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_dupagecoccoordinatede', (len('client_dupagecoccoordinatede'))-7))
    2020-01-13 22:31:57 0239 client_dupagecoccoordinatede:
    2020-01-13 22:31:57 0240   SELECT * FROM qlik_sclient_dupagecoccoordinatede
    2020-01-13 22:31:58      	7 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, 
    2020-01-13 22:31:58      265 lines fetched
    2020-01-13 22:31:58 0243 client_dupagecoccoordinatede_exit:
    2020-01-13 22:31:58 0244   Noconcatenate
    2020-01-13 22:31:58 0245   LOAD DISTINCT
    2020-01-13 22:31:58 0246   *,
    2020-01-13 22:31:58 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:31:58 0248   recordset_id AS 'client_DUPAGECOCCOORDINATEDERECORDSET_ID_exit'
    2020-01-13 22:31:58 0249   RESIDENT client_dupagecoccoordinatede
    2020-01-13 22:31:58      	9 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, %exit_recordset_id, client_DUPAGECOCCOORDINATEDERECORDSET_ID_exit, 
    2020-01-13 22:31:58      265 lines fetched
    2020-01-13 22:31:58 0251 client_dupagecoccoordinatede:
    2020-01-13 22:31:58 0252   SELECT * FROM qlik_sclient_dupagecoccoordinatede
    2020-01-13 22:31:58      	7 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, 
    2020-01-13 22:31:58      530 lines fetched
    2020-01-13 22:31:58 0254 CustomEndFieldCheck:
    2020-01-13 22:31:58 0255   SELECT *
    2020-01-13 22:31:58 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagecoccoordinatedend_1'
    2020-01-13 22:31:58      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:31:58      0 lines fetched
    2020-01-13 22:31:58 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagecoccoordinatedend_1','dupagecoccoordinatedeenddate')
    2020-01-13 22:31:58 0262 RS_Exit:
    2020-01-13 22:31:58 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:31:58 0264   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:31:58 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:58 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:31:58 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:31:58 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:58 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:31:58 0270   WHERE 
    2020-01-13 22:31:58 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:31:58 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:31:58 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:31:58 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:31:58 0275   AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:31:58 0276                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:31:58 0277   
    2020-01-13 22:31:58 0278   UNION
    2020-01-13 22:31:58 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:31:58 0280   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:31:58 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:58 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:31:58 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:31:58 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:58 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:31:58 0286   WHERE 
    2020-01-13 22:31:58 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:31:58 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:31:58 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:31:58 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:31:58 0291   AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:31:58 0292                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:58      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:31:58      79 lines fetched
    2020-01-13 22:31:58 0296 RS_Exit_Explicit:
    2020-01-13 22:31:58 0297   Noconcatenate
    2020-01-13 22:31:58 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:31:58 0299   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:31:58 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:31:58 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:31:58 0302   WHERE 
    2020-01-13 22:31:58 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:31:58 0304   AND ((((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.dupagecoccoordinatedeenddate::DATE IS NULL)) 
    2020-01-13 22:31:58 0305                    OR (((ft.dupagecoccoordinatedestartdate::DATE <= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.dupagecoccoordinatedeenddate::DATE >= ee.exit_date::DATE) OR ((ft.dupagecoccoordinatedeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:31:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:31:59      292 lines fetched
    2020-01-13 22:31:59 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:31:59 0310   LOAD
    2020-01-13 22:31:59 0311   entry_exit_id, 
    2020-01-13 22:31:59 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:31:59 0313   question_id as %exitquestionid,
    2020-01-13 22:31:59 0314   provider_creating_id
    2020-01-13 22:31:59 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:31:59      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:31:59      405,490 lines fetched
    2020-01-13 22:31:59 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:31:59 0318 INNER JOIN(client_dupagecoccoordinatede_exit)
    2020-01-13 22:31:59 0319   LOAD DISTINCT
    2020-01-13 22:31:59 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:31:59 0321   recordset_id,
    2020-01-13 22:31:59 0322   provider_creating_id AS [client_DUPAGECOCCOORDINATEDE_Provider_Creating_Exit],
    2020-01-13 22:31:59 0323   name AS [client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Exit],
    2020-01-13 22:31:59 0324   user_creating_id AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Exit],
    2020-01-13 22:31:59 0325   user_name AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Exit]
    2020-01-13 22:31:59 0326   RESIDENT RS_Exit
    2020-01-13 22:31:59      	6 fields found: Entry Exit Id, recordset_id, client_DUPAGECOCCOORDINATEDE_Provider_Creating_Exit, client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Exit, client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Exit, client_DUPAGECOCCOORDINATEDE_User_Created_By_Exit, 
    2020-01-13 22:31:59      79 lines fetched
    2020-01-13 22:31:59      Joining/Keeping
    2020-01-13 22:31:59 0328 DROP TABLE RS_Exit
    2020-01-13 22:31:59 0330 DROP FIELDS client_id FROM client_dupagecoccoordinatede_exit
    2020-01-13 22:31:59 0331 DROP FIELDS recordset_id FROM client_dupagecoccoordinatede_exit
    2020-01-13 22:31:59 0332 DROP FIELDS [Entry Exit Id] FROM client_dupagecoccoordinatede_exit
    2020-01-13 22:31:59 0335 FieldMapSaClientExit:
    2020-01-13 22:31:59 0336   Mapping SQL
    2020-01-13 22:31:59 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:59 0338     FROM da_question dq
    2020-01-13 22:31:59 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0340     WHERE
    2020-01-13 22:31:59 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:31:59 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:31:59 0344     UNION
    2020-01-13 22:31:59 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:59 0346     FROM da_question dq
    2020-01-13 22:31:59 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0348     WHERE
    2020-01-13 22:31:59 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:31:59 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:31:59 0352      UNION
    2020-01-13 22:31:59 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:31:59 0354     FROM da_question dq
    2020-01-13 22:31:59 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0356     WHERE
    2020-01-13 22:31:59 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:31:59 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:31:59 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:59 0361     UNION
    2020-01-13 22:31:59 0362 
    2020-01-13 22:31:59 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:31:59 0364     FROM da_question dq
    2020-01-13 22:31:59 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0366     WHERE
    2020-01-13 22:31:59 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:31:59 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:31:59 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:31:59 0371     UNION   
    2020-01-13 22:31:59 0372     SELECT
    2020-01-13 22:31:59 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:31:59 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:59 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:59 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:31:59 0377     FROM da_question dq
    2020-01-13 22:31:59 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0379     WHERE
    2020-01-13 22:31:59 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:59 0382     UNION
    2020-01-13 22:31:59 0383 	SELECT
    2020-01-13 22:31:59 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:59 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:31:59 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:31:59 0387     FROM da_question dq
    2020-01-13 22:31:59 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:31:59 0389     WHERE
    2020-01-13 22:31:59 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:31:59 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:31:59      	2 fields found: oldnames, newnames, 
    2020-01-13 22:31:59      1,304 lines fetched
    2020-01-13 22:31:59 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:31:59 0394 DROP TABLE client_dupagecoccoordinatede
    2020-01-13 22:31:59 0396 LET varStepName='STEPEXIT_' & 8 & '_of_' & 50
    2020-01-13 22:31:59 0397 STEPEXIT_8_of_50: select 1
    2020-01-13 22:31:59      	1 fields found: ?column?, 
    2020-01-13 22:31:59      1 lines fetched
    2020-01-13 22:31:59 0398 DROP TABLE STEPEXIT_8_of_50
    2020-01-13 22:31:59 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:31:59 0401 NEXT
    2020-01-13 22:31:59 0228 LET varRecordSetTableName=Peek('sp_table_name',9,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:59 0229 LET varRecordSetQlikName=Peek('qlik_table_name',9,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:59 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',9,'RECORDSET_LIST_EXIT')
    2020-01-13 22:31:59 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('emergencycontacts') <= 20),'emergencycontacts' & 'end_1',left('emergencycontacts', 20)& 'end_1')
    2020-01-13 22:31:59 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'emergencycontacts' & 'enddate'
    2020-01-13 22:31:59 0233 LET varRecordSetQlikName_Entry= 'client_emergencycontacts' & '_entry'
    2020-01-13 22:31:59 0234 LET varRecordSetQlikName_Exit='client_emergencycontacts'& '_exit'
    2020-01-13 22:31:59 0236 LET varRecordSetQlikName_Interim='client_emergencycontacts' & '_review'
    2020-01-13 22:31:59 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_emergencycontacts', (len('client_emergencycontacts'))-7))
    2020-01-13 22:31:59 0239 client_emergencycontacts:
    2020-01-13 22:31:59 0240   SELECT * FROM qlik_sclient_emergencycontacts
    2020-01-13 22:32:05      	12 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, 
    2020-01-13 22:32:05      34,455 lines fetched
    2020-01-13 22:32:05 0243 client_emergencycontacts_exit:
    2020-01-13 22:32:05 0244   Noconcatenate
    2020-01-13 22:32:05 0245   LOAD DISTINCT
    2020-01-13 22:32:05 0246   *,
    2020-01-13 22:32:05 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:05 0248   recordset_id AS 'client_EMERGENCYCONTACTSRECORDSET_ID_exit'
    2020-01-13 22:32:05 0249   RESIDENT client_emergencycontacts
    2020-01-13 22:32:05      	14 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, %exit_recordset_id, client_EMERGENCYCONTACTSRECORDSET_ID_exit, 
    2020-01-13 22:32:05      34,455 lines fetched
    2020-01-13 22:32:05 0251 client_emergencycontacts:
    2020-01-13 22:32:05 0252   SELECT * FROM qlik_sclient_emergencycontacts
    2020-01-13 22:32:11      	12 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, 
    2020-01-13 22:32:11      68,910 lines fetched
    2020-01-13 22:32:11 0254 CustomEndFieldCheck:
    2020-01-13 22:32:11 0255   SELECT *
    2020-01-13 22:32:11 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'emergencycontactsend_1'
    2020-01-13 22:32:11      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:32:11      0 lines fetched
    2020-01-13 22:32:11 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'emergencycontactsend_1','emergencycontactsenddate')
    2020-01-13 22:32:11 0262 RS_Exit:
    2020-01-13 22:32:11 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:11 0264   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:32:11 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:11 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:11 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:11 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:11 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:32:11 0270   WHERE 
    2020-01-13 22:32:11 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:32:11 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:11 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:32:11 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:32:11 0275   AND ((((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:32:11 0276                    OR (((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.emergencycontactsenddate::DATE >= ee.exit_date::DATE) OR ((ft.emergencycontactsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:32:11 0277   
    2020-01-13 22:32:11 0278   UNION
    2020-01-13 22:32:11 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:11 0280   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:32:11 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:11 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:11 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:11 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:11 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:32:11 0286   WHERE 
    2020-01-13 22:32:11 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:32:11 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:11 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:32:11 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:32:11 0291   AND ((((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:32:11 0292                    OR (((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.emergencycontactsenddate::DATE >= ee.exit_date::DATE) OR ((ft.emergencycontactsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:21      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:32:21      10,374 lines fetched
    2020-01-13 22:32:21 0296 RS_Exit_Explicit:
    2020-01-13 22:32:21 0297   Noconcatenate
    2020-01-13 22:32:21 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:32:21 0299   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:32:21 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:21 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:21 0302   WHERE 
    2020-01-13 22:32:21 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:32:21 0304   AND ((((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.emergencycontactsenddate::DATE IS NULL)) 
    2020-01-13 22:32:21 0305                    OR (((ft.emergencycontactsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.emergencycontactsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.emergencycontactsenddate::DATE >= ee.exit_date::DATE) OR ((ft.emergencycontactsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:27      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:32:27      19,485 lines fetched
    2020-01-13 22:32:27 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:32:27 0310   LOAD
    2020-01-13 22:32:27 0311   entry_exit_id, 
    2020-01-13 22:32:27 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:27 0313   question_id as %exitquestionid,
    2020-01-13 22:32:27 0314   provider_creating_id
    2020-01-13 22:32:27 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:32:27      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:32:27      424,975 lines fetched
    2020-01-13 22:32:27 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:32:27 0318 INNER JOIN(client_emergencycontacts_exit)
    2020-01-13 22:32:27 0319   LOAD DISTINCT
    2020-01-13 22:32:27 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:32:27 0321   recordset_id,
    2020-01-13 22:32:27 0322   provider_creating_id AS [client_EMERGENCYCONTACTS_Provider_Creating_Exit],
    2020-01-13 22:32:27 0323   name AS [client_EMERGENCYCONTACTS_Provider_Name_Creating_Exit],
    2020-01-13 22:32:27 0324   user_creating_id AS [client_EMERGENCYCONTACTS_User_Created_By_Id_Exit],
    2020-01-13 22:32:27 0325   user_name AS [client_EMERGENCYCONTACTS_User_Created_By_Exit]
    2020-01-13 22:32:27 0326   RESIDENT RS_Exit
    2020-01-13 22:32:27      	6 fields found: Entry Exit Id, recordset_id, client_EMERGENCYCONTACTS_Provider_Creating_Exit, client_EMERGENCYCONTACTS_Provider_Name_Creating_Exit, client_EMERGENCYCONTACTS_User_Created_By_Id_Exit, client_EMERGENCYCONTACTS_User_Created_By_Exit, 
    2020-01-13 22:32:27      10,374 lines fetched
    2020-01-13 22:32:27      Joining/Keeping
    2020-01-13 22:32:27 0328 DROP TABLE RS_Exit
    2020-01-13 22:32:27 0330 DROP FIELDS client_id FROM client_emergencycontacts_exit
    2020-01-13 22:32:27 0331 DROP FIELDS recordset_id FROM client_emergencycontacts_exit
    2020-01-13 22:32:27 0332 DROP FIELDS [Entry Exit Id] FROM client_emergencycontacts_exit
    2020-01-13 22:32:27 0335 FieldMapSaClientExit:
    2020-01-13 22:32:27 0336   Mapping SQL
    2020-01-13 22:32:27 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:27 0338     FROM da_question dq
    2020-01-13 22:32:27 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0340     WHERE
    2020-01-13 22:32:27 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:32:27 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:32:27 0344     UNION
    2020-01-13 22:32:27 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:27 0346     FROM da_question dq
    2020-01-13 22:32:27 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0348     WHERE
    2020-01-13 22:32:27 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:32:27 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:32:27 0352      UNION
    2020-01-13 22:32:27 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:27 0354     FROM da_question dq
    2020-01-13 22:32:27 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0356     WHERE
    2020-01-13 22:32:27 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:32:27 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:32:27 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:27 0361     UNION
    2020-01-13 22:32:27 0362 
    2020-01-13 22:32:27 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:27 0364     FROM da_question dq
    2020-01-13 22:32:27 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0366     WHERE
    2020-01-13 22:32:27 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:32:27 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:32:27 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:27 0371     UNION   
    2020-01-13 22:32:27 0372     SELECT
    2020-01-13 22:32:27 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:32:27 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:27 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:27 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:32:27 0377     FROM da_question dq
    2020-01-13 22:32:27 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0379     WHERE
    2020-01-13 22:32:27 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:27 0382     UNION
    2020-01-13 22:32:27 0383 	SELECT
    2020-01-13 22:32:27 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:27 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:27 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:32:27 0387     FROM da_question dq
    2020-01-13 22:32:27 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:27 0389     WHERE
    2020-01-13 22:32:27 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:27 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:32:27      1,304 lines fetched
    2020-01-13 22:32:27 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:32:27 0394 DROP TABLE client_emergencycontacts
    2020-01-13 22:32:27 0396 LET varStepName='STEPEXIT_' & 9 & '_of_' & 50
    2020-01-13 22:32:27 0397 STEPEXIT_9_of_50: select 1
    2020-01-13 22:32:27      	1 fields found: ?column?, 
    2020-01-13 22:32:27      1 lines fetched
    2020-01-13 22:32:27 0398 DROP TABLE STEPEXIT_9_of_50
    2020-01-13 22:32:27 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:32:27 0401 NEXT
    2020-01-13 22:32:27 0228 LET varRecordSetTableName=Peek('sp_table_name',10,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:27 0229 LET varRecordSetQlikName=Peek('qlik_table_name',10,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:27 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',10,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:27 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('employmentexperiencet') <= 20),'employmentexperiencet' & 'end_1',left('employmentexperiencet', 20)& 'end_1')
    2020-01-13 22:32:27 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'employmentexperiencet' & 'enddate'
    2020-01-13 22:32:27 0233 LET varRecordSetQlikName_Entry= 'client_employmentexperiencet' & '_entry'
    2020-01-13 22:32:27 0234 LET varRecordSetQlikName_Exit='client_employmentexperiencet'& '_exit'
    2020-01-13 22:32:27 0236 LET varRecordSetQlikName_Interim='client_employmentexperiencet' & '_review'
    2020-01-13 22:32:27 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_employmentexperiencet', (len('client_employmentexperiencet'))-7))
    2020-01-13 22:32:27 0239 client_employmentexperiencet:
    2020-01-13 22:32:27 0240   SELECT * FROM qlik_sclient_employmentexperiencet
    2020-01-13 22:32:28      	6 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, 
    2020-01-13 22:32:28      566 lines fetched
    2020-01-13 22:32:28 0243 client_employmentexperiencet_exit:
    2020-01-13 22:32:28 0244   Noconcatenate
    2020-01-13 22:32:28 0245   LOAD DISTINCT
    2020-01-13 22:32:28 0246   *,
    2020-01-13 22:32:28 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:28 0248   recordset_id AS 'client_EMPLOYMENTEXPERIENCETRECORDSET_ID_exit'
    2020-01-13 22:32:28 0249   RESIDENT client_employmentexperiencet
    2020-01-13 22:32:28      	8 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, %exit_recordset_id, client_EMPLOYMENTEXPERIENCETRECORDSET_ID_exit, 
    2020-01-13 22:32:28      566 lines fetched
    2020-01-13 22:32:28 0251 client_employmentexperiencet:
    2020-01-13 22:32:28 0252   SELECT * FROM qlik_sclient_employmentexperiencet
    2020-01-13 22:32:28      	6 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, 
    2020-01-13 22:32:28      1,132 lines fetched
    2020-01-13 22:32:28 0254 CustomEndFieldCheck:
    2020-01-13 22:32:28 0255   SELECT *
    2020-01-13 22:32:28 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'employmentexperienceend_1'
    2020-01-13 22:32:28      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:32:28      0 lines fetched
    2020-01-13 22:32:28 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'employmentexperienceend_1','employmentexperiencetenddate')
    2020-01-13 22:32:28 0262 RS_Exit:
    2020-01-13 22:32:28 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:28 0264   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:32:28 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:28 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:28 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:28 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:28 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:32:28 0270   WHERE 
    2020-01-13 22:32:28 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:32:28 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:28 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:32:28 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:32:28 0275   AND ((((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:32:28 0276                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.employmentexperiencetenddate::DATE >= ee.exit_date::DATE) OR ((ft.employmentexperiencetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:32:28 0277   
    2020-01-13 22:32:28 0278   UNION
    2020-01-13 22:32:28 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:28 0280   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:32:28 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:28 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:28 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:28 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:28 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:32:28 0286   WHERE 
    2020-01-13 22:32:28 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:32:28 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:28 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:32:28 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:32:28 0291   AND ((((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:32:28 0292                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.employmentexperiencetenddate::DATE >= ee.exit_date::DATE) OR ((ft.employmentexperiencetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:28      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:32:28      49 lines fetched
    2020-01-13 22:32:28 0296 RS_Exit_Explicit:
    2020-01-13 22:32:28 0297   Noconcatenate
    2020-01-13 22:32:28 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:32:28 0299   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:32:28 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:28 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:28 0302   WHERE 
    2020-01-13 22:32:28 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:32:28 0304   AND ((((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.employmentexperiencetenddate::DATE IS NULL)) 
    2020-01-13 22:32:28 0305                    OR (((ft.employmentexperiencetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.employmentexperiencetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.employmentexperiencetenddate::DATE >= ee.exit_date::DATE) OR ((ft.employmentexperiencetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:29      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:32:29      289 lines fetched
    2020-01-13 22:32:29 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:32:29 0310   LOAD
    2020-01-13 22:32:29 0311   entry_exit_id, 
    2020-01-13 22:32:29 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:29 0313   question_id as %exitquestionid,
    2020-01-13 22:32:29 0314   provider_creating_id
    2020-01-13 22:32:29 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:32:29      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:32:29      425,264 lines fetched
    2020-01-13 22:32:29 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:32:29 0318 INNER JOIN(client_employmentexperiencet_exit)
    2020-01-13 22:32:29 0319   LOAD DISTINCT
    2020-01-13 22:32:29 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:32:29 0321   recordset_id,
    2020-01-13 22:32:29 0322   provider_creating_id AS [client_EMPLOYMENTEXPERIENCET_Provider_Creating_Exit],
    2020-01-13 22:32:29 0323   name AS [client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Exit],
    2020-01-13 22:32:29 0324   user_creating_id AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Exit],
    2020-01-13 22:32:29 0325   user_name AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Exit]
    2020-01-13 22:32:29 0326   RESIDENT RS_Exit
    2020-01-13 22:32:29      	6 fields found: Entry Exit Id, recordset_id, client_EMPLOYMENTEXPERIENCET_Provider_Creating_Exit, client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Exit, client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Exit, client_EMPLOYMENTEXPERIENCET_User_Created_By_Exit, 
    2020-01-13 22:32:29      49 lines fetched
    2020-01-13 22:32:29      Joining/Keeping
    2020-01-13 22:32:29 0328 DROP TABLE RS_Exit
    2020-01-13 22:32:29 0330 DROP FIELDS client_id FROM client_employmentexperiencet_exit
    2020-01-13 22:32:29 0331 DROP FIELDS recordset_id FROM client_employmentexperiencet_exit
    2020-01-13 22:32:29 0332 DROP FIELDS [Entry Exit Id] FROM client_employmentexperiencet_exit
    2020-01-13 22:32:29 0335 FieldMapSaClientExit:
    2020-01-13 22:32:29 0336   Mapping SQL
    2020-01-13 22:32:29 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:29 0338     FROM da_question dq
    2020-01-13 22:32:29 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0340     WHERE
    2020-01-13 22:32:29 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:32:29 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:32:29 0344     UNION
    2020-01-13 22:32:29 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:29 0346     FROM da_question dq
    2020-01-13 22:32:29 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0348     WHERE
    2020-01-13 22:32:29 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:32:29 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:32:29 0352      UNION
    2020-01-13 22:32:29 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:29 0354     FROM da_question dq
    2020-01-13 22:32:29 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0356     WHERE
    2020-01-13 22:32:29 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:32:29 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:32:29 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:29 0361     UNION
    2020-01-13 22:32:29 0362 
    2020-01-13 22:32:29 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:29 0364     FROM da_question dq
    2020-01-13 22:32:29 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0366     WHERE
    2020-01-13 22:32:29 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:32:29 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:32:29 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:29 0371     UNION   
    2020-01-13 22:32:29 0372     SELECT
    2020-01-13 22:32:29 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:32:29 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:29 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:29 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:32:29 0377     FROM da_question dq
    2020-01-13 22:32:29 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0379     WHERE
    2020-01-13 22:32:29 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:29 0382     UNION
    2020-01-13 22:32:29 0383 	SELECT
    2020-01-13 22:32:29 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:29 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:29 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:32:29 0387     FROM da_question dq
    2020-01-13 22:32:29 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:29 0389     WHERE
    2020-01-13 22:32:29 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:29 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:29      	2 fields found: oldnames, newnames, 
    2020-01-13 22:32:29      1,304 lines fetched
    2020-01-13 22:32:29 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:32:29 0394 DROP TABLE client_employmentexperiencet
    2020-01-13 22:32:29 0396 LET varStepName='STEPEXIT_' & 10 & '_of_' & 50
    2020-01-13 22:32:29 0397 STEPEXIT_10_of_50: select 1
    2020-01-13 22:32:29      	1 fields found: ?column?, 
    2020-01-13 22:32:29      1 lines fetched
    2020-01-13 22:32:29 0398 DROP TABLE STEPEXIT_10_of_50
    2020-01-13 22:32:29 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:32:29 0401 NEXT
    2020-01-13 22:32:29 0228 LET varRecordSetTableName=Peek('sp_table_name',11,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:29 0229 LET varRecordSetQlikName=Peek('qlik_table_name',11,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:29 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',11,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:29 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('entrypointassessmentp') <= 20),'entrypointassessmentp' & 'end_1',left('entrypointassessmentp', 20)& 'end_1')
    2020-01-13 22:32:29 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'entrypointassessmentp' & 'enddate'
    2020-01-13 22:32:29 0233 LET varRecordSetQlikName_Entry= 'client_entrypointassessmentp' & '_entry'
    2020-01-13 22:32:29 0234 LET varRecordSetQlikName_Exit='client_entrypointassessmentp'& '_exit'
    2020-01-13 22:32:29 0236 LET varRecordSetQlikName_Interim='client_entrypointassessmentp' & '_review'
    2020-01-13 22:32:29 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_entrypointassessmentp', (len('client_entrypointassessmentp'))-7))
    2020-01-13 22:32:29 0239 client_entrypointassessmentp:
    2020-01-13 22:32:29 0240   SELECT * FROM qlik_sclient_entrypointassessmentp
    2020-01-13 22:32:30      	55 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, 
    2020-01-13 22:32:30      1,492 lines fetched
    2020-01-13 22:32:30 0243 client_entrypointassessmentp_exit:
    2020-01-13 22:32:30 0244   Noconcatenate
    2020-01-13 22:32:30 0245   LOAD DISTINCT
    2020-01-13 22:32:30 0246   *,
    2020-01-13 22:32:30 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:30 0248   recordset_id AS 'client_ENTRYPOINTASSESSMENTPRECORDSET_ID_exit'
    2020-01-13 22:32:30 0249   RESIDENT client_entrypointassessmentp
    2020-01-13 22:32:30      	57 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, %exit_recordset_id, client_ENTRYPOINTASSESSMENTPRECORDSET_ID_exit, 
    2020-01-13 22:32:30      1,492 lines fetched
    2020-01-13 22:32:30 0251 client_entrypointassessmentp:
    2020-01-13 22:32:30 0252   SELECT * FROM qlik_sclient_entrypointassessmentp
    2020-01-13 22:32:32      	55 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, 
    2020-01-13 22:32:32      2,984 lines fetched
    2020-01-13 22:32:32 0254 CustomEndFieldCheck:
    2020-01-13 22:32:32 0255   SELECT *
    2020-01-13 22:32:32 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'entrypointassessmentend_1'
    2020-01-13 22:32:32      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:32:32      0 lines fetched
    2020-01-13 22:32:32 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'entrypointassessmentend_1','entrypointassessmentpenddate')
    2020-01-13 22:32:32 0262 RS_Exit:
    2020-01-13 22:32:32 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:32 0264   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:32:32 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:32 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:32 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:32 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:32 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:32:32 0270   WHERE 
    2020-01-13 22:32:32 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:32:32 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:32 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:32:32 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:32:32 0275   AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:32:32 0276                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.entrypointassessmentpenddate::DATE >= ee.exit_date::DATE) OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:32:32 0277   
    2020-01-13 22:32:32 0278   UNION
    2020-01-13 22:32:32 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:32 0280   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:32:32 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:32 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:32 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:32 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:32 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:32:32 0286   WHERE 
    2020-01-13 22:32:32 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:32:32 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:32 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:32:32 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:32:32 0291   AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:32:32 0292                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.entrypointassessmentpenddate::DATE >= ee.exit_date::DATE) OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:33      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:32:33      1,920 lines fetched
    2020-01-13 22:32:33 0296 RS_Exit_Explicit:
    2020-01-13 22:32:33 0297   Noconcatenate
    2020-01-13 22:32:33 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:32:33 0299   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:32:33 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:33 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:33 0302   WHERE 
    2020-01-13 22:32:33 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:32:33 0304   AND ((((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.entrypointassessmentpenddate::DATE IS NULL)) 
    2020-01-13 22:32:33 0305                    OR (((ft.entrypointassessmentpstartdate::DATE <= ee.exit_date::DATE) OR ((ft.entrypointassessmentpstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.entrypointassessmentpenddate::DATE >= ee.exit_date::DATE) OR ((ft.entrypointassessmentpenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:34      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:32:34      2,743 lines fetched
    2020-01-13 22:32:34 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:32:34 0310   LOAD
    2020-01-13 22:32:34 0311   entry_exit_id, 
    2020-01-13 22:32:34 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:34 0313   question_id as %exitquestionid,
    2020-01-13 22:32:34 0314   provider_creating_id
    2020-01-13 22:32:34 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:32:34      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:32:34      428,007 lines fetched
    2020-01-13 22:32:34 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:32:34 0318 INNER JOIN(client_entrypointassessmentp_exit)
    2020-01-13 22:32:34 0319   LOAD DISTINCT
    2020-01-13 22:32:34 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:32:34 0321   recordset_id,
    2020-01-13 22:32:34 0322   provider_creating_id AS [client_ENTRYPOINTASSESSMENTP_Provider_Creating_Exit],
    2020-01-13 22:32:34 0323   name AS [client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Exit],
    2020-01-13 22:32:34 0324   user_creating_id AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Exit],
    2020-01-13 22:32:34 0325   user_name AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Exit]
    2020-01-13 22:32:34 0326   RESIDENT RS_Exit
    2020-01-13 22:32:34      	6 fields found: Entry Exit Id, recordset_id, client_ENTRYPOINTASSESSMENTP_Provider_Creating_Exit, client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Exit, client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Exit, client_ENTRYPOINTASSESSMENTP_User_Created_By_Exit, 
    2020-01-13 22:32:34      1,920 lines fetched
    2020-01-13 22:32:34      Joining/Keeping
    2020-01-13 22:32:34 0328 DROP TABLE RS_Exit
    2020-01-13 22:32:34 0330 DROP FIELDS client_id FROM client_entrypointassessmentp_exit
    2020-01-13 22:32:34 0331 DROP FIELDS recordset_id FROM client_entrypointassessmentp_exit
    2020-01-13 22:32:34 0332 DROP FIELDS [Entry Exit Id] FROM client_entrypointassessmentp_exit
    2020-01-13 22:32:34 0335 FieldMapSaClientExit:
    2020-01-13 22:32:34 0336   Mapping SQL
    2020-01-13 22:32:34 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:34 0338     FROM da_question dq
    2020-01-13 22:32:34 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0340     WHERE
    2020-01-13 22:32:34 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:32:34 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:32:34 0344     UNION
    2020-01-13 22:32:34 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:34 0346     FROM da_question dq
    2020-01-13 22:32:34 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0348     WHERE
    2020-01-13 22:32:34 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:32:34 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:32:34 0352      UNION
    2020-01-13 22:32:34 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:34 0354     FROM da_question dq
    2020-01-13 22:32:34 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0356     WHERE
    2020-01-13 22:32:34 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:32:34 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:32:34 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:34 0361     UNION
    2020-01-13 22:32:34 0362 
    2020-01-13 22:32:34 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:34 0364     FROM da_question dq
    2020-01-13 22:32:34 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0366     WHERE
    2020-01-13 22:32:34 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:32:34 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:32:34 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:34 0371     UNION   
    2020-01-13 22:32:34 0372     SELECT
    2020-01-13 22:32:34 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:32:34 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:34 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:34 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:32:34 0377     FROM da_question dq
    2020-01-13 22:32:34 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0379     WHERE
    2020-01-13 22:32:34 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:34 0382     UNION
    2020-01-13 22:32:34 0383 	SELECT
    2020-01-13 22:32:34 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:34 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:34 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:32:34 0387     FROM da_question dq
    2020-01-13 22:32:34 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:34 0389     WHERE
    2020-01-13 22:32:34 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:34 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:35      	2 fields found: oldnames, newnames, 
    2020-01-13 22:32:35      1,304 lines fetched
    2020-01-13 22:32:35 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:32:35 0394 DROP TABLE client_entrypointassessmentp
    2020-01-13 22:32:35 0396 LET varStepName='STEPEXIT_' & 11 & '_of_' & 50
    2020-01-13 22:32:35 0397 STEPEXIT_11_of_50: select 1
    2020-01-13 22:32:35      	1 fields found: ?column?, 
    2020-01-13 22:32:35      1 lines fetched
    2020-01-13 22:32:35 0398 DROP TABLE STEPEXIT_11_of_50
    2020-01-13 22:32:35 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:32:35 0401 NEXT
    2020-01-13 22:32:35 0228 LET varRecordSetTableName=Peek('sp_table_name',12,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:35 0229 LET varRecordSetQlikName=Peek('qlik_table_name',12,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:35 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',12,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:35 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('followuptoclient_1') <= 20),'followuptoclient_1' & 'end_1',left('followuptoclient_1', 20)& 'end_1')
    2020-01-13 22:32:35 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'followuptoclient_1' & 'enddate'
    2020-01-13 22:32:35 0233 LET varRecordSetQlikName_Entry= 'client_followuptoclient_1' & '_entry'
    2020-01-13 22:32:35 0234 LET varRecordSetQlikName_Exit='client_followuptoclient_1'& '_exit'
    2020-01-13 22:32:35 0236 LET varRecordSetQlikName_Interim='client_followuptoclient_1' & '_review'
    2020-01-13 22:32:35 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_followuptoclient_1', (len('client_followuptoclient_1'))-7))
    2020-01-13 22:32:35 0239 client_followuptoclient_1:
    2020-01-13 22:32:35 0240   SELECT * FROM qlik_sclient_followuptoclient_1
    2020-01-13 22:32:40      	8 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:32:40      31,809 lines fetched
    2020-01-13 22:32:40 0243 client_followuptoclient_1_exit:
    2020-01-13 22:32:40 0244   Noconcatenate
    2020-01-13 22:32:40 0245   LOAD DISTINCT
    2020-01-13 22:32:40 0246   *,
    2020-01-13 22:32:40 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:40 0248   recordset_id AS 'client_FOLLOWUPTOCLIENT_1RECORDSET_ID_exit'
    2020-01-13 22:32:40 0249   RESIDENT client_followuptoclient_1
    2020-01-13 22:32:40      	10 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, %exit_recordset_id, client_FOLLOWUPTOCLIENT_1RECORDSET_ID_exit, 
    2020-01-13 22:32:40      31,809 lines fetched
    2020-01-13 22:32:40 0251 client_followuptoclient_1:
    2020-01-13 22:32:40 0252   SELECT * FROM qlik_sclient_followuptoclient_1
    2020-01-13 22:32:44      	8 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:32:44      63,618 lines fetched
    2020-01-13 22:32:44 0254 CustomEndFieldCheck:
    2020-01-13 22:32:44 0255   SELECT *
    2020-01-13 22:32:44 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'followuptoclient_1end_1'
    2020-01-13 22:32:44      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:32:44      0 lines fetched
    2020-01-13 22:32:44 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'followuptoclient_1end_1','followuptoclient_1enddate')
    2020-01-13 22:32:44 0262 RS_Exit:
    2020-01-13 22:32:44 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:44 0264   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:32:44 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:44 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:44 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:44 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:44 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:32:44 0270   WHERE 
    2020-01-13 22:32:44 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:32:44 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:44 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:32:44 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:32:44 0275   AND ((((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:32:44 0276                    OR (((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.followuptoclient_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.followuptoclient_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:32:44 0277   
    2020-01-13 22:32:44 0278   UNION
    2020-01-13 22:32:44 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:44 0280   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:32:44 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:44 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:44 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:44 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:44 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:32:44 0286   WHERE 
    2020-01-13 22:32:44 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:32:44 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:44 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:32:44 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:32:44 0291   AND ((((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:32:44 0292                    OR (((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.followuptoclient_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.followuptoclient_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:52      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:32:52      4,623 lines fetched
    2020-01-13 22:32:52 0296 RS_Exit_Explicit:
    2020-01-13 22:32:52 0297   Noconcatenate
    2020-01-13 22:32:52 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:32:52 0299   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:32:52 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:52 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:52 0302   WHERE 
    2020-01-13 22:32:52 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:32:52 0304   AND ((((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.followuptoclient_1enddate::DATE IS NULL)) 
    2020-01-13 22:32:52 0305                    OR (((ft.followuptoclient_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.followuptoclient_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.followuptoclient_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.followuptoclient_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:56      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:32:56      10,491 lines fetched
    2020-01-13 22:32:56 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:32:56 0310   LOAD
    2020-01-13 22:32:56 0311   entry_exit_id, 
    2020-01-13 22:32:56 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:56 0313   question_id as %exitquestionid,
    2020-01-13 22:32:56 0314   provider_creating_id
    2020-01-13 22:32:56 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:32:56      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:32:56      438,498 lines fetched
    2020-01-13 22:32:56 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:32:56 0318 INNER JOIN(client_followuptoclient_1_exit)
    2020-01-13 22:32:56 0319   LOAD DISTINCT
    2020-01-13 22:32:56 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:32:56 0321   recordset_id,
    2020-01-13 22:32:56 0322   provider_creating_id AS [client_FOLLOWUPTOCLIENT_1_Provider_Creating_Exit],
    2020-01-13 22:32:56 0323   name AS [client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Exit],
    2020-01-13 22:32:56 0324   user_creating_id AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Exit],
    2020-01-13 22:32:56 0325   user_name AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Exit]
    2020-01-13 22:32:56 0326   RESIDENT RS_Exit
    2020-01-13 22:32:57      	6 fields found: Entry Exit Id, recordset_id, client_FOLLOWUPTOCLIENT_1_Provider_Creating_Exit, client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Exit, client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Exit, client_FOLLOWUPTOCLIENT_1_User_Created_By_Exit, 
    2020-01-13 22:32:57      4,623 lines fetched
    2020-01-13 22:32:57      Joining/Keeping
    2020-01-13 22:32:57 0328 DROP TABLE RS_Exit
    2020-01-13 22:32:57 0330 DROP FIELDS client_id FROM client_followuptoclient_1_exit
    2020-01-13 22:32:57 0331 DROP FIELDS recordset_id FROM client_followuptoclient_1_exit
    2020-01-13 22:32:57 0332 DROP FIELDS [Entry Exit Id] FROM client_followuptoclient_1_exit
    2020-01-13 22:32:57 0335 FieldMapSaClientExit:
    2020-01-13 22:32:57 0336   Mapping SQL
    2020-01-13 22:32:57 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:57 0338     FROM da_question dq
    2020-01-13 22:32:57 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0340     WHERE
    2020-01-13 22:32:57 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:32:57 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:32:57 0344     UNION
    2020-01-13 22:32:57 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:57 0346     FROM da_question dq
    2020-01-13 22:32:57 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0348     WHERE
    2020-01-13 22:32:57 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:32:57 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:32:57 0352      UNION
    2020-01-13 22:32:57 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:57 0354     FROM da_question dq
    2020-01-13 22:32:57 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0356     WHERE
    2020-01-13 22:32:57 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:32:57 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:32:57 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:57 0361     UNION
    2020-01-13 22:32:57 0362 
    2020-01-13 22:32:57 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:57 0364     FROM da_question dq
    2020-01-13 22:32:57 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0366     WHERE
    2020-01-13 22:32:57 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:32:57 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:32:57 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:57 0371     UNION   
    2020-01-13 22:32:57 0372     SELECT
    2020-01-13 22:32:57 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:32:57 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:57 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:57 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:32:57 0377     FROM da_question dq
    2020-01-13 22:32:57 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0379     WHERE
    2020-01-13 22:32:57 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:57 0382     UNION
    2020-01-13 22:32:57 0383 	SELECT
    2020-01-13 22:32:57 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:57 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:57 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:32:57 0387     FROM da_question dq
    2020-01-13 22:32:57 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:57 0389     WHERE
    2020-01-13 22:32:57 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:57 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:57      	2 fields found: oldnames, newnames, 
    2020-01-13 22:32:57      1,304 lines fetched
    2020-01-13 22:32:57 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:32:57 0394 DROP TABLE client_followuptoclient_1
    2020-01-13 22:32:57 0396 LET varStepName='STEPEXIT_' & 12 & '_of_' & 50
    2020-01-13 22:32:57 0397 STEPEXIT_12_of_50: select 1
    2020-01-13 22:32:57      	1 fields found: ?column?, 
    2020-01-13 22:32:57      1 lines fetched
    2020-01-13 22:32:57 0398 DROP TABLE STEPEXIT_12_of_50
    2020-01-13 22:32:57 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:32:57 0401 NEXT
    2020-01-13 22:32:57 0228 LET varRecordSetTableName=Peek('sp_table_name',13,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:57 0229 LET varRecordSetQlikName=Peek('qlik_table_name',13,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:57 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',13,'RECORDSET_LIST_EXIT')
    2020-01-13 22:32:57 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hospitalsclincis') <= 20),'hospitalsclincis' & 'end_1',left('hospitalsclincis', 20)& 'end_1')
    2020-01-13 22:32:57 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hospitalsclincis' & 'enddate'
    2020-01-13 22:32:57 0233 LET varRecordSetQlikName_Entry= 'client_hospitalsclincis' & '_entry'
    2020-01-13 22:32:57 0234 LET varRecordSetQlikName_Exit='client_hospitalsclincis'& '_exit'
    2020-01-13 22:32:57 0236 LET varRecordSetQlikName_Interim='client_hospitalsclincis' & '_review'
    2020-01-13 22:32:57 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hospitalsclincis', (len('client_hospitalsclincis'))-7))
    2020-01-13 22:32:57 0239 client_hospitalsclincis:
    2020-01-13 22:32:57 0240   SELECT * FROM qlik_sclient_hospitalsclincis
    2020-01-13 22:32:58      	10 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, 
    2020-01-13 22:32:58      1,531 lines fetched
    2020-01-13 22:32:58 0243 client_hospitalsclincis_exit:
    2020-01-13 22:32:58 0244   Noconcatenate
    2020-01-13 22:32:58 0245   LOAD DISTINCT
    2020-01-13 22:32:58 0246   *,
    2020-01-13 22:32:58 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:58 0248   recordset_id AS 'client_HOSPITALSCLINCISRECORDSET_ID_exit'
    2020-01-13 22:32:58 0249   RESIDENT client_hospitalsclincis
    2020-01-13 22:32:58      	12 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, %exit_recordset_id, client_HOSPITALSCLINCISRECORDSET_ID_exit, 
    2020-01-13 22:32:58      1,531 lines fetched
    2020-01-13 22:32:58 0251 client_hospitalsclincis:
    2020-01-13 22:32:58 0252   SELECT * FROM qlik_sclient_hospitalsclincis
    2020-01-13 22:32:58      	10 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, 
    2020-01-13 22:32:58      3,062 lines fetched
    2020-01-13 22:32:58 0254 CustomEndFieldCheck:
    2020-01-13 22:32:58 0255   SELECT *
    2020-01-13 22:32:58 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hospitalsclincisend_1'
    2020-01-13 22:32:58      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:32:58      0 lines fetched
    2020-01-13 22:32:58 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hospitalsclincisend_1','hospitalsclincisenddate')
    2020-01-13 22:32:58 0262 RS_Exit:
    2020-01-13 22:32:58 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:58 0264   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:32:58 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:58 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:58 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:58 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:58 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:32:58 0270   WHERE 
    2020-01-13 22:32:58 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:32:58 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:58 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:32:58 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:32:58 0275   AND ((((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:32:58 0276                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hospitalsclincisenddate::DATE >= ee.exit_date::DATE) OR ((ft.hospitalsclincisenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:32:58 0277   
    2020-01-13 22:32:58 0278   UNION
    2020-01-13 22:32:58 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:32:58 0280   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:32:58 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:58 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:32:58 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:32:58 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:58 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:32:58 0286   WHERE 
    2020-01-13 22:32:58 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:32:58 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:32:58 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:32:58 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:32:58 0291   AND ((((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:32:58 0292                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hospitalsclincisenddate::DATE >= ee.exit_date::DATE) OR ((ft.hospitalsclincisenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:59      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:32:59      177 lines fetched
    2020-01-13 22:32:59 0296 RS_Exit_Explicit:
    2020-01-13 22:32:59 0297   Noconcatenate
    2020-01-13 22:32:59 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:32:59 0299   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:32:59 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:32:59 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:32:59 0302   WHERE 
    2020-01-13 22:32:59 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:32:59 0304   AND ((((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hospitalsclincisenddate::DATE IS NULL)) 
    2020-01-13 22:32:59 0305                    OR (((ft.hospitalsclincisstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hospitalsclincisstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hospitalsclincisenddate::DATE >= ee.exit_date::DATE) OR ((ft.hospitalsclincisenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:32:59      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:32:59      1,012 lines fetched
    2020-01-13 22:32:59 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:32:59 0310   LOAD
    2020-01-13 22:32:59 0311   entry_exit_id, 
    2020-01-13 22:32:59 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:32:59 0313   question_id as %exitquestionid,
    2020-01-13 22:32:59 0314   provider_creating_id
    2020-01-13 22:32:59 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:32:59      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:32:59      439,510 lines fetched
    2020-01-13 22:32:59 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:32:59 0318 INNER JOIN(client_hospitalsclincis_exit)
    2020-01-13 22:32:59 0319   LOAD DISTINCT
    2020-01-13 22:32:59 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:32:59 0321   recordset_id,
    2020-01-13 22:32:59 0322   provider_creating_id AS [client_HOSPITALSCLINCIS_Provider_Creating_Exit],
    2020-01-13 22:32:59 0323   name AS [client_HOSPITALSCLINCIS_Provider_Name_Creating_Exit],
    2020-01-13 22:32:59 0324   user_creating_id AS [client_HOSPITALSCLINCIS_User_Created_By_Id_Exit],
    2020-01-13 22:32:59 0325   user_name AS [client_HOSPITALSCLINCIS_User_Created_By_Exit]
    2020-01-13 22:32:59 0326   RESIDENT RS_Exit
    2020-01-13 22:32:59      	6 fields found: Entry Exit Id, recordset_id, client_HOSPITALSCLINCIS_Provider_Creating_Exit, client_HOSPITALSCLINCIS_Provider_Name_Creating_Exit, client_HOSPITALSCLINCIS_User_Created_By_Id_Exit, client_HOSPITALSCLINCIS_User_Created_By_Exit, 
    2020-01-13 22:32:59      177 lines fetched
    2020-01-13 22:32:59      Joining/Keeping
    2020-01-13 22:32:59 0328 DROP TABLE RS_Exit
    2020-01-13 22:32:59 0330 DROP FIELDS client_id FROM client_hospitalsclincis_exit
    2020-01-13 22:32:59 0331 DROP FIELDS recordset_id FROM client_hospitalsclincis_exit
    2020-01-13 22:32:59 0332 DROP FIELDS [Entry Exit Id] FROM client_hospitalsclincis_exit
    2020-01-13 22:32:59 0335 FieldMapSaClientExit:
    2020-01-13 22:32:59 0336   Mapping SQL
    2020-01-13 22:32:59 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:59 0338     FROM da_question dq
    2020-01-13 22:32:59 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0340     WHERE
    2020-01-13 22:32:59 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:32:59 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:32:59 0344     UNION
    2020-01-13 22:32:59 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:59 0346     FROM da_question dq
    2020-01-13 22:32:59 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0348     WHERE
    2020-01-13 22:32:59 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:32:59 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:32:59 0352      UNION
    2020-01-13 22:32:59 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:32:59 0354     FROM da_question dq
    2020-01-13 22:32:59 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0356     WHERE
    2020-01-13 22:32:59 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:32:59 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:32:59 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:59 0361     UNION
    2020-01-13 22:32:59 0362 
    2020-01-13 22:32:59 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:32:59 0364     FROM da_question dq
    2020-01-13 22:32:59 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0366     WHERE
    2020-01-13 22:32:59 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:32:59 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:32:59 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:32:59 0371     UNION   
    2020-01-13 22:32:59 0372     SELECT
    2020-01-13 22:32:59 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:32:59 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:59 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:59 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:32:59 0377     FROM da_question dq
    2020-01-13 22:32:59 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0379     WHERE
    2020-01-13 22:32:59 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:32:59 0382     UNION
    2020-01-13 22:32:59 0383 	SELECT
    2020-01-13 22:32:59 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:59 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:32:59 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:32:59 0387     FROM da_question dq
    2020-01-13 22:32:59 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:32:59 0389     WHERE
    2020-01-13 22:32:59 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:32:59 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:00      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:00      1,304 lines fetched
    2020-01-13 22:33:00 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:00 0394 DROP TABLE client_hospitalsclincis
    2020-01-13 22:33:00 0396 LET varStepName='STEPEXIT_' & 13 & '_of_' & 50
    2020-01-13 22:33:00 0397 STEPEXIT_13_of_50: select 1
    2020-01-13 22:33:00      	1 fields found: ?column?, 
    2020-01-13 22:33:00      1 lines fetched
    2020-01-13 22:33:00 0398 DROP TABLE STEPEXIT_13_of_50
    2020-01-13 22:33:00 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:00 0401 NEXT
    2020-01-13 22:33:00 0228 LET varRecordSetTableName=Peek('sp_table_name',14,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:00 0229 LET varRecordSetQlikName=Peek('qlik_table_name',14,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:00 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',14,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:00 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterestvispda') <= 20),'housinginterestvispda' & 'end_1',left('housinginterestvispda', 20)& 'end_1')
    2020-01-13 22:33:00 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterestvispda' & 'enddate'
    2020-01-13 22:33:00 0233 LET varRecordSetQlikName_Entry= 'client_housinginterestvispda' & '_entry'
    2020-01-13 22:33:00 0234 LET varRecordSetQlikName_Exit='client_housinginterestvispda'& '_exit'
    2020-01-13 22:33:00 0236 LET varRecordSetQlikName_Interim='client_housinginterestvispda' & '_review'
    2020-01-13 22:33:00 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_housinginterestvispda', (len('client_housinginterestvispda'))-7))
    2020-01-13 22:33:00 0239 client_housinginterestvispda:
    2020-01-13 22:33:00 0240   SELECT * FROM qlik_sclient_housinginterestvispda
    2020-01-13 22:33:00      	8 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, 
    2020-01-13 22:33:00      1,278 lines fetched
    2020-01-13 22:33:00 0243 client_housinginterestvispda_exit:
    2020-01-13 22:33:00 0244   Noconcatenate
    2020-01-13 22:33:00 0245   LOAD DISTINCT
    2020-01-13 22:33:00 0246   *,
    2020-01-13 22:33:00 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:00 0248   recordset_id AS 'client_HOUSINGINTERESTVISPDARECORDSET_ID_exit'
    2020-01-13 22:33:00 0249   RESIDENT client_housinginterestvispda
    2020-01-13 22:33:00      	10 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, %exit_recordset_id, client_HOUSINGINTERESTVISPDARECORDSET_ID_exit, 
    2020-01-13 22:33:00      1,278 lines fetched
    2020-01-13 22:33:00 0251 client_housinginterestvispda:
    2020-01-13 22:33:00 0252   SELECT * FROM qlik_sclient_housinginterestvispda
    2020-01-13 22:33:01      	8 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, 
    2020-01-13 22:33:01      2,556 lines fetched
    2020-01-13 22:33:01 0254 CustomEndFieldCheck:
    2020-01-13 22:33:01 0255   SELECT *
    2020-01-13 22:33:01 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterestvispdend_1'
    2020-01-13 22:33:01      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:33:01      0 lines fetched
    2020-01-13 22:33:01 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterestvispdend_1','housinginterestvispdaenddate')
    2020-01-13 22:33:01 0262 RS_Exit:
    2020-01-13 22:33:01 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:01 0264   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:33:01 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:01 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:01 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:01 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:01 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:33:01 0270   WHERE 
    2020-01-13 22:33:01 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:33:01 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:01 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:33:01 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:33:01 0275   AND ((((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:33:01 0276                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterestvispdaenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:33:01 0277   
    2020-01-13 22:33:01 0278   UNION
    2020-01-13 22:33:01 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:01 0280   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:33:01 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:01 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:01 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:01 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:01 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:33:01 0286   WHERE 
    2020-01-13 22:33:01 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:33:01 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:01 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:33:01 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:33:01 0291   AND ((((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:33:01 0292                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterestvispdaenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:01      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:33:01      2,454 lines fetched
    2020-01-13 22:33:01 0296 RS_Exit_Explicit:
    2020-01-13 22:33:01 0297   Noconcatenate
    2020-01-13 22:33:01 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:33:01 0299   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:33:01 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:01 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:01 0302   WHERE 
    2020-01-13 22:33:01 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:33:01 0304   AND ((((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterestvispdaenddate::DATE IS NULL)) 
    2020-01-13 22:33:01 0305                    OR (((ft.housinginterestvispdastartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterestvispdastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterestvispdaenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterestvispdaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:02      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:33:02      3,586 lines fetched
    2020-01-13 22:33:02 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:33:02 0310   LOAD
    2020-01-13 22:33:02 0311   entry_exit_id, 
    2020-01-13 22:33:02 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:02 0313   question_id as %exitquestionid,
    2020-01-13 22:33:02 0314   provider_creating_id
    2020-01-13 22:33:02 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:33:02      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:33:02      443,096 lines fetched
    2020-01-13 22:33:02 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:33:02 0318 INNER JOIN(client_housinginterestvispda_exit)
    2020-01-13 22:33:02 0319   LOAD DISTINCT
    2020-01-13 22:33:02 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:33:02 0321   recordset_id,
    2020-01-13 22:33:02 0322   provider_creating_id AS [client_HOUSINGINTERESTVISPDA_Provider_Creating_Exit],
    2020-01-13 22:33:02 0323   name AS [client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Exit],
    2020-01-13 22:33:02 0324   user_creating_id AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Exit],
    2020-01-13 22:33:02 0325   user_name AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Exit]
    2020-01-13 22:33:02 0326   RESIDENT RS_Exit
    2020-01-13 22:33:02      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGINTERESTVISPDA_Provider_Creating_Exit, client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Exit, client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Exit, client_HOUSINGINTERESTVISPDA_User_Created_By_Exit, 
    2020-01-13 22:33:02      2,454 lines fetched
    2020-01-13 22:33:02      Joining/Keeping
    2020-01-13 22:33:02 0328 DROP TABLE RS_Exit
    2020-01-13 22:33:02 0330 DROP FIELDS client_id FROM client_housinginterestvispda_exit
    2020-01-13 22:33:02 0331 DROP FIELDS recordset_id FROM client_housinginterestvispda_exit
    2020-01-13 22:33:02 0332 DROP FIELDS [Entry Exit Id] FROM client_housinginterestvispda_exit
    2020-01-13 22:33:02 0335 FieldMapSaClientExit:
    2020-01-13 22:33:02 0336   Mapping SQL
    2020-01-13 22:33:02 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:02 0338     FROM da_question dq
    2020-01-13 22:33:02 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0340     WHERE
    2020-01-13 22:33:02 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:33:02 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:33:02 0344     UNION
    2020-01-13 22:33:02 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:02 0346     FROM da_question dq
    2020-01-13 22:33:02 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0348     WHERE
    2020-01-13 22:33:02 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:33:02 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:33:02 0352      UNION
    2020-01-13 22:33:02 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:02 0354     FROM da_question dq
    2020-01-13 22:33:02 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0356     WHERE
    2020-01-13 22:33:02 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:33:02 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:33:02 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:02 0361     UNION
    2020-01-13 22:33:02 0362 
    2020-01-13 22:33:02 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:02 0364     FROM da_question dq
    2020-01-13 22:33:02 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0366     WHERE
    2020-01-13 22:33:02 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:33:02 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:33:02 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:02 0371     UNION   
    2020-01-13 22:33:02 0372     SELECT
    2020-01-13 22:33:02 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:33:02 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:02 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:02 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:33:02 0377     FROM da_question dq
    2020-01-13 22:33:02 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0379     WHERE
    2020-01-13 22:33:02 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:02 0382     UNION
    2020-01-13 22:33:02 0383 	SELECT
    2020-01-13 22:33:02 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:02 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:02 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:33:02 0387     FROM da_question dq
    2020-01-13 22:33:02 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:02 0389     WHERE
    2020-01-13 22:33:02 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:02 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:02      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:02      1,304 lines fetched
    2020-01-13 22:33:02 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:02 0394 DROP TABLE client_housinginterestvispda
    2020-01-13 22:33:02 0396 LET varStepName='STEPEXIT_' & 14 & '_of_' & 50
    2020-01-13 22:33:02 0397 STEPEXIT_14_of_50: select 1
    2020-01-13 22:33:03      	1 fields found: ?column?, 
    2020-01-13 22:33:03      1 lines fetched
    2020-01-13 22:33:03 0398 DROP TABLE STEPEXIT_14_of_50
    2020-01-13 22:33:03 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:03 0401 NEXT
    2020-01-13 22:33:03 0228 LET varRecordSetTableName=Peek('sp_table_name',15,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:03 0229 LET varRecordSetQlikName=Peek('qlik_table_name',15,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:03 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',15,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:03 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterventionof') <= 20),'housinginterventionof' & 'end_1',left('housinginterventionof', 20)& 'end_1')
    2020-01-13 22:33:03 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterventionof' & 'enddate'
    2020-01-13 22:33:03 0233 LET varRecordSetQlikName_Entry= 'client_housinginterventionof' & '_entry'
    2020-01-13 22:33:03 0234 LET varRecordSetQlikName_Exit='client_housinginterventionof'& '_exit'
    2020-01-13 22:33:03 0236 LET varRecordSetQlikName_Interim='client_housinginterventionof' & '_review'
    2020-01-13 22:33:03 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_housinginterventionof', (len('client_housinginterventionof'))-7))
    2020-01-13 22:33:03 0239 client_housinginterventionof:
    2020-01-13 22:33:03 0240   SELECT * FROM qlik_sclient_housinginterventionof
    2020-01-13 22:33:03      	21 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, 
    2020-01-13 22:33:03      977 lines fetched
    2020-01-13 22:33:03 0243 client_housinginterventionof_exit:
    2020-01-13 22:33:03 0244   Noconcatenate
    2020-01-13 22:33:03 0245   LOAD DISTINCT
    2020-01-13 22:33:03 0246   *,
    2020-01-13 22:33:03 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:03 0248   recordset_id AS 'client_HOUSINGINTERVENTIONOFRECORDSET_ID_exit'
    2020-01-13 22:33:03 0249   RESIDENT client_housinginterventionof
    2020-01-13 22:33:03      	23 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, %exit_recordset_id, client_HOUSINGINTERVENTIONOFRECORDSET_ID_exit, 
    2020-01-13 22:33:03      977 lines fetched
    2020-01-13 22:33:03 0251 client_housinginterventionof:
    2020-01-13 22:33:03 0252   SELECT * FROM qlik_sclient_housinginterventionof
    2020-01-13 22:33:03      	21 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, 
    2020-01-13 22:33:03      1,954 lines fetched
    2020-01-13 22:33:03 0254 CustomEndFieldCheck:
    2020-01-13 22:33:03 0255   SELECT *
    2020-01-13 22:33:03 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterventionoend_1'
    2020-01-13 22:33:04      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:33:04      0 lines fetched
    2020-01-13 22:33:04 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterventionoend_1','housinginterventionofenddate')
    2020-01-13 22:33:04 0262 RS_Exit:
    2020-01-13 22:33:04 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:04 0264   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:33:04 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:04 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:04 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:04 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:04 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:33:04 0270   WHERE 
    2020-01-13 22:33:04 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:33:04 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:04 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:33:04 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:33:04 0275   AND ((((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:33:04 0276                    OR (((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterventionofenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterventionofenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:33:04 0277   
    2020-01-13 22:33:04 0278   UNION
    2020-01-13 22:33:04 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:04 0280   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:33:04 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:04 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:04 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:04 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:04 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:33:04 0286   WHERE 
    2020-01-13 22:33:04 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:33:04 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:04 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:33:04 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:33:04 0291   AND ((((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:33:04 0292                    OR (((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterventionofenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterventionofenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:04      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:33:04      186 lines fetched
    2020-01-13 22:33:04 0296 RS_Exit_Explicit:
    2020-01-13 22:33:04 0297   Noconcatenate
    2020-01-13 22:33:04 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:33:04 0299   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:33:04 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:04 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:04 0302   WHERE 
    2020-01-13 22:33:04 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:33:04 0304   AND ((((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housinginterventionofenddate::DATE IS NULL)) 
    2020-01-13 22:33:04 0305                    OR (((ft.housinginterventionofstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housinginterventionofstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housinginterventionofenddate::DATE >= ee.exit_date::DATE) OR ((ft.housinginterventionofenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:05      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:33:05      740 lines fetched
    2020-01-13 22:33:05 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:33:05 0310   LOAD
    2020-01-13 22:33:05 0311   entry_exit_id, 
    2020-01-13 22:33:05 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:05 0313   question_id as %exitquestionid,
    2020-01-13 22:33:05 0314   provider_creating_id
    2020-01-13 22:33:05 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:33:05      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:33:05      443,836 lines fetched
    2020-01-13 22:33:05 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:33:05 0318 INNER JOIN(client_housinginterventionof_exit)
    2020-01-13 22:33:05 0319   LOAD DISTINCT
    2020-01-13 22:33:05 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:33:05 0321   recordset_id,
    2020-01-13 22:33:05 0322   provider_creating_id AS [client_HOUSINGINTERVENTIONOF_Provider_Creating_Exit],
    2020-01-13 22:33:05 0323   name AS [client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Exit],
    2020-01-13 22:33:05 0324   user_creating_id AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Exit],
    2020-01-13 22:33:05 0325   user_name AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Exit]
    2020-01-13 22:33:05 0326   RESIDENT RS_Exit
    2020-01-13 22:33:05      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGINTERVENTIONOF_Provider_Creating_Exit, client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Exit, client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Exit, client_HOUSINGINTERVENTIONOF_User_Created_By_Exit, 
    2020-01-13 22:33:05      186 lines fetched
    2020-01-13 22:33:05      Joining/Keeping
    2020-01-13 22:33:05 0328 DROP TABLE RS_Exit
    2020-01-13 22:33:05 0330 DROP FIELDS client_id FROM client_housinginterventionof_exit
    2020-01-13 22:33:05 0331 DROP FIELDS recordset_id FROM client_housinginterventionof_exit
    2020-01-13 22:33:05 0332 DROP FIELDS [Entry Exit Id] FROM client_housinginterventionof_exit
    2020-01-13 22:33:05 0335 FieldMapSaClientExit:
    2020-01-13 22:33:05 0336   Mapping SQL
    2020-01-13 22:33:05 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:05 0338     FROM da_question dq
    2020-01-13 22:33:05 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0340     WHERE
    2020-01-13 22:33:05 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:33:05 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:33:05 0344     UNION
    2020-01-13 22:33:05 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:05 0346     FROM da_question dq
    2020-01-13 22:33:05 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0348     WHERE
    2020-01-13 22:33:05 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:33:05 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:33:05 0352      UNION
    2020-01-13 22:33:05 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:05 0354     FROM da_question dq
    2020-01-13 22:33:05 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0356     WHERE
    2020-01-13 22:33:05 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:33:05 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:33:05 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:05 0361     UNION
    2020-01-13 22:33:05 0362 
    2020-01-13 22:33:05 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:05 0364     FROM da_question dq
    2020-01-13 22:33:05 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0366     WHERE
    2020-01-13 22:33:05 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:33:05 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:33:05 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:05 0371     UNION   
    2020-01-13 22:33:05 0372     SELECT
    2020-01-13 22:33:05 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:33:05 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:05 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:05 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:33:05 0377     FROM da_question dq
    2020-01-13 22:33:05 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0379     WHERE
    2020-01-13 22:33:05 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:05 0382     UNION
    2020-01-13 22:33:05 0383 	SELECT
    2020-01-13 22:33:05 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:05 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:05 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:33:05 0387     FROM da_question dq
    2020-01-13 22:33:05 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:05 0389     WHERE
    2020-01-13 22:33:05 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:05 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:05      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:05      1,304 lines fetched
    2020-01-13 22:33:05 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:05 0394 DROP TABLE client_housinginterventionof
    2020-01-13 22:33:05 0396 LET varStepName='STEPEXIT_' & 15 & '_of_' & 50
    2020-01-13 22:33:05 0397 STEPEXIT_15_of_50: select 1
    2020-01-13 22:33:05      	1 fields found: ?column?, 
    2020-01-13 22:33:05      1 lines fetched
    2020-01-13 22:33:05 0398 DROP TABLE STEPEXIT_15_of_50
    2020-01-13 22:33:05 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:05 0401 NEXT
    2020-01-13 22:33:05 0228 LET varRecordSetTableName=Peek('sp_table_name',16,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:05 0229 LET varRecordSetQlikName=Peek('qlik_table_name',16,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:05 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',16,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:05 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housingplacementnotes') <= 20),'housingplacementnotes' & 'end_1',left('housingplacementnotes', 20)& 'end_1')
    2020-01-13 22:33:05 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'housingplacementnotes' & 'enddate'
    2020-01-13 22:33:05 0233 LET varRecordSetQlikName_Entry= 'client_housingplacementnotes' & '_entry'
    2020-01-13 22:33:05 0234 LET varRecordSetQlikName_Exit='client_housingplacementnotes'& '_exit'
    2020-01-13 22:33:05 0236 LET varRecordSetQlikName_Interim='client_housingplacementnotes' & '_review'
    2020-01-13 22:33:05 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_housingplacementnotes', (len('client_housingplacementnotes'))-7))
    2020-01-13 22:33:05 0239 client_housingplacementnotes:
    2020-01-13 22:33:05 0240   SELECT * FROM qlik_sclient_housingplacementnotes
    2020-01-13 22:33:06      	6 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, 
    2020-01-13 22:33:06      5,099 lines fetched
    2020-01-13 22:33:06 0243 client_housingplacementnotes_exit:
    2020-01-13 22:33:06 0244   Noconcatenate
    2020-01-13 22:33:06 0245   LOAD DISTINCT
    2020-01-13 22:33:06 0246   *,
    2020-01-13 22:33:06 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:06 0248   recordset_id AS 'client_HOUSINGPLACEMENTNOTESRECORDSET_ID_exit'
    2020-01-13 22:33:06 0249   RESIDENT client_housingplacementnotes
    2020-01-13 22:33:06      	8 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, %exit_recordset_id, client_HOUSINGPLACEMENTNOTESRECORDSET_ID_exit, 
    2020-01-13 22:33:06      5,099 lines fetched
    2020-01-13 22:33:06 0251 client_housingplacementnotes:
    2020-01-13 22:33:06 0252   SELECT * FROM qlik_sclient_housingplacementnotes
    2020-01-13 22:33:06      	6 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, 
    2020-01-13 22:33:06      10,198 lines fetched
    2020-01-13 22:33:06 0254 CustomEndFieldCheck:
    2020-01-13 22:33:06 0255   SELECT *
    2020-01-13 22:33:06 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housingplacementnoteend_1'
    2020-01-13 22:33:06      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:33:06      0 lines fetched
    2020-01-13 22:33:06 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housingplacementnoteend_1','housingplacementnotesenddate')
    2020-01-13 22:33:06 0262 RS_Exit:
    2020-01-13 22:33:06 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:06 0264   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:33:06 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:06 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:06 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:06 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:06 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:33:06 0270   WHERE 
    2020-01-13 22:33:06 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:33:06 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:06 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:33:06 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:33:06 0275   AND ((((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:33:06 0276                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housingplacementnotesenddate::DATE >= ee.exit_date::DATE) OR ((ft.housingplacementnotesenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:33:06 0277   
    2020-01-13 22:33:06 0278   UNION
    2020-01-13 22:33:06 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:06 0280   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:33:06 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:06 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:06 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:06 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:06 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:33:06 0286   WHERE 
    2020-01-13 22:33:06 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:33:06 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:06 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:33:06 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:33:06 0291   AND ((((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:33:06 0292                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housingplacementnotesenddate::DATE >= ee.exit_date::DATE) OR ((ft.housingplacementnotesenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:07      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:33:07      3,127 lines fetched
    2020-01-13 22:33:07 0296 RS_Exit_Explicit:
    2020-01-13 22:33:07 0297   Noconcatenate
    2020-01-13 22:33:07 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:33:07 0299   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:33:07 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:07 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:07 0302   WHERE 
    2020-01-13 22:33:07 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:33:07 0304   AND ((((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.housingplacementnotesenddate::DATE IS NULL)) 
    2020-01-13 22:33:07 0305                    OR (((ft.housingplacementnotesstartdate::DATE <= ee.exit_date::DATE) OR ((ft.housingplacementnotesstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.housingplacementnotesenddate::DATE >= ee.exit_date::DATE) OR ((ft.housingplacementnotesenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:07      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:33:07      14,117 lines fetched
    2020-01-13 22:33:07 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:33:07 0310   LOAD
    2020-01-13 22:33:07 0311   entry_exit_id, 
    2020-01-13 22:33:07 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:07 0313   question_id as %exitquestionid,
    2020-01-13 22:33:07 0314   provider_creating_id
    2020-01-13 22:33:07 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:33:07      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:33:07      457,953 lines fetched
    2020-01-13 22:33:07 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:33:07 0318 INNER JOIN(client_housingplacementnotes_exit)
    2020-01-13 22:33:07 0319   LOAD DISTINCT
    2020-01-13 22:33:07 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:33:07 0321   recordset_id,
    2020-01-13 22:33:07 0322   provider_creating_id AS [client_HOUSINGPLACEMENTNOTES_Provider_Creating_Exit],
    2020-01-13 22:33:07 0323   name AS [client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Exit],
    2020-01-13 22:33:07 0324   user_creating_id AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Exit],
    2020-01-13 22:33:07 0325   user_name AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Exit]
    2020-01-13 22:33:07 0326   RESIDENT RS_Exit
    2020-01-13 22:33:07      	6 fields found: Entry Exit Id, recordset_id, client_HOUSINGPLACEMENTNOTES_Provider_Creating_Exit, client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Exit, client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Exit, client_HOUSINGPLACEMENTNOTES_User_Created_By_Exit, 
    2020-01-13 22:33:07      3,127 lines fetched
    2020-01-13 22:33:07      Joining/Keeping
    2020-01-13 22:33:08 0328 DROP TABLE RS_Exit
    2020-01-13 22:33:08 0330 DROP FIELDS client_id FROM client_housingplacementnotes_exit
    2020-01-13 22:33:08 0331 DROP FIELDS recordset_id FROM client_housingplacementnotes_exit
    2020-01-13 22:33:08 0332 DROP FIELDS [Entry Exit Id] FROM client_housingplacementnotes_exit
    2020-01-13 22:33:08 0335 FieldMapSaClientExit:
    2020-01-13 22:33:08 0336   Mapping SQL
    2020-01-13 22:33:08 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:08 0338     FROM da_question dq
    2020-01-13 22:33:08 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0340     WHERE
    2020-01-13 22:33:08 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:33:08 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:33:08 0344     UNION
    2020-01-13 22:33:08 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:08 0346     FROM da_question dq
    2020-01-13 22:33:08 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0348     WHERE
    2020-01-13 22:33:08 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:33:08 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:33:08 0352      UNION
    2020-01-13 22:33:08 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:08 0354     FROM da_question dq
    2020-01-13 22:33:08 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0356     WHERE
    2020-01-13 22:33:08 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:33:08 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:33:08 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:08 0361     UNION
    2020-01-13 22:33:08 0362 
    2020-01-13 22:33:08 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:08 0364     FROM da_question dq
    2020-01-13 22:33:08 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0366     WHERE
    2020-01-13 22:33:08 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:33:08 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:33:08 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:08 0371     UNION   
    2020-01-13 22:33:08 0372     SELECT
    2020-01-13 22:33:08 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:33:08 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:08 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:08 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:33:08 0377     FROM da_question dq
    2020-01-13 22:33:08 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0379     WHERE
    2020-01-13 22:33:08 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:08 0382     UNION
    2020-01-13 22:33:08 0383 	SELECT
    2020-01-13 22:33:08 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:08 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:08 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:33:08 0387     FROM da_question dq
    2020-01-13 22:33:08 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:08 0389     WHERE
    2020-01-13 22:33:08 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:08 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:08      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:08      1,304 lines fetched
    2020-01-13 22:33:08 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:08 0394 DROP TABLE client_housingplacementnotes
    2020-01-13 22:33:08 0396 LET varStepName='STEPEXIT_' & 16 & '_of_' & 50
    2020-01-13 22:33:08 0397 STEPEXIT_16_of_50: select 1
    2020-01-13 22:33:08      	1 fields found: ?column?, 
    2020-01-13 22:33:08      1 lines fetched
    2020-01-13 22:33:08 0398 DROP TABLE STEPEXIT_16_of_50
    2020-01-13 22:33:08 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:08 0401 NEXT
    2020-01-13 22:33:08 0228 LET varRecordSetTableName=Peek('sp_table_name',17,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:08 0229 LET varRecordSetQlikName=Peek('qlik_table_name',17,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:08 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',17,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:08 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_childenrolldiff') <= 20),'hud_childenrolldiff' & 'end_1',left('hud_childenrolldiff', 20)& 'end_1')
    2020-01-13 22:33:08 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_childenrolldiff' & 'enddate'
    2020-01-13 22:33:08 0233 LET varRecordSetQlikName_Entry= 'client_hud_childenrolldiff' & '_entry'
    2020-01-13 22:33:08 0234 LET varRecordSetQlikName_Exit='client_hud_childenrolldiff'& '_exit'
    2020-01-13 22:33:08 0236 LET varRecordSetQlikName_Interim='client_hud_childenrolldiff' & '_review'
    2020-01-13 22:33:08 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_childenrolldiff', (len('client_hud_childenrolldiff'))-7))
    2020-01-13 22:33:08 0239 client_hud_childenrolldiff:
    2020-01-13 22:33:08 0240   SELECT * FROM qlik_sclient_hud_childenrolldiff
    2020-01-13 22:33:08      	5 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, 
    2020-01-13 22:33:08      33 lines fetched
    2020-01-13 22:33:08 0243 client_hud_childenrolldiff_exit:
    2020-01-13 22:33:08 0244   Noconcatenate
    2020-01-13 22:33:08 0245   LOAD DISTINCT
    2020-01-13 22:33:08 0246   *,
    2020-01-13 22:33:08 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:08 0248   recordset_id AS 'client_HUD_CHILDENROLLDIFFRECORDSET_ID_exit'
    2020-01-13 22:33:08 0249   RESIDENT client_hud_childenrolldiff
    2020-01-13 22:33:08      	7 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, %exit_recordset_id, client_HUD_CHILDENROLLDIFFRECORDSET_ID_exit, 
    2020-01-13 22:33:08      33 lines fetched
    2020-01-13 22:33:08 0251 client_hud_childenrolldiff:
    2020-01-13 22:33:08 0252   SELECT * FROM qlik_sclient_hud_childenrolldiff
    2020-01-13 22:33:09      	5 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, 
    2020-01-13 22:33:09      66 lines fetched
    2020-01-13 22:33:09 0254 CustomEndFieldCheck:
    2020-01-13 22:33:09 0255   SELECT *
    2020-01-13 22:33:09 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_childenrolldiffend_1'
    2020-01-13 22:33:09      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:33:09      0 lines fetched
    2020-01-13 22:33:09 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_childenrolldiffend_1','hud_childenrolldiffenddate')
    2020-01-13 22:33:09 0262 RS_Exit:
    2020-01-13 22:33:09 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:09 0264   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:33:09 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:09 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:09 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:09 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:09 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:33:09 0270   WHERE 
    2020-01-13 22:33:09 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:33:09 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:09 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:33:09 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:33:09 0275   AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:33:09 0276                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_childenrolldiffenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:33:09 0277   
    2020-01-13 22:33:09 0278   UNION
    2020-01-13 22:33:09 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:09 0280   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:33:09 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:09 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:09 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:09 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:09 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:33:09 0286   WHERE 
    2020-01-13 22:33:09 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:33:09 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:09 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:33:09 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:33:09 0291   AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:33:09 0292                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_childenrolldiffenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:09      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:33:09      19 lines fetched
    2020-01-13 22:33:09 0296 RS_Exit_Explicit:
    2020-01-13 22:33:09 0297   Noconcatenate
    2020-01-13 22:33:09 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:33:09 0299   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:33:09 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:09 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:09 0302   WHERE 
    2020-01-13 22:33:09 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:33:09 0304   AND ((((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_childenrolldiffenddate::DATE IS NULL)) 
    2020-01-13 22:33:09 0305                    OR (((ft.hud_childenrolldiffstartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_childenrolldiffenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_childenrolldiffenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:09      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:33:09      26 lines fetched
    2020-01-13 22:33:09 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:33:09 0310   LOAD
    2020-01-13 22:33:09 0311   entry_exit_id, 
    2020-01-13 22:33:09 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:09 0313   question_id as %exitquestionid,
    2020-01-13 22:33:09 0314   provider_creating_id
    2020-01-13 22:33:09 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:33:09      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:33:09      457,979 lines fetched
    2020-01-13 22:33:09 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:33:09 0318 INNER JOIN(client_hud_childenrolldiff_exit)
    2020-01-13 22:33:09 0319   LOAD DISTINCT
    2020-01-13 22:33:09 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:33:09 0321   recordset_id,
    2020-01-13 22:33:09 0322   provider_creating_id AS [client_HUD_CHILDENROLLDIFF_Provider_Creating_Exit],
    2020-01-13 22:33:09 0323   name AS [client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Exit],
    2020-01-13 22:33:09 0324   user_creating_id AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Exit],
    2020-01-13 22:33:09 0325   user_name AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Exit]
    2020-01-13 22:33:09 0326   RESIDENT RS_Exit
    2020-01-13 22:33:09      	6 fields found: Entry Exit Id, recordset_id, client_HUD_CHILDENROLLDIFF_Provider_Creating_Exit, client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Exit, client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Exit, client_HUD_CHILDENROLLDIFF_User_Created_By_Exit, 
    2020-01-13 22:33:09      19 lines fetched
    2020-01-13 22:33:09      Joining/Keeping
    2020-01-13 22:33:09 0328 DROP TABLE RS_Exit
    2020-01-13 22:33:09 0330 DROP FIELDS client_id FROM client_hud_childenrolldiff_exit
    2020-01-13 22:33:09 0331 DROP FIELDS recordset_id FROM client_hud_childenrolldiff_exit
    2020-01-13 22:33:09 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_childenrolldiff_exit
    2020-01-13 22:33:09 0335 FieldMapSaClientExit:
    2020-01-13 22:33:09 0336   Mapping SQL
    2020-01-13 22:33:09 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:09 0338     FROM da_question dq
    2020-01-13 22:33:09 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0340     WHERE
    2020-01-13 22:33:09 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:33:09 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:33:09 0344     UNION
    2020-01-13 22:33:09 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:09 0346     FROM da_question dq
    2020-01-13 22:33:09 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0348     WHERE
    2020-01-13 22:33:09 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:33:09 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:33:09 0352      UNION
    2020-01-13 22:33:09 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:09 0354     FROM da_question dq
    2020-01-13 22:33:09 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0356     WHERE
    2020-01-13 22:33:09 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:33:09 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:33:09 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:09 0361     UNION
    2020-01-13 22:33:09 0362 
    2020-01-13 22:33:09 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:09 0364     FROM da_question dq
    2020-01-13 22:33:09 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0366     WHERE
    2020-01-13 22:33:09 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:33:09 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:33:09 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:09 0371     UNION   
    2020-01-13 22:33:09 0372     SELECT
    2020-01-13 22:33:09 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:33:09 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:09 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:09 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:33:09 0377     FROM da_question dq
    2020-01-13 22:33:09 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0379     WHERE
    2020-01-13 22:33:09 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:09 0382     UNION
    2020-01-13 22:33:09 0383 	SELECT
    2020-01-13 22:33:09 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:09 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:09 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:33:09 0387     FROM da_question dq
    2020-01-13 22:33:09 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:09 0389     WHERE
    2020-01-13 22:33:09 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:09 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:10      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:10      1,304 lines fetched
    2020-01-13 22:33:10 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:10 0394 DROP TABLE client_hud_childenrolldiff
    2020-01-13 22:33:10 0396 LET varStepName='STEPEXIT_' & 17 & '_of_' & 50
    2020-01-13 22:33:10 0397 STEPEXIT_17_of_50: select 1
    2020-01-13 22:33:10      	1 fields found: ?column?, 
    2020-01-13 22:33:10      1 lines fetched
    2020-01-13 22:33:10 0398 DROP TABLE STEPEXIT_17_of_50
    2020-01-13 22:33:10 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:10 0401 NEXT
    2020-01-13 22:33:10 0228 LET varRecordSetTableName=Peek('sp_table_name',18,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:10 0229 LET varRecordSetQlikName=Peek('qlik_table_name',18,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:10 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',18,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:10 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_degreesearnedinfo') <= 20),'hud_degreesearnedinfo' & 'end_1',left('hud_degreesearnedinfo', 20)& 'end_1')
    2020-01-13 22:33:10 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_degreesearnedinfo' & 'enddate'
    2020-01-13 22:33:10 0233 LET varRecordSetQlikName_Entry= 'client_hud_degreesearnedinfo' & '_entry'
    2020-01-13 22:33:10 0234 LET varRecordSetQlikName_Exit='client_hud_degreesearnedinfo'& '_exit'
    2020-01-13 22:33:10 0236 LET varRecordSetQlikName_Interim='client_hud_degreesearnedinfo' & '_review'
    2020-01-13 22:33:10 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_degreesearnedinfo', (len('client_hud_degreesearnedinfo'))-7))
    2020-01-13 22:33:10 0239 client_hud_degreesearnedinfo:
    2020-01-13 22:33:10 0240   SELECT * FROM qlik_sclient_hud_degreesearnedinfo
    2020-01-13 22:33:10      	7 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, 
    2020-01-13 22:33:10      951 lines fetched
    2020-01-13 22:33:10 0243 client_hud_degreesearnedinfo_exit:
    2020-01-13 22:33:10 0244   Noconcatenate
    2020-01-13 22:33:10 0245   LOAD DISTINCT
    2020-01-13 22:33:10 0246   *,
    2020-01-13 22:33:10 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:10 0248   recordset_id AS 'client_HUD_DEGREESEARNEDINFORECORDSET_ID_exit'
    2020-01-13 22:33:10 0249   RESIDENT client_hud_degreesearnedinfo
    2020-01-13 22:33:10      	9 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, %exit_recordset_id, client_HUD_DEGREESEARNEDINFORECORDSET_ID_exit, 
    2020-01-13 22:33:10      951 lines fetched
    2020-01-13 22:33:10 0251 client_hud_degreesearnedinfo:
    2020-01-13 22:33:10 0252   SELECT * FROM qlik_sclient_hud_degreesearnedinfo
    2020-01-13 22:33:10      	7 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, 
    2020-01-13 22:33:10      1,902 lines fetched
    2020-01-13 22:33:10 0254 CustomEndFieldCheck:
    2020-01-13 22:33:10 0255   SELECT *
    2020-01-13 22:33:10 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_degreesearnedinfend_1'
    2020-01-13 22:33:11      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:33:11      0 lines fetched
    2020-01-13 22:33:11 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_degreesearnedinfend_1','hud_degreesearnedinfoenddate')
    2020-01-13 22:33:11 0262 RS_Exit:
    2020-01-13 22:33:11 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:11 0264   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:33:11 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:11 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:11 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:11 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:11 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:33:11 0270   WHERE 
    2020-01-13 22:33:11 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:33:11 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:11 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:33:11 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:33:11 0275   AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:33:11 0276                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:33:11 0277   
    2020-01-13 22:33:11 0278   UNION
    2020-01-13 22:33:11 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:33:11 0280   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:33:11 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:11 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:33:11 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:33:11 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:11 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:33:11 0286   WHERE 
    2020-01-13 22:33:11 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:33:11 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:33:11 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:33:11 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:33:11 0291   AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:33:11 0292                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:11      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:33:11      74 lines fetched
    2020-01-13 22:33:11 0296 RS_Exit_Explicit:
    2020-01-13 22:33:11 0297   Noconcatenate
    2020-01-13 22:33:11 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:33:11 0299   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:33:11 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:33:11 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:33:11 0302   WHERE 
    2020-01-13 22:33:11 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:33:11 0304   AND ((((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_degreesearnedinfoenddate::DATE IS NULL)) 
    2020-01-13 22:33:11 0305                    OR (((ft.hud_degreesearnedinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_degreesearnedinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_degreesearnedinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:33:11      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:33:11      263 lines fetched
    2020-01-13 22:33:11 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:33:11 0310   LOAD
    2020-01-13 22:33:11 0311   entry_exit_id, 
    2020-01-13 22:33:11 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:11 0313   question_id as %exitquestionid,
    2020-01-13 22:33:11 0314   provider_creating_id
    2020-01-13 22:33:11 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:33:11      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:33:11      458,242 lines fetched
    2020-01-13 22:33:11 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:33:11 0318 INNER JOIN(client_hud_degreesearnedinfo_exit)
    2020-01-13 22:33:11 0319   LOAD DISTINCT
    2020-01-13 22:33:11 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:33:11 0321   recordset_id,
    2020-01-13 22:33:11 0322   provider_creating_id AS [client_HUD_DEGREESEARNEDINFO_Provider_Creating_Exit],
    2020-01-13 22:33:11 0323   name AS [client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Exit],
    2020-01-13 22:33:11 0324   user_creating_id AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Exit],
    2020-01-13 22:33:11 0325   user_name AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Exit]
    2020-01-13 22:33:11 0326   RESIDENT RS_Exit
    2020-01-13 22:33:11      	6 fields found: Entry Exit Id, recordset_id, client_HUD_DEGREESEARNEDINFO_Provider_Creating_Exit, client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Exit, client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Exit, client_HUD_DEGREESEARNEDINFO_User_Created_By_Exit, 
    2020-01-13 22:33:11      74 lines fetched
    2020-01-13 22:33:11      Joining/Keeping
    2020-01-13 22:33:11 0328 DROP TABLE RS_Exit
    2020-01-13 22:33:11 0330 DROP FIELDS client_id FROM client_hud_degreesearnedinfo_exit
    2020-01-13 22:33:11 0331 DROP FIELDS recordset_id FROM client_hud_degreesearnedinfo_exit
    2020-01-13 22:33:11 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_degreesearnedinfo_exit
    2020-01-13 22:33:11 0335 FieldMapSaClientExit:
    2020-01-13 22:33:11 0336   Mapping SQL
    2020-01-13 22:33:11 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:11 0338     FROM da_question dq
    2020-01-13 22:33:11 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0340     WHERE
    2020-01-13 22:33:11 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:33:11 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:33:11 0344     UNION
    2020-01-13 22:33:11 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:11 0346     FROM da_question dq
    2020-01-13 22:33:11 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0348     WHERE
    2020-01-13 22:33:11 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:33:11 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:33:11 0352      UNION
    2020-01-13 22:33:11 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:33:11 0354     FROM da_question dq
    2020-01-13 22:33:11 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0356     WHERE
    2020-01-13 22:33:11 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:33:11 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:33:11 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:11 0361     UNION
    2020-01-13 22:33:11 0362 
    2020-01-13 22:33:11 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:33:11 0364     FROM da_question dq
    2020-01-13 22:33:11 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0366     WHERE
    2020-01-13 22:33:11 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:33:11 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:33:11 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:33:11 0371     UNION   
    2020-01-13 22:33:11 0372     SELECT
    2020-01-13 22:33:11 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:33:11 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:11 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:11 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:33:11 0377     FROM da_question dq
    2020-01-13 22:33:11 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0379     WHERE
    2020-01-13 22:33:11 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:11 0382     UNION
    2020-01-13 22:33:11 0383 	SELECT
    2020-01-13 22:33:11 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:11 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:33:11 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:33:11 0387     FROM da_question dq
    2020-01-13 22:33:11 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:33:11 0389     WHERE
    2020-01-13 22:33:11 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:33:11 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:33:12      	2 fields found: oldnames, newnames, 
    2020-01-13 22:33:12      1,304 lines fetched
    2020-01-13 22:33:12 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:33:12 0394 DROP TABLE client_hud_degreesearnedinfo
    2020-01-13 22:33:12 0396 LET varStepName='STEPEXIT_' & 18 & '_of_' & 50
    2020-01-13 22:33:12 0397 STEPEXIT_18_of_50: select 1
    2020-01-13 22:33:12      	1 fields found: ?column?, 
    2020-01-13 22:33:12      1 lines fetched
    2020-01-13 22:33:12 0398 DROP TABLE STEPEXIT_18_of_50
    2020-01-13 22:33:12 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:33:12 0401 NEXT
    2020-01-13 22:33:12 0228 LET varRecordSetTableName=Peek('sp_table_name',19,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:12 0229 LET varRecordSetQlikName=Peek('qlik_table_name',19,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:12 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',19,'RECORDSET_LIST_EXIT')
    2020-01-13 22:33:12 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hudhealthinsurancesuba') <= 20),'hudhealthinsurancesuba' & 'end_1',left('hudhealthinsurancesuba', 20)& 'end_1')
    2020-01-13 22:33:12 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hudhealthinsurancesuba' & 'enddate'
    2020-01-13 22:33:12 0233 LET varRecordSetQlikName_Entry= 'client_hudhealthinsurancesuba' & '_entry'
    2020-01-13 22:33:12 0234 LET varRecordSetQlikName_Exit='client_hudhealthinsurancesuba'& '_exit'
    2020-01-13 22:33:12 0236 LET varRecordSetQlikName_Interim='client_hudhealthinsurancesuba' & '_review'
    2020-01-13 22:33:12 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hudhealthinsurancesuba', (len('client_hudhealthinsurancesuba'))-7))
    2020-01-13 22:33:12 0239 client_hudhealthinsurancesuba:
    2020-01-13 22:33:12 0240   SELECT * FROM qlik_sclient_hudhealthinsurancesuba
    2020-01-13 22:33:50      	9 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, 
    2020-01-13 22:33:50      550,217 lines fetched
    2020-01-13 22:33:50 0243 client_hudhealthinsurancesuba_exit:
    2020-01-13 22:33:50 0244   Noconcatenate
    2020-01-13 22:33:50 0245   LOAD DISTINCT
    2020-01-13 22:33:50 0246   *,
    2020-01-13 22:33:50 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:33:50 0248   recordset_id AS 'client_HUDHEALTHINSURANCESUBARECORDSET_ID_exit'
    2020-01-13 22:33:50 0249   RESIDENT client_hudhealthinsurancesuba
    2020-01-13 22:33:51      	11 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, %exit_recordset_id, client_HUDHEALTHINSURANCESUBARECORDSET_ID_exit, 
    2020-01-13 22:33:51      550,217 lines fetched
    2020-01-13 22:33:51 0251 client_hudhealthinsurancesuba:
    2020-01-13 22:33:51 0252   SELECT * FROM qlik_sclient_hudhealthinsurancesuba
    2020-01-13 22:34:28      	9 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, 
    2020-01-13 22:34:28      1,100,434 lines fetched
    2020-01-13 22:34:28 0254 CustomEndFieldCheck:
    2020-01-13 22:34:28 0255   SELECT *
    2020-01-13 22:34:28 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hudhealthinsurancesuend_1'
    2020-01-13 22:34:28      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:34:28      0 lines fetched
    2020-01-13 22:34:29 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hudhealthinsurancesuend_1','hudhealthinsurancesubaenddate')
    2020-01-13 22:34:29 0262 RS_Exit:
    2020-01-13 22:34:29 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:34:29 0264   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:34:29 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:34:29 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:34:29 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:34:29 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:34:29 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:34:29 0270   WHERE 
    2020-01-13 22:34:29 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:34:29 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:34:29 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:34:29 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:34:29 0275   AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:34:29 0276                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:34:29 0277   
    2020-01-13 22:34:29 0278   UNION
    2020-01-13 22:34:29 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:34:29 0280   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:34:29 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:34:29 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:34:29 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:34:29 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:34:29 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:34:29 0286   WHERE 
    2020-01-13 22:34:29 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:34:29 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:34:29 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:34:29 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:34:29 0291   AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:34:29 0292                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:35:42      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:35:42      250,405 lines fetched
    2020-01-13 22:35:42 0296 RS_Exit_Explicit:
    2020-01-13 22:35:42 0297   Noconcatenate
    2020-01-13 22:35:42 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:35:42 0299   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:35:42 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:35:42 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:35:42 0302   WHERE 
    2020-01-13 22:35:42 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:35:42 0304   AND ((((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hudhealthinsurancesubaenddate::DATE IS NULL)) 
    2020-01-13 22:35:42 0305                    OR (((ft.hudhealthinsurancesubastartdate::DATE <= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hudhealthinsurancesubaenddate::DATE >= ee.exit_date::DATE) OR ((ft.hudhealthinsurancesubaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:19      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:19      429,446 lines fetched
    2020-01-13 22:36:19 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:19 0310   LOAD
    2020-01-13 22:36:19 0311   entry_exit_id, 
    2020-01-13 22:36:19 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:19 0313   question_id as %exitquestionid,
    2020-01-13 22:36:19 0314   provider_creating_id
    2020-01-13 22:36:19 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:20      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:20      887,688 lines fetched
    2020-01-13 22:36:20 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:20 0318 INNER JOIN(client_hudhealthinsurancesuba_exit)
    2020-01-13 22:36:20 0319   LOAD DISTINCT
    2020-01-13 22:36:20 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:20 0321   recordset_id,
    2020-01-13 22:36:20 0322   provider_creating_id AS [client_HUDHEALTHINSURANCESUBA_Provider_Creating_Exit],
    2020-01-13 22:36:20 0323   name AS [client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Exit],
    2020-01-13 22:36:20 0324   user_creating_id AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Exit],
    2020-01-13 22:36:20 0325   user_name AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Exit]
    2020-01-13 22:36:20 0326   RESIDENT RS_Exit
    2020-01-13 22:36:20      	6 fields found: Entry Exit Id, recordset_id, client_HUDHEALTHINSURANCESUBA_Provider_Creating_Exit, client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Exit, client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Exit, client_HUDHEALTHINSURANCESUBA_User_Created_By_Exit, 
    2020-01-13 22:36:20      250,405 lines fetched
    2020-01-13 22:36:20      Joining/Keeping
    2020-01-13 22:36:21 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:21 0330 DROP FIELDS client_id FROM client_hudhealthinsurancesuba_exit
    2020-01-13 22:36:21 0331 DROP FIELDS recordset_id FROM client_hudhealthinsurancesuba_exit
    2020-01-13 22:36:21 0332 DROP FIELDS [Entry Exit Id] FROM client_hudhealthinsurancesuba_exit
    2020-01-13 22:36:21 0335 FieldMapSaClientExit:
    2020-01-13 22:36:21 0336   Mapping SQL
    2020-01-13 22:36:21 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:21 0338     FROM da_question dq
    2020-01-13 22:36:21 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0340     WHERE
    2020-01-13 22:36:21 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:21 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:21 0344     UNION
    2020-01-13 22:36:21 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:21 0346     FROM da_question dq
    2020-01-13 22:36:21 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0348     WHERE
    2020-01-13 22:36:21 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:21 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:21 0352      UNION
    2020-01-13 22:36:21 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:21 0354     FROM da_question dq
    2020-01-13 22:36:21 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0356     WHERE
    2020-01-13 22:36:21 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:21 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:21 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:21 0361     UNION
    2020-01-13 22:36:21 0362 
    2020-01-13 22:36:21 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:21 0364     FROM da_question dq
    2020-01-13 22:36:21 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0366     WHERE
    2020-01-13 22:36:21 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:21 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:21 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:21 0371     UNION   
    2020-01-13 22:36:21 0372     SELECT
    2020-01-13 22:36:21 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:21 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:21 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:21 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:21 0377     FROM da_question dq
    2020-01-13 22:36:21 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0379     WHERE
    2020-01-13 22:36:21 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:21 0382     UNION
    2020-01-13 22:36:21 0383 	SELECT
    2020-01-13 22:36:21 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:21 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:21 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:21 0387     FROM da_question dq
    2020-01-13 22:36:21 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:21 0389     WHERE
    2020-01-13 22:36:21 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:21 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:21      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:21      1,304 lines fetched
    2020-01-13 22:36:21 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:21 0394 DROP TABLE client_hudhealthinsurancesuba
    2020-01-13 22:36:21 0396 LET varStepName='STEPEXIT_' & 19 & '_of_' & 50
    2020-01-13 22:36:21 0397 STEPEXIT_19_of_50: select 1
    2020-01-13 22:36:21      	1 fields found: ?column?, 
    2020-01-13 22:36:21      1 lines fetched
    2020-01-13 22:36:21 0398 DROP TABLE STEPEXIT_19_of_50
    2020-01-13 22:36:21 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:21 0401 NEXT
    2020-01-13 22:36:21 0228 LET varRecordSetTableName=Peek('sp_table_name',20,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:21 0229 LET varRecordSetQlikName=Peek('qlik_table_name',20,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:21 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',20,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:21 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militarybranchinfo') <= 20),'hud_militarybranchinfo' & 'end_1',left('hud_militarybranchinfo', 20)& 'end_1')
    2020-01-13 22:36:21 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militarybranchinfo' & 'enddate'
    2020-01-13 22:36:21 0233 LET varRecordSetQlikName_Entry= 'client_hud_militarybranchinfo' & '_entry'
    2020-01-13 22:36:21 0234 LET varRecordSetQlikName_Exit='client_hud_militarybranchinfo'& '_exit'
    2020-01-13 22:36:21 0236 LET varRecordSetQlikName_Interim='client_hud_militarybranchinfo' & '_review'
    2020-01-13 22:36:21 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_militarybranchinfo', (len('client_hud_militarybranchinfo'))-7))
    2020-01-13 22:36:21 0239 client_hud_militarybranchinfo:
    2020-01-13 22:36:21 0240   SELECT * FROM qlik_sclient_hud_militarybranchinfo
    2020-01-13 22:36:22      	5 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, 
    2020-01-13 22:36:22      2,382 lines fetched
    2020-01-13 22:36:22 0243 client_hud_militarybranchinfo_exit:
    2020-01-13 22:36:22 0244   Noconcatenate
    2020-01-13 22:36:22 0245   LOAD DISTINCT
    2020-01-13 22:36:22 0246   *,
    2020-01-13 22:36:22 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:22 0248   recordset_id AS 'client_HUD_MILITARYBRANCHINFORECORDSET_ID_exit'
    2020-01-13 22:36:22 0249   RESIDENT client_hud_militarybranchinfo
    2020-01-13 22:36:22      	7 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, %exit_recordset_id, client_HUD_MILITARYBRANCHINFORECORDSET_ID_exit, 
    2020-01-13 22:36:22      2,382 lines fetched
    2020-01-13 22:36:22 0251 client_hud_militarybranchinfo:
    2020-01-13 22:36:22 0252   SELECT * FROM qlik_sclient_hud_militarybranchinfo
    2020-01-13 22:36:22      	5 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, 
    2020-01-13 22:36:22      4,764 lines fetched
    2020-01-13 22:36:22 0254 CustomEndFieldCheck:
    2020-01-13 22:36:22 0255   SELECT *
    2020-01-13 22:36:22 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militarybranchinend_1'
    2020-01-13 22:36:22      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:22      0 lines fetched
    2020-01-13 22:36:22 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militarybranchinend_1','hud_militarybranchinfoenddate')
    2020-01-13 22:36:22 0262 RS_Exit:
    2020-01-13 22:36:22 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:22 0264   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:36:22 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:22 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:22 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:22 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:22 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:22 0270   WHERE 
    2020-01-13 22:36:22 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:22 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:22 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:22 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:22 0275   AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:22 0276                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:22 0277   
    2020-01-13 22:36:22 0278   UNION
    2020-01-13 22:36:22 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:22 0280   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:36:22 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:22 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:22 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:22 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:22 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:22 0286   WHERE 
    2020-01-13 22:36:22 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:22 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:22 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:22 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:22 0291   AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:22 0292                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:23      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:23      23 lines fetched
    2020-01-13 22:36:23 0296 RS_Exit_Explicit:
    2020-01-13 22:36:23 0297   Noconcatenate
    2020-01-13 22:36:23 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:23 0299   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:36:23 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:23 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:23 0302   WHERE 
    2020-01-13 22:36:23 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:23 0304   AND ((((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militarybranchinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:23 0305                    OR (((ft.hud_militarybranchinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militarybranchinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militarybranchinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:23      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:23      125 lines fetched
    2020-01-13 22:36:23 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:23 0310   LOAD
    2020-01-13 22:36:23 0311   entry_exit_id, 
    2020-01-13 22:36:23 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:23 0313   question_id as %exitquestionid,
    2020-01-13 22:36:23 0314   provider_creating_id
    2020-01-13 22:36:23 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:23      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:23      887,813 lines fetched
    2020-01-13 22:36:23 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:23 0318 INNER JOIN(client_hud_militarybranchinfo_exit)
    2020-01-13 22:36:23 0319   LOAD DISTINCT
    2020-01-13 22:36:23 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:23 0321   recordset_id,
    2020-01-13 22:36:23 0322   provider_creating_id AS [client_HUD_MILITARYBRANCHINFO_Provider_Creating_Exit],
    2020-01-13 22:36:23 0323   name AS [client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Exit],
    2020-01-13 22:36:23 0324   user_creating_id AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Exit],
    2020-01-13 22:36:23 0325   user_name AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Exit]
    2020-01-13 22:36:23 0326   RESIDENT RS_Exit
    2020-01-13 22:36:23      	6 fields found: Entry Exit Id, recordset_id, client_HUD_MILITARYBRANCHINFO_Provider_Creating_Exit, client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Exit, client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Exit, client_HUD_MILITARYBRANCHINFO_User_Created_By_Exit, 
    2020-01-13 22:36:23      23 lines fetched
    2020-01-13 22:36:23      Joining/Keeping
    2020-01-13 22:36:23 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:23 0330 DROP FIELDS client_id FROM client_hud_militarybranchinfo_exit
    2020-01-13 22:36:23 0331 DROP FIELDS recordset_id FROM client_hud_militarybranchinfo_exit
    2020-01-13 22:36:23 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_militarybranchinfo_exit
    2020-01-13 22:36:23 0335 FieldMapSaClientExit:
    2020-01-13 22:36:23 0336   Mapping SQL
    2020-01-13 22:36:23 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:23 0338     FROM da_question dq
    2020-01-13 22:36:23 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0340     WHERE
    2020-01-13 22:36:23 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:23 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:23 0344     UNION
    2020-01-13 22:36:23 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:23 0346     FROM da_question dq
    2020-01-13 22:36:23 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0348     WHERE
    2020-01-13 22:36:23 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:23 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:23 0352      UNION
    2020-01-13 22:36:23 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:23 0354     FROM da_question dq
    2020-01-13 22:36:23 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0356     WHERE
    2020-01-13 22:36:23 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:23 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:23 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:23 0361     UNION
    2020-01-13 22:36:23 0362 
    2020-01-13 22:36:23 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:23 0364     FROM da_question dq
    2020-01-13 22:36:23 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0366     WHERE
    2020-01-13 22:36:23 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:23 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:23 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:23 0371     UNION   
    2020-01-13 22:36:23 0372     SELECT
    2020-01-13 22:36:23 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:23 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:23 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:23 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:23 0377     FROM da_question dq
    2020-01-13 22:36:23 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0379     WHERE
    2020-01-13 22:36:23 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:23 0382     UNION
    2020-01-13 22:36:23 0383 	SELECT
    2020-01-13 22:36:23 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:23 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:23 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:23 0387     FROM da_question dq
    2020-01-13 22:36:23 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:23 0389     WHERE
    2020-01-13 22:36:23 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:23 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:24      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:24      1,304 lines fetched
    2020-01-13 22:36:24 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:24 0394 DROP TABLE client_hud_militarybranchinfo
    2020-01-13 22:36:24 0396 LET varStepName='STEPEXIT_' & 20 & '_of_' & 50
    2020-01-13 22:36:24 0397 STEPEXIT_20_of_50: select 1
    2020-01-13 22:36:24      	1 fields found: ?column?, 
    2020-01-13 22:36:24      1 lines fetched
    2020-01-13 22:36:24 0398 DROP TABLE STEPEXIT_20_of_50
    2020-01-13 22:36:24 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:24 0401 NEXT
    2020-01-13 22:36:24 0228 LET varRecordSetTableName=Peek('sp_table_name',21,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:24 0229 LET varRecordSetQlikName=Peek('qlik_table_name',21,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:24 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',21,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:24 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militaryserverainfo') <= 20),'hud_militaryserverainfo' & 'end_1',left('hud_militaryserverainfo', 20)& 'end_1')
    2020-01-13 22:36:24 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militaryserverainfo' & 'enddate'
    2020-01-13 22:36:24 0233 LET varRecordSetQlikName_Entry= 'client_hud_militaryserverainfo' & '_entry'
    2020-01-13 22:36:24 0234 LET varRecordSetQlikName_Exit='client_hud_militaryserverainfo'& '_exit'
    2020-01-13 22:36:24 0236 LET varRecordSetQlikName_Interim='client_hud_militaryserverainfo' & '_review'
    2020-01-13 22:36:24 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_militaryserverainfo', (len('client_hud_militaryserverainfo'))-7))
    2020-01-13 22:36:24 0239 client_hud_militaryserverainfo:
    2020-01-13 22:36:24 0240   SELECT * FROM qlik_sclient_hud_militaryserverainfo
    2020-01-13 22:36:24      	5 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, 
    2020-01-13 22:36:24      2,145 lines fetched
    2020-01-13 22:36:24 0243 client_hud_militaryserverainfo_exit:
    2020-01-13 22:36:24 0244   Noconcatenate
    2020-01-13 22:36:24 0245   LOAD DISTINCT
    2020-01-13 22:36:24 0246   *,
    2020-01-13 22:36:24 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:24 0248   recordset_id AS 'client_HUD_MILITARYSERVERAINFORECORDSET_ID_exit'
    2020-01-13 22:36:24 0249   RESIDENT client_hud_militaryserverainfo
    2020-01-13 22:36:24      	7 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, %exit_recordset_id, client_HUD_MILITARYSERVERAINFORECORDSET_ID_exit, 
    2020-01-13 22:36:24      2,145 lines fetched
    2020-01-13 22:36:24 0251 client_hud_militaryserverainfo:
    2020-01-13 22:36:24 0252   SELECT * FROM qlik_sclient_hud_militaryserverainfo
    2020-01-13 22:36:24      	5 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, 
    2020-01-13 22:36:24      4,290 lines fetched
    2020-01-13 22:36:24 0254 CustomEndFieldCheck:
    2020-01-13 22:36:24 0255   SELECT *
    2020-01-13 22:36:24 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militaryserveraiend_1'
    2020-01-13 22:36:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:25      0 lines fetched
    2020-01-13 22:36:25 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militaryserveraiend_1','hud_militaryserverainfoenddate')
    2020-01-13 22:36:25 0262 RS_Exit:
    2020-01-13 22:36:25 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:25 0264   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:36:25 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:25 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:25 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:25 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:25 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:25 0270   WHERE 
    2020-01-13 22:36:25 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:25 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:25 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:25 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:25 0275   AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:25 0276                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:25 0277   
    2020-01-13 22:36:25 0278   UNION
    2020-01-13 22:36:25 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:25 0280   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:36:25 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:25 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:25 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:25 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:25 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:25 0286   WHERE 
    2020-01-13 22:36:25 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:25 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:25 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:25 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:25 0291   AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:25 0292                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:25      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:25      29 lines fetched
    2020-01-13 22:36:25 0296 RS_Exit_Explicit:
    2020-01-13 22:36:25 0297   Noconcatenate
    2020-01-13 22:36:25 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:25 0299   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:36:25 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:25 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:25 0302   WHERE 
    2020-01-13 22:36:25 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:25 0304   AND ((((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_militaryserverainfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:25 0305                    OR (((ft.hud_militaryserverainfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_militaryserverainfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_militaryserverainfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:25      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:25      139 lines fetched
    2020-01-13 22:36:25 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:25 0310   LOAD
    2020-01-13 22:36:25 0311   entry_exit_id, 
    2020-01-13 22:36:25 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:25 0313   question_id as %exitquestionid,
    2020-01-13 22:36:25 0314   provider_creating_id
    2020-01-13 22:36:25 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:26      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:26      887,952 lines fetched
    2020-01-13 22:36:26 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:26 0318 INNER JOIN(client_hud_militaryserverainfo_exit)
    2020-01-13 22:36:26 0319   LOAD DISTINCT
    2020-01-13 22:36:26 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:26 0321   recordset_id,
    2020-01-13 22:36:26 0322   provider_creating_id AS [client_HUD_MILITARYSERVERAINFO_Provider_Creating_Exit],
    2020-01-13 22:36:26 0323   name AS [client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Exit],
    2020-01-13 22:36:26 0324   user_creating_id AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Exit],
    2020-01-13 22:36:26 0325   user_name AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Exit]
    2020-01-13 22:36:26 0326   RESIDENT RS_Exit
    2020-01-13 22:36:26      	6 fields found: Entry Exit Id, recordset_id, client_HUD_MILITARYSERVERAINFO_Provider_Creating_Exit, client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Exit, client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Exit, client_HUD_MILITARYSERVERAINFO_User_Created_By_Exit, 
    2020-01-13 22:36:26      29 lines fetched
    2020-01-13 22:36:26      Joining/Keeping
    2020-01-13 22:36:26 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:26 0330 DROP FIELDS client_id FROM client_hud_militaryserverainfo_exit
    2020-01-13 22:36:26 0331 DROP FIELDS recordset_id FROM client_hud_militaryserverainfo_exit
    2020-01-13 22:36:26 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_militaryserverainfo_exit
    2020-01-13 22:36:26 0335 FieldMapSaClientExit:
    2020-01-13 22:36:26 0336   Mapping SQL
    2020-01-13 22:36:26 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:26 0338     FROM da_question dq
    2020-01-13 22:36:26 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0340     WHERE
    2020-01-13 22:36:26 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:26 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:26 0344     UNION
    2020-01-13 22:36:26 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:26 0346     FROM da_question dq
    2020-01-13 22:36:26 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0348     WHERE
    2020-01-13 22:36:26 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:26 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:26 0352      UNION
    2020-01-13 22:36:26 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:26 0354     FROM da_question dq
    2020-01-13 22:36:26 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0356     WHERE
    2020-01-13 22:36:26 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:26 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:26 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:26 0361     UNION
    2020-01-13 22:36:26 0362 
    2020-01-13 22:36:26 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:26 0364     FROM da_question dq
    2020-01-13 22:36:26 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0366     WHERE
    2020-01-13 22:36:26 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:26 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:26 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:26 0371     UNION   
    2020-01-13 22:36:26 0372     SELECT
    2020-01-13 22:36:26 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:26 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:26 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:26 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:26 0377     FROM da_question dq
    2020-01-13 22:36:26 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0379     WHERE
    2020-01-13 22:36:26 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:26 0382     UNION
    2020-01-13 22:36:26 0383 	SELECT
    2020-01-13 22:36:26 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:26 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:26 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:26 0387     FROM da_question dq
    2020-01-13 22:36:26 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:26 0389     WHERE
    2020-01-13 22:36:26 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:26 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:26      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:26      1,304 lines fetched
    2020-01-13 22:36:26 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:26 0394 DROP TABLE client_hud_militaryserverainfo
    2020-01-13 22:36:26 0396 LET varStepName='STEPEXIT_' & 21 & '_of_' & 50
    2020-01-13 22:36:26 0397 STEPEXIT_21_of_50: select 1
    2020-01-13 22:36:26      	1 fields found: ?column?, 
    2020-01-13 22:36:26      1 lines fetched
    2020-01-13 22:36:26 0398 DROP TABLE STEPEXIT_21_of_50
    2020-01-13 22:36:26 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:26 0401 NEXT
    2020-01-13 22:36:26 0228 LET varRecordSetTableName=Peek('sp_table_name',22,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:26 0229 LET varRecordSetQlikName=Peek('qlik_table_name',22,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:26 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',22,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:26 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_vetinfo') <= 20),'hud_vetinfo' & 'end_1',left('hud_vetinfo', 20)& 'end_1')
    2020-01-13 22:36:26 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_vetinfo' & 'enddate'
    2020-01-13 22:36:26 0233 LET varRecordSetQlikName_Entry= 'client_hud_vetinfo' & '_entry'
    2020-01-13 22:36:26 0234 LET varRecordSetQlikName_Exit='client_hud_vetinfo'& '_exit'
    2020-01-13 22:36:26 0236 LET varRecordSetQlikName_Interim='client_hud_vetinfo' & '_review'
    2020-01-13 22:36:26 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_vetinfo', (len('client_hud_vetinfo'))-7))
    2020-01-13 22:36:26 0239 client_hud_vetinfo:
    2020-01-13 22:36:26 0240   SELECT * FROM qlik_sclient_hud_vetinfo
    2020-01-13 22:36:27      	14 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, 
    2020-01-13 22:36:27      2,222 lines fetched
    2020-01-13 22:36:27 0243 client_hud_vetinfo_exit:
    2020-01-13 22:36:27 0244   Noconcatenate
    2020-01-13 22:36:27 0245   LOAD DISTINCT
    2020-01-13 22:36:27 0246   *,
    2020-01-13 22:36:27 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:27 0248   recordset_id AS 'client_HUD_VETINFORECORDSET_ID_exit'
    2020-01-13 22:36:27 0249   RESIDENT client_hud_vetinfo
    2020-01-13 22:36:27      	16 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, %exit_recordset_id, client_HUD_VETINFORECORDSET_ID_exit, 
    2020-01-13 22:36:27      2,222 lines fetched
    2020-01-13 22:36:27 0251 client_hud_vetinfo:
    2020-01-13 22:36:27 0252   SELECT * FROM qlik_sclient_hud_vetinfo
    2020-01-13 22:36:27      	14 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, 
    2020-01-13 22:36:27      4,444 lines fetched
    2020-01-13 22:36:27 0254 CustomEndFieldCheck:
    2020-01-13 22:36:27 0255   SELECT *
    2020-01-13 22:36:27 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_vetinfoend_1'
    2020-01-13 22:36:28      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:28      0 lines fetched
    2020-01-13 22:36:28 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_vetinfoend_1','hud_vetinfoenddate')
    2020-01-13 22:36:28 0262 RS_Exit:
    2020-01-13 22:36:28 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:28 0264   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:36:28 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:28 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:28 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:28 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:28 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:28 0270   WHERE 
    2020-01-13 22:36:28 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:28 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:28 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:28 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:28 0275   AND ((((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:28 0276                    OR (((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_vetinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_vetinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:28 0277   
    2020-01-13 22:36:28 0278   UNION
    2020-01-13 22:36:28 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:28 0280   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:36:28 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:28 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:28 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:28 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:28 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:28 0286   WHERE 
    2020-01-13 22:36:28 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:28 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:28 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:28 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:28 0291   AND ((((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:28 0292                    OR (((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_vetinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_vetinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:29      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:29      8 lines fetched
    2020-01-13 22:36:29 0296 RS_Exit_Explicit:
    2020-01-13 22:36:29 0297   Noconcatenate
    2020-01-13 22:36:29 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:29 0299   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:36:29 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:29 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:29 0302   WHERE 
    2020-01-13 22:36:29 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:29 0304   AND ((((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_vetinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:29 0305                    OR (((ft.hud_vetinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_vetinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_vetinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_vetinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:29      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:29      14 lines fetched
    2020-01-13 22:36:29 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:29 0310   LOAD
    2020-01-13 22:36:29 0311   entry_exit_id, 
    2020-01-13 22:36:29 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:29 0313   question_id as %exitquestionid,
    2020-01-13 22:36:29 0314   provider_creating_id
    2020-01-13 22:36:29 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:29      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:29      887,966 lines fetched
    2020-01-13 22:36:29 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:29 0318 INNER JOIN(client_hud_vetinfo_exit)
    2020-01-13 22:36:29 0319   LOAD DISTINCT
    2020-01-13 22:36:29 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:29 0321   recordset_id,
    2020-01-13 22:36:29 0322   provider_creating_id AS [client_HUD_VETINFO_Provider_Creating_Exit],
    2020-01-13 22:36:29 0323   name AS [client_HUD_VETINFO_Provider_Name_Creating_Exit],
    2020-01-13 22:36:29 0324   user_creating_id AS [client_HUD_VETINFO_User_Created_By_Id_Exit],
    2020-01-13 22:36:29 0325   user_name AS [client_HUD_VETINFO_User_Created_By_Exit]
    2020-01-13 22:36:29 0326   RESIDENT RS_Exit
    2020-01-13 22:36:29      	6 fields found: Entry Exit Id, recordset_id, client_HUD_VETINFO_Provider_Creating_Exit, client_HUD_VETINFO_Provider_Name_Creating_Exit, client_HUD_VETINFO_User_Created_By_Id_Exit, client_HUD_VETINFO_User_Created_By_Exit, 
    2020-01-13 22:36:29      8 lines fetched
    2020-01-13 22:36:29      Joining/Keeping
    2020-01-13 22:36:30 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:30 0330 DROP FIELDS client_id FROM client_hud_vetinfo_exit
    2020-01-13 22:36:30 0331 DROP FIELDS recordset_id FROM client_hud_vetinfo_exit
    2020-01-13 22:36:30 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_vetinfo_exit
    2020-01-13 22:36:30 0335 FieldMapSaClientExit:
    2020-01-13 22:36:30 0336   Mapping SQL
    2020-01-13 22:36:30 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:30 0338     FROM da_question dq
    2020-01-13 22:36:30 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0340     WHERE
    2020-01-13 22:36:30 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:30 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:30 0344     UNION
    2020-01-13 22:36:30 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:30 0346     FROM da_question dq
    2020-01-13 22:36:30 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0348     WHERE
    2020-01-13 22:36:30 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:30 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:30 0352      UNION
    2020-01-13 22:36:30 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:30 0354     FROM da_question dq
    2020-01-13 22:36:30 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0356     WHERE
    2020-01-13 22:36:30 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:30 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:30 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:30 0361     UNION
    2020-01-13 22:36:30 0362 
    2020-01-13 22:36:30 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:30 0364     FROM da_question dq
    2020-01-13 22:36:30 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0366     WHERE
    2020-01-13 22:36:30 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:30 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:30 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:30 0371     UNION   
    2020-01-13 22:36:30 0372     SELECT
    2020-01-13 22:36:30 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:30 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:30 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:30 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:30 0377     FROM da_question dq
    2020-01-13 22:36:30 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0379     WHERE
    2020-01-13 22:36:30 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:30 0382     UNION
    2020-01-13 22:36:30 0383 	SELECT
    2020-01-13 22:36:30 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:30 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:30 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:30 0387     FROM da_question dq
    2020-01-13 22:36:30 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:30 0389     WHERE
    2020-01-13 22:36:30 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:30 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:30      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:30      1,304 lines fetched
    2020-01-13 22:36:30 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:30 0394 DROP TABLE client_hud_vetinfo
    2020-01-13 22:36:30 0396 LET varStepName='STEPEXIT_' & 22 & '_of_' & 50
    2020-01-13 22:36:30 0397 STEPEXIT_22_of_50: select 1
    2020-01-13 22:36:30      	1 fields found: ?column?, 
    2020-01-13 22:36:30      1 lines fetched
    2020-01-13 22:36:30 0398 DROP TABLE STEPEXIT_22_of_50
    2020-01-13 22:36:30 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:30 0401 NEXT
    2020-01-13 22:36:30 0228 LET varRecordSetTableName=Peek('sp_table_name',23,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:30 0229 LET varRecordSetQlikName=Peek('qlik_table_name',23,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:30 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',23,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:30 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_warzoneinfo') <= 20),'hud_warzoneinfo' & 'end_1',left('hud_warzoneinfo', 20)& 'end_1')
    2020-01-13 22:36:30 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_warzoneinfo' & 'enddate'
    2020-01-13 22:36:30 0233 LET varRecordSetQlikName_Entry= 'client_hud_warzoneinfo' & '_entry'
    2020-01-13 22:36:30 0234 LET varRecordSetQlikName_Exit='client_hud_warzoneinfo'& '_exit'
    2020-01-13 22:36:30 0236 LET varRecordSetQlikName_Interim='client_hud_warzoneinfo' & '_review'
    2020-01-13 22:36:30 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_hud_warzoneinfo', (len('client_hud_warzoneinfo'))-7))
    2020-01-13 22:36:30 0239 client_hud_warzoneinfo:
    2020-01-13 22:36:30 0240   SELECT * FROM qlik_sclient_hud_warzoneinfo
    2020-01-13 22:36:30      	7 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, 
    2020-01-13 22:36:30      362 lines fetched
    2020-01-13 22:36:30 0243 client_hud_warzoneinfo_exit:
    2020-01-13 22:36:30 0244   Noconcatenate
    2020-01-13 22:36:30 0245   LOAD DISTINCT
    2020-01-13 22:36:30 0246   *,
    2020-01-13 22:36:30 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:30 0248   recordset_id AS 'client_HUD_WARZONEINFORECORDSET_ID_exit'
    2020-01-13 22:36:30 0249   RESIDENT client_hud_warzoneinfo
    2020-01-13 22:36:30      	9 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, %exit_recordset_id, client_HUD_WARZONEINFORECORDSET_ID_exit, 
    2020-01-13 22:36:30      362 lines fetched
    2020-01-13 22:36:30 0251 client_hud_warzoneinfo:
    2020-01-13 22:36:30 0252   SELECT * FROM qlik_sclient_hud_warzoneinfo
    2020-01-13 22:36:31      	7 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, 
    2020-01-13 22:36:31      724 lines fetched
    2020-01-13 22:36:31 0254 CustomEndFieldCheck:
    2020-01-13 22:36:31 0255   SELECT *
    2020-01-13 22:36:31 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_warzoneinfoend_1'
    2020-01-13 22:36:31      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:31      0 lines fetched
    2020-01-13 22:36:31 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_warzoneinfoend_1','hud_warzoneinfoenddate')
    2020-01-13 22:36:31 0262 RS_Exit:
    2020-01-13 22:36:31 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:31 0264   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:36:31 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:31 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:31 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:31 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:31 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:31 0270   WHERE 
    2020-01-13 22:36:31 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:31 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:31 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:31 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:31 0275   AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:31 0276                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_warzoneinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:31 0277   
    2020-01-13 22:36:31 0278   UNION
    2020-01-13 22:36:31 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:31 0280   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:36:31 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:31 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:31 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:31 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:31 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:31 0286   WHERE 
    2020-01-13 22:36:31 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:31 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:31 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:31 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:31 0291   AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:31 0292                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_warzoneinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:31      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:31      13 lines fetched
    2020-01-13 22:36:31 0296 RS_Exit_Explicit:
    2020-01-13 22:36:31 0297   Noconcatenate
    2020-01-13 22:36:31 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:31 0299   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:36:31 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:31 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:31 0302   WHERE 
    2020-01-13 22:36:31 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:31 0304   AND ((((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.hud_warzoneinfoenddate::DATE IS NULL)) 
    2020-01-13 22:36:31 0305                    OR (((ft.hud_warzoneinfostartdate::DATE <= ee.exit_date::DATE) OR ((ft.hud_warzoneinfostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.hud_warzoneinfoenddate::DATE >= ee.exit_date::DATE) OR ((ft.hud_warzoneinfoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:31      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:31      44 lines fetched
    2020-01-13 22:36:31 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:31 0310   LOAD
    2020-01-13 22:36:31 0311   entry_exit_id, 
    2020-01-13 22:36:31 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:31 0313   question_id as %exitquestionid,
    2020-01-13 22:36:31 0314   provider_creating_id
    2020-01-13 22:36:31 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:31      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:31      888,010 lines fetched
    2020-01-13 22:36:31 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:31 0318 INNER JOIN(client_hud_warzoneinfo_exit)
    2020-01-13 22:36:31 0319   LOAD DISTINCT
    2020-01-13 22:36:31 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:31 0321   recordset_id,
    2020-01-13 22:36:31 0322   provider_creating_id AS [client_HUD_WARZONEINFO_Provider_Creating_Exit],
    2020-01-13 22:36:31 0323   name AS [client_HUD_WARZONEINFO_Provider_Name_Creating_Exit],
    2020-01-13 22:36:31 0324   user_creating_id AS [client_HUD_WARZONEINFO_User_Created_By_Id_Exit],
    2020-01-13 22:36:31 0325   user_name AS [client_HUD_WARZONEINFO_User_Created_By_Exit]
    2020-01-13 22:36:31 0326   RESIDENT RS_Exit
    2020-01-13 22:36:32      	6 fields found: Entry Exit Id, recordset_id, client_HUD_WARZONEINFO_Provider_Creating_Exit, client_HUD_WARZONEINFO_Provider_Name_Creating_Exit, client_HUD_WARZONEINFO_User_Created_By_Id_Exit, client_HUD_WARZONEINFO_User_Created_By_Exit, 
    2020-01-13 22:36:32      13 lines fetched
    2020-01-13 22:36:32      Joining/Keeping
    2020-01-13 22:36:32 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:32 0330 DROP FIELDS client_id FROM client_hud_warzoneinfo_exit
    2020-01-13 22:36:32 0331 DROP FIELDS recordset_id FROM client_hud_warzoneinfo_exit
    2020-01-13 22:36:32 0332 DROP FIELDS [Entry Exit Id] FROM client_hud_warzoneinfo_exit
    2020-01-13 22:36:32 0335 FieldMapSaClientExit:
    2020-01-13 22:36:32 0336   Mapping SQL
    2020-01-13 22:36:32 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:32 0338     FROM da_question dq
    2020-01-13 22:36:32 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0340     WHERE
    2020-01-13 22:36:32 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:32 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:32 0344     UNION
    2020-01-13 22:36:32 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:32 0346     FROM da_question dq
    2020-01-13 22:36:32 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0348     WHERE
    2020-01-13 22:36:32 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:32 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:32 0352      UNION
    2020-01-13 22:36:32 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:32 0354     FROM da_question dq
    2020-01-13 22:36:32 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0356     WHERE
    2020-01-13 22:36:32 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:32 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:32 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:32 0361     UNION
    2020-01-13 22:36:32 0362 
    2020-01-13 22:36:32 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:32 0364     FROM da_question dq
    2020-01-13 22:36:32 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0366     WHERE
    2020-01-13 22:36:32 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:32 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:32 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:32 0371     UNION   
    2020-01-13 22:36:32 0372     SELECT
    2020-01-13 22:36:32 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:32 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:32 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:32 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:32 0377     FROM da_question dq
    2020-01-13 22:36:32 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0379     WHERE
    2020-01-13 22:36:32 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:32 0382     UNION
    2020-01-13 22:36:32 0383 	SELECT
    2020-01-13 22:36:32 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:32 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:32 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:32 0387     FROM da_question dq
    2020-01-13 22:36:32 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:32 0389     WHERE
    2020-01-13 22:36:32 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:32 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:32      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:32      1,304 lines fetched
    2020-01-13 22:36:32 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:32 0394 DROP TABLE client_hud_warzoneinfo
    2020-01-13 22:36:32 0396 LET varStepName='STEPEXIT_' & 23 & '_of_' & 50
    2020-01-13 22:36:32 0397 STEPEXIT_23_of_50: select 1
    2020-01-13 22:36:32      	1 fields found: ?column?, 
    2020-01-13 22:36:32      1 lines fetched
    2020-01-13 22:36:32 0398 DROP TABLE STEPEXIT_23_of_50
    2020-01-13 22:36:32 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:32 0401 NEXT
    2020-01-13 22:36:32 0228 LET varRecordSetTableName=Peek('sp_table_name',24,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:32 0229 LET varRecordSetQlikName=Peek('qlik_table_name',24,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:32 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',24,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:32 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medicalproblems') <= 20),'medicalproblems' & 'end_1',left('medicalproblems', 20)& 'end_1')
    2020-01-13 22:36:32 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'medicalproblems' & 'enddate'
    2020-01-13 22:36:32 0233 LET varRecordSetQlikName_Entry= 'client_medicalproblems' & '_entry'
    2020-01-13 22:36:32 0234 LET varRecordSetQlikName_Exit='client_medicalproblems'& '_exit'
    2020-01-13 22:36:32 0236 LET varRecordSetQlikName_Interim='client_medicalproblems' & '_review'
    2020-01-13 22:36:32 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_medicalproblems', (len('client_medicalproblems'))-7))
    2020-01-13 22:36:32 0239 client_medicalproblems:
    2020-01-13 22:36:32 0240   SELECT * FROM qlik_sclient_medicalproblems
    2020-01-13 22:36:33      	11 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, 
    2020-01-13 22:36:33      3,543 lines fetched
    2020-01-13 22:36:33 0243 client_medicalproblems_exit:
    2020-01-13 22:36:33 0244   Noconcatenate
    2020-01-13 22:36:33 0245   LOAD DISTINCT
    2020-01-13 22:36:33 0246   *,
    2020-01-13 22:36:33 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:33 0248   recordset_id AS 'client_MEDICALPROBLEMSRECORDSET_ID_exit'
    2020-01-13 22:36:33 0249   RESIDENT client_medicalproblems
    2020-01-13 22:36:33      	13 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, %exit_recordset_id, client_MEDICALPROBLEMSRECORDSET_ID_exit, 
    2020-01-13 22:36:33      3,543 lines fetched
    2020-01-13 22:36:33 0251 client_medicalproblems:
    2020-01-13 22:36:33 0252   SELECT * FROM qlik_sclient_medicalproblems
    2020-01-13 22:36:33      	11 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, 
    2020-01-13 22:36:33      7,086 lines fetched
    2020-01-13 22:36:33 0254 CustomEndFieldCheck:
    2020-01-13 22:36:33 0255   SELECT *
    2020-01-13 22:36:33 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medicalproblemsend_1'
    2020-01-13 22:36:34      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:34      0 lines fetched
    2020-01-13 22:36:34 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medicalproblemsend_1','medicalproblemsenddate')
    2020-01-13 22:36:34 0262 RS_Exit:
    2020-01-13 22:36:34 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:34 0264   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:36:34 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:34 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:34 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:34 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:34 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:34 0270   WHERE 
    2020-01-13 22:36:34 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:34 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:34 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:34 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:34 0275   AND ((((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:36:34 0276                    OR (((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medicalproblemsenddate::DATE >= ee.exit_date::DATE) OR ((ft.medicalproblemsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:34 0277   
    2020-01-13 22:36:34 0278   UNION
    2020-01-13 22:36:34 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:34 0280   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:36:34 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:34 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:34 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:34 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:34 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:34 0286   WHERE 
    2020-01-13 22:36:34 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:34 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:34 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:34 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:34 0291   AND ((((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:36:34 0292                    OR (((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medicalproblemsenddate::DATE >= ee.exit_date::DATE) OR ((ft.medicalproblemsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:34      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:34      428 lines fetched
    2020-01-13 22:36:34 0296 RS_Exit_Explicit:
    2020-01-13 22:36:34 0297   Noconcatenate
    2020-01-13 22:36:34 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:34 0299   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:36:34 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:34 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:34 0302   WHERE 
    2020-01-13 22:36:34 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:34 0304   AND ((((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medicalproblemsenddate::DATE IS NULL)) 
    2020-01-13 22:36:34 0305                    OR (((ft.medicalproblemsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.medicalproblemsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medicalproblemsenddate::DATE >= ee.exit_date::DATE) OR ((ft.medicalproblemsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:35      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:35      2,365 lines fetched
    2020-01-13 22:36:35 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:35 0310   LOAD
    2020-01-13 22:36:35 0311   entry_exit_id, 
    2020-01-13 22:36:35 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:35 0313   question_id as %exitquestionid,
    2020-01-13 22:36:35 0314   provider_creating_id
    2020-01-13 22:36:35 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:35      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:35      890,375 lines fetched
    2020-01-13 22:36:35 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:35 0318 INNER JOIN(client_medicalproblems_exit)
    2020-01-13 22:36:35 0319   LOAD DISTINCT
    2020-01-13 22:36:35 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:35 0321   recordset_id,
    2020-01-13 22:36:35 0322   provider_creating_id AS [client_MEDICALPROBLEMS_Provider_Creating_Exit],
    2020-01-13 22:36:35 0323   name AS [client_MEDICALPROBLEMS_Provider_Name_Creating_Exit],
    2020-01-13 22:36:35 0324   user_creating_id AS [client_MEDICALPROBLEMS_User_Created_By_Id_Exit],
    2020-01-13 22:36:35 0325   user_name AS [client_MEDICALPROBLEMS_User_Created_By_Exit]
    2020-01-13 22:36:35 0326   RESIDENT RS_Exit
    2020-01-13 22:36:35      	6 fields found: Entry Exit Id, recordset_id, client_MEDICALPROBLEMS_Provider_Creating_Exit, client_MEDICALPROBLEMS_Provider_Name_Creating_Exit, client_MEDICALPROBLEMS_User_Created_By_Id_Exit, client_MEDICALPROBLEMS_User_Created_By_Exit, 
    2020-01-13 22:36:35      428 lines fetched
    2020-01-13 22:36:35      Joining/Keeping
    2020-01-13 22:36:35 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:35 0330 DROP FIELDS client_id FROM client_medicalproblems_exit
    2020-01-13 22:36:35 0331 DROP FIELDS recordset_id FROM client_medicalproblems_exit
    2020-01-13 22:36:35 0332 DROP FIELDS [Entry Exit Id] FROM client_medicalproblems_exit
    2020-01-13 22:36:35 0335 FieldMapSaClientExit:
    2020-01-13 22:36:35 0336   Mapping SQL
    2020-01-13 22:36:35 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:35 0338     FROM da_question dq
    2020-01-13 22:36:35 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0340     WHERE
    2020-01-13 22:36:35 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:35 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:35 0344     UNION
    2020-01-13 22:36:35 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:35 0346     FROM da_question dq
    2020-01-13 22:36:35 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0348     WHERE
    2020-01-13 22:36:35 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:35 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:35 0352      UNION
    2020-01-13 22:36:35 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:35 0354     FROM da_question dq
    2020-01-13 22:36:35 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0356     WHERE
    2020-01-13 22:36:35 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:35 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:35 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:35 0361     UNION
    2020-01-13 22:36:35 0362 
    2020-01-13 22:36:35 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:35 0364     FROM da_question dq
    2020-01-13 22:36:35 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0366     WHERE
    2020-01-13 22:36:35 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:35 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:35 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:35 0371     UNION   
    2020-01-13 22:36:35 0372     SELECT
    2020-01-13 22:36:35 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:35 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:35 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:35 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:35 0377     FROM da_question dq
    2020-01-13 22:36:35 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0379     WHERE
    2020-01-13 22:36:35 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:35 0382     UNION
    2020-01-13 22:36:35 0383 	SELECT
    2020-01-13 22:36:35 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:35 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:35 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:35 0387     FROM da_question dq
    2020-01-13 22:36:35 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:35 0389     WHERE
    2020-01-13 22:36:35 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:35 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:35      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:35      1,304 lines fetched
    2020-01-13 22:36:35 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:36 0394 DROP TABLE client_medicalproblems
    2020-01-13 22:36:36 0396 LET varStepName='STEPEXIT_' & 24 & '_of_' & 50
    2020-01-13 22:36:36 0397 STEPEXIT_24_of_50: select 1
    2020-01-13 22:36:36      	1 fields found: ?column?, 
    2020-01-13 22:36:36      1 lines fetched
    2020-01-13 22:36:36 0398 DROP TABLE STEPEXIT_24_of_50
    2020-01-13 22:36:36 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:36 0401 NEXT
    2020-01-13 22:36:36 0228 LET varRecordSetTableName=Peek('sp_table_name',25,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:36 0229 LET varRecordSetQlikName=Peek('qlik_table_name',25,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:36 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',25,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:36 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medication_1') <= 20),'medication_1' & 'end_1',left('medication_1', 20)& 'end_1')
    2020-01-13 22:36:36 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'medication_1' & 'enddate'
    2020-01-13 22:36:36 0233 LET varRecordSetQlikName_Entry= 'client_medication_1' & '_entry'
    2020-01-13 22:36:36 0234 LET varRecordSetQlikName_Exit='client_medication_1'& '_exit'
    2020-01-13 22:36:36 0236 LET varRecordSetQlikName_Interim='client_medication_1' & '_review'
    2020-01-13 22:36:36 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_medication_1', (len('client_medication_1'))-7))
    2020-01-13 22:36:36 0239 client_medication_1:
    2020-01-13 22:36:36 0240   SELECT * FROM qlik_sclient_medication_1
    2020-01-13 22:36:36      	16 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, 
    2020-01-13 22:36:36      1,605 lines fetched
    2020-01-13 22:36:36 0243 client_medication_1_exit:
    2020-01-13 22:36:36 0244   Noconcatenate
    2020-01-13 22:36:36 0245   LOAD DISTINCT
    2020-01-13 22:36:36 0246   *,
    2020-01-13 22:36:36 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:36 0248   recordset_id AS 'client_MEDICATION_1RECORDSET_ID_exit'
    2020-01-13 22:36:36 0249   RESIDENT client_medication_1
    2020-01-13 22:36:36      	18 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, %exit_recordset_id, client_MEDICATION_1RECORDSET_ID_exit, 
    2020-01-13 22:36:36      1,605 lines fetched
    2020-01-13 22:36:36 0251 client_medication_1:
    2020-01-13 22:36:36 0252   SELECT * FROM qlik_sclient_medication_1
    2020-01-13 22:36:37      	16 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, 
    2020-01-13 22:36:37      3,210 lines fetched
    2020-01-13 22:36:37 0254 CustomEndFieldCheck:
    2020-01-13 22:36:37 0255   SELECT *
    2020-01-13 22:36:37 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medication_1end_1'
    2020-01-13 22:36:37      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:37      0 lines fetched
    2020-01-13 22:36:37 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medication_1end_1','medication_1enddate')
    2020-01-13 22:36:37 0262 RS_Exit:
    2020-01-13 22:36:37 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:37 0264   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:36:37 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:37 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:37 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:37 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:37 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:37 0270   WHERE 
    2020-01-13 22:36:37 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:37 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:37 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:37 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:37 0275   AND ((((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:37 0276                    OR (((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medication_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.medication_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:37 0277   
    2020-01-13 22:36:37 0278   UNION
    2020-01-13 22:36:37 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:37 0280   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:36:37 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:37 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:37 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:37 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:37 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:37 0286   WHERE 
    2020-01-13 22:36:37 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:37 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:37 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:37 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:37 0291   AND ((((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:37 0292                    OR (((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medication_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.medication_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:38      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:38      112 lines fetched
    2020-01-13 22:36:38 0296 RS_Exit_Explicit:
    2020-01-13 22:36:38 0297   Noconcatenate
    2020-01-13 22:36:38 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:38 0299   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:36:38 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:38 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:38 0302   WHERE 
    2020-01-13 22:36:38 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:38 0304   AND ((((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.medication_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:38 0305                    OR (((ft.medication_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.medication_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.medication_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.medication_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:38      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:38      904 lines fetched
    2020-01-13 22:36:38 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:38 0310   LOAD
    2020-01-13 22:36:38 0311   entry_exit_id, 
    2020-01-13 22:36:38 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:38 0313   question_id as %exitquestionid,
    2020-01-13 22:36:38 0314   provider_creating_id
    2020-01-13 22:36:38 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:38      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:38      891,279 lines fetched
    2020-01-13 22:36:38 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:38 0318 INNER JOIN(client_medication_1_exit)
    2020-01-13 22:36:38 0319   LOAD DISTINCT
    2020-01-13 22:36:38 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:38 0321   recordset_id,
    2020-01-13 22:36:38 0322   provider_creating_id AS [client_MEDICATION_1_Provider_Creating_Exit],
    2020-01-13 22:36:38 0323   name AS [client_MEDICATION_1_Provider_Name_Creating_Exit],
    2020-01-13 22:36:38 0324   user_creating_id AS [client_MEDICATION_1_User_Created_By_Id_Exit],
    2020-01-13 22:36:38 0325   user_name AS [client_MEDICATION_1_User_Created_By_Exit]
    2020-01-13 22:36:38 0326   RESIDENT RS_Exit
    2020-01-13 22:36:38      	6 fields found: Entry Exit Id, recordset_id, client_MEDICATION_1_Provider_Creating_Exit, client_MEDICATION_1_Provider_Name_Creating_Exit, client_MEDICATION_1_User_Created_By_Id_Exit, client_MEDICATION_1_User_Created_By_Exit, 
    2020-01-13 22:36:38      112 lines fetched
    2020-01-13 22:36:38      Joining/Keeping
    2020-01-13 22:36:38 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:38 0330 DROP FIELDS client_id FROM client_medication_1_exit
    2020-01-13 22:36:38 0331 DROP FIELDS recordset_id FROM client_medication_1_exit
    2020-01-13 22:36:38 0332 DROP FIELDS [Entry Exit Id] FROM client_medication_1_exit
    2020-01-13 22:36:39 0335 FieldMapSaClientExit:
    2020-01-13 22:36:39 0336   Mapping SQL
    2020-01-13 22:36:39 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:39 0338     FROM da_question dq
    2020-01-13 22:36:39 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0340     WHERE
    2020-01-13 22:36:39 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:39 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:39 0344     UNION
    2020-01-13 22:36:39 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:39 0346     FROM da_question dq
    2020-01-13 22:36:39 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0348     WHERE
    2020-01-13 22:36:39 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:39 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:39 0352      UNION
    2020-01-13 22:36:39 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:39 0354     FROM da_question dq
    2020-01-13 22:36:39 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0356     WHERE
    2020-01-13 22:36:39 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:39 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:39 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:39 0361     UNION
    2020-01-13 22:36:39 0362 
    2020-01-13 22:36:39 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:39 0364     FROM da_question dq
    2020-01-13 22:36:39 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0366     WHERE
    2020-01-13 22:36:39 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:39 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:39 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:39 0371     UNION   
    2020-01-13 22:36:39 0372     SELECT
    2020-01-13 22:36:39 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:39 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:39 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:39 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:39 0377     FROM da_question dq
    2020-01-13 22:36:39 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0379     WHERE
    2020-01-13 22:36:39 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:39 0382     UNION
    2020-01-13 22:36:39 0383 	SELECT
    2020-01-13 22:36:39 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:39 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:39 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:39 0387     FROM da_question dq
    2020-01-13 22:36:39 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:39 0389     WHERE
    2020-01-13 22:36:39 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:39 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:39      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:39      1,304 lines fetched
    2020-01-13 22:36:39 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:39 0394 DROP TABLE client_medication_1
    2020-01-13 22:36:39 0396 LET varStepName='STEPEXIT_' & 25 & '_of_' & 50
    2020-01-13 22:36:39 0397 STEPEXIT_25_of_50: select 1
    2020-01-13 22:36:39      	1 fields found: ?column?, 
    2020-01-13 22:36:39      1 lines fetched
    2020-01-13 22:36:39 0398 DROP TABLE STEPEXIT_25_of_50
    2020-01-13 22:36:39 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:39 0401 NEXT
    2020-01-13 22:36:39 0228 LET varRecordSetTableName=Peek('sp_table_name',26,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:39 0229 LET varRecordSetQlikName=Peek('qlik_table_name',26,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:39 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',26,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:39 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthassessmen_1') <= 20),'mentalhealthassessmen_1' & 'end_1',left('mentalhealthassessmen_1', 20)& 'end_1')
    2020-01-13 22:36:39 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthassessmen_1' & 'enddate'
    2020-01-13 22:36:39 0233 LET varRecordSetQlikName_Entry= 'client_mentalhealthassessmen_1' & '_entry'
    2020-01-13 22:36:39 0234 LET varRecordSetQlikName_Exit='client_mentalhealthassessmen_1'& '_exit'
    2020-01-13 22:36:39 0236 LET varRecordSetQlikName_Interim='client_mentalhealthassessmen_1' & '_review'
    2020-01-13 22:36:39 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_mentalhealthassessmen_1', (len('client_mentalhealthassessmen_1'))-7))
    2020-01-13 22:36:39 0239 client_mentalhealthassessmen_1:
    2020-01-13 22:36:39 0240   SELECT * FROM qlik_sclient_mentalhealthassessmen_1
    2020-01-13 22:36:39      	6 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, 
    2020-01-13 22:36:39      2,444 lines fetched
    2020-01-13 22:36:39 0243 client_mentalhealthassessmen_1_exit:
    2020-01-13 22:36:39 0244   Noconcatenate
    2020-01-13 22:36:39 0245   LOAD DISTINCT
    2020-01-13 22:36:39 0246   *,
    2020-01-13 22:36:39 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:39 0248   recordset_id AS 'client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_exit'
    2020-01-13 22:36:39 0249   RESIDENT client_mentalhealthassessmen_1
    2020-01-13 22:36:39      	8 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, %exit_recordset_id, client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_exit, 
    2020-01-13 22:36:39      2,444 lines fetched
    2020-01-13 22:36:39 0251 client_mentalhealthassessmen_1:
    2020-01-13 22:36:39 0252   SELECT * FROM qlik_sclient_mentalhealthassessmen_1
    2020-01-13 22:36:40      	6 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, 
    2020-01-13 22:36:40      4,888 lines fetched
    2020-01-13 22:36:40 0254 CustomEndFieldCheck:
    2020-01-13 22:36:40 0255   SELECT *
    2020-01-13 22:36:40 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthassessmeend_1'
    2020-01-13 22:36:40      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:40      0 lines fetched
    2020-01-13 22:36:40 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthassessmeend_1','mentalhealthassessmen_1enddate')
    2020-01-13 22:36:40 0262 RS_Exit:
    2020-01-13 22:36:40 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:40 0264   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:36:40 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:40 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:40 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:40 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:40 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:40 0270   WHERE 
    2020-01-13 22:36:40 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:40 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:40 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:40 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:40 0275   AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:40 0276                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:40 0277   
    2020-01-13 22:36:40 0278   UNION
    2020-01-13 22:36:40 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:40 0280   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:36:40 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:40 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:40 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:40 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:40 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:40 0286   WHERE 
    2020-01-13 22:36:40 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:40 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:40 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:40 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:40 0291   AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:40 0292                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:40      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:40      300 lines fetched
    2020-01-13 22:36:40 0296 RS_Exit_Explicit:
    2020-01-13 22:36:40 0297   Noconcatenate
    2020-01-13 22:36:40 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:40 0299   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:36:40 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:40 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:40 0302   WHERE 
    2020-01-13 22:36:40 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:40 0304   AND ((((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthassessmen_1enddate::DATE IS NULL)) 
    2020-01-13 22:36:40 0305                    OR (((ft.mentalhealthassessmen_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthassessmen_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthassessmen_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:41      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:41      1,720 lines fetched
    2020-01-13 22:36:41 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:41 0310   LOAD
    2020-01-13 22:36:41 0311   entry_exit_id, 
    2020-01-13 22:36:41 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:41 0313   question_id as %exitquestionid,
    2020-01-13 22:36:41 0314   provider_creating_id
    2020-01-13 22:36:41 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:41      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:41      892,999 lines fetched
    2020-01-13 22:36:41 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:41 0318 INNER JOIN(client_mentalhealthassessmen_1_exit)
    2020-01-13 22:36:41 0319   LOAD DISTINCT
    2020-01-13 22:36:41 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:41 0321   recordset_id,
    2020-01-13 22:36:41 0322   provider_creating_id AS [client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Exit],
    2020-01-13 22:36:41 0323   name AS [client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Exit],
    2020-01-13 22:36:41 0324   user_creating_id AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Exit],
    2020-01-13 22:36:41 0325   user_name AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Exit]
    2020-01-13 22:36:41 0326   RESIDENT RS_Exit
    2020-01-13 22:36:41      	6 fields found: Entry Exit Id, recordset_id, client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Exit, client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Exit, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Exit, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Exit, 
    2020-01-13 22:36:41      300 lines fetched
    2020-01-13 22:36:41      Joining/Keeping
    2020-01-13 22:36:41 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:41 0330 DROP FIELDS client_id FROM client_mentalhealthassessmen_1_exit
    2020-01-13 22:36:41 0331 DROP FIELDS recordset_id FROM client_mentalhealthassessmen_1_exit
    2020-01-13 22:36:41 0332 DROP FIELDS [Entry Exit Id] FROM client_mentalhealthassessmen_1_exit
    2020-01-13 22:36:41 0335 FieldMapSaClientExit:
    2020-01-13 22:36:41 0336   Mapping SQL
    2020-01-13 22:36:41 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:41 0338     FROM da_question dq
    2020-01-13 22:36:41 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0340     WHERE
    2020-01-13 22:36:41 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:41 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:41 0344     UNION
    2020-01-13 22:36:41 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:41 0346     FROM da_question dq
    2020-01-13 22:36:41 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0348     WHERE
    2020-01-13 22:36:41 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:41 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:41 0352      UNION
    2020-01-13 22:36:41 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:41 0354     FROM da_question dq
    2020-01-13 22:36:41 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0356     WHERE
    2020-01-13 22:36:41 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:41 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:41 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:41 0361     UNION
    2020-01-13 22:36:41 0362 
    2020-01-13 22:36:41 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:41 0364     FROM da_question dq
    2020-01-13 22:36:41 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0366     WHERE
    2020-01-13 22:36:41 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:41 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:41 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:41 0371     UNION   
    2020-01-13 22:36:41 0372     SELECT
    2020-01-13 22:36:41 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:41 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:41 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:41 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:41 0377     FROM da_question dq
    2020-01-13 22:36:41 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0379     WHERE
    2020-01-13 22:36:41 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:41 0382     UNION
    2020-01-13 22:36:41 0383 	SELECT
    2020-01-13 22:36:41 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:41 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:41 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:41 0387     FROM da_question dq
    2020-01-13 22:36:41 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:41 0389     WHERE
    2020-01-13 22:36:41 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:41 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:41      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:41      1,304 lines fetched
    2020-01-13 22:36:41 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:41 0394 DROP TABLE client_mentalhealthassessmen_1
    2020-01-13 22:36:41 0396 LET varStepName='STEPEXIT_' & 26 & '_of_' & 50
    2020-01-13 22:36:41 0397 STEPEXIT_26_of_50: select 1
    2020-01-13 22:36:41      	1 fields found: ?column?, 
    2020-01-13 22:36:41      1 lines fetched
    2020-01-13 22:36:41 0398 DROP TABLE STEPEXIT_26_of_50
    2020-01-13 22:36:41 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:41 0401 NEXT
    2020-01-13 22:36:41 0228 LET varRecordSetTableName=Peek('sp_table_name',27,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:41 0229 LET varRecordSetQlikName=Peek('qlik_table_name',27,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:41 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',27,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:41 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthtreatment') <= 20),'mentalhealthtreatment' & 'end_1',left('mentalhealthtreatment', 20)& 'end_1')
    2020-01-13 22:36:41 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthtreatment' & 'enddate'
    2020-01-13 22:36:41 0233 LET varRecordSetQlikName_Entry= 'client_mentalhealthtreatment' & '_entry'
    2020-01-13 22:36:41 0234 LET varRecordSetQlikName_Exit='client_mentalhealthtreatment'& '_exit'
    2020-01-13 22:36:41 0236 LET varRecordSetQlikName_Interim='client_mentalhealthtreatment' & '_review'
    2020-01-13 22:36:41 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_mentalhealthtreatment', (len('client_mentalhealthtreatment'))-7))
    2020-01-13 22:36:41 0239 client_mentalhealthtreatment:
    2020-01-13 22:36:41 0240   SELECT * FROM qlik_sclient_mentalhealthtreatment
    2020-01-13 22:36:42      	6 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, 
    2020-01-13 22:36:42      1,655 lines fetched
    2020-01-13 22:36:42 0243 client_mentalhealthtreatment_exit:
    2020-01-13 22:36:42 0244   Noconcatenate
    2020-01-13 22:36:42 0245   LOAD DISTINCT
    2020-01-13 22:36:42 0246   *,
    2020-01-13 22:36:42 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:42 0248   recordset_id AS 'client_MENTALHEALTHTREATMENTRECORDSET_ID_exit'
    2020-01-13 22:36:42 0249   RESIDENT client_mentalhealthtreatment
    2020-01-13 22:36:42      	8 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, %exit_recordset_id, client_MENTALHEALTHTREATMENTRECORDSET_ID_exit, 
    2020-01-13 22:36:42      1,655 lines fetched
    2020-01-13 22:36:42 0251 client_mentalhealthtreatment:
    2020-01-13 22:36:42 0252   SELECT * FROM qlik_sclient_mentalhealthtreatment
    2020-01-13 22:36:42      	6 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, 
    2020-01-13 22:36:42      3,310 lines fetched
    2020-01-13 22:36:42 0254 CustomEndFieldCheck:
    2020-01-13 22:36:42 0255   SELECT *
    2020-01-13 22:36:42 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthtreatmenend_1'
    2020-01-13 22:36:42      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:36:42      0 lines fetched
    2020-01-13 22:36:42 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthtreatmenend_1','mentalhealthtreatmentenddate')
    2020-01-13 22:36:42 0262 RS_Exit:
    2020-01-13 22:36:42 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:42 0264   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:36:42 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:42 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:42 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:42 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:42 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:36:42 0270   WHERE 
    2020-01-13 22:36:42 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:36:42 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:42 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:36:42 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:36:42 0275   AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:36:42 0276                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:36:42 0277   
    2020-01-13 22:36:42 0278   UNION
    2020-01-13 22:36:42 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:36:42 0280   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:36:42 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:42 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:36:42 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:36:42 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:42 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:36:42 0286   WHERE 
    2020-01-13 22:36:42 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:36:42 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:36:42 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:36:42 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:36:42 0291   AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:36:42 0292                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:43      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:36:43      295 lines fetched
    2020-01-13 22:36:43 0296 RS_Exit_Explicit:
    2020-01-13 22:36:43 0297   Noconcatenate
    2020-01-13 22:36:43 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:36:43 0299   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:36:43 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:36:43 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:36:43 0302   WHERE 
    2020-01-13 22:36:43 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:36:43 0304   AND ((((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.mentalhealthtreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:36:43 0305                    OR (((ft.mentalhealthtreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.mentalhealthtreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.mentalhealthtreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:36:43      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:36:43      893 lines fetched
    2020-01-13 22:36:43 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:36:43 0310   LOAD
    2020-01-13 22:36:43 0311   entry_exit_id, 
    2020-01-13 22:36:43 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:36:43 0313   question_id as %exitquestionid,
    2020-01-13 22:36:43 0314   provider_creating_id
    2020-01-13 22:36:43 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:36:43      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:36:43      893,892 lines fetched
    2020-01-13 22:36:43 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:36:43 0318 INNER JOIN(client_mentalhealthtreatment_exit)
    2020-01-13 22:36:43 0319   LOAD DISTINCT
    2020-01-13 22:36:43 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:36:43 0321   recordset_id,
    2020-01-13 22:36:43 0322   provider_creating_id AS [client_MENTALHEALTHTREATMENT_Provider_Creating_Exit],
    2020-01-13 22:36:43 0323   name AS [client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Exit],
    2020-01-13 22:36:43 0324   user_creating_id AS [client_MENTALHEALTHTREATMENT_User_Created_By_Id_Exit],
    2020-01-13 22:36:43 0325   user_name AS [client_MENTALHEALTHTREATMENT_User_Created_By_Exit]
    2020-01-13 22:36:43 0326   RESIDENT RS_Exit
    2020-01-13 22:36:43      	6 fields found: Entry Exit Id, recordset_id, client_MENTALHEALTHTREATMENT_Provider_Creating_Exit, client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Exit, client_MENTALHEALTHTREATMENT_User_Created_By_Id_Exit, client_MENTALHEALTHTREATMENT_User_Created_By_Exit, 
    2020-01-13 22:36:43      295 lines fetched
    2020-01-13 22:36:43      Joining/Keeping
    2020-01-13 22:36:43 0328 DROP TABLE RS_Exit
    2020-01-13 22:36:43 0330 DROP FIELDS client_id FROM client_mentalhealthtreatment_exit
    2020-01-13 22:36:43 0331 DROP FIELDS recordset_id FROM client_mentalhealthtreatment_exit
    2020-01-13 22:36:43 0332 DROP FIELDS [Entry Exit Id] FROM client_mentalhealthtreatment_exit
    2020-01-13 22:36:43 0335 FieldMapSaClientExit:
    2020-01-13 22:36:43 0336   Mapping SQL
    2020-01-13 22:36:43 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:43 0338     FROM da_question dq
    2020-01-13 22:36:43 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0340     WHERE
    2020-01-13 22:36:43 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:36:43 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:36:43 0344     UNION
    2020-01-13 22:36:43 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:43 0346     FROM da_question dq
    2020-01-13 22:36:43 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0348     WHERE
    2020-01-13 22:36:43 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:36:43 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:36:43 0352      UNION
    2020-01-13 22:36:43 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:36:43 0354     FROM da_question dq
    2020-01-13 22:36:43 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0356     WHERE
    2020-01-13 22:36:43 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:36:43 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:36:43 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:43 0361     UNION
    2020-01-13 22:36:43 0362 
    2020-01-13 22:36:43 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:36:43 0364     FROM da_question dq
    2020-01-13 22:36:43 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0366     WHERE
    2020-01-13 22:36:43 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:36:43 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:36:43 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:36:43 0371     UNION   
    2020-01-13 22:36:43 0372     SELECT
    2020-01-13 22:36:43 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:36:43 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:43 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:43 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:36:43 0377     FROM da_question dq
    2020-01-13 22:36:43 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0379     WHERE
    2020-01-13 22:36:43 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:43 0382     UNION
    2020-01-13 22:36:43 0383 	SELECT
    2020-01-13 22:36:43 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:43 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:36:43 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:36:43 0387     FROM da_question dq
    2020-01-13 22:36:43 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:36:43 0389     WHERE
    2020-01-13 22:36:43 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:36:43 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:36:44      	2 fields found: oldnames, newnames, 
    2020-01-13 22:36:44      1,304 lines fetched
    2020-01-13 22:36:44 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:36:44 0394 DROP TABLE client_mentalhealthtreatment
    2020-01-13 22:36:44 0396 LET varStepName='STEPEXIT_' & 27 & '_of_' & 50
    2020-01-13 22:36:44 0397 STEPEXIT_27_of_50: select 1
    2020-01-13 22:36:44      	1 fields found: ?column?, 
    2020-01-13 22:36:44      1 lines fetched
    2020-01-13 22:36:44 0398 DROP TABLE STEPEXIT_27_of_50
    2020-01-13 22:36:44 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:36:44 0401 NEXT
    2020-01-13 22:36:44 0228 LET varRecordSetTableName=Peek('sp_table_name',28,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:44 0229 LET varRecordSetQlikName=Peek('qlik_table_name',28,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:44 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',28,'RECORDSET_LIST_EXIT')
    2020-01-13 22:36:44 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('monthlyincome') <= 20),'monthlyincome' & 'end_1',left('monthlyincome', 20)& 'end_1')
    2020-01-13 22:36:44 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'monthlyincome' & 'enddate'
    2020-01-13 22:36:44 0233 LET varRecordSetQlikName_Entry= 'client_monthlyincome' & '_entry'
    2020-01-13 22:36:44 0234 LET varRecordSetQlikName_Exit='client_monthlyincome'& '_exit'
    2020-01-13 22:36:44 0236 LET varRecordSetQlikName_Interim='client_monthlyincome' & '_review'
    2020-01-13 22:36:44 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_monthlyincome', (len('client_monthlyincome'))-7))
    2020-01-13 22:36:44 0239 client_monthlyincome:
    2020-01-13 22:36:44 0240   SELECT * FROM qlik_sclient_monthlyincome
    2020-01-13 22:37:37      	9 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, 
    2020-01-13 22:37:37      927,126 lines fetched
    2020-01-13 22:37:37 0243 client_monthlyincome_exit:
    2020-01-13 22:37:37 0244   Noconcatenate
    2020-01-13 22:37:37 0245   LOAD DISTINCT
    2020-01-13 22:37:37 0246   *,
    2020-01-13 22:37:37 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:37:37 0248   recordset_id AS 'client_MONTHLYINCOMERECORDSET_ID_exit'
    2020-01-13 22:37:37 0249   RESIDENT client_monthlyincome
    2020-01-13 22:37:39      	11 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, %exit_recordset_id, client_MONTHLYINCOMERECORDSET_ID_exit, 
    2020-01-13 22:37:39      927,126 lines fetched
    2020-01-13 22:37:39 0251 client_monthlyincome:
    2020-01-13 22:37:39 0252   SELECT * FROM qlik_sclient_monthlyincome
    2020-01-13 22:38:32      	9 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, 
    2020-01-13 22:38:32      1,854,252 lines fetched
    2020-01-13 22:38:32 0254 CustomEndFieldCheck:
    2020-01-13 22:38:32 0255   SELECT *
    2020-01-13 22:38:32 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'monthlyincomeend_1'
    2020-01-13 22:38:32      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:38:32      0 lines fetched
    2020-01-13 22:38:32 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'monthlyincomeend_1','monthlyincomeenddate')
    2020-01-13 22:38:32 0262 RS_Exit:
    2020-01-13 22:38:32 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:38:32 0264   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:38:32 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:38:32 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:38:32 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:38:32 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:38:32 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:38:32 0270   WHERE 
    2020-01-13 22:38:32 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:38:32 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:38:32 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:38:32 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:38:32 0275   AND ((((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:38:32 0276                    OR (((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.monthlyincomeenddate::DATE >= ee.exit_date::DATE) OR ((ft.monthlyincomeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:38:32 0277   
    2020-01-13 22:38:32 0278   UNION
    2020-01-13 22:38:32 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:38:32 0280   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:38:32 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:38:32 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:38:32 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:38:32 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:38:32 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:38:32 0286   WHERE 
    2020-01-13 22:38:32 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:38:32 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:38:32 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:38:32 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:38:32 0291   AND ((((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:38:32 0292                    OR (((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.monthlyincomeenddate::DATE >= ee.exit_date::DATE) OR ((ft.monthlyincomeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:40:13      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:40:13      386,565 lines fetched
    2020-01-13 22:40:13 0296 RS_Exit_Explicit:
    2020-01-13 22:40:13 0297   Noconcatenate
    2020-01-13 22:40:13 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:40:13 0299   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:40:13 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:40:13 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:40:13 0302   WHERE 
    2020-01-13 22:40:13 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:40:13 0304   AND ((((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.monthlyincomeenddate::DATE IS NULL)) 
    2020-01-13 22:40:13 0305                    OR (((ft.monthlyincomestartdate::DATE <= ee.exit_date::DATE) OR ((ft.monthlyincomestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.monthlyincomeenddate::DATE >= ee.exit_date::DATE) OR ((ft.monthlyincomeenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:04      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:04      670,299 lines fetched
    2020-01-13 22:41:04 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:04 0310   LOAD
    2020-01-13 22:41:04 0311   entry_exit_id, 
    2020-01-13 22:41:04 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:04 0313   question_id as %exitquestionid,
    2020-01-13 22:41:04 0314   provider_creating_id
    2020-01-13 22:41:04 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:05      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:05      1,564,191 lines fetched
    2020-01-13 22:41:05 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:05 0318 INNER JOIN(client_monthlyincome_exit)
    2020-01-13 22:41:05 0319   LOAD DISTINCT
    2020-01-13 22:41:05 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:05 0321   recordset_id,
    2020-01-13 22:41:05 0322   provider_creating_id AS [client_MONTHLYINCOME_Provider_Creating_Exit],
    2020-01-13 22:41:05 0323   name AS [client_MONTHLYINCOME_Provider_Name_Creating_Exit],
    2020-01-13 22:41:05 0324   user_creating_id AS [client_MONTHLYINCOME_User_Created_By_Id_Exit],
    2020-01-13 22:41:05 0325   user_name AS [client_MONTHLYINCOME_User_Created_By_Exit]
    2020-01-13 22:41:05 0326   RESIDENT RS_Exit
    2020-01-13 22:41:06      	6 fields found: Entry Exit Id, recordset_id, client_MONTHLYINCOME_Provider_Creating_Exit, client_MONTHLYINCOME_Provider_Name_Creating_Exit, client_MONTHLYINCOME_User_Created_By_Id_Exit, client_MONTHLYINCOME_User_Created_By_Exit, 
    2020-01-13 22:41:06      386,565 lines fetched
    2020-01-13 22:41:06      Joining/Keeping
    2020-01-13 22:41:06 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:07 0330 DROP FIELDS client_id FROM client_monthlyincome_exit
    2020-01-13 22:41:07 0331 DROP FIELDS recordset_id FROM client_monthlyincome_exit
    2020-01-13 22:41:07 0332 DROP FIELDS [Entry Exit Id] FROM client_monthlyincome_exit
    2020-01-13 22:41:07 0335 FieldMapSaClientExit:
    2020-01-13 22:41:07 0336   Mapping SQL
    2020-01-13 22:41:07 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:07 0338     FROM da_question dq
    2020-01-13 22:41:07 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0340     WHERE
    2020-01-13 22:41:07 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:07 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:07 0344     UNION
    2020-01-13 22:41:07 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:07 0346     FROM da_question dq
    2020-01-13 22:41:07 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0348     WHERE
    2020-01-13 22:41:07 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:07 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:07 0352      UNION
    2020-01-13 22:41:07 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:07 0354     FROM da_question dq
    2020-01-13 22:41:07 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0356     WHERE
    2020-01-13 22:41:07 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:07 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:07 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:07 0361     UNION
    2020-01-13 22:41:07 0362 
    2020-01-13 22:41:07 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:07 0364     FROM da_question dq
    2020-01-13 22:41:07 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0366     WHERE
    2020-01-13 22:41:07 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:07 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:07 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:07 0371     UNION   
    2020-01-13 22:41:07 0372     SELECT
    2020-01-13 22:41:07 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:07 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:07 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:07 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:07 0377     FROM da_question dq
    2020-01-13 22:41:07 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0379     WHERE
    2020-01-13 22:41:07 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:07 0382     UNION
    2020-01-13 22:41:07 0383 	SELECT
    2020-01-13 22:41:07 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:07 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:07 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:07 0387     FROM da_question dq
    2020-01-13 22:41:07 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:07 0389     WHERE
    2020-01-13 22:41:07 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:07 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:07      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:07      1,304 lines fetched
    2020-01-13 22:41:07 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:07 0394 DROP TABLE client_monthlyincome
    2020-01-13 22:41:07 0396 LET varStepName='STEPEXIT_' & 28 & '_of_' & 50
    2020-01-13 22:41:07 0397 STEPEXIT_28_of_50: select 1
    2020-01-13 22:41:07      	1 fields found: ?column?, 
    2020-01-13 22:41:07      1 lines fetched
    2020-01-13 22:41:07 0398 DROP TABLE STEPEXIT_28_of_50
    2020-01-13 22:41:07 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:07 0401 NEXT
    2020-01-13 22:41:07 0228 LET varRecordSetTableName=Peek('sp_table_name',29,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:07 0229 LET varRecordSetQlikName=Peek('qlik_table_name',29,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:07 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',29,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:07 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0101employmentindi') <= 20),'npi0101employmentindi' & 'end_1',left('npi0101employmentindi', 20)& 'end_1')
    2020-01-13 22:41:07 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0101employmentindi' & 'enddate'
    2020-01-13 22:41:07 0233 LET varRecordSetQlikName_Entry= 'client_npi0101employmentindi' & '_entry'
    2020-01-13 22:41:07 0234 LET varRecordSetQlikName_Exit='client_npi0101employmentindi'& '_exit'
    2020-01-13 22:41:07 0236 LET varRecordSetQlikName_Interim='client_npi0101employmentindi' & '_review'
    2020-01-13 22:41:07 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_npi0101employmentindi', (len('client_npi0101employmentindi'))-7))
    2020-01-13 22:41:07 0239 client_npi0101employmentindi:
    2020-01-13 22:41:07 0240   SELECT * FROM qlik_sclient_npi0101employmentindi
    2020-01-13 22:41:07      	7 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, 
    2020-01-13 22:41:07      38 lines fetched
    2020-01-13 22:41:07 0243 client_npi0101employmentindi_exit:
    2020-01-13 22:41:07 0244   Noconcatenate
    2020-01-13 22:41:07 0245   LOAD DISTINCT
    2020-01-13 22:41:07 0246   *,
    2020-01-13 22:41:07 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:07 0248   recordset_id AS 'client_NPI0101EMPLOYMENTINDIRECORDSET_ID_exit'
    2020-01-13 22:41:07 0249   RESIDENT client_npi0101employmentindi
    2020-01-13 22:41:08      	9 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, %exit_recordset_id, client_NPI0101EMPLOYMENTINDIRECORDSET_ID_exit, 
    2020-01-13 22:41:08      38 lines fetched
    2020-01-13 22:41:08 0251 client_npi0101employmentindi:
    2020-01-13 22:41:08 0252   SELECT * FROM qlik_sclient_npi0101employmentindi
    2020-01-13 22:41:08      	7 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, 
    2020-01-13 22:41:08      76 lines fetched
    2020-01-13 22:41:08 0254 CustomEndFieldCheck:
    2020-01-13 22:41:08 0255   SELECT *
    2020-01-13 22:41:08 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0101employmentindend_1'
    2020-01-13 22:41:08      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:08      0 lines fetched
    2020-01-13 22:41:08 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0101employmentindend_1','npi0101employmentindienddate')
    2020-01-13 22:41:08 0262 RS_Exit:
    2020-01-13 22:41:08 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:08 0264   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:41:08 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:08 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:08 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:08 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:08 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:08 0270   WHERE 
    2020-01-13 22:41:08 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:08 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:08 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:08 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:08 0275   AND ((((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:41:08 0276                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0101employmentindienddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0101employmentindienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:08 0277   
    2020-01-13 22:41:08 0278   UNION
    2020-01-13 22:41:08 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:08 0280   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:41:08 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:08 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:08 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:08 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:08 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:08 0286   WHERE 
    2020-01-13 22:41:08 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:08 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:08 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:08 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:08 0291   AND ((((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:41:08 0292                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0101employmentindienddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0101employmentindienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:08      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:08      16 lines fetched
    2020-01-13 22:41:08 0296 RS_Exit_Explicit:
    2020-01-13 22:41:08 0297   Noconcatenate
    2020-01-13 22:41:08 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:08 0299   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:41:08 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:08 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:08 0302   WHERE 
    2020-01-13 22:41:08 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:08 0304   AND ((((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0101employmentindienddate::DATE IS NULL)) 
    2020-01-13 22:41:08 0305                    OR (((ft.npi0101employmentindistartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0101employmentindistartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0101employmentindienddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0101employmentindienddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:08      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:08      22 lines fetched
    2020-01-13 22:41:08 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:08 0310   LOAD
    2020-01-13 22:41:08 0311   entry_exit_id, 
    2020-01-13 22:41:08 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:08 0313   question_id as %exitquestionid,
    2020-01-13 22:41:08 0314   provider_creating_id
    2020-01-13 22:41:08 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:09      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:09      1,564,213 lines fetched
    2020-01-13 22:41:09 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:09 0318 INNER JOIN(client_npi0101employmentindi_exit)
    2020-01-13 22:41:09 0319   LOAD DISTINCT
    2020-01-13 22:41:09 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:09 0321   recordset_id,
    2020-01-13 22:41:09 0322   provider_creating_id AS [client_NPI0101EMPLOYMENTINDI_Provider_Creating_Exit],
    2020-01-13 22:41:09 0323   name AS [client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Exit],
    2020-01-13 22:41:09 0324   user_creating_id AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Exit],
    2020-01-13 22:41:09 0325   user_name AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Exit]
    2020-01-13 22:41:09 0326   RESIDENT RS_Exit
    2020-01-13 22:41:09      	6 fields found: Entry Exit Id, recordset_id, client_NPI0101EMPLOYMENTINDI_Provider_Creating_Exit, client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Exit, client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Exit, client_NPI0101EMPLOYMENTINDI_User_Created_By_Exit, 
    2020-01-13 22:41:09      16 lines fetched
    2020-01-13 22:41:09      Joining/Keeping
    2020-01-13 22:41:09 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:09 0330 DROP FIELDS client_id FROM client_npi0101employmentindi_exit
    2020-01-13 22:41:09 0331 DROP FIELDS recordset_id FROM client_npi0101employmentindi_exit
    2020-01-13 22:41:09 0332 DROP FIELDS [Entry Exit Id] FROM client_npi0101employmentindi_exit
    2020-01-13 22:41:09 0335 FieldMapSaClientExit:
    2020-01-13 22:41:09 0336   Mapping SQL
    2020-01-13 22:41:09 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:09 0338     FROM da_question dq
    2020-01-13 22:41:09 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0340     WHERE
    2020-01-13 22:41:09 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:09 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:09 0344     UNION
    2020-01-13 22:41:09 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:09 0346     FROM da_question dq
    2020-01-13 22:41:09 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0348     WHERE
    2020-01-13 22:41:09 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:09 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:09 0352      UNION
    2020-01-13 22:41:09 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:09 0354     FROM da_question dq
    2020-01-13 22:41:09 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0356     WHERE
    2020-01-13 22:41:09 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:09 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:09 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:09 0361     UNION
    2020-01-13 22:41:09 0362 
    2020-01-13 22:41:09 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:09 0364     FROM da_question dq
    2020-01-13 22:41:09 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0366     WHERE
    2020-01-13 22:41:09 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:09 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:09 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:09 0371     UNION   
    2020-01-13 22:41:09 0372     SELECT
    2020-01-13 22:41:09 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:09 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:09 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:09 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:09 0377     FROM da_question dq
    2020-01-13 22:41:09 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0379     WHERE
    2020-01-13 22:41:09 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:09 0382     UNION
    2020-01-13 22:41:09 0383 	SELECT
    2020-01-13 22:41:09 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:09 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:09 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:09 0387     FROM da_question dq
    2020-01-13 22:41:09 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:09 0389     WHERE
    2020-01-13 22:41:09 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:09 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:09      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:09      1,304 lines fetched
    2020-01-13 22:41:09 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:09 0394 DROP TABLE client_npi0101employmentindi
    2020-01-13 22:41:09 0396 LET varStepName='STEPEXIT_' & 29 & '_of_' & 50
    2020-01-13 22:41:09 0397 STEPEXIT_29_of_50: select 1
    2020-01-13 22:41:09      	1 fields found: ?column?, 
    2020-01-13 22:41:09      1 lines fetched
    2020-01-13 22:41:09 0398 DROP TABLE STEPEXIT_29_of_50
    2020-01-13 22:41:09 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:09 0401 NEXT
    2020-01-13 22:41:09 0228 LET varRecordSetTableName=Peek('sp_table_name',30,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:09 0229 LET varRecordSetQlikName=Peek('qlik_table_name',30,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:09 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',30,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:09 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0102educationandco') <= 20),'npi0102educationandco' & 'end_1',left('npi0102educationandco', 20)& 'end_1')
    2020-01-13 22:41:09 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0102educationandco' & 'enddate'
    2020-01-13 22:41:09 0233 LET varRecordSetQlikName_Entry= 'client_npi0102educationandco' & '_entry'
    2020-01-13 22:41:09 0234 LET varRecordSetQlikName_Exit='client_npi0102educationandco'& '_exit'
    2020-01-13 22:41:09 0236 LET varRecordSetQlikName_Interim='client_npi0102educationandco' & '_review'
    2020-01-13 22:41:09 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_npi0102educationandco', (len('client_npi0102educationandco'))-7))
    2020-01-13 22:41:09 0239 client_npi0102educationandco:
    2020-01-13 22:41:09 0240   SELECT * FROM qlik_sclient_npi0102educationandco
    2020-01-13 22:41:10      	7 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, 
    2020-01-13 22:41:10      43 lines fetched
    2020-01-13 22:41:10 0243 client_npi0102educationandco_exit:
    2020-01-13 22:41:10 0244   Noconcatenate
    2020-01-13 22:41:10 0245   LOAD DISTINCT
    2020-01-13 22:41:10 0246   *,
    2020-01-13 22:41:10 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:10 0248   recordset_id AS 'client_NPI0102EDUCATIONANDCORECORDSET_ID_exit'
    2020-01-13 22:41:10 0249   RESIDENT client_npi0102educationandco
    2020-01-13 22:41:10      	9 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, %exit_recordset_id, client_NPI0102EDUCATIONANDCORECORDSET_ID_exit, 
    2020-01-13 22:41:10      43 lines fetched
    2020-01-13 22:41:10 0251 client_npi0102educationandco:
    2020-01-13 22:41:10 0252   SELECT * FROM qlik_sclient_npi0102educationandco
    2020-01-13 22:41:10      	7 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, 
    2020-01-13 22:41:10      86 lines fetched
    2020-01-13 22:41:10 0254 CustomEndFieldCheck:
    2020-01-13 22:41:10 0255   SELECT *
    2020-01-13 22:41:10 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0102educationandcend_1'
    2020-01-13 22:41:10      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:10      0 lines fetched
    2020-01-13 22:41:10 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0102educationandcend_1','npi0102educationandcoenddate')
    2020-01-13 22:41:10 0262 RS_Exit:
    2020-01-13 22:41:10 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:10 0264   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:41:10 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:10 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:10 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:10 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:10 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:10 0270   WHERE 
    2020-01-13 22:41:10 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:10 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:10 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:10 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:10 0275   AND ((((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:41:10 0276                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0102educationandcoenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:10 0277   
    2020-01-13 22:41:10 0278   UNION
    2020-01-13 22:41:10 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:10 0280   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:41:10 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:10 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:10 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:10 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:10 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:10 0286   WHERE 
    2020-01-13 22:41:10 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:10 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:10 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:10 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:10 0291   AND ((((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:41:10 0292                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0102educationandcoenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:11      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:11      24 lines fetched
    2020-01-13 22:41:11 0296 RS_Exit_Explicit:
    2020-01-13 22:41:11 0297   Noconcatenate
    2020-01-13 22:41:11 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:11 0299   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:41:11 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:11 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:11 0302   WHERE 
    2020-01-13 22:41:11 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:11 0304   AND ((((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0102educationandcoenddate::DATE IS NULL)) 
    2020-01-13 22:41:11 0305                    OR (((ft.npi0102educationandcostartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0102educationandcostartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0102educationandcoenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0102educationandcoenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:11      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:11      32 lines fetched
    2020-01-13 22:41:11 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:11 0310   LOAD
    2020-01-13 22:41:11 0311   entry_exit_id, 
    2020-01-13 22:41:11 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:11 0313   question_id as %exitquestionid,
    2020-01-13 22:41:11 0314   provider_creating_id
    2020-01-13 22:41:11 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:11      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:11      1,564,245 lines fetched
    2020-01-13 22:41:11 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:11 0318 INNER JOIN(client_npi0102educationandco_exit)
    2020-01-13 22:41:11 0319   LOAD DISTINCT
    2020-01-13 22:41:11 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:11 0321   recordset_id,
    2020-01-13 22:41:11 0322   provider_creating_id AS [client_NPI0102EDUCATIONANDCO_Provider_Creating_Exit],
    2020-01-13 22:41:11 0323   name AS [client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Exit],
    2020-01-13 22:41:11 0324   user_creating_id AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Exit],
    2020-01-13 22:41:11 0325   user_name AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Exit]
    2020-01-13 22:41:11 0326   RESIDENT RS_Exit
    2020-01-13 22:41:11      	6 fields found: Entry Exit Id, recordset_id, client_NPI0102EDUCATIONANDCO_Provider_Creating_Exit, client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Exit, client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Exit, client_NPI0102EDUCATIONANDCO_User_Created_By_Exit, 
    2020-01-13 22:41:11      24 lines fetched
    2020-01-13 22:41:11      Joining/Keeping
    2020-01-13 22:41:11 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:11 0330 DROP FIELDS client_id FROM client_npi0102educationandco_exit
    2020-01-13 22:41:11 0331 DROP FIELDS recordset_id FROM client_npi0102educationandco_exit
    2020-01-13 22:41:11 0332 DROP FIELDS [Entry Exit Id] FROM client_npi0102educationandco_exit
    2020-01-13 22:41:11 0335 FieldMapSaClientExit:
    2020-01-13 22:41:11 0336   Mapping SQL
    2020-01-13 22:41:11 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:11 0338     FROM da_question dq
    2020-01-13 22:41:11 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0340     WHERE
    2020-01-13 22:41:11 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:11 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:11 0344     UNION
    2020-01-13 22:41:11 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:11 0346     FROM da_question dq
    2020-01-13 22:41:11 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0348     WHERE
    2020-01-13 22:41:11 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:11 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:11 0352      UNION
    2020-01-13 22:41:11 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:11 0354     FROM da_question dq
    2020-01-13 22:41:11 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0356     WHERE
    2020-01-13 22:41:11 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:11 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:11 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:11 0361     UNION
    2020-01-13 22:41:11 0362 
    2020-01-13 22:41:11 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:11 0364     FROM da_question dq
    2020-01-13 22:41:11 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0366     WHERE
    2020-01-13 22:41:11 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:11 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:11 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:11 0371     UNION   
    2020-01-13 22:41:11 0372     SELECT
    2020-01-13 22:41:11 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:11 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:11 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:11 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:11 0377     FROM da_question dq
    2020-01-13 22:41:11 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0379     WHERE
    2020-01-13 22:41:11 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:11 0382     UNION
    2020-01-13 22:41:11 0383 	SELECT
    2020-01-13 22:41:11 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:11 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:11 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:11 0387     FROM da_question dq
    2020-01-13 22:41:11 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:11 0389     WHERE
    2020-01-13 22:41:11 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:11 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:11      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:11      1,304 lines fetched
    2020-01-13 22:41:11 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:11 0394 DROP TABLE client_npi0102educationandco
    2020-01-13 22:41:12 0396 LET varStepName='STEPEXIT_' & 30 & '_of_' & 50
    2020-01-13 22:41:12 0397 STEPEXIT_30_of_50: select 1
    2020-01-13 22:41:12      	1 fields found: ?column?, 
    2020-01-13 22:41:12      1 lines fetched
    2020-01-13 22:41:12 0398 DROP TABLE STEPEXIT_30_of_50
    2020-01-13 22:41:12 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:12 0401 NEXT
    2020-01-13 22:41:12 0228 LET varRecordSetTableName=Peek('sp_table_name',31,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:12 0229 LET varRecordSetQlikName=Peek('qlik_table_name',31,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:12 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',31,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:12 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0103incomeandasset') <= 20),'npi0103incomeandasset' & 'end_1',left('npi0103incomeandasset', 20)& 'end_1')
    2020-01-13 22:41:12 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0103incomeandasset' & 'enddate'
    2020-01-13 22:41:12 0233 LET varRecordSetQlikName_Entry= 'client_npi0103incomeandasset' & '_entry'
    2020-01-13 22:41:12 0234 LET varRecordSetQlikName_Exit='client_npi0103incomeandasset'& '_exit'
    2020-01-13 22:41:12 0236 LET varRecordSetQlikName_Interim='client_npi0103incomeandasset' & '_review'
    2020-01-13 22:41:12 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_npi0103incomeandasset', (len('client_npi0103incomeandasset'))-7))
    2020-01-13 22:41:12 0239 client_npi0103incomeandasset:
    2020-01-13 22:41:12 0240   SELECT * FROM qlik_sclient_npi0103incomeandasset
    2020-01-13 22:41:12      	7 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, 
    2020-01-13 22:41:12      37 lines fetched
    2020-01-13 22:41:12 0243 client_npi0103incomeandasset_exit:
    2020-01-13 22:41:12 0244   Noconcatenate
    2020-01-13 22:41:12 0245   LOAD DISTINCT
    2020-01-13 22:41:12 0246   *,
    2020-01-13 22:41:12 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:12 0248   recordset_id AS 'client_NPI0103INCOMEANDASSETRECORDSET_ID_exit'
    2020-01-13 22:41:12 0249   RESIDENT client_npi0103incomeandasset
    2020-01-13 22:41:12      	9 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, %exit_recordset_id, client_NPI0103INCOMEANDASSETRECORDSET_ID_exit, 
    2020-01-13 22:41:12      37 lines fetched
    2020-01-13 22:41:12 0251 client_npi0103incomeandasset:
    2020-01-13 22:41:12 0252   SELECT * FROM qlik_sclient_npi0103incomeandasset
    2020-01-13 22:41:12      	7 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, 
    2020-01-13 22:41:12      74 lines fetched
    2020-01-13 22:41:12 0254 CustomEndFieldCheck:
    2020-01-13 22:41:12 0255   SELECT *
    2020-01-13 22:41:12 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0103incomeandasseend_1'
    2020-01-13 22:41:13      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:13      0 lines fetched
    2020-01-13 22:41:13 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0103incomeandasseend_1','npi0103incomeandassetenddate')
    2020-01-13 22:41:13 0262 RS_Exit:
    2020-01-13 22:41:13 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:13 0264   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:41:13 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:13 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:13 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:13 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:13 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:13 0270   WHERE 
    2020-01-13 22:41:13 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:13 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:13 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:13 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:13 0275   AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:41:13 0276                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0103incomeandassetenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:13 0277   
    2020-01-13 22:41:13 0278   UNION
    2020-01-13 22:41:13 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:13 0280   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:41:13 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:13 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:13 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:13 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:13 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:13 0286   WHERE 
    2020-01-13 22:41:13 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:13 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:13 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:13 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:13 0291   AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:41:13 0292                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0103incomeandassetenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:13      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:13      17 lines fetched
    2020-01-13 22:41:13 0296 RS_Exit_Explicit:
    2020-01-13 22:41:13 0297   Noconcatenate
    2020-01-13 22:41:13 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:13 0299   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:41:13 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:13 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:13 0302   WHERE 
    2020-01-13 22:41:13 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:13 0304   AND ((((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0103incomeandassetenddate::DATE IS NULL)) 
    2020-01-13 22:41:13 0305                    OR (((ft.npi0103incomeandassetstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0103incomeandassetenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0103incomeandassetenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:13      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:13      25 lines fetched
    2020-01-13 22:41:13 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:13 0310   LOAD
    2020-01-13 22:41:13 0311   entry_exit_id, 
    2020-01-13 22:41:13 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:13 0313   question_id as %exitquestionid,
    2020-01-13 22:41:13 0314   provider_creating_id
    2020-01-13 22:41:13 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:13      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:13      1,564,270 lines fetched
    2020-01-13 22:41:13 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:13 0318 INNER JOIN(client_npi0103incomeandasset_exit)
    2020-01-13 22:41:13 0319   LOAD DISTINCT
    2020-01-13 22:41:13 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:13 0321   recordset_id,
    2020-01-13 22:41:13 0322   provider_creating_id AS [client_NPI0103INCOMEANDASSET_Provider_Creating_Exit],
    2020-01-13 22:41:13 0323   name AS [client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Exit],
    2020-01-13 22:41:13 0324   user_creating_id AS [client_NPI0103INCOMEANDASSET_User_Created_By_Id_Exit],
    2020-01-13 22:41:13 0325   user_name AS [client_NPI0103INCOMEANDASSET_User_Created_By_Exit]
    2020-01-13 22:41:13 0326   RESIDENT RS_Exit
    2020-01-13 22:41:13      	6 fields found: Entry Exit Id, recordset_id, client_NPI0103INCOMEANDASSET_Provider_Creating_Exit, client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Exit, client_NPI0103INCOMEANDASSET_User_Created_By_Id_Exit, client_NPI0103INCOMEANDASSET_User_Created_By_Exit, 
    2020-01-13 22:41:13      17 lines fetched
    2020-01-13 22:41:13      Joining/Keeping
    2020-01-13 22:41:14 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:14 0330 DROP FIELDS client_id FROM client_npi0103incomeandasset_exit
    2020-01-13 22:41:14 0331 DROP FIELDS recordset_id FROM client_npi0103incomeandasset_exit
    2020-01-13 22:41:14 0332 DROP FIELDS [Entry Exit Id] FROM client_npi0103incomeandasset_exit
    2020-01-13 22:41:14 0335 FieldMapSaClientExit:
    2020-01-13 22:41:14 0336   Mapping SQL
    2020-01-13 22:41:14 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:14 0338     FROM da_question dq
    2020-01-13 22:41:14 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0340     WHERE
    2020-01-13 22:41:14 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:14 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:14 0344     UNION
    2020-01-13 22:41:14 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:14 0346     FROM da_question dq
    2020-01-13 22:41:14 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0348     WHERE
    2020-01-13 22:41:14 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:14 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:14 0352      UNION
    2020-01-13 22:41:14 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:14 0354     FROM da_question dq
    2020-01-13 22:41:14 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0356     WHERE
    2020-01-13 22:41:14 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:14 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:14 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:14 0361     UNION
    2020-01-13 22:41:14 0362 
    2020-01-13 22:41:14 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:14 0364     FROM da_question dq
    2020-01-13 22:41:14 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0366     WHERE
    2020-01-13 22:41:14 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:14 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:14 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:14 0371     UNION   
    2020-01-13 22:41:14 0372     SELECT
    2020-01-13 22:41:14 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:14 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:14 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:14 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:14 0377     FROM da_question dq
    2020-01-13 22:41:14 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0379     WHERE
    2020-01-13 22:41:14 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:14 0382     UNION
    2020-01-13 22:41:14 0383 	SELECT
    2020-01-13 22:41:14 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:14 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:14 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:14 0387     FROM da_question dq
    2020-01-13 22:41:14 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:14 0389     WHERE
    2020-01-13 22:41:14 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:14 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:14      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:14      1,304 lines fetched
    2020-01-13 22:41:14 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:14 0394 DROP TABLE client_npi0103incomeandasset
    2020-01-13 22:41:14 0396 LET varStepName='STEPEXIT_' & 31 & '_of_' & 50
    2020-01-13 22:41:14 0397 STEPEXIT_31_of_50: select 1
    2020-01-13 22:41:14      	1 fields found: ?column?, 
    2020-01-13 22:41:14      1 lines fetched
    2020-01-13 22:41:14 0398 DROP TABLE STEPEXIT_31_of_50
    2020-01-13 22:41:14 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:14 0401 NEXT
    2020-01-13 22:41:14 0228 LET varRecordSetTableName=Peek('sp_table_name',32,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:14 0229 LET varRecordSetQlikName=Peek('qlik_table_name',32,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:14 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',32,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:14 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0105healthandsocia') <= 20),'npi0105healthandsocia' & 'end_1',left('npi0105healthandsocia', 20)& 'end_1')
    2020-01-13 22:41:14 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0105healthandsocia' & 'enddate'
    2020-01-13 22:41:14 0233 LET varRecordSetQlikName_Entry= 'client_npi0105healthandsocia' & '_entry'
    2020-01-13 22:41:14 0234 LET varRecordSetQlikName_Exit='client_npi0105healthandsocia'& '_exit'
    2020-01-13 22:41:14 0236 LET varRecordSetQlikName_Interim='client_npi0105healthandsocia' & '_review'
    2020-01-13 22:41:14 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_npi0105healthandsocia', (len('client_npi0105healthandsocia'))-7))
    2020-01-13 22:41:14 0239 client_npi0105healthandsocia:
    2020-01-13 22:41:14 0240   SELECT * FROM qlik_sclient_npi0105healthandsocia
    2020-01-13 22:41:14      	7 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, 
    2020-01-13 22:41:14      21 lines fetched
    2020-01-13 22:41:14 0243 client_npi0105healthandsocia_exit:
    2020-01-13 22:41:14 0244   Noconcatenate
    2020-01-13 22:41:14 0245   LOAD DISTINCT
    2020-01-13 22:41:14 0246   *,
    2020-01-13 22:41:14 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:14 0248   recordset_id AS 'client_NPI0105HEALTHANDSOCIARECORDSET_ID_exit'
    2020-01-13 22:41:14 0249   RESIDENT client_npi0105healthandsocia
    2020-01-13 22:41:15      	9 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, %exit_recordset_id, client_NPI0105HEALTHANDSOCIARECORDSET_ID_exit, 
    2020-01-13 22:41:15      21 lines fetched
    2020-01-13 22:41:15 0251 client_npi0105healthandsocia:
    2020-01-13 22:41:15 0252   SELECT * FROM qlik_sclient_npi0105healthandsocia
    2020-01-13 22:41:15      	7 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, 
    2020-01-13 22:41:15      42 lines fetched
    2020-01-13 22:41:15 0254 CustomEndFieldCheck:
    2020-01-13 22:41:15 0255   SELECT *
    2020-01-13 22:41:15 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0105healthandsociend_1'
    2020-01-13 22:41:15      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:15      0 lines fetched
    2020-01-13 22:41:15 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0105healthandsociend_1','npi0105healthandsociaenddate')
    2020-01-13 22:41:15 0262 RS_Exit:
    2020-01-13 22:41:15 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:15 0264   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:41:15 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:15 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:15 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:15 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:15 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:15 0270   WHERE 
    2020-01-13 22:41:15 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:15 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:15 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:15 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:15 0275   AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:41:15 0276                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0105healthandsociaenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:15 0277   
    2020-01-13 22:41:15 0278   UNION
    2020-01-13 22:41:15 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:15 0280   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:41:15 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:15 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:15 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:15 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:15 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:15 0286   WHERE 
    2020-01-13 22:41:15 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:15 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:15 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:15 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:15 0291   AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:41:15 0292                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0105healthandsociaenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:15      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:15      14 lines fetched
    2020-01-13 22:41:15 0296 RS_Exit_Explicit:
    2020-01-13 22:41:15 0297   Noconcatenate
    2020-01-13 22:41:15 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:15 0299   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:41:15 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:15 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:15 0302   WHERE 
    2020-01-13 22:41:15 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:15 0304   AND ((((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0105healthandsociaenddate::DATE IS NULL)) 
    2020-01-13 22:41:15 0305                    OR (((ft.npi0105healthandsociastartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0105healthandsociastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0105healthandsociaenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0105healthandsociaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:16      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:16      20 lines fetched
    2020-01-13 22:41:16 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:16 0310   LOAD
    2020-01-13 22:41:16 0311   entry_exit_id, 
    2020-01-13 22:41:16 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:16 0313   question_id as %exitquestionid,
    2020-01-13 22:41:16 0314   provider_creating_id
    2020-01-13 22:41:16 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:16      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:16      1,564,290 lines fetched
    2020-01-13 22:41:16 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:16 0318 INNER JOIN(client_npi0105healthandsocia_exit)
    2020-01-13 22:41:16 0319   LOAD DISTINCT
    2020-01-13 22:41:16 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:16 0321   recordset_id,
    2020-01-13 22:41:16 0322   provider_creating_id AS [client_NPI0105HEALTHANDSOCIA_Provider_Creating_Exit],
    2020-01-13 22:41:16 0323   name AS [client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Exit],
    2020-01-13 22:41:16 0324   user_creating_id AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Exit],
    2020-01-13 22:41:16 0325   user_name AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Exit]
    2020-01-13 22:41:16 0326   RESIDENT RS_Exit
    2020-01-13 22:41:16      	6 fields found: Entry Exit Id, recordset_id, client_NPI0105HEALTHANDSOCIA_Provider_Creating_Exit, client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Exit, client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Exit, client_NPI0105HEALTHANDSOCIA_User_Created_By_Exit, 
    2020-01-13 22:41:16      14 lines fetched
    2020-01-13 22:41:16      Joining/Keeping
    2020-01-13 22:41:16 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:16 0330 DROP FIELDS client_id FROM client_npi0105healthandsocia_exit
    2020-01-13 22:41:16 0331 DROP FIELDS recordset_id FROM client_npi0105healthandsocia_exit
    2020-01-13 22:41:16 0332 DROP FIELDS [Entry Exit Id] FROM client_npi0105healthandsocia_exit
    2020-01-13 22:41:16 0335 FieldMapSaClientExit:
    2020-01-13 22:41:16 0336   Mapping SQL
    2020-01-13 22:41:16 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:16 0338     FROM da_question dq
    2020-01-13 22:41:16 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0340     WHERE
    2020-01-13 22:41:16 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:16 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:16 0344     UNION
    2020-01-13 22:41:16 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:16 0346     FROM da_question dq
    2020-01-13 22:41:16 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0348     WHERE
    2020-01-13 22:41:16 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:16 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:16 0352      UNION
    2020-01-13 22:41:16 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:16 0354     FROM da_question dq
    2020-01-13 22:41:16 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0356     WHERE
    2020-01-13 22:41:16 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:16 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:16 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:16 0361     UNION
    2020-01-13 22:41:16 0362 
    2020-01-13 22:41:16 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:16 0364     FROM da_question dq
    2020-01-13 22:41:16 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0366     WHERE
    2020-01-13 22:41:16 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:16 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:16 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:16 0371     UNION   
    2020-01-13 22:41:16 0372     SELECT
    2020-01-13 22:41:16 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:16 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:16 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:16 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:16 0377     FROM da_question dq
    2020-01-13 22:41:16 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0379     WHERE
    2020-01-13 22:41:16 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:16 0382     UNION
    2020-01-13 22:41:16 0383 	SELECT
    2020-01-13 22:41:16 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:16 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:16 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:16 0387     FROM da_question dq
    2020-01-13 22:41:16 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:16 0389     WHERE
    2020-01-13 22:41:16 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:16 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:16      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:16      1,304 lines fetched
    2020-01-13 22:41:16 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:16 0394 DROP TABLE client_npi0105healthandsocia
    2020-01-13 22:41:16 0396 LET varStepName='STEPEXIT_' & 32 & '_of_' & 50
    2020-01-13 22:41:16 0397 STEPEXIT_32_of_50: select 1
    2020-01-13 22:41:17      	1 fields found: ?column?, 
    2020-01-13 22:41:17      1 lines fetched
    2020-01-13 22:41:17 0398 DROP TABLE STEPEXIT_32_of_50
    2020-01-13 22:41:17 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:17 0401 NEXT
    2020-01-13 22:41:17 0228 LET varRecordSetTableName=Peek('sp_table_name',33,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:17 0229 LET varRecordSetQlikName=Peek('qlik_table_name',33,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:17 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',33,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:17 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0106civicengagemen') <= 20),'npi0106civicengagemen' & 'end_1',left('npi0106civicengagemen', 20)& 'end_1')
    2020-01-13 22:41:17 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0106civicengagemen' & 'enddate'
    2020-01-13 22:41:17 0233 LET varRecordSetQlikName_Entry= 'client_npi0106civicengagemen' & '_entry'
    2020-01-13 22:41:17 0234 LET varRecordSetQlikName_Exit='client_npi0106civicengagemen'& '_exit'
    2020-01-13 22:41:17 0236 LET varRecordSetQlikName_Interim='client_npi0106civicengagemen' & '_review'
    2020-01-13 22:41:17 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_npi0106civicengagemen', (len('client_npi0106civicengagemen'))-7))
    2020-01-13 22:41:17 0239 client_npi0106civicengagemen:
    2020-01-13 22:41:17 0240   SELECT * FROM qlik_sclient_npi0106civicengagemen
    2020-01-13 22:41:17      	7 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, 
    2020-01-13 22:41:17      45 lines fetched
    2020-01-13 22:41:17 0243 client_npi0106civicengagemen_exit:
    2020-01-13 22:41:17 0244   Noconcatenate
    2020-01-13 22:41:17 0245   LOAD DISTINCT
    2020-01-13 22:41:17 0246   *,
    2020-01-13 22:41:17 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:17 0248   recordset_id AS 'client_NPI0106CIVICENGAGEMENRECORDSET_ID_exit'
    2020-01-13 22:41:17 0249   RESIDENT client_npi0106civicengagemen
    2020-01-13 22:41:17      	9 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, %exit_recordset_id, client_NPI0106CIVICENGAGEMENRECORDSET_ID_exit, 
    2020-01-13 22:41:17      45 lines fetched
    2020-01-13 22:41:17 0251 client_npi0106civicengagemen:
    2020-01-13 22:41:17 0252   SELECT * FROM qlik_sclient_npi0106civicengagemen
    2020-01-13 22:41:17      	7 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, 
    2020-01-13 22:41:17      90 lines fetched
    2020-01-13 22:41:17 0254 CustomEndFieldCheck:
    2020-01-13 22:41:17 0255   SELECT *
    2020-01-13 22:41:17 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0106civicengagemeend_1'
    2020-01-13 22:41:18      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:18      0 lines fetched
    2020-01-13 22:41:18 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0106civicengagemeend_1','npi0106civicengagemenenddate')
    2020-01-13 22:41:18 0262 RS_Exit:
    2020-01-13 22:41:18 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:18 0264   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:41:18 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:18 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:18 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:18 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:18 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:18 0270   WHERE 
    2020-01-13 22:41:18 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:18 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:18 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:18 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:18 0275   AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:41:18 0276                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0106civicengagemenenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:18 0277   
    2020-01-13 22:41:18 0278   UNION
    2020-01-13 22:41:18 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:18 0280   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:41:18 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:18 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:18 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:18 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:18 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:18 0286   WHERE 
    2020-01-13 22:41:18 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:18 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:18 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:18 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:18 0291   AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:41:18 0292                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0106civicengagemenenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:18      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:18      30 lines fetched
    2020-01-13 22:41:18 0296 RS_Exit_Explicit:
    2020-01-13 22:41:18 0297   Noconcatenate
    2020-01-13 22:41:18 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:18 0299   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:41:18 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:18 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:18 0302   WHERE 
    2020-01-13 22:41:18 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:18 0304   AND ((((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.npi0106civicengagemenenddate::DATE IS NULL)) 
    2020-01-13 22:41:18 0305                    OR (((ft.npi0106civicengagemenstartdate::DATE <= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.npi0106civicengagemenenddate::DATE >= ee.exit_date::DATE) OR ((ft.npi0106civicengagemenenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:18      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:18      38 lines fetched
    2020-01-13 22:41:18 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:18 0310   LOAD
    2020-01-13 22:41:18 0311   entry_exit_id, 
    2020-01-13 22:41:18 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:18 0313   question_id as %exitquestionid,
    2020-01-13 22:41:18 0314   provider_creating_id
    2020-01-13 22:41:18 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:18      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:18      1,564,328 lines fetched
    2020-01-13 22:41:18 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:18 0318 INNER JOIN(client_npi0106civicengagemen_exit)
    2020-01-13 22:41:18 0319   LOAD DISTINCT
    2020-01-13 22:41:18 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:18 0321   recordset_id,
    2020-01-13 22:41:18 0322   provider_creating_id AS [client_NPI0106CIVICENGAGEMEN_Provider_Creating_Exit],
    2020-01-13 22:41:18 0323   name AS [client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Exit],
    2020-01-13 22:41:18 0324   user_creating_id AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Exit],
    2020-01-13 22:41:18 0325   user_name AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Exit]
    2020-01-13 22:41:18 0326   RESIDENT RS_Exit
    2020-01-13 22:41:18      	6 fields found: Entry Exit Id, recordset_id, client_NPI0106CIVICENGAGEMEN_Provider_Creating_Exit, client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Exit, client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Exit, client_NPI0106CIVICENGAGEMEN_User_Created_By_Exit, 
    2020-01-13 22:41:18      30 lines fetched
    2020-01-13 22:41:18      Joining/Keeping
    2020-01-13 22:41:19 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:19 0330 DROP FIELDS client_id FROM client_npi0106civicengagemen_exit
    2020-01-13 22:41:19 0331 DROP FIELDS recordset_id FROM client_npi0106civicengagemen_exit
    2020-01-13 22:41:19 0332 DROP FIELDS [Entry Exit Id] FROM client_npi0106civicengagemen_exit
    2020-01-13 22:41:19 0335 FieldMapSaClientExit:
    2020-01-13 22:41:19 0336   Mapping SQL
    2020-01-13 22:41:19 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:19 0338     FROM da_question dq
    2020-01-13 22:41:19 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0340     WHERE
    2020-01-13 22:41:19 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:19 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:19 0344     UNION
    2020-01-13 22:41:19 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:19 0346     FROM da_question dq
    2020-01-13 22:41:19 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0348     WHERE
    2020-01-13 22:41:19 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:19 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:19 0352      UNION
    2020-01-13 22:41:19 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:19 0354     FROM da_question dq
    2020-01-13 22:41:19 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0356     WHERE
    2020-01-13 22:41:19 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:19 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:19 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:19 0361     UNION
    2020-01-13 22:41:19 0362 
    2020-01-13 22:41:19 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:19 0364     FROM da_question dq
    2020-01-13 22:41:19 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0366     WHERE
    2020-01-13 22:41:19 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:19 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:19 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:19 0371     UNION   
    2020-01-13 22:41:19 0372     SELECT
    2020-01-13 22:41:19 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:19 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:19 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:19 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:19 0377     FROM da_question dq
    2020-01-13 22:41:19 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0379     WHERE
    2020-01-13 22:41:19 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:19 0382     UNION
    2020-01-13 22:41:19 0383 	SELECT
    2020-01-13 22:41:19 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:19 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:19 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:19 0387     FROM da_question dq
    2020-01-13 22:41:19 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:19 0389     WHERE
    2020-01-13 22:41:19 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:19 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:19      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:19      1,304 lines fetched
    2020-01-13 22:41:19 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:19 0394 DROP TABLE client_npi0106civicengagemen
    2020-01-13 22:41:19 0396 LET varStepName='STEPEXIT_' & 33 & '_of_' & 50
    2020-01-13 22:41:19 0397 STEPEXIT_33_of_50: select 1
    2020-01-13 22:41:19      	1 fields found: ?column?, 
    2020-01-13 22:41:19      1 lines fetched
    2020-01-13 22:41:19 0398 DROP TABLE STEPEXIT_33_of_50
    2020-01-13 22:41:19 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:19 0401 NEXT
    2020-01-13 22:41:19 0228 LET varRecordSetTableName=Peek('sp_table_name',34,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:19 0229 LET varRecordSetQlikName=Peek('qlik_table_name',34,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:19 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',34,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:19 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('physicianinformation') <= 20),'physicianinformation' & 'end_1',left('physicianinformation', 20)& 'end_1')
    2020-01-13 22:41:19 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'physicianinformation' & 'enddate'
    2020-01-13 22:41:19 0233 LET varRecordSetQlikName_Entry= 'client_physicianinformation' & '_entry'
    2020-01-13 22:41:19 0234 LET varRecordSetQlikName_Exit='client_physicianinformation'& '_exit'
    2020-01-13 22:41:19 0236 LET varRecordSetQlikName_Interim='client_physicianinformation' & '_review'
    2020-01-13 22:41:19 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_physicianinformation', (len('client_physicianinformation'))-7))
    2020-01-13 22:41:19 0239 client_physicianinformation:
    2020-01-13 22:41:19 0240   SELECT * FROM qlik_sclient_physicianinformation
    2020-01-13 22:41:22      	12 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, 
    2020-01-13 22:41:22      22,428 lines fetched
    2020-01-13 22:41:22 0243 client_physicianinformation_exit:
    2020-01-13 22:41:22 0244   Noconcatenate
    2020-01-13 22:41:22 0245   LOAD DISTINCT
    2020-01-13 22:41:22 0246   *,
    2020-01-13 22:41:22 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:22 0248   recordset_id AS 'client_PHYSICIANINFORMATIONRECORDSET_ID_exit'
    2020-01-13 22:41:22 0249   RESIDENT client_physicianinformation
    2020-01-13 22:41:22      	14 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, %exit_recordset_id, client_PHYSICIANINFORMATIONRECORDSET_ID_exit, 
    2020-01-13 22:41:22      22,428 lines fetched
    2020-01-13 22:41:22 0251 client_physicianinformation:
    2020-01-13 22:41:22 0252   SELECT * FROM qlik_sclient_physicianinformation
    2020-01-13 22:41:25      	12 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, 
    2020-01-13 22:41:25      44,856 lines fetched
    2020-01-13 22:41:25 0254 CustomEndFieldCheck:
    2020-01-13 22:41:25 0255   SELECT *
    2020-01-13 22:41:25 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'physicianinformationend_1'
    2020-01-13 22:41:26      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:26      0 lines fetched
    2020-01-13 22:41:26 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'physicianinformationend_1','physicianinformationenddate')
    2020-01-13 22:41:26 0262 RS_Exit:
    2020-01-13 22:41:26 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:26 0264   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:41:26 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:26 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:26 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:26 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:26 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:26 0270   WHERE 
    2020-01-13 22:41:26 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:26 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:26 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:26 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:26 0275   AND ((((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:41:26 0276                    OR (((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.physicianinformationenddate::DATE >= ee.exit_date::DATE) OR ((ft.physicianinformationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:26 0277   
    2020-01-13 22:41:26 0278   UNION
    2020-01-13 22:41:26 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:26 0280   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:41:26 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:26 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:26 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:26 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:26 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:26 0286   WHERE 
    2020-01-13 22:41:26 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:26 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:26 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:26 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:26 0291   AND ((((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:41:26 0292                    OR (((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.physicianinformationenddate::DATE >= ee.exit_date::DATE) OR ((ft.physicianinformationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:31      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:31      165 lines fetched
    2020-01-13 22:41:31 0296 RS_Exit_Explicit:
    2020-01-13 22:41:31 0297   Noconcatenate
    2020-01-13 22:41:31 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:31 0299   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:41:31 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:31 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:31 0302   WHERE 
    2020-01-13 22:41:31 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:31 0304   AND ((((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.physicianinformationenddate::DATE IS NULL)) 
    2020-01-13 22:41:31 0305                    OR (((ft.physicianinformationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.physicianinformationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.physicianinformationenddate::DATE >= ee.exit_date::DATE) OR ((ft.physicianinformationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:33      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:33      926 lines fetched
    2020-01-13 22:41:33 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:33 0310   LOAD
    2020-01-13 22:41:33 0311   entry_exit_id, 
    2020-01-13 22:41:33 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:33 0313   question_id as %exitquestionid,
    2020-01-13 22:41:33 0314   provider_creating_id
    2020-01-13 22:41:33 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:34      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:34      1,565,254 lines fetched
    2020-01-13 22:41:34 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:34 0318 INNER JOIN(client_physicianinformation_exit)
    2020-01-13 22:41:34 0319   LOAD DISTINCT
    2020-01-13 22:41:34 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:34 0321   recordset_id,
    2020-01-13 22:41:34 0322   provider_creating_id AS [client_PHYSICIANINFORMATION_Provider_Creating_Exit],
    2020-01-13 22:41:34 0323   name AS [client_PHYSICIANINFORMATION_Provider_Name_Creating_Exit],
    2020-01-13 22:41:34 0324   user_creating_id AS [client_PHYSICIANINFORMATION_User_Created_By_Id_Exit],
    2020-01-13 22:41:34 0325   user_name AS [client_PHYSICIANINFORMATION_User_Created_By_Exit]
    2020-01-13 22:41:34 0326   RESIDENT RS_Exit
    2020-01-13 22:41:34      	6 fields found: Entry Exit Id, recordset_id, client_PHYSICIANINFORMATION_Provider_Creating_Exit, client_PHYSICIANINFORMATION_Provider_Name_Creating_Exit, client_PHYSICIANINFORMATION_User_Created_By_Id_Exit, client_PHYSICIANINFORMATION_User_Created_By_Exit, 
    2020-01-13 22:41:34      165 lines fetched
    2020-01-13 22:41:34      Joining/Keeping
    2020-01-13 22:41:34 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:34 0330 DROP FIELDS client_id FROM client_physicianinformation_exit
    2020-01-13 22:41:34 0331 DROP FIELDS recordset_id FROM client_physicianinformation_exit
    2020-01-13 22:41:34 0332 DROP FIELDS [Entry Exit Id] FROM client_physicianinformation_exit
    2020-01-13 22:41:34 0335 FieldMapSaClientExit:
    2020-01-13 22:41:34 0336   Mapping SQL
    2020-01-13 22:41:34 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:34 0338     FROM da_question dq
    2020-01-13 22:41:34 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0340     WHERE
    2020-01-13 22:41:34 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:34 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:34 0344     UNION
    2020-01-13 22:41:34 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:34 0346     FROM da_question dq
    2020-01-13 22:41:34 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0348     WHERE
    2020-01-13 22:41:34 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:34 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:34 0352      UNION
    2020-01-13 22:41:34 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:34 0354     FROM da_question dq
    2020-01-13 22:41:34 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0356     WHERE
    2020-01-13 22:41:34 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:34 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:34 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:34 0361     UNION
    2020-01-13 22:41:34 0362 
    2020-01-13 22:41:34 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:34 0364     FROM da_question dq
    2020-01-13 22:41:34 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0366     WHERE
    2020-01-13 22:41:34 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:34 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:34 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:34 0371     UNION   
    2020-01-13 22:41:34 0372     SELECT
    2020-01-13 22:41:34 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:34 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:34 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:34 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:34 0377     FROM da_question dq
    2020-01-13 22:41:34 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0379     WHERE
    2020-01-13 22:41:34 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:34 0382     UNION
    2020-01-13 22:41:34 0383 	SELECT
    2020-01-13 22:41:34 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:34 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:34 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:34 0387     FROM da_question dq
    2020-01-13 22:41:34 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:34 0389     WHERE
    2020-01-13 22:41:34 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:34 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:34      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:34      1,304 lines fetched
    2020-01-13 22:41:34 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:34 0394 DROP TABLE client_physicianinformation
    2020-01-13 22:41:34 0396 LET varStepName='STEPEXIT_' & 34 & '_of_' & 50
    2020-01-13 22:41:34 0397 STEPEXIT_34_of_50: select 1
    2020-01-13 22:41:35      	1 fields found: ?column?, 
    2020-01-13 22:41:35      1 lines fetched
    2020-01-13 22:41:35 0398 DROP TABLE STEPEXIT_34_of_50
    2020-01-13 22:41:35 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:35 0401 NEXT
    2020-01-13 22:41:35 0228 LET varRecordSetTableName=Peek('sp_table_name',35,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:35 0229 LET varRecordSetQlikName=Peek('qlik_table_name',35,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:35 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',35,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:35 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('referredtomentalhealt_1') <= 20),'referredtomentalhealt_1' & 'end_1',left('referredtomentalhealt_1', 20)& 'end_1')
    2020-01-13 22:41:35 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'referredtomentalhealt_1' & 'enddate'
    2020-01-13 22:41:35 0233 LET varRecordSetQlikName_Entry= 'client_referredtomentalhealt_1' & '_entry'
    2020-01-13 22:41:35 0234 LET varRecordSetQlikName_Exit='client_referredtomentalhealt_1'& '_exit'
    2020-01-13 22:41:35 0236 LET varRecordSetQlikName_Interim='client_referredtomentalhealt_1' & '_review'
    2020-01-13 22:41:35 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_referredtomentalhealt_1', (len('client_referredtomentalhealt_1'))-7))
    2020-01-13 22:41:35 0239 client_referredtomentalhealt_1:
    2020-01-13 22:41:35 0240   SELECT * FROM qlik_sclient_referredtomentalhealt_1
    2020-01-13 22:41:35      	7 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, 
    2020-01-13 22:41:35      221 lines fetched
    2020-01-13 22:41:35 0243 client_referredtomentalhealt_1_exit:
    2020-01-13 22:41:35 0244   Noconcatenate
    2020-01-13 22:41:35 0245   LOAD DISTINCT
    2020-01-13 22:41:35 0246   *,
    2020-01-13 22:41:35 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:35 0248   recordset_id AS 'client_REFERREDTOMENTALHEALT_1RECORDSET_ID_exit'
    2020-01-13 22:41:35 0249   RESIDENT client_referredtomentalhealt_1
    2020-01-13 22:41:35      	9 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, %exit_recordset_id, client_REFERREDTOMENTALHEALT_1RECORDSET_ID_exit, 
    2020-01-13 22:41:35      221 lines fetched
    2020-01-13 22:41:35 0251 client_referredtomentalhealt_1:
    2020-01-13 22:41:35 0252   SELECT * FROM qlik_sclient_referredtomentalhealt_1
    2020-01-13 22:41:35      	7 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, 
    2020-01-13 22:41:35      442 lines fetched
    2020-01-13 22:41:35 0254 CustomEndFieldCheck:
    2020-01-13 22:41:35 0255   SELECT *
    2020-01-13 22:41:35 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'referredtomentalhealend_1'
    2020-01-13 22:41:35      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:35      0 lines fetched
    2020-01-13 22:41:35 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'referredtomentalhealend_1','referredtomentalhealt_1enddate')
    2020-01-13 22:41:35 0262 RS_Exit:
    2020-01-13 22:41:35 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:35 0264   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:41:35 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:35 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:35 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:35 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:35 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:35 0270   WHERE 
    2020-01-13 22:41:35 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:35 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:35 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:35 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:35 0275   AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:35 0276                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:35 0277   
    2020-01-13 22:41:35 0278   UNION
    2020-01-13 22:41:35 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:35 0280   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:41:35 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:35 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:35 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:35 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:35 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:35 0286   WHERE 
    2020-01-13 22:41:35 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:35 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:35 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:35 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:35 0291   AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:35 0292                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:36      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:36      19 lines fetched
    2020-01-13 22:41:36 0296 RS_Exit_Explicit:
    2020-01-13 22:41:36 0297   Noconcatenate
    2020-01-13 22:41:36 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:36 0299   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:41:36 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:36 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:36 0302   WHERE 
    2020-01-13 22:41:36 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:36 0304   AND ((((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.referredtomentalhealt_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:36 0305                    OR (((ft.referredtomentalhealt_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.referredtomentalhealt_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.referredtomentalhealt_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:36      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:36      111 lines fetched
    2020-01-13 22:41:36 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:36 0310   LOAD
    2020-01-13 22:41:36 0311   entry_exit_id, 
    2020-01-13 22:41:36 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:36 0313   question_id as %exitquestionid,
    2020-01-13 22:41:36 0314   provider_creating_id
    2020-01-13 22:41:36 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:36      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:36      1,565,365 lines fetched
    2020-01-13 22:41:36 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:36 0318 INNER JOIN(client_referredtomentalhealt_1_exit)
    2020-01-13 22:41:36 0319   LOAD DISTINCT
    2020-01-13 22:41:36 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:36 0321   recordset_id,
    2020-01-13 22:41:36 0322   provider_creating_id AS [client_REFERREDTOMENTALHEALT_1_Provider_Creating_Exit],
    2020-01-13 22:41:36 0323   name AS [client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Exit],
    2020-01-13 22:41:36 0324   user_creating_id AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Exit],
    2020-01-13 22:41:36 0325   user_name AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Exit]
    2020-01-13 22:41:36 0326   RESIDENT RS_Exit
    2020-01-13 22:41:36      	6 fields found: Entry Exit Id, recordset_id, client_REFERREDTOMENTALHEALT_1_Provider_Creating_Exit, client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Exit, client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Exit, client_REFERREDTOMENTALHEALT_1_User_Created_By_Exit, 
    2020-01-13 22:41:36      19 lines fetched
    2020-01-13 22:41:36      Joining/Keeping
    2020-01-13 22:41:36 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:36 0330 DROP FIELDS client_id FROM client_referredtomentalhealt_1_exit
    2020-01-13 22:41:36 0331 DROP FIELDS recordset_id FROM client_referredtomentalhealt_1_exit
    2020-01-13 22:41:36 0332 DROP FIELDS [Entry Exit Id] FROM client_referredtomentalhealt_1_exit
    2020-01-13 22:41:36 0335 FieldMapSaClientExit:
    2020-01-13 22:41:36 0336   Mapping SQL
    2020-01-13 22:41:36 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:36 0338     FROM da_question dq
    2020-01-13 22:41:36 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0340     WHERE
    2020-01-13 22:41:36 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:36 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:36 0344     UNION
    2020-01-13 22:41:36 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:36 0346     FROM da_question dq
    2020-01-13 22:41:36 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0348     WHERE
    2020-01-13 22:41:36 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:36 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:36 0352      UNION
    2020-01-13 22:41:36 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:36 0354     FROM da_question dq
    2020-01-13 22:41:36 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0356     WHERE
    2020-01-13 22:41:36 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:36 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:36 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:36 0361     UNION
    2020-01-13 22:41:36 0362 
    2020-01-13 22:41:36 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:36 0364     FROM da_question dq
    2020-01-13 22:41:36 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0366     WHERE
    2020-01-13 22:41:36 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:36 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:36 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:36 0371     UNION   
    2020-01-13 22:41:36 0372     SELECT
    2020-01-13 22:41:36 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:36 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:36 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:36 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:36 0377     FROM da_question dq
    2020-01-13 22:41:36 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0379     WHERE
    2020-01-13 22:41:36 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:36 0382     UNION
    2020-01-13 22:41:36 0383 	SELECT
    2020-01-13 22:41:36 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:36 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:36 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:36 0387     FROM da_question dq
    2020-01-13 22:41:36 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:36 0389     WHERE
    2020-01-13 22:41:36 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:36 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:37      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:37      1,304 lines fetched
    2020-01-13 22:41:37 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:37 0394 DROP TABLE client_referredtomentalhealt_1
    2020-01-13 22:41:37 0396 LET varStepName='STEPEXIT_' & 35 & '_of_' & 50
    2020-01-13 22:41:37 0397 STEPEXIT_35_of_50: select 1
    2020-01-13 22:41:37      	1 fields found: ?column?, 
    2020-01-13 22:41:37      1 lines fetched
    2020-01-13 22:41:37 0398 DROP TABLE STEPEXIT_35_of_50
    2020-01-13 22:41:37 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:37 0401 NEXT
    2020-01-13 22:41:37 0228 LET varRecordSetTableName=Peek('sp_table_name',36,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:37 0229 LET varRecordSetQlikName=Peek('qlik_table_name',36,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:37 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',36,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:37 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('rhymisoutreachsub') <= 20),'rhymisoutreachsub' & 'end_1',left('rhymisoutreachsub', 20)& 'end_1')
    2020-01-13 22:41:37 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'rhymisoutreachsub' & 'enddate'
    2020-01-13 22:41:37 0233 LET varRecordSetQlikName_Entry= 'client_rhymisoutreachsub' & '_entry'
    2020-01-13 22:41:37 0234 LET varRecordSetQlikName_Exit='client_rhymisoutreachsub'& '_exit'
    2020-01-13 22:41:37 0236 LET varRecordSetQlikName_Interim='client_rhymisoutreachsub' & '_review'
    2020-01-13 22:41:37 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_rhymisoutreachsub', (len('client_rhymisoutreachsub'))-7))
    2020-01-13 22:41:37 0239 client_rhymisoutreachsub:
    2020-01-13 22:41:37 0240   SELECT * FROM qlik_sclient_rhymisoutreachsub
    2020-01-13 22:41:37      	8 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, 
    2020-01-13 22:41:37      203 lines fetched
    2020-01-13 22:41:37 0243 client_rhymisoutreachsub_exit:
    2020-01-13 22:41:37 0244   Noconcatenate
    2020-01-13 22:41:37 0245   LOAD DISTINCT
    2020-01-13 22:41:37 0246   *,
    2020-01-13 22:41:37 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:37 0248   recordset_id AS 'client_RHYMISOUTREACHSUBRECORDSET_ID_exit'
    2020-01-13 22:41:37 0249   RESIDENT client_rhymisoutreachsub
    2020-01-13 22:41:37      	10 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, %exit_recordset_id, client_RHYMISOUTREACHSUBRECORDSET_ID_exit, 
    2020-01-13 22:41:37      203 lines fetched
    2020-01-13 22:41:37 0251 client_rhymisoutreachsub:
    2020-01-13 22:41:37 0252   SELECT * FROM qlik_sclient_rhymisoutreachsub
    2020-01-13 22:41:37      	8 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, 
    2020-01-13 22:41:37      406 lines fetched
    2020-01-13 22:41:37 0254 CustomEndFieldCheck:
    2020-01-13 22:41:37 0255   SELECT *
    2020-01-13 22:41:37 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'rhymisoutreachsubend_1'
    2020-01-13 22:41:38      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:38      0 lines fetched
    2020-01-13 22:41:38 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'rhymisoutreachsubend_1','rhymisoutreachsubenddate')
    2020-01-13 22:41:38 0262 RS_Exit:
    2020-01-13 22:41:38 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:38 0264   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:41:38 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:38 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:38 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:38 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:38 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:38 0270   WHERE 
    2020-01-13 22:41:38 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:38 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:38 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:38 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:38 0275   AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:41:38 0276                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.rhymisoutreachsubenddate::DATE >= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:38 0277   
    2020-01-13 22:41:38 0278   UNION
    2020-01-13 22:41:38 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:38 0280   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:41:38 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:38 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:38 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:38 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:38 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:38 0286   WHERE 
    2020-01-13 22:41:38 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:38 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:38 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:38 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:38 0291   AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:41:38 0292                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.rhymisoutreachsubenddate::DATE >= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:38      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:38      103 lines fetched
    2020-01-13 22:41:38 0296 RS_Exit_Explicit:
    2020-01-13 22:41:38 0297   Noconcatenate
    2020-01-13 22:41:38 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:38 0299   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:41:38 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:38 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:38 0302   WHERE 
    2020-01-13 22:41:38 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:38 0304   AND ((((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.rhymisoutreachsubenddate::DATE IS NULL)) 
    2020-01-13 22:41:38 0305                    OR (((ft.rhymisoutreachsubstartdate::DATE <= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.rhymisoutreachsubenddate::DATE >= ee.exit_date::DATE) OR ((ft.rhymisoutreachsubenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:38      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:38      153 lines fetched
    2020-01-13 22:41:38 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:38 0310   LOAD
    2020-01-13 22:41:38 0311   entry_exit_id, 
    2020-01-13 22:41:38 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:38 0313   question_id as %exitquestionid,
    2020-01-13 22:41:38 0314   provider_creating_id
    2020-01-13 22:41:38 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:38      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:38      1,565,518 lines fetched
    2020-01-13 22:41:38 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:38 0318 INNER JOIN(client_rhymisoutreachsub_exit)
    2020-01-13 22:41:38 0319   LOAD DISTINCT
    2020-01-13 22:41:38 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:38 0321   recordset_id,
    2020-01-13 22:41:38 0322   provider_creating_id AS [client_RHYMISOUTREACHSUB_Provider_Creating_Exit],
    2020-01-13 22:41:38 0323   name AS [client_RHYMISOUTREACHSUB_Provider_Name_Creating_Exit],
    2020-01-13 22:41:38 0324   user_creating_id AS [client_RHYMISOUTREACHSUB_User_Created_By_Id_Exit],
    2020-01-13 22:41:38 0325   user_name AS [client_RHYMISOUTREACHSUB_User_Created_By_Exit]
    2020-01-13 22:41:38 0326   RESIDENT RS_Exit
    2020-01-13 22:41:38      	6 fields found: Entry Exit Id, recordset_id, client_RHYMISOUTREACHSUB_Provider_Creating_Exit, client_RHYMISOUTREACHSUB_Provider_Name_Creating_Exit, client_RHYMISOUTREACHSUB_User_Created_By_Id_Exit, client_RHYMISOUTREACHSUB_User_Created_By_Exit, 
    2020-01-13 22:41:38      103 lines fetched
    2020-01-13 22:41:38      Joining/Keeping
    2020-01-13 22:41:39 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:39 0330 DROP FIELDS client_id FROM client_rhymisoutreachsub_exit
    2020-01-13 22:41:39 0331 DROP FIELDS recordset_id FROM client_rhymisoutreachsub_exit
    2020-01-13 22:41:39 0332 DROP FIELDS [Entry Exit Id] FROM client_rhymisoutreachsub_exit
    2020-01-13 22:41:39 0335 FieldMapSaClientExit:
    2020-01-13 22:41:39 0336   Mapping SQL
    2020-01-13 22:41:39 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:39 0338     FROM da_question dq
    2020-01-13 22:41:39 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0340     WHERE
    2020-01-13 22:41:39 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:39 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:39 0344     UNION
    2020-01-13 22:41:39 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:39 0346     FROM da_question dq
    2020-01-13 22:41:39 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0348     WHERE
    2020-01-13 22:41:39 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:39 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:39 0352      UNION
    2020-01-13 22:41:39 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:39 0354     FROM da_question dq
    2020-01-13 22:41:39 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0356     WHERE
    2020-01-13 22:41:39 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:39 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:39 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:39 0361     UNION
    2020-01-13 22:41:39 0362 
    2020-01-13 22:41:39 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:39 0364     FROM da_question dq
    2020-01-13 22:41:39 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0366     WHERE
    2020-01-13 22:41:39 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:39 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:39 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:39 0371     UNION   
    2020-01-13 22:41:39 0372     SELECT
    2020-01-13 22:41:39 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:39 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:39 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:39 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:39 0377     FROM da_question dq
    2020-01-13 22:41:39 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0379     WHERE
    2020-01-13 22:41:39 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:39 0382     UNION
    2020-01-13 22:41:39 0383 	SELECT
    2020-01-13 22:41:39 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:39 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:39 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:39 0387     FROM da_question dq
    2020-01-13 22:41:39 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:39 0389     WHERE
    2020-01-13 22:41:39 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:39 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:39      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:39      1,304 lines fetched
    2020-01-13 22:41:39 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:39 0394 DROP TABLE client_rhymisoutreachsub
    2020-01-13 22:41:39 0396 LET varStepName='STEPEXIT_' & 36 & '_of_' & 50
    2020-01-13 22:41:39 0397 STEPEXIT_36_of_50: select 1
    2020-01-13 22:41:39      	1 fields found: ?column?, 
    2020-01-13 22:41:39      1 lines fetched
    2020-01-13 22:41:39 0398 DROP TABLE STEPEXIT_36_of_50
    2020-01-13 22:41:39 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:39 0401 NEXT
    2020-01-13 22:41:39 0228 LET varRecordSetTableName=Peek('sp_table_name',37,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:39 0229 LET varRecordSetQlikName=Peek('qlik_table_name',37,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:39 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',37,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:39 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('schoolattendance_1') <= 20),'schoolattendance_1' & 'end_1',left('schoolattendance_1', 20)& 'end_1')
    2020-01-13 22:41:39 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'schoolattendance_1' & 'enddate'
    2020-01-13 22:41:39 0233 LET varRecordSetQlikName_Entry= 'client_schoolattendance_1' & '_entry'
    2020-01-13 22:41:39 0234 LET varRecordSetQlikName_Exit='client_schoolattendance_1'& '_exit'
    2020-01-13 22:41:39 0236 LET varRecordSetQlikName_Interim='client_schoolattendance_1' & '_review'
    2020-01-13 22:41:39 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_schoolattendance_1', (len('client_schoolattendance_1'))-7))
    2020-01-13 22:41:39 0239 client_schoolattendance_1:
    2020-01-13 22:41:39 0240   SELECT * FROM qlik_sclient_schoolattendance_1
    2020-01-13 22:41:40      	12 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, 
    2020-01-13 22:41:40      2,702 lines fetched
    2020-01-13 22:41:40 0243 client_schoolattendance_1_exit:
    2020-01-13 22:41:40 0244   Noconcatenate
    2020-01-13 22:41:40 0245   LOAD DISTINCT
    2020-01-13 22:41:40 0246   *,
    2020-01-13 22:41:40 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:40 0248   recordset_id AS 'client_SCHOOLATTENDANCE_1RECORDSET_ID_exit'
    2020-01-13 22:41:40 0249   RESIDENT client_schoolattendance_1
    2020-01-13 22:41:40      	14 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, %exit_recordset_id, client_SCHOOLATTENDANCE_1RECORDSET_ID_exit, 
    2020-01-13 22:41:40      2,702 lines fetched
    2020-01-13 22:41:40 0251 client_schoolattendance_1:
    2020-01-13 22:41:40 0252   SELECT * FROM qlik_sclient_schoolattendance_1
    2020-01-13 22:41:40      	12 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, 
    2020-01-13 22:41:40      5,404 lines fetched
    2020-01-13 22:41:40 0254 CustomEndFieldCheck:
    2020-01-13 22:41:40 0255   SELECT *
    2020-01-13 22:41:40 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'schoolattendance_1end_1'
    2020-01-13 22:41:41      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:41      0 lines fetched
    2020-01-13 22:41:41 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'schoolattendance_1end_1','schoolattendance_1enddate')
    2020-01-13 22:41:41 0262 RS_Exit:
    2020-01-13 22:41:41 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:41 0264   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:41:41 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:41 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:41 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:41 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:41 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:41 0270   WHERE 
    2020-01-13 22:41:41 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:41 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:41 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:41 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:41 0275   AND ((((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:41 0276                    OR (((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.schoolattendance_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.schoolattendance_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:41 0277   
    2020-01-13 22:41:41 0278   UNION
    2020-01-13 22:41:41 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:41 0280   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:41:41 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:41 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:41 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:41 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:41 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:41 0286   WHERE 
    2020-01-13 22:41:41 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:41 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:41 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:41 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:41 0291   AND ((((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:41 0292                    OR (((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.schoolattendance_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.schoolattendance_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:42      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:42      868 lines fetched
    2020-01-13 22:41:42 0296 RS_Exit_Explicit:
    2020-01-13 22:41:42 0297   Noconcatenate
    2020-01-13 22:41:42 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:42 0299   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:41:42 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:42 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:42 0302   WHERE 
    2020-01-13 22:41:42 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:42 0304   AND ((((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.schoolattendance_1enddate::DATE IS NULL)) 
    2020-01-13 22:41:42 0305                    OR (((ft.schoolattendance_1startdate::DATE <= ee.exit_date::DATE) OR ((ft.schoolattendance_1startdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.schoolattendance_1enddate::DATE >= ee.exit_date::DATE) OR ((ft.schoolattendance_1enddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:42      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:42      1,417 lines fetched
    2020-01-13 22:41:42 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:42 0310   LOAD
    2020-01-13 22:41:42 0311   entry_exit_id, 
    2020-01-13 22:41:42 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:42 0313   question_id as %exitquestionid,
    2020-01-13 22:41:42 0314   provider_creating_id
    2020-01-13 22:41:42 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:42      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:42      1,566,935 lines fetched
    2020-01-13 22:41:42 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:43 0318 INNER JOIN(client_schoolattendance_1_exit)
    2020-01-13 22:41:43 0319   LOAD DISTINCT
    2020-01-13 22:41:43 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:43 0321   recordset_id,
    2020-01-13 22:41:43 0322   provider_creating_id AS [client_SCHOOLATTENDANCE_1_Provider_Creating_Exit],
    2020-01-13 22:41:43 0323   name AS [client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Exit],
    2020-01-13 22:41:43 0324   user_creating_id AS [client_SCHOOLATTENDANCE_1_User_Created_By_Id_Exit],
    2020-01-13 22:41:43 0325   user_name AS [client_SCHOOLATTENDANCE_1_User_Created_By_Exit]
    2020-01-13 22:41:43 0326   RESIDENT RS_Exit
    2020-01-13 22:41:43      	6 fields found: Entry Exit Id, recordset_id, client_SCHOOLATTENDANCE_1_Provider_Creating_Exit, client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Exit, client_SCHOOLATTENDANCE_1_User_Created_By_Id_Exit, client_SCHOOLATTENDANCE_1_User_Created_By_Exit, 
    2020-01-13 22:41:43      868 lines fetched
    2020-01-13 22:41:43      Joining/Keeping
    2020-01-13 22:41:43 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:43 0330 DROP FIELDS client_id FROM client_schoolattendance_1_exit
    2020-01-13 22:41:43 0331 DROP FIELDS recordset_id FROM client_schoolattendance_1_exit
    2020-01-13 22:41:43 0332 DROP FIELDS [Entry Exit Id] FROM client_schoolattendance_1_exit
    2020-01-13 22:41:43 0335 FieldMapSaClientExit:
    2020-01-13 22:41:43 0336   Mapping SQL
    2020-01-13 22:41:43 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:43 0338     FROM da_question dq
    2020-01-13 22:41:43 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0340     WHERE
    2020-01-13 22:41:43 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:43 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:43 0344     UNION
    2020-01-13 22:41:43 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:43 0346     FROM da_question dq
    2020-01-13 22:41:43 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0348     WHERE
    2020-01-13 22:41:43 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:43 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:43 0352      UNION
    2020-01-13 22:41:43 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:43 0354     FROM da_question dq
    2020-01-13 22:41:43 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0356     WHERE
    2020-01-13 22:41:43 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:43 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:43 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:43 0361     UNION
    2020-01-13 22:41:43 0362 
    2020-01-13 22:41:43 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:43 0364     FROM da_question dq
    2020-01-13 22:41:43 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0366     WHERE
    2020-01-13 22:41:43 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:43 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:43 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:43 0371     UNION   
    2020-01-13 22:41:43 0372     SELECT
    2020-01-13 22:41:43 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:43 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:43 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:43 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:43 0377     FROM da_question dq
    2020-01-13 22:41:43 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0379     WHERE
    2020-01-13 22:41:43 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:43 0382     UNION
    2020-01-13 22:41:43 0383 	SELECT
    2020-01-13 22:41:43 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:43 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:43 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:43 0387     FROM da_question dq
    2020-01-13 22:41:43 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:43 0389     WHERE
    2020-01-13 22:41:43 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:43 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:43      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:43      1,304 lines fetched
    2020-01-13 22:41:43 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:43 0394 DROP TABLE client_schoolattendance_1
    2020-01-13 22:41:43 0396 LET varStepName='STEPEXIT_' & 37 & '_of_' & 50
    2020-01-13 22:41:43 0397 STEPEXIT_37_of_50: select 1
    2020-01-13 22:41:43      	1 fields found: ?column?, 
    2020-01-13 22:41:43      1 lines fetched
    2020-01-13 22:41:43 0398 DROP TABLE STEPEXIT_37_of_50
    2020-01-13 22:41:43 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:43 0401 NEXT
    2020-01-13 22:41:43 0228 LET varRecordSetTableName=Peek('sp_table_name',38,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:43 0229 LET varRecordSetQlikName=Peek('qlik_table_name',38,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:43 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',38,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:43 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabuseassessm') <= 20),'substanceabuseassessm' & 'end_1',left('substanceabuseassessm', 20)& 'end_1')
    2020-01-13 22:41:43 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabuseassessm' & 'enddate'
    2020-01-13 22:41:43 0233 LET varRecordSetQlikName_Entry= 'client_substanceabuseassessm' & '_entry'
    2020-01-13 22:41:43 0234 LET varRecordSetQlikName_Exit='client_substanceabuseassessm'& '_exit'
    2020-01-13 22:41:43 0236 LET varRecordSetQlikName_Interim='client_substanceabuseassessm' & '_review'
    2020-01-13 22:41:43 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_substanceabuseassessm', (len('client_substanceabuseassessm'))-7))
    2020-01-13 22:41:43 0239 client_substanceabuseassessm:
    2020-01-13 22:41:43 0240   SELECT * FROM qlik_sclient_substanceabuseassessm
    2020-01-13 22:41:44      	8 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, 
    2020-01-13 22:41:44      2,232 lines fetched
    2020-01-13 22:41:44 0243 client_substanceabuseassessm_exit:
    2020-01-13 22:41:44 0244   Noconcatenate
    2020-01-13 22:41:44 0245   LOAD DISTINCT
    2020-01-13 22:41:44 0246   *,
    2020-01-13 22:41:44 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:44 0248   recordset_id AS 'client_SUBSTANCEABUSEASSESSMRECORDSET_ID_exit'
    2020-01-13 22:41:44 0249   RESIDENT client_substanceabuseassessm
    2020-01-13 22:41:44      	10 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, %exit_recordset_id, client_SUBSTANCEABUSEASSESSMRECORDSET_ID_exit, 
    2020-01-13 22:41:44      2,232 lines fetched
    2020-01-13 22:41:44 0251 client_substanceabuseassessm:
    2020-01-13 22:41:44 0252   SELECT * FROM qlik_sclient_substanceabuseassessm
    2020-01-13 22:41:44      	8 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, 
    2020-01-13 22:41:44      4,464 lines fetched
    2020-01-13 22:41:44 0254 CustomEndFieldCheck:
    2020-01-13 22:41:44 0255   SELECT *
    2020-01-13 22:41:44 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabuseassessend_1'
    2020-01-13 22:41:44      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:44      0 lines fetched
    2020-01-13 22:41:44 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabuseassessend_1','substanceabuseassessmenddate')
    2020-01-13 22:41:44 0262 RS_Exit:
    2020-01-13 22:41:44 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:44 0264   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:41:44 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:44 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:44 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:44 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:44 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:44 0270   WHERE 
    2020-01-13 22:41:44 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:44 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:44 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:44 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:44 0275   AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:41:44 0276                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabuseassessmenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:44 0277   
    2020-01-13 22:41:44 0278   UNION
    2020-01-13 22:41:44 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:44 0280   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:41:44 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:44 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:44 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:44 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:44 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:44 0286   WHERE 
    2020-01-13 22:41:44 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:44 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:44 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:44 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:44 0291   AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:41:44 0292                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabuseassessmenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:45      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:45      268 lines fetched
    2020-01-13 22:41:45 0296 RS_Exit_Explicit:
    2020-01-13 22:41:45 0297   Noconcatenate
    2020-01-13 22:41:45 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:45 0299   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:41:45 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:45 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:45 0302   WHERE 
    2020-01-13 22:41:45 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:45 0304   AND ((((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabuseassessmenddate::DATE IS NULL)) 
    2020-01-13 22:41:45 0305                    OR (((ft.substanceabuseassessmstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabuseassessmstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabuseassessmenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabuseassessmenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:45      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:45      1,584 lines fetched
    2020-01-13 22:41:45 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:45 0310   LOAD
    2020-01-13 22:41:45 0311   entry_exit_id, 
    2020-01-13 22:41:45 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:45 0313   question_id as %exitquestionid,
    2020-01-13 22:41:45 0314   provider_creating_id
    2020-01-13 22:41:45 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:45      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:45      1,568,519 lines fetched
    2020-01-13 22:41:45 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:45 0318 INNER JOIN(client_substanceabuseassessm_exit)
    2020-01-13 22:41:45 0319   LOAD DISTINCT
    2020-01-13 22:41:45 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:45 0321   recordset_id,
    2020-01-13 22:41:45 0322   provider_creating_id AS [client_SUBSTANCEABUSEASSESSM_Provider_Creating_Exit],
    2020-01-13 22:41:45 0323   name AS [client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Exit],
    2020-01-13 22:41:45 0324   user_creating_id AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Exit],
    2020-01-13 22:41:45 0325   user_name AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Exit]
    2020-01-13 22:41:45 0326   RESIDENT RS_Exit
    2020-01-13 22:41:45      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEABUSEASSESSM_Provider_Creating_Exit, client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Exit, client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Exit, client_SUBSTANCEABUSEASSESSM_User_Created_By_Exit, 
    2020-01-13 22:41:45      268 lines fetched
    2020-01-13 22:41:45      Joining/Keeping
    2020-01-13 22:41:46 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:46 0330 DROP FIELDS client_id FROM client_substanceabuseassessm_exit
    2020-01-13 22:41:46 0331 DROP FIELDS recordset_id FROM client_substanceabuseassessm_exit
    2020-01-13 22:41:46 0332 DROP FIELDS [Entry Exit Id] FROM client_substanceabuseassessm_exit
    2020-01-13 22:41:46 0335 FieldMapSaClientExit:
    2020-01-13 22:41:46 0336   Mapping SQL
    2020-01-13 22:41:46 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:46 0338     FROM da_question dq
    2020-01-13 22:41:46 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0340     WHERE
    2020-01-13 22:41:46 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:46 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:46 0344     UNION
    2020-01-13 22:41:46 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:46 0346     FROM da_question dq
    2020-01-13 22:41:46 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0348     WHERE
    2020-01-13 22:41:46 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:46 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:46 0352      UNION
    2020-01-13 22:41:46 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:46 0354     FROM da_question dq
    2020-01-13 22:41:46 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0356     WHERE
    2020-01-13 22:41:46 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:46 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:46 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:46 0361     UNION
    2020-01-13 22:41:46 0362 
    2020-01-13 22:41:46 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:46 0364     FROM da_question dq
    2020-01-13 22:41:46 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0366     WHERE
    2020-01-13 22:41:46 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:46 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:46 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:46 0371     UNION   
    2020-01-13 22:41:46 0372     SELECT
    2020-01-13 22:41:46 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:46 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:46 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:46 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:46 0377     FROM da_question dq
    2020-01-13 22:41:46 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0379     WHERE
    2020-01-13 22:41:46 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:46 0382     UNION
    2020-01-13 22:41:46 0383 	SELECT
    2020-01-13 22:41:46 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:46 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:46 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:46 0387     FROM da_question dq
    2020-01-13 22:41:46 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:46 0389     WHERE
    2020-01-13 22:41:46 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:46 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:46      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:46      1,304 lines fetched
    2020-01-13 22:41:46 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:46 0394 DROP TABLE client_substanceabuseassessm
    2020-01-13 22:41:46 0396 LET varStepName='STEPEXIT_' & 38 & '_of_' & 50
    2020-01-13 22:41:46 0397 STEPEXIT_38_of_50: select 1
    2020-01-13 22:41:46      	1 fields found: ?column?, 
    2020-01-13 22:41:46      1 lines fetched
    2020-01-13 22:41:46 0398 DROP TABLE STEPEXIT_38_of_50
    2020-01-13 22:41:46 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:46 0401 NEXT
    2020-01-13 22:41:46 0228 LET varRecordSetTableName=Peek('sp_table_name',39,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:46 0229 LET varRecordSetQlikName=Peek('qlik_table_name',39,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:46 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',39,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:46 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabusetreatment') <= 20),'substanceabusetreatment' & 'end_1',left('substanceabusetreatment', 20)& 'end_1')
    2020-01-13 22:41:46 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabusetreatment' & 'enddate'
    2020-01-13 22:41:46 0233 LET varRecordSetQlikName_Entry= 'client_substanceabusetreatment' & '_entry'
    2020-01-13 22:41:46 0234 LET varRecordSetQlikName_Exit='client_substanceabusetreatment'& '_exit'
    2020-01-13 22:41:46 0236 LET varRecordSetQlikName_Interim='client_substanceabusetreatment' & '_review'
    2020-01-13 22:41:46 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_substanceabusetreatment', (len('client_substanceabusetreatment'))-7))
    2020-01-13 22:41:46 0239 client_substanceabusetreatment:
    2020-01-13 22:41:46 0240   SELECT * FROM qlik_sclient_substanceabusetreatment
    2020-01-13 22:41:46      	6 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, 
    2020-01-13 22:41:46      2,102 lines fetched
    2020-01-13 22:41:46 0243 client_substanceabusetreatment_exit:
    2020-01-13 22:41:46 0244   Noconcatenate
    2020-01-13 22:41:46 0245   LOAD DISTINCT
    2020-01-13 22:41:46 0246   *,
    2020-01-13 22:41:46 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:46 0248   recordset_id AS 'client_SUBSTANCEABUSETREATMENTRECORDSET_ID_exit'
    2020-01-13 22:41:46 0249   RESIDENT client_substanceabusetreatment
    2020-01-13 22:41:47      	8 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, %exit_recordset_id, client_SUBSTANCEABUSETREATMENTRECORDSET_ID_exit, 
    2020-01-13 22:41:47      2,102 lines fetched
    2020-01-13 22:41:47 0251 client_substanceabusetreatment:
    2020-01-13 22:41:47 0252   SELECT * FROM qlik_sclient_substanceabusetreatment
    2020-01-13 22:41:47      	6 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, 
    2020-01-13 22:41:47      4,204 lines fetched
    2020-01-13 22:41:47 0254 CustomEndFieldCheck:
    2020-01-13 22:41:47 0255   SELECT *
    2020-01-13 22:41:47 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabusetreatmend_1'
    2020-01-13 22:41:47      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:47      0 lines fetched
    2020-01-13 22:41:47 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabusetreatmend_1','substanceabusetreatmentenddate')
    2020-01-13 22:41:47 0262 RS_Exit:
    2020-01-13 22:41:47 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:47 0264   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:41:47 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:47 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:47 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:47 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:47 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:47 0270   WHERE 
    2020-01-13 22:41:47 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:47 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:47 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:47 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:47 0275   AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:41:47 0276                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabusetreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:47 0277   
    2020-01-13 22:41:47 0278   UNION
    2020-01-13 22:41:47 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:47 0280   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:41:47 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:47 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:47 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:47 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:47 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:47 0286   WHERE 
    2020-01-13 22:41:47 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:47 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:47 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:47 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:47 0291   AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:41:47 0292                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabusetreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:48      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:48      194 lines fetched
    2020-01-13 22:41:48 0296 RS_Exit_Explicit:
    2020-01-13 22:41:48 0297   Noconcatenate
    2020-01-13 22:41:48 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:48 0299   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:41:48 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:48 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:48 0302   WHERE 
    2020-01-13 22:41:48 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:48 0304   AND ((((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceabusetreatmentenddate::DATE IS NULL)) 
    2020-01-13 22:41:48 0305                    OR (((ft.substanceabusetreatmentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceabusetreatmentenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceabusetreatmentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:48      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:48      746 lines fetched
    2020-01-13 22:41:48 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:48 0310   LOAD
    2020-01-13 22:41:48 0311   entry_exit_id, 
    2020-01-13 22:41:48 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:48 0313   question_id as %exitquestionid,
    2020-01-13 22:41:48 0314   provider_creating_id
    2020-01-13 22:41:48 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:48      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:48      1,569,265 lines fetched
    2020-01-13 22:41:48 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:48 0318 INNER JOIN(client_substanceabusetreatment_exit)
    2020-01-13 22:41:48 0319   LOAD DISTINCT
    2020-01-13 22:41:48 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:48 0321   recordset_id,
    2020-01-13 22:41:48 0322   provider_creating_id AS [client_SUBSTANCEABUSETREATMENT_Provider_Creating_Exit],
    2020-01-13 22:41:48 0323   name AS [client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Exit],
    2020-01-13 22:41:48 0324   user_creating_id AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Exit],
    2020-01-13 22:41:48 0325   user_name AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Exit]
    2020-01-13 22:41:48 0326   RESIDENT RS_Exit
    2020-01-13 22:41:48      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEABUSETREATMENT_Provider_Creating_Exit, client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Exit, client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Exit, client_SUBSTANCEABUSETREATMENT_User_Created_By_Exit, 
    2020-01-13 22:41:48      194 lines fetched
    2020-01-13 22:41:48      Joining/Keeping
    2020-01-13 22:41:49 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:49 0330 DROP FIELDS client_id FROM client_substanceabusetreatment_exit
    2020-01-13 22:41:49 0331 DROP FIELDS recordset_id FROM client_substanceabusetreatment_exit
    2020-01-13 22:41:49 0332 DROP FIELDS [Entry Exit Id] FROM client_substanceabusetreatment_exit
    2020-01-13 22:41:49 0335 FieldMapSaClientExit:
    2020-01-13 22:41:49 0336   Mapping SQL
    2020-01-13 22:41:49 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:49 0338     FROM da_question dq
    2020-01-13 22:41:49 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0340     WHERE
    2020-01-13 22:41:49 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:49 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:49 0344     UNION
    2020-01-13 22:41:49 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:49 0346     FROM da_question dq
    2020-01-13 22:41:49 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0348     WHERE
    2020-01-13 22:41:49 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:49 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:49 0352      UNION
    2020-01-13 22:41:49 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:49 0354     FROM da_question dq
    2020-01-13 22:41:49 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0356     WHERE
    2020-01-13 22:41:49 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:49 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:49 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:49 0361     UNION
    2020-01-13 22:41:49 0362 
    2020-01-13 22:41:49 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:49 0364     FROM da_question dq
    2020-01-13 22:41:49 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0366     WHERE
    2020-01-13 22:41:49 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:49 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:49 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:49 0371     UNION   
    2020-01-13 22:41:49 0372     SELECT
    2020-01-13 22:41:49 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:49 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:49 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:49 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:49 0377     FROM da_question dq
    2020-01-13 22:41:49 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0379     WHERE
    2020-01-13 22:41:49 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:49 0382     UNION
    2020-01-13 22:41:49 0383 	SELECT
    2020-01-13 22:41:49 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:49 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:49 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:49 0387     FROM da_question dq
    2020-01-13 22:41:49 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:49 0389     WHERE
    2020-01-13 22:41:49 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:49 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:49      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:49      1,304 lines fetched
    2020-01-13 22:41:49 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:49 0394 DROP TABLE client_substanceabusetreatment
    2020-01-13 22:41:49 0396 LET varStepName='STEPEXIT_' & 39 & '_of_' & 50
    2020-01-13 22:41:49 0397 STEPEXIT_39_of_50: select 1
    2020-01-13 22:41:49      	1 fields found: ?column?, 
    2020-01-13 22:41:49      1 lines fetched
    2020-01-13 22:41:49 0398 DROP TABLE STEPEXIT_39_of_50
    2020-01-13 22:41:49 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:49 0401 NEXT
    2020-01-13 22:41:49 0228 LET varRecordSetTableName=Peek('sp_table_name',40,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:49 0229 LET varRecordSetQlikName=Peek('qlik_table_name',40,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:49 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',40,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:49 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceusage') <= 20),'substanceusage' & 'end_1',left('substanceusage', 20)& 'end_1')
    2020-01-13 22:41:49 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceusage' & 'enddate'
    2020-01-13 22:41:49 0233 LET varRecordSetQlikName_Entry= 'client_substanceusage' & '_entry'
    2020-01-13 22:41:49 0234 LET varRecordSetQlikName_Exit='client_substanceusage'& '_exit'
    2020-01-13 22:41:49 0236 LET varRecordSetQlikName_Interim='client_substanceusage' & '_review'
    2020-01-13 22:41:49 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_substanceusage', (len('client_substanceusage'))-7))
    2020-01-13 22:41:49 0239 client_substanceusage:
    2020-01-13 22:41:49 0240   SELECT * FROM qlik_sclient_substanceusage
    2020-01-13 22:41:50      	8 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, 
    2020-01-13 22:41:50      2,463 lines fetched
    2020-01-13 22:41:50 0243 client_substanceusage_exit:
    2020-01-13 22:41:50 0244   Noconcatenate
    2020-01-13 22:41:50 0245   LOAD DISTINCT
    2020-01-13 22:41:50 0246   *,
    2020-01-13 22:41:50 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:50 0248   recordset_id AS 'client_SUBSTANCEUSAGERECORDSET_ID_exit'
    2020-01-13 22:41:50 0249   RESIDENT client_substanceusage
    2020-01-13 22:41:50      	10 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, %exit_recordset_id, client_SUBSTANCEUSAGERECORDSET_ID_exit, 
    2020-01-13 22:41:50      2,463 lines fetched
    2020-01-13 22:41:50 0251 client_substanceusage:
    2020-01-13 22:41:50 0252   SELECT * FROM qlik_sclient_substanceusage
    2020-01-13 22:41:50      	8 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, 
    2020-01-13 22:41:50      4,926 lines fetched
    2020-01-13 22:41:50 0254 CustomEndFieldCheck:
    2020-01-13 22:41:50 0255   SELECT *
    2020-01-13 22:41:50 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceusageend_1'
    2020-01-13 22:41:50      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:50      0 lines fetched
    2020-01-13 22:41:50 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceusageend_1','substanceusageenddate')
    2020-01-13 22:41:50 0262 RS_Exit:
    2020-01-13 22:41:50 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:50 0264   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:41:50 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:50 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:50 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:50 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:50 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:50 0270   WHERE 
    2020-01-13 22:41:50 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:50 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:50 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:50 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:50 0275   AND ((((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:41:50 0276                    OR (((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceusageenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceusageenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:50 0277   
    2020-01-13 22:41:50 0278   UNION
    2020-01-13 22:41:50 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:50 0280   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:41:50 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:50 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:50 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:50 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:50 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:50 0286   WHERE 
    2020-01-13 22:41:50 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:50 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:50 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:50 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:50 0291   AND ((((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:41:50 0292                    OR (((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceusageenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceusageenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:51      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:51      393 lines fetched
    2020-01-13 22:41:51 0296 RS_Exit_Explicit:
    2020-01-13 22:41:51 0297   Noconcatenate
    2020-01-13 22:41:51 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:51 0299   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:41:51 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:51 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:51 0302   WHERE 
    2020-01-13 22:41:51 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:51 0304   AND ((((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.substanceusageenddate::DATE IS NULL)) 
    2020-01-13 22:41:51 0305                    OR (((ft.substanceusagestartdate::DATE <= ee.exit_date::DATE) OR ((ft.substanceusagestartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.substanceusageenddate::DATE >= ee.exit_date::DATE) OR ((ft.substanceusageenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:52      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:41:52      1,319 lines fetched
    2020-01-13 22:41:52 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:41:52 0310   LOAD
    2020-01-13 22:41:52 0311   entry_exit_id, 
    2020-01-13 22:41:52 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:52 0313   question_id as %exitquestionid,
    2020-01-13 22:41:52 0314   provider_creating_id
    2020-01-13 22:41:52 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:41:52      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:41:52      1,570,584 lines fetched
    2020-01-13 22:41:52 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:41:52 0318 INNER JOIN(client_substanceusage_exit)
    2020-01-13 22:41:52 0319   LOAD DISTINCT
    2020-01-13 22:41:52 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:41:52 0321   recordset_id,
    2020-01-13 22:41:52 0322   provider_creating_id AS [client_SUBSTANCEUSAGE_Provider_Creating_Exit],
    2020-01-13 22:41:52 0323   name AS [client_SUBSTANCEUSAGE_Provider_Name_Creating_Exit],
    2020-01-13 22:41:52 0324   user_creating_id AS [client_SUBSTANCEUSAGE_User_Created_By_Id_Exit],
    2020-01-13 22:41:52 0325   user_name AS [client_SUBSTANCEUSAGE_User_Created_By_Exit]
    2020-01-13 22:41:52 0326   RESIDENT RS_Exit
    2020-01-13 22:41:52      	6 fields found: Entry Exit Id, recordset_id, client_SUBSTANCEUSAGE_Provider_Creating_Exit, client_SUBSTANCEUSAGE_Provider_Name_Creating_Exit, client_SUBSTANCEUSAGE_User_Created_By_Id_Exit, client_SUBSTANCEUSAGE_User_Created_By_Exit, 
    2020-01-13 22:41:52      393 lines fetched
    2020-01-13 22:41:52      Joining/Keeping
    2020-01-13 22:41:52 0328 DROP TABLE RS_Exit
    2020-01-13 22:41:52 0330 DROP FIELDS client_id FROM client_substanceusage_exit
    2020-01-13 22:41:52 0331 DROP FIELDS recordset_id FROM client_substanceusage_exit
    2020-01-13 22:41:52 0332 DROP FIELDS [Entry Exit Id] FROM client_substanceusage_exit
    2020-01-13 22:41:52 0335 FieldMapSaClientExit:
    2020-01-13 22:41:52 0336   Mapping SQL
    2020-01-13 22:41:52 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:52 0338     FROM da_question dq
    2020-01-13 22:41:52 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0340     WHERE
    2020-01-13 22:41:52 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:41:52 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:41:52 0344     UNION
    2020-01-13 22:41:52 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:52 0346     FROM da_question dq
    2020-01-13 22:41:52 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0348     WHERE
    2020-01-13 22:41:52 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:41:52 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:41:52 0352      UNION
    2020-01-13 22:41:52 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:41:52 0354     FROM da_question dq
    2020-01-13 22:41:52 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0356     WHERE
    2020-01-13 22:41:52 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:41:52 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:41:52 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:52 0361     UNION
    2020-01-13 22:41:52 0362 
    2020-01-13 22:41:52 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:41:52 0364     FROM da_question dq
    2020-01-13 22:41:52 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0366     WHERE
    2020-01-13 22:41:52 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:41:52 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:41:52 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:41:52 0371     UNION   
    2020-01-13 22:41:52 0372     SELECT
    2020-01-13 22:41:52 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:41:52 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:52 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:52 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:41:52 0377     FROM da_question dq
    2020-01-13 22:41:52 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0379     WHERE
    2020-01-13 22:41:52 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:52 0382     UNION
    2020-01-13 22:41:52 0383 	SELECT
    2020-01-13 22:41:52 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:52 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:41:52 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:41:52 0387     FROM da_question dq
    2020-01-13 22:41:52 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:41:52 0389     WHERE
    2020-01-13 22:41:52 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:41:52 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:41:53      	2 fields found: oldnames, newnames, 
    2020-01-13 22:41:53      1,304 lines fetched
    2020-01-13 22:41:53 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:41:53 0394 DROP TABLE client_substanceusage
    2020-01-13 22:41:53 0396 LET varStepName='STEPEXIT_' & 40 & '_of_' & 50
    2020-01-13 22:41:53 0397 STEPEXIT_40_of_50: select 1
    2020-01-13 22:41:53      	1 fields found: ?column?, 
    2020-01-13 22:41:53      1 lines fetched
    2020-01-13 22:41:53 0398 DROP TABLE STEPEXIT_40_of_50
    2020-01-13 22:41:53 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:41:53 0401 NEXT
    2020-01-13 22:41:53 0228 LET varRecordSetTableName=Peek('sp_table_name',41,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:53 0229 LET varRecordSetQlikName=Peek('qlik_table_name',41,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:53 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',41,'RECORDSET_LIST_EXIT')
    2020-01-13 22:41:53 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_hud_currentlivingsituation') <= 20),'svp_hud_currentlivingsituation' & 'end_1',left('svp_hud_currentlivingsituation', 20)& 'end_1')
    2020-01-13 22:41:53 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_hud_currentlivingsituation' & 'enddate'
    2020-01-13 22:41:53 0233 LET varRecordSetQlikName_Entry= 'client_svp_hud_currentlivingsituation' & '_entry'
    2020-01-13 22:41:53 0234 LET varRecordSetQlikName_Exit='client_svp_hud_currentlivingsituation'& '_exit'
    2020-01-13 22:41:53 0236 LET varRecordSetQlikName_Interim='client_svp_hud_currentlivingsituation' & '_review'
    2020-01-13 22:41:53 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svp_hud_currentlivingsituation', (len('client_svp_hud_currentlivingsituation'))-7))
    2020-01-13 22:41:53 0239 client_svp_hud_currentlivingsituation:
    2020-01-13 22:41:53 0240   SELECT * FROM qlik_sclient_svp_hud_currentlivingsituation
    2020-01-13 22:41:54      	14 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, 
    2020-01-13 22:41:54      9,421 lines fetched
    2020-01-13 22:41:54 0243 client_svp_hud_currentlivingsituation_exit:
    2020-01-13 22:41:54 0244   Noconcatenate
    2020-01-13 22:41:54 0245   LOAD DISTINCT
    2020-01-13 22:41:54 0246   *,
    2020-01-13 22:41:54 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:41:54 0248   recordset_id AS 'client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_exit'
    2020-01-13 22:41:54 0249   RESIDENT client_svp_hud_currentlivingsituation
    2020-01-13 22:41:54      	16 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, %exit_recordset_id, client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_exit, 
    2020-01-13 22:41:54      9,421 lines fetched
    2020-01-13 22:41:54 0251 client_svp_hud_currentlivingsituation:
    2020-01-13 22:41:54 0252   SELECT * FROM qlik_sclient_svp_hud_currentlivingsituation
    2020-01-13 22:41:56      	14 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, 
    2020-01-13 22:41:56      18,842 lines fetched
    2020-01-13 22:41:56 0254 CustomEndFieldCheck:
    2020-01-13 22:41:56 0255   SELECT *
    2020-01-13 22:41:56 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_hud_currentlivinend_1'
    2020-01-13 22:41:56      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:41:56      0 lines fetched
    2020-01-13 22:41:56 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_hud_currentlivinend_1','svp_hud_currentlivingsituationenddate')
    2020-01-13 22:41:56 0262 RS_Exit:
    2020-01-13 22:41:56 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:56 0264   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:41:56 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:56 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:56 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:56 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:56 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:41:56 0270   WHERE 
    2020-01-13 22:41:56 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:41:56 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:56 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:41:56 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:41:56 0275   AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:41:56 0276                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:41:56 0277   
    2020-01-13 22:41:56 0278   UNION
    2020-01-13 22:41:56 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:41:56 0280   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:41:56 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:56 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:41:56 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:41:56 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:56 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:41:56 0286   WHERE 
    2020-01-13 22:41:56 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:41:56 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:41:56 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:41:56 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:41:56 0291   AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:41:56 0292                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:41:59      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:41:59      5,971 lines fetched
    2020-01-13 22:41:59 0296 RS_Exit_Explicit:
    2020-01-13 22:41:59 0297   Noconcatenate
    2020-01-13 22:41:59 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:41:59 0299   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:41:59 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:41:59 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:41:59 0302   WHERE 
    2020-01-13 22:41:59 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:41:59 0304   AND ((((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_hud_currentlivingsituationenddate::DATE IS NULL)) 
    2020-01-13 22:41:59 0305                    OR (((ft.svp_hud_currentlivingsituationstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_hud_currentlivingsituationenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_hud_currentlivingsituationenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:42:00      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:42:00      11,213 lines fetched
    2020-01-13 22:42:00 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:42:00 0310   LOAD
    2020-01-13 22:42:00 0311   entry_exit_id, 
    2020-01-13 22:42:00 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:42:00 0313   question_id as %exitquestionid,
    2020-01-13 22:42:00 0314   provider_creating_id
    2020-01-13 22:42:00 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:42:01      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:42:01      1,581,797 lines fetched
    2020-01-13 22:42:01 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:42:01 0318 INNER JOIN(client_svp_hud_currentlivingsituation_exit)
    2020-01-13 22:42:01 0319   LOAD DISTINCT
    2020-01-13 22:42:01 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:42:01 0321   recordset_id,
    2020-01-13 22:42:01 0322   provider_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Exit],
    2020-01-13 22:42:01 0323   name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Exit],
    2020-01-13 22:42:01 0324   user_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Exit],
    2020-01-13 22:42:01 0325   user_name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Exit]
    2020-01-13 22:42:01 0326   RESIDENT RS_Exit
    2020-01-13 22:42:01      	6 fields found: Entry Exit Id, recordset_id, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Exit, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Exit, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Exit, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Exit, 
    2020-01-13 22:42:01      5,971 lines fetched
    2020-01-13 22:42:01      Joining/Keeping
    2020-01-13 22:42:01 0328 DROP TABLE RS_Exit
    2020-01-13 22:42:01 0330 DROP FIELDS client_id FROM client_svp_hud_currentlivingsituation_exit
    2020-01-13 22:42:01 0331 DROP FIELDS recordset_id FROM client_svp_hud_currentlivingsituation_exit
    2020-01-13 22:42:01 0332 DROP FIELDS [Entry Exit Id] FROM client_svp_hud_currentlivingsituation_exit
    2020-01-13 22:42:01 0335 FieldMapSaClientExit:
    2020-01-13 22:42:01 0336   Mapping SQL
    2020-01-13 22:42:01 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:42:01 0338     FROM da_question dq
    2020-01-13 22:42:01 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0340     WHERE
    2020-01-13 22:42:01 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:42:01 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:42:01 0344     UNION
    2020-01-13 22:42:01 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:42:01 0346     FROM da_question dq
    2020-01-13 22:42:01 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0348     WHERE
    2020-01-13 22:42:01 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:42:01 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:42:01 0352      UNION
    2020-01-13 22:42:01 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:42:01 0354     FROM da_question dq
    2020-01-13 22:42:01 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0356     WHERE
    2020-01-13 22:42:01 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:42:01 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:42:01 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:42:01 0361     UNION
    2020-01-13 22:42:01 0362 
    2020-01-13 22:42:01 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:42:01 0364     FROM da_question dq
    2020-01-13 22:42:01 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0366     WHERE
    2020-01-13 22:42:01 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:42:01 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:42:01 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:42:01 0371     UNION   
    2020-01-13 22:42:01 0372     SELECT
    2020-01-13 22:42:01 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:42:01 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:42:01 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:42:01 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:42:01 0377     FROM da_question dq
    2020-01-13 22:42:01 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0379     WHERE
    2020-01-13 22:42:01 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:42:01 0382     UNION
    2020-01-13 22:42:01 0383 	SELECT
    2020-01-13 22:42:01 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:42:01 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:42:01 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:42:01 0387     FROM da_question dq
    2020-01-13 22:42:01 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:42:01 0389     WHERE
    2020-01-13 22:42:01 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:42:01 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:42:01      	2 fields found: oldnames, newnames, 
    2020-01-13 22:42:01      1,304 lines fetched
    2020-01-13 22:42:01 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:42:01 0394 DROP TABLE client_svp_hud_currentlivingsituation
    2020-01-13 22:42:01 0396 LET varStepName='STEPEXIT_' & 41 & '_of_' & 50
    2020-01-13 22:42:01 0397 STEPEXIT_41_of_50: select 1
    2020-01-13 22:42:02      	1 fields found: ?column?, 
    2020-01-13 22:42:02      1 lines fetched
    2020-01-13 22:42:02 0398 DROP TABLE STEPEXIT_41_of_50
    2020-01-13 22:42:02 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:42:02 0401 NEXT
    2020-01-13 22:42:02 0228 LET varRecordSetTableName=Peek('sp_table_name',42,'RECORDSET_LIST_EXIT')
    2020-01-13 22:42:02 0229 LET varRecordSetQlikName=Peek('qlik_table_name',42,'RECORDSET_LIST_EXIT')
    2020-01-13 22:42:02 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',42,'RECORDSET_LIST_EXIT')
    2020-01-13 22:42:02 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_noncashbenefits') <= 20),'svp_noncashbenefits' & 'end_1',left('svp_noncashbenefits', 20)& 'end_1')
    2020-01-13 22:42:02 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_noncashbenefits' & 'enddate'
    2020-01-13 22:42:02 0233 LET varRecordSetQlikName_Entry= 'client_svp_noncashbenefits' & '_entry'
    2020-01-13 22:42:02 0234 LET varRecordSetQlikName_Exit='client_svp_noncashbenefits'& '_exit'
    2020-01-13 22:42:02 0236 LET varRecordSetQlikName_Interim='client_svp_noncashbenefits' & '_review'
    2020-01-13 22:42:02 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svp_noncashbenefits', (len('client_svp_noncashbenefits'))-7))
    2020-01-13 22:42:02 0239 client_svp_noncashbenefits:
    2020-01-13 22:42:02 0240   SELECT * FROM qlik_sclient_svp_noncashbenefits
    2020-01-13 22:42:29      	9 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, 
    2020-01-13 22:42:29      454,272 lines fetched
    2020-01-13 22:42:29 0243 client_svp_noncashbenefits_exit:
    2020-01-13 22:42:29 0244   Noconcatenate
    2020-01-13 22:42:29 0245   LOAD DISTINCT
    2020-01-13 22:42:29 0246   *,
    2020-01-13 22:42:29 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:42:29 0248   recordset_id AS 'client_SVP_NONCASHBENEFITSRECORDSET_ID_exit'
    2020-01-13 22:42:29 0249   RESIDENT client_svp_noncashbenefits
    2020-01-13 22:42:30      	11 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, %exit_recordset_id, client_SVP_NONCASHBENEFITSRECORDSET_ID_exit, 
    2020-01-13 22:42:30      454,272 lines fetched
    2020-01-13 22:42:30 0251 client_svp_noncashbenefits:
    2020-01-13 22:42:30 0252   SELECT * FROM qlik_sclient_svp_noncashbenefits
    2020-01-13 22:42:58      	9 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, 
    2020-01-13 22:42:58      908,544 lines fetched
    2020-01-13 22:42:58 0254 CustomEndFieldCheck:
    2020-01-13 22:42:58 0255   SELECT *
    2020-01-13 22:42:58 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_noncashbenefitsend_1'
    2020-01-13 22:42:58      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:42:58      0 lines fetched
    2020-01-13 22:42:58 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_noncashbenefitsend_1','svp_noncashbenefitsenddate')
    2020-01-13 22:42:58 0262 RS_Exit:
    2020-01-13 22:42:58 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:42:58 0264   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:42:58 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:42:58 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:42:58 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:42:58 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:42:58 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:42:58 0270   WHERE 
    2020-01-13 22:42:58 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:42:58 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:42:58 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:42:58 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:42:58 0275   AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:42:58 0276                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:42:58 0277   
    2020-01-13 22:42:58 0278   UNION
    2020-01-13 22:42:58 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:42:58 0280   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:42:58 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:42:58 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:42:58 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:42:58 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:42:58 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:42:58 0286   WHERE 
    2020-01-13 22:42:58 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:42:58 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:42:58 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:42:58 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:42:58 0291   AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:42:58 0292                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:43:49      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:43:49      168,477 lines fetched
    2020-01-13 22:43:49 0296 RS_Exit_Explicit:
    2020-01-13 22:43:49 0297   Noconcatenate
    2020-01-13 22:43:49 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:43:49 0299   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:43:49 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:43:49 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:43:49 0302   WHERE 
    2020-01-13 22:43:49 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:43:49 0304   AND ((((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_noncashbenefitsenddate::DATE IS NULL)) 
    2020-01-13 22:43:49 0305                    OR (((ft.svp_noncashbenefitsstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_noncashbenefitsenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_noncashbenefitsenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:15      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:15      299,608 lines fetched
    2020-01-13 22:44:15 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:15 0310   LOAD
    2020-01-13 22:44:15 0311   entry_exit_id, 
    2020-01-13 22:44:15 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:15 0313   question_id as %exitquestionid,
    2020-01-13 22:44:15 0314   provider_creating_id
    2020-01-13 22:44:15 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:16      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:16      1,881,405 lines fetched
    2020-01-13 22:44:16 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:16 0318 INNER JOIN(client_svp_noncashbenefits_exit)
    2020-01-13 22:44:16 0319   LOAD DISTINCT
    2020-01-13 22:44:16 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:16 0321   recordset_id,
    2020-01-13 22:44:16 0322   provider_creating_id AS [client_SVP_NONCASHBENEFITS_Provider_Creating_Exit],
    2020-01-13 22:44:16 0323   name AS [client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Exit],
    2020-01-13 22:44:16 0324   user_creating_id AS [client_SVP_NONCASHBENEFITS_User_Created_By_Id_Exit],
    2020-01-13 22:44:16 0325   user_name AS [client_SVP_NONCASHBENEFITS_User_Created_By_Exit]
    2020-01-13 22:44:16 0326   RESIDENT RS_Exit
    2020-01-13 22:44:17      	6 fields found: Entry Exit Id, recordset_id, client_SVP_NONCASHBENEFITS_Provider_Creating_Exit, client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Exit, client_SVP_NONCASHBENEFITS_User_Created_By_Id_Exit, client_SVP_NONCASHBENEFITS_User_Created_By_Exit, 
    2020-01-13 22:44:17      168,477 lines fetched
    2020-01-13 22:44:17      Joining/Keeping
    2020-01-13 22:44:17 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:17 0330 DROP FIELDS client_id FROM client_svp_noncashbenefits_exit
    2020-01-13 22:44:18 0331 DROP FIELDS recordset_id FROM client_svp_noncashbenefits_exit
    2020-01-13 22:44:18 0332 DROP FIELDS [Entry Exit Id] FROM client_svp_noncashbenefits_exit
    2020-01-13 22:44:18 0335 FieldMapSaClientExit:
    2020-01-13 22:44:18 0336   Mapping SQL
    2020-01-13 22:44:18 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:18 0338     FROM da_question dq
    2020-01-13 22:44:18 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0340     WHERE
    2020-01-13 22:44:18 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:18 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:18 0344     UNION
    2020-01-13 22:44:18 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:18 0346     FROM da_question dq
    2020-01-13 22:44:18 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0348     WHERE
    2020-01-13 22:44:18 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:18 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:18 0352      UNION
    2020-01-13 22:44:18 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:18 0354     FROM da_question dq
    2020-01-13 22:44:18 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0356     WHERE
    2020-01-13 22:44:18 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:18 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:18 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:18 0361     UNION
    2020-01-13 22:44:18 0362 
    2020-01-13 22:44:18 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:18 0364     FROM da_question dq
    2020-01-13 22:44:18 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0366     WHERE
    2020-01-13 22:44:18 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:18 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:18 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:18 0371     UNION   
    2020-01-13 22:44:18 0372     SELECT
    2020-01-13 22:44:18 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:18 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:18 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:18 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:18 0377     FROM da_question dq
    2020-01-13 22:44:18 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0379     WHERE
    2020-01-13 22:44:18 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:18 0382     UNION
    2020-01-13 22:44:18 0383 	SELECT
    2020-01-13 22:44:18 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:18 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:18 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:18 0387     FROM da_question dq
    2020-01-13 22:44:18 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:18 0389     WHERE
    2020-01-13 22:44:18 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:18 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:18      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:18      1,304 lines fetched
    2020-01-13 22:44:18 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:18 0394 DROP TABLE client_svp_noncashbenefits
    2020-01-13 22:44:18 0396 LET varStepName='STEPEXIT_' & 42 & '_of_' & 50
    2020-01-13 22:44:18 0397 STEPEXIT_42_of_50: select 1
    2020-01-13 22:44:18      	1 fields found: ?column?, 
    2020-01-13 22:44:18      1 lines fetched
    2020-01-13 22:44:18 0398 DROP TABLE STEPEXIT_42_of_50
    2020-01-13 22:44:18 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:18 0401 NEXT
    2020-01-13 22:44:18 0228 LET varRecordSetTableName=Peek('sp_table_name',43,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:18 0229 LET varRecordSetQlikName=Peek('qlik_table_name',43,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:18 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',43,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:18 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_outreach') <= 20),'svp_outreach' & 'end_1',left('svp_outreach', 20)& 'end_1')
    2020-01-13 22:44:18 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_outreach' & 'enddate'
    2020-01-13 22:44:18 0233 LET varRecordSetQlikName_Entry= 'client_svp_outreach' & '_entry'
    2020-01-13 22:44:18 0234 LET varRecordSetQlikName_Exit='client_svp_outreach'& '_exit'
    2020-01-13 22:44:18 0236 LET varRecordSetQlikName_Interim='client_svp_outreach' & '_review'
    2020-01-13 22:44:18 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svp_outreach', (len('client_svp_outreach'))-7))
    2020-01-13 22:44:18 0239 client_svp_outreach:
    2020-01-13 22:44:18 0240   SELECT * FROM qlik_sclient_svp_outreach
    2020-01-13 22:44:19      	8 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, 
    2020-01-13 22:44:19      8,687 lines fetched
    2020-01-13 22:44:19 0243 client_svp_outreach_exit:
    2020-01-13 22:44:19 0244   Noconcatenate
    2020-01-13 22:44:19 0245   LOAD DISTINCT
    2020-01-13 22:44:19 0246   *,
    2020-01-13 22:44:19 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:19 0248   recordset_id AS 'client_SVP_OUTREACHRECORDSET_ID_exit'
    2020-01-13 22:44:19 0249   RESIDENT client_svp_outreach
    2020-01-13 22:44:19      	10 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, %exit_recordset_id, client_SVP_OUTREACHRECORDSET_ID_exit, 
    2020-01-13 22:44:19      8,687 lines fetched
    2020-01-13 22:44:19 0251 client_svp_outreach:
    2020-01-13 22:44:19 0252   SELECT * FROM qlik_sclient_svp_outreach
    2020-01-13 22:44:20      	8 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, 
    2020-01-13 22:44:20      17,374 lines fetched
    2020-01-13 22:44:20 0254 CustomEndFieldCheck:
    2020-01-13 22:44:20 0255   SELECT *
    2020-01-13 22:44:20 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_outreachend_1'
    2020-01-13 22:44:20      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:20      0 lines fetched
    2020-01-13 22:44:20 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_outreachend_1','svp_outreachenddate')
    2020-01-13 22:44:20 0262 RS_Exit:
    2020-01-13 22:44:20 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:20 0264   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:44:20 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:20 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:20 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:20 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:20 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:20 0270   WHERE 
    2020-01-13 22:44:20 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:20 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:20 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:20 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:20 0275   AND ((((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:44:20 0276                    OR (((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_outreachenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_outreachenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:20 0277   
    2020-01-13 22:44:20 0278   UNION
    2020-01-13 22:44:20 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:20 0280   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:44:20 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:20 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:20 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:20 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:20 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:20 0286   WHERE 
    2020-01-13 22:44:20 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:20 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:20 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:20 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:20 0291   AND ((((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:44:20 0292                    OR (((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_outreachenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_outreachenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:22      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:22      5,162 lines fetched
    2020-01-13 22:44:22 0296 RS_Exit_Explicit:
    2020-01-13 22:44:22 0297   Noconcatenate
    2020-01-13 22:44:22 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:22 0299   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:44:22 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:22 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:22 0302   WHERE 
    2020-01-13 22:44:22 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:22 0304   AND ((((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svp_outreachenddate::DATE IS NULL)) 
    2020-01-13 22:44:22 0305                    OR (((ft.svp_outreachstartdate::DATE <= ee.exit_date::DATE) OR ((ft.svp_outreachstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svp_outreachenddate::DATE >= ee.exit_date::DATE) OR ((ft.svp_outreachenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:23      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:23      9,930 lines fetched
    2020-01-13 22:44:23 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:23 0310   LOAD
    2020-01-13 22:44:23 0311   entry_exit_id, 
    2020-01-13 22:44:23 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:23 0313   question_id as %exitquestionid,
    2020-01-13 22:44:23 0314   provider_creating_id
    2020-01-13 22:44:23 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:23      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:23      1,891,335 lines fetched
    2020-01-13 22:44:23 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:23 0318 INNER JOIN(client_svp_outreach_exit)
    2020-01-13 22:44:23 0319   LOAD DISTINCT
    2020-01-13 22:44:23 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:23 0321   recordset_id,
    2020-01-13 22:44:23 0322   provider_creating_id AS [client_SVP_OUTREACH_Provider_Creating_Exit],
    2020-01-13 22:44:23 0323   name AS [client_SVP_OUTREACH_Provider_Name_Creating_Exit],
    2020-01-13 22:44:23 0324   user_creating_id AS [client_SVP_OUTREACH_User_Created_By_Id_Exit],
    2020-01-13 22:44:23 0325   user_name AS [client_SVP_OUTREACH_User_Created_By_Exit]
    2020-01-13 22:44:23 0326   RESIDENT RS_Exit
    2020-01-13 22:44:23      	6 fields found: Entry Exit Id, recordset_id, client_SVP_OUTREACH_Provider_Creating_Exit, client_SVP_OUTREACH_Provider_Name_Creating_Exit, client_SVP_OUTREACH_User_Created_By_Id_Exit, client_SVP_OUTREACH_User_Created_By_Exit, 
    2020-01-13 22:44:23      5,162 lines fetched
    2020-01-13 22:44:23      Joining/Keeping
    2020-01-13 22:44:23 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:23 0330 DROP FIELDS client_id FROM client_svp_outreach_exit
    2020-01-13 22:44:23 0331 DROP FIELDS recordset_id FROM client_svp_outreach_exit
    2020-01-13 22:44:23 0332 DROP FIELDS [Entry Exit Id] FROM client_svp_outreach_exit
    2020-01-13 22:44:23 0335 FieldMapSaClientExit:
    2020-01-13 22:44:23 0336   Mapping SQL
    2020-01-13 22:44:23 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:23 0338     FROM da_question dq
    2020-01-13 22:44:23 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0340     WHERE
    2020-01-13 22:44:23 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:23 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:23 0344     UNION
    2020-01-13 22:44:23 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:23 0346     FROM da_question dq
    2020-01-13 22:44:23 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0348     WHERE
    2020-01-13 22:44:23 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:23 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:23 0352      UNION
    2020-01-13 22:44:23 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:23 0354     FROM da_question dq
    2020-01-13 22:44:23 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0356     WHERE
    2020-01-13 22:44:23 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:23 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:23 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:23 0361     UNION
    2020-01-13 22:44:23 0362 
    2020-01-13 22:44:23 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:23 0364     FROM da_question dq
    2020-01-13 22:44:23 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0366     WHERE
    2020-01-13 22:44:23 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:23 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:23 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:23 0371     UNION   
    2020-01-13 22:44:23 0372     SELECT
    2020-01-13 22:44:23 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:23 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:23 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:23 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:23 0377     FROM da_question dq
    2020-01-13 22:44:23 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0379     WHERE
    2020-01-13 22:44:23 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:23 0382     UNION
    2020-01-13 22:44:23 0383 	SELECT
    2020-01-13 22:44:23 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:23 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:23 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:23 0387     FROM da_question dq
    2020-01-13 22:44:23 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:23 0389     WHERE
    2020-01-13 22:44:23 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:23 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:24      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:24      1,304 lines fetched
    2020-01-13 22:44:24 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:24 0394 DROP TABLE client_svp_outreach
    2020-01-13 22:44:24 0396 LET varStepName='STEPEXIT_' & 43 & '_of_' & 50
    2020-01-13 22:44:24 0397 STEPEXIT_43_of_50: select 1
    2020-01-13 22:44:24      	1 fields found: ?column?, 
    2020-01-13 22:44:24      1 lines fetched
    2020-01-13 22:44:24 0398 DROP TABLE STEPEXIT_43_of_50
    2020-01-13 22:44:24 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:24 0401 NEXT
    2020-01-13 22:44:24 0228 LET varRecordSetTableName=Peek('sp_table_name',44,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:24 0229 LET varRecordSetQlikName=Peek('qlik_table_name',44,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:24 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',44,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:24 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svptayvispdatv1_0_suba') <= 20),'svptayvispdatv1_0_suba' & 'end_1',left('svptayvispdatv1_0_suba', 20)& 'end_1')
    2020-01-13 22:44:24 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svptayvispdatv1_0_suba' & 'enddate'
    2020-01-13 22:44:24 0233 LET varRecordSetQlikName_Entry= 'client_svptayvispdatv1_0_suba' & '_entry'
    2020-01-13 22:44:24 0234 LET varRecordSetQlikName_Exit='client_svptayvispdatv1_0_suba'& '_exit'
    2020-01-13 22:44:24 0236 LET varRecordSetQlikName_Interim='client_svptayvispdatv1_0_suba' & '_review'
    2020-01-13 22:44:24 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svptayvispdatv1_0_suba', (len('client_svptayvispdatv1_0_suba'))-7))
    2020-01-13 22:44:24 0239 client_svptayvispdatv1_0_suba:
    2020-01-13 22:44:24 0240   SELECT * FROM qlik_sclient_svptayvispdatv1_0_suba
    2020-01-13 22:44:24      	51 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, 
    2020-01-13 22:44:24      292 lines fetched
    2020-01-13 22:44:24 0243 client_svptayvispdatv1_0_suba_exit:
    2020-01-13 22:44:24 0244   Noconcatenate
    2020-01-13 22:44:24 0245   LOAD DISTINCT
    2020-01-13 22:44:24 0246   *,
    2020-01-13 22:44:24 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:24 0248   recordset_id AS 'client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_exit'
    2020-01-13 22:44:24 0249   RESIDENT client_svptayvispdatv1_0_suba
    2020-01-13 22:44:24      	53 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, %exit_recordset_id, client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_exit, 
    2020-01-13 22:44:24      292 lines fetched
    2020-01-13 22:44:24 0251 client_svptayvispdatv1_0_suba:
    2020-01-13 22:44:24 0252   SELECT * FROM qlik_sclient_svptayvispdatv1_0_suba
    2020-01-13 22:44:25      	51 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, 
    2020-01-13 22:44:25      584 lines fetched
    2020-01-13 22:44:25 0254 CustomEndFieldCheck:
    2020-01-13 22:44:25 0255   SELECT *
    2020-01-13 22:44:25 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svptayvispdatv1_0_suend_1'
    2020-01-13 22:44:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:25      0 lines fetched
    2020-01-13 22:44:25 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svptayvispdatv1_0_suend_1','svptayvispdatv1_0_subaenddate')
    2020-01-13 22:44:25 0262 RS_Exit:
    2020-01-13 22:44:25 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:25 0264   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:44:25 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:25 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:25 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:25 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:25 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:25 0270   WHERE 
    2020-01-13 22:44:25 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:25 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:25 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:25 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:25 0275   AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:25 0276                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:25 0277   
    2020-01-13 22:44:25 0278   UNION
    2020-01-13 22:44:25 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:25 0280   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:44:25 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:25 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:25 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:25 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:25 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:25 0286   WHERE 
    2020-01-13 22:44:25 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:25 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:25 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:25 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:25 0291   AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:25 0292                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:26      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:26      339 lines fetched
    2020-01-13 22:44:26 0296 RS_Exit_Explicit:
    2020-01-13 22:44:26 0297   Noconcatenate
    2020-01-13 22:44:26 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:26 0299   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:44:26 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:26 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:26 0302   WHERE 
    2020-01-13 22:44:26 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:26 0304   AND ((((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svptayvispdatv1_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:26 0305                    OR (((ft.svptayvispdatv1_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svptayvispdatv1_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svptayvispdatv1_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:26      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:26      527 lines fetched
    2020-01-13 22:44:26 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:26 0310   LOAD
    2020-01-13 22:44:26 0311   entry_exit_id, 
    2020-01-13 22:44:26 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:26 0313   question_id as %exitquestionid,
    2020-01-13 22:44:26 0314   provider_creating_id
    2020-01-13 22:44:26 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:26      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:26      1,891,862 lines fetched
    2020-01-13 22:44:26 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:26 0318 INNER JOIN(client_svptayvispdatv1_0_suba_exit)
    2020-01-13 22:44:26 0319   LOAD DISTINCT
    2020-01-13 22:44:26 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:26 0321   recordset_id,
    2020-01-13 22:44:26 0322   provider_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Exit],
    2020-01-13 22:44:26 0323   name AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Exit],
    2020-01-13 22:44:26 0324   user_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Exit],
    2020-01-13 22:44:26 0325   user_name AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Exit]
    2020-01-13 22:44:26 0326   RESIDENT RS_Exit
    2020-01-13 22:44:26      	6 fields found: Entry Exit Id, recordset_id, client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Exit, client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Exit, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Exit, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Exit, 
    2020-01-13 22:44:26      339 lines fetched
    2020-01-13 22:44:26      Joining/Keeping
    2020-01-13 22:44:27 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:27 0330 DROP FIELDS client_id FROM client_svptayvispdatv1_0_suba_exit
    2020-01-13 22:44:27 0331 DROP FIELDS recordset_id FROM client_svptayvispdatv1_0_suba_exit
    2020-01-13 22:44:27 0332 DROP FIELDS [Entry Exit Id] FROM client_svptayvispdatv1_0_suba_exit
    2020-01-13 22:44:27 0335 FieldMapSaClientExit:
    2020-01-13 22:44:27 0336   Mapping SQL
    2020-01-13 22:44:27 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:27 0338     FROM da_question dq
    2020-01-13 22:44:27 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0340     WHERE
    2020-01-13 22:44:27 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:27 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:27 0344     UNION
    2020-01-13 22:44:27 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:27 0346     FROM da_question dq
    2020-01-13 22:44:27 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0348     WHERE
    2020-01-13 22:44:27 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:27 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:27 0352      UNION
    2020-01-13 22:44:27 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:27 0354     FROM da_question dq
    2020-01-13 22:44:27 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0356     WHERE
    2020-01-13 22:44:27 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:27 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:27 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:27 0361     UNION
    2020-01-13 22:44:27 0362 
    2020-01-13 22:44:27 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:27 0364     FROM da_question dq
    2020-01-13 22:44:27 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0366     WHERE
    2020-01-13 22:44:27 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:27 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:27 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:27 0371     UNION   
    2020-01-13 22:44:27 0372     SELECT
    2020-01-13 22:44:27 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:27 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:27 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:27 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:27 0377     FROM da_question dq
    2020-01-13 22:44:27 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0379     WHERE
    2020-01-13 22:44:27 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:27 0382     UNION
    2020-01-13 22:44:27 0383 	SELECT
    2020-01-13 22:44:27 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:27 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:27 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:27 0387     FROM da_question dq
    2020-01-13 22:44:27 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:27 0389     WHERE
    2020-01-13 22:44:27 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:27 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:27      1,304 lines fetched
    2020-01-13 22:44:27 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:27 0394 DROP TABLE client_svptayvispdatv1_0_suba
    2020-01-13 22:44:27 0396 LET varStepName='STEPEXIT_' & 44 & '_of_' & 50
    2020-01-13 22:44:27 0397 STEPEXIT_44_of_50: select 1
    2020-01-13 22:44:27      	1 fields found: ?column?, 
    2020-01-13 22:44:27      1 lines fetched
    2020-01-13 22:44:27 0398 DROP TABLE STEPEXIT_44_of_50
    2020-01-13 22:44:27 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:27 0401 NEXT
    2020-01-13 22:44:27 0228 LET varRecordSetTableName=Peek('sp_table_name',45,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:27 0229 LET varRecordSetQlikName=Peek('qlik_table_name',45,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:27 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',45,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:27 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvifspdatv2_0_suba') <= 20),'svpvifspdatv2_0_suba' & 'end_1',left('svpvifspdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:44:27 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvifspdatv2_0_suba' & 'enddate'
    2020-01-13 22:44:27 0233 LET varRecordSetQlikName_Entry= 'client_svpvifspdatv2_0_suba' & '_entry'
    2020-01-13 22:44:27 0234 LET varRecordSetQlikName_Exit='client_svpvifspdatv2_0_suba'& '_exit'
    2020-01-13 22:44:27 0236 LET varRecordSetQlikName_Interim='client_svpvifspdatv2_0_suba' & '_review'
    2020-01-13 22:44:27 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svpvifspdatv2_0_suba', (len('client_svpvifspdatv2_0_suba'))-7))
    2020-01-13 22:44:27 0239 client_svpvifspdatv2_0_suba:
    2020-01-13 22:44:27 0240   SELECT * FROM qlik_sclient_svpvifspdatv2_0_suba
    2020-01-13 22:44:28      	65 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, 
    2020-01-13 22:44:28      849 lines fetched
    2020-01-13 22:44:28 0243 client_svpvifspdatv2_0_suba_exit:
    2020-01-13 22:44:28 0244   Noconcatenate
    2020-01-13 22:44:28 0245   LOAD DISTINCT
    2020-01-13 22:44:28 0246   *,
    2020-01-13 22:44:28 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:28 0248   recordset_id AS 'client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_exit'
    2020-01-13 22:44:28 0249   RESIDENT client_svpvifspdatv2_0_suba
    2020-01-13 22:44:28      	67 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, %exit_recordset_id, client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_exit, 
    2020-01-13 22:44:28      849 lines fetched
    2020-01-13 22:44:28 0251 client_svpvifspdatv2_0_suba:
    2020-01-13 22:44:28 0252   SELECT * FROM qlik_sclient_svpvifspdatv2_0_suba
    2020-01-13 22:44:29      	65 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, 
    2020-01-13 22:44:29      1,698 lines fetched
    2020-01-13 22:44:29 0254 CustomEndFieldCheck:
    2020-01-13 22:44:29 0255   SELECT *
    2020-01-13 22:44:29 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvifspdatv2_0_subaend_1'
    2020-01-13 22:44:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:30      0 lines fetched
    2020-01-13 22:44:30 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvifspdatv2_0_subaend_1','svpvifspdatv2_0_subaenddate')
    2020-01-13 22:44:30 0262 RS_Exit:
    2020-01-13 22:44:30 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:30 0264   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:44:30 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:30 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:30 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:30 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:30 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:30 0270   WHERE 
    2020-01-13 22:44:30 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:30 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:30 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:30 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:30 0275   AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:30 0276                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:30 0277   
    2020-01-13 22:44:30 0278   UNION
    2020-01-13 22:44:30 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:30 0280   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:44:30 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:30 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:30 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:30 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:30 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:30 0286   WHERE 
    2020-01-13 22:44:30 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:30 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:30 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:30 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:30 0291   AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:30 0292                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:31      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:31      796 lines fetched
    2020-01-13 22:44:31 0296 RS_Exit_Explicit:
    2020-01-13 22:44:31 0297   Noconcatenate
    2020-01-13 22:44:31 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:31 0299   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:44:31 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:31 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:31 0302   WHERE 
    2020-01-13 22:44:31 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:31 0304   AND ((((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvifspdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:31 0305                    OR (((ft.svpvifspdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvifspdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvifspdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:32      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:32      2,024 lines fetched
    2020-01-13 22:44:32 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:32 0310   LOAD
    2020-01-13 22:44:32 0311   entry_exit_id, 
    2020-01-13 22:44:32 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:32 0313   question_id as %exitquestionid,
    2020-01-13 22:44:32 0314   provider_creating_id
    2020-01-13 22:44:32 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:32      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:32      1,893,886 lines fetched
    2020-01-13 22:44:32 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:32 0318 INNER JOIN(client_svpvifspdatv2_0_suba_exit)
    2020-01-13 22:44:32 0319   LOAD DISTINCT
    2020-01-13 22:44:32 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:32 0321   recordset_id,
    2020-01-13 22:44:32 0322   provider_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Exit],
    2020-01-13 22:44:32 0323   name AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Exit],
    2020-01-13 22:44:32 0324   user_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Exit],
    2020-01-13 22:44:32 0325   user_name AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Exit]
    2020-01-13 22:44:32 0326   RESIDENT RS_Exit
    2020-01-13 22:44:32      	6 fields found: Entry Exit Id, recordset_id, client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Exit, client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Exit, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Exit, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Exit, 
    2020-01-13 22:44:32      796 lines fetched
    2020-01-13 22:44:32      Joining/Keeping
    2020-01-13 22:44:33 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:33 0330 DROP FIELDS client_id FROM client_svpvifspdatv2_0_suba_exit
    2020-01-13 22:44:33 0331 DROP FIELDS recordset_id FROM client_svpvifspdatv2_0_suba_exit
    2020-01-13 22:44:33 0332 DROP FIELDS [Entry Exit Id] FROM client_svpvifspdatv2_0_suba_exit
    2020-01-13 22:44:33 0335 FieldMapSaClientExit:
    2020-01-13 22:44:33 0336   Mapping SQL
    2020-01-13 22:44:33 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:33 0338     FROM da_question dq
    2020-01-13 22:44:33 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0340     WHERE
    2020-01-13 22:44:33 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:33 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:33 0344     UNION
    2020-01-13 22:44:33 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:33 0346     FROM da_question dq
    2020-01-13 22:44:33 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0348     WHERE
    2020-01-13 22:44:33 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:33 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:33 0352      UNION
    2020-01-13 22:44:33 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:33 0354     FROM da_question dq
    2020-01-13 22:44:33 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0356     WHERE
    2020-01-13 22:44:33 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:33 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:33 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:33 0361     UNION
    2020-01-13 22:44:33 0362 
    2020-01-13 22:44:33 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:33 0364     FROM da_question dq
    2020-01-13 22:44:33 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0366     WHERE
    2020-01-13 22:44:33 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:33 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:33 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:33 0371     UNION   
    2020-01-13 22:44:33 0372     SELECT
    2020-01-13 22:44:33 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:33 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:33 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:33 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:33 0377     FROM da_question dq
    2020-01-13 22:44:33 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0379     WHERE
    2020-01-13 22:44:33 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:33 0382     UNION
    2020-01-13 22:44:33 0383 	SELECT
    2020-01-13 22:44:33 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:33 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:33 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:33 0387     FROM da_question dq
    2020-01-13 22:44:33 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:33 0389     WHERE
    2020-01-13 22:44:33 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:33 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:33      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:33      1,304 lines fetched
    2020-01-13 22:44:33 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:33 0394 DROP TABLE client_svpvifspdatv2_0_suba
    2020-01-13 22:44:33 0396 LET varStepName='STEPEXIT_' & 45 & '_of_' & 50
    2020-01-13 22:44:33 0397 STEPEXIT_45_of_50: select 1
    2020-01-13 22:44:33      	1 fields found: ?column?, 
    2020-01-13 22:44:33      1 lines fetched
    2020-01-13 22:44:33 0398 DROP TABLE STEPEXIT_45_of_50
    2020-01-13 22:44:33 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:33 0401 NEXT
    2020-01-13 22:44:33 0228 LET varRecordSetTableName=Peek('sp_table_name',46,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:33 0229 LET varRecordSetQlikName=Peek('qlik_table_name',46,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:33 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',46,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:33 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvispdatv2_0_suba') <= 20),'svpvispdatv2_0_suba' & 'end_1',left('svpvispdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:44:33 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvispdatv2_0_suba' & 'enddate'
    2020-01-13 22:44:33 0233 LET varRecordSetQlikName_Entry= 'client_svpvispdatv2_0_suba' & '_entry'
    2020-01-13 22:44:33 0234 LET varRecordSetQlikName_Exit='client_svpvispdatv2_0_suba'& '_exit'
    2020-01-13 22:44:33 0236 LET varRecordSetQlikName_Interim='client_svpvispdatv2_0_suba' & '_review'
    2020-01-13 22:44:33 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_svpvispdatv2_0_suba', (len('client_svpvispdatv2_0_suba'))-7))
    2020-01-13 22:44:33 0239 client_svpvispdatv2_0_suba:
    2020-01-13 22:44:33 0240   SELECT * FROM qlik_sclient_svpvispdatv2_0_suba
    2020-01-13 22:44:36      	45 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, 
    2020-01-13 22:44:36      4,059 lines fetched
    2020-01-13 22:44:36 0243 client_svpvispdatv2_0_suba_exit:
    2020-01-13 22:44:36 0244   Noconcatenate
    2020-01-13 22:44:36 0245   LOAD DISTINCT
    2020-01-13 22:44:36 0246   *,
    2020-01-13 22:44:36 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:36 0248   recordset_id AS 'client_SVPVISPDATV2_0_SUBARECORDSET_ID_exit'
    2020-01-13 22:44:36 0249   RESIDENT client_svpvispdatv2_0_suba
    2020-01-13 22:44:36      	47 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, %exit_recordset_id, client_SVPVISPDATV2_0_SUBARECORDSET_ID_exit, 
    2020-01-13 22:44:36      4,059 lines fetched
    2020-01-13 22:44:36 0251 client_svpvispdatv2_0_suba:
    2020-01-13 22:44:36 0252   SELECT * FROM qlik_sclient_svpvispdatv2_0_suba
    2020-01-13 22:44:38      	45 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, 
    2020-01-13 22:44:38      8,118 lines fetched
    2020-01-13 22:44:38 0254 CustomEndFieldCheck:
    2020-01-13 22:44:38 0255   SELECT *
    2020-01-13 22:44:38 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvispdatv2_0_subaend_1'
    2020-01-13 22:44:39      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:39      0 lines fetched
    2020-01-13 22:44:39 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvispdatv2_0_subaend_1','svpvispdatv2_0_subaenddate')
    2020-01-13 22:44:39 0262 RS_Exit:
    2020-01-13 22:44:39 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:39 0264   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:44:39 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:39 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:39 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:39 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:39 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:39 0270   WHERE 
    2020-01-13 22:44:39 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:39 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:39 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:39 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:39 0275   AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:39 0276                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:39 0277   
    2020-01-13 22:44:39 0278   UNION
    2020-01-13 22:44:39 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:39 0280   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:44:39 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:39 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:39 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:39 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:39 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:39 0286   WHERE 
    2020-01-13 22:44:39 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:39 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:39 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:39 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:39 0291   AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:39 0292                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:43      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:43      4,146 lines fetched
    2020-01-13 22:44:43 0296 RS_Exit_Explicit:
    2020-01-13 22:44:43 0297   Noconcatenate
    2020-01-13 22:44:43 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:43 0299   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:44:43 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:43 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:43 0302   WHERE 
    2020-01-13 22:44:43 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:43 0304   AND ((((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.svpvispdatv2_0_subaenddate::DATE IS NULL)) 
    2020-01-13 22:44:43 0305                    OR (((ft.svpvispdatv2_0_subastartdate::DATE <= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subastartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.svpvispdatv2_0_subaenddate::DATE >= ee.exit_date::DATE) OR ((ft.svpvispdatv2_0_subaenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:46      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:46      9,708 lines fetched
    2020-01-13 22:44:46 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:46 0310   LOAD
    2020-01-13 22:44:46 0311   entry_exit_id, 
    2020-01-13 22:44:46 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:46 0313   question_id as %exitquestionid,
    2020-01-13 22:44:46 0314   provider_creating_id
    2020-01-13 22:44:46 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:46      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:46      1,903,594 lines fetched
    2020-01-13 22:44:46 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:46 0318 INNER JOIN(client_svpvispdatv2_0_suba_exit)
    2020-01-13 22:44:46 0319   LOAD DISTINCT
    2020-01-13 22:44:46 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:46 0321   recordset_id,
    2020-01-13 22:44:46 0322   provider_creating_id AS [client_SVPVISPDATV2_0_SUBA_Provider_Creating_Exit],
    2020-01-13 22:44:46 0323   name AS [client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Exit],
    2020-01-13 22:44:46 0324   user_creating_id AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Exit],
    2020-01-13 22:44:46 0325   user_name AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Exit]
    2020-01-13 22:44:46 0326   RESIDENT RS_Exit
    2020-01-13 22:44:46      	6 fields found: Entry Exit Id, recordset_id, client_SVPVISPDATV2_0_SUBA_Provider_Creating_Exit, client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Exit, client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Exit, client_SVPVISPDATV2_0_SUBA_User_Created_By_Exit, 
    2020-01-13 22:44:46      4,146 lines fetched
    2020-01-13 22:44:46      Joining/Keeping
    2020-01-13 22:44:46 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:46 0330 DROP FIELDS client_id FROM client_svpvispdatv2_0_suba_exit
    2020-01-13 22:44:46 0331 DROP FIELDS recordset_id FROM client_svpvispdatv2_0_suba_exit
    2020-01-13 22:44:46 0332 DROP FIELDS [Entry Exit Id] FROM client_svpvispdatv2_0_suba_exit
    2020-01-13 22:44:47 0335 FieldMapSaClientExit:
    2020-01-13 22:44:47 0336   Mapping SQL
    2020-01-13 22:44:47 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:47 0338     FROM da_question dq
    2020-01-13 22:44:47 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0340     WHERE
    2020-01-13 22:44:47 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:47 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:47 0344     UNION
    2020-01-13 22:44:47 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:47 0346     FROM da_question dq
    2020-01-13 22:44:47 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0348     WHERE
    2020-01-13 22:44:47 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:47 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:47 0352      UNION
    2020-01-13 22:44:47 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:47 0354     FROM da_question dq
    2020-01-13 22:44:47 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0356     WHERE
    2020-01-13 22:44:47 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:47 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:47 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:47 0361     UNION
    2020-01-13 22:44:47 0362 
    2020-01-13 22:44:47 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:47 0364     FROM da_question dq
    2020-01-13 22:44:47 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0366     WHERE
    2020-01-13 22:44:47 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:47 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:47 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:47 0371     UNION   
    2020-01-13 22:44:47 0372     SELECT
    2020-01-13 22:44:47 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:47 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:47 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:47 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:47 0377     FROM da_question dq
    2020-01-13 22:44:47 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0379     WHERE
    2020-01-13 22:44:47 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:47 0382     UNION
    2020-01-13 22:44:47 0383 	SELECT
    2020-01-13 22:44:47 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:47 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:47 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:47 0387     FROM da_question dq
    2020-01-13 22:44:47 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:47 0389     WHERE
    2020-01-13 22:44:47 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:47 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:47      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:47      1,304 lines fetched
    2020-01-13 22:44:47 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:47 0394 DROP TABLE client_svpvispdatv2_0_suba
    2020-01-13 22:44:47 0396 LET varStepName='STEPEXIT_' & 46 & '_of_' & 50
    2020-01-13 22:44:47 0397 STEPEXIT_46_of_50: select 1
    2020-01-13 22:44:47      	1 fields found: ?column?, 
    2020-01-13 22:44:47      1 lines fetched
    2020-01-13 22:44:47 0398 DROP TABLE STEPEXIT_46_of_50
    2020-01-13 22:44:47 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:47 0401 NEXT
    2020-01-13 22:44:47 0228 LET varRecordSetTableName=Peek('sp_table_name',47,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:47 0229 LET varRecordSetQlikName=Peek('qlik_table_name',47,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:47 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',47,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:47 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('thoughtcontent') <= 20),'thoughtcontent' & 'end_1',left('thoughtcontent', 20)& 'end_1')
    2020-01-13 22:44:47 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'thoughtcontent' & 'enddate'
    2020-01-13 22:44:47 0233 LET varRecordSetQlikName_Entry= 'client_thoughtcontent' & '_entry'
    2020-01-13 22:44:47 0234 LET varRecordSetQlikName_Exit='client_thoughtcontent'& '_exit'
    2020-01-13 22:44:47 0236 LET varRecordSetQlikName_Interim='client_thoughtcontent' & '_review'
    2020-01-13 22:44:47 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_thoughtcontent', (len('client_thoughtcontent'))-7))
    2020-01-13 22:44:47 0239 client_thoughtcontent:
    2020-01-13 22:44:47 0240   SELECT * FROM qlik_sclient_thoughtcontent
    2020-01-13 22:44:47      	10 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, 
    2020-01-13 22:44:47      2,124 lines fetched
    2020-01-13 22:44:47 0243 client_thoughtcontent_exit:
    2020-01-13 22:44:47 0244   Noconcatenate
    2020-01-13 22:44:47 0245   LOAD DISTINCT
    2020-01-13 22:44:47 0246   *,
    2020-01-13 22:44:47 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:47 0248   recordset_id AS 'client_THOUGHTCONTENTRECORDSET_ID_exit'
    2020-01-13 22:44:47 0249   RESIDENT client_thoughtcontent
    2020-01-13 22:44:48      	12 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, %exit_recordset_id, client_THOUGHTCONTENTRECORDSET_ID_exit, 
    2020-01-13 22:44:48      2,124 lines fetched
    2020-01-13 22:44:48 0251 client_thoughtcontent:
    2020-01-13 22:44:48 0252   SELECT * FROM qlik_sclient_thoughtcontent
    2020-01-13 22:44:48      	10 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, 
    2020-01-13 22:44:48      4,248 lines fetched
    2020-01-13 22:44:48 0254 CustomEndFieldCheck:
    2020-01-13 22:44:48 0255   SELECT *
    2020-01-13 22:44:48 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'thoughtcontentend_1'
    2020-01-13 22:44:48      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:48      0 lines fetched
    2020-01-13 22:44:48 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'thoughtcontentend_1','thoughtcontentenddate')
    2020-01-13 22:44:48 0262 RS_Exit:
    2020-01-13 22:44:48 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:48 0264   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:44:48 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:48 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:48 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:48 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:48 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:48 0270   WHERE 
    2020-01-13 22:44:48 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:48 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:48 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:48 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:48 0275   AND ((((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:44:48 0276                    OR (((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.thoughtcontentenddate::DATE >= ee.exit_date::DATE) OR ((ft.thoughtcontentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:48 0277   
    2020-01-13 22:44:48 0278   UNION
    2020-01-13 22:44:48 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:48 0280   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:44:48 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:48 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:48 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:48 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:48 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:48 0286   WHERE 
    2020-01-13 22:44:48 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:48 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:48 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:48 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:48 0291   AND ((((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:44:48 0292                    OR (((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.thoughtcontentenddate::DATE >= ee.exit_date::DATE) OR ((ft.thoughtcontentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:49      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:49      314 lines fetched
    2020-01-13 22:44:49 0296 RS_Exit_Explicit:
    2020-01-13 22:44:49 0297   Noconcatenate
    2020-01-13 22:44:49 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:49 0299   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:44:49 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:49 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:49 0302   WHERE 
    2020-01-13 22:44:49 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:49 0304   AND ((((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.thoughtcontentenddate::DATE IS NULL)) 
    2020-01-13 22:44:49 0305                    OR (((ft.thoughtcontentstartdate::DATE <= ee.exit_date::DATE) OR ((ft.thoughtcontentstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.thoughtcontentenddate::DATE >= ee.exit_date::DATE) OR ((ft.thoughtcontentenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:50      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:50      1,531 lines fetched
    2020-01-13 22:44:50 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:50 0310   LOAD
    2020-01-13 22:44:50 0311   entry_exit_id, 
    2020-01-13 22:44:50 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:50 0313   question_id as %exitquestionid,
    2020-01-13 22:44:50 0314   provider_creating_id
    2020-01-13 22:44:50 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:50      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:50      1,905,125 lines fetched
    2020-01-13 22:44:50 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:50 0318 INNER JOIN(client_thoughtcontent_exit)
    2020-01-13 22:44:50 0319   LOAD DISTINCT
    2020-01-13 22:44:50 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:50 0321   recordset_id,
    2020-01-13 22:44:50 0322   provider_creating_id AS [client_THOUGHTCONTENT_Provider_Creating_Exit],
    2020-01-13 22:44:50 0323   name AS [client_THOUGHTCONTENT_Provider_Name_Creating_Exit],
    2020-01-13 22:44:50 0324   user_creating_id AS [client_THOUGHTCONTENT_User_Created_By_Id_Exit],
    2020-01-13 22:44:50 0325   user_name AS [client_THOUGHTCONTENT_User_Created_By_Exit]
    2020-01-13 22:44:50 0326   RESIDENT RS_Exit
    2020-01-13 22:44:50      	6 fields found: Entry Exit Id, recordset_id, client_THOUGHTCONTENT_Provider_Creating_Exit, client_THOUGHTCONTENT_Provider_Name_Creating_Exit, client_THOUGHTCONTENT_User_Created_By_Id_Exit, client_THOUGHTCONTENT_User_Created_By_Exit, 
    2020-01-13 22:44:50      314 lines fetched
    2020-01-13 22:44:50      Joining/Keeping
    2020-01-13 22:44:50 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:50 0330 DROP FIELDS client_id FROM client_thoughtcontent_exit
    2020-01-13 22:44:50 0331 DROP FIELDS recordset_id FROM client_thoughtcontent_exit
    2020-01-13 22:44:50 0332 DROP FIELDS [Entry Exit Id] FROM client_thoughtcontent_exit
    2020-01-13 22:44:50 0335 FieldMapSaClientExit:
    2020-01-13 22:44:50 0336   Mapping SQL
    2020-01-13 22:44:50 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:50 0338     FROM da_question dq
    2020-01-13 22:44:50 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0340     WHERE
    2020-01-13 22:44:50 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:50 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:50 0344     UNION
    2020-01-13 22:44:50 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:50 0346     FROM da_question dq
    2020-01-13 22:44:50 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0348     WHERE
    2020-01-13 22:44:50 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:50 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:50 0352      UNION
    2020-01-13 22:44:50 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:50 0354     FROM da_question dq
    2020-01-13 22:44:50 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0356     WHERE
    2020-01-13 22:44:50 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:50 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:50 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:50 0361     UNION
    2020-01-13 22:44:50 0362 
    2020-01-13 22:44:50 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:50 0364     FROM da_question dq
    2020-01-13 22:44:50 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0366     WHERE
    2020-01-13 22:44:50 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:50 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:50 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:50 0371     UNION   
    2020-01-13 22:44:50 0372     SELECT
    2020-01-13 22:44:50 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:50 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:50 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:50 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:50 0377     FROM da_question dq
    2020-01-13 22:44:50 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0379     WHERE
    2020-01-13 22:44:50 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:50 0382     UNION
    2020-01-13 22:44:50 0383 	SELECT
    2020-01-13 22:44:50 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:50 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:50 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:50 0387     FROM da_question dq
    2020-01-13 22:44:50 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:50 0389     WHERE
    2020-01-13 22:44:50 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:50 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:50      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:50      1,304 lines fetched
    2020-01-13 22:44:50 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:51 0394 DROP TABLE client_thoughtcontent
    2020-01-13 22:44:51 0396 LET varStepName='STEPEXIT_' & 47 & '_of_' & 50
    2020-01-13 22:44:51 0397 STEPEXIT_47_of_50: select 1
    2020-01-13 22:44:51      	1 fields found: ?column?, 
    2020-01-13 22:44:51      1 lines fetched
    2020-01-13 22:44:51 0398 DROP TABLE STEPEXIT_47_of_50
    2020-01-13 22:44:51 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:51 0401 NEXT
    2020-01-13 22:44:51 0228 LET varRecordSetTableName=Peek('sp_table_name',48,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:51 0229 LET varRecordSetQlikName=Peek('qlik_table_name',48,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:51 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',48,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:51 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('waitliststatus') <= 20),'waitliststatus' & 'end_1',left('waitliststatus', 20)& 'end_1')
    2020-01-13 22:44:51 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'waitliststatus' & 'enddate'
    2020-01-13 22:44:51 0233 LET varRecordSetQlikName_Entry= 'client_waitliststatus' & '_entry'
    2020-01-13 22:44:51 0234 LET varRecordSetQlikName_Exit='client_waitliststatus'& '_exit'
    2020-01-13 22:44:51 0236 LET varRecordSetQlikName_Interim='client_waitliststatus' & '_review'
    2020-01-13 22:44:51 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_waitliststatus', (len('client_waitliststatus'))-7))
    2020-01-13 22:44:51 0239 client_waitliststatus:
    2020-01-13 22:44:51 0240   SELECT * FROM qlik_sclient_waitliststatus
    2020-01-13 22:44:51      	12 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, 
    2020-01-13 22:44:51      1,224 lines fetched
    2020-01-13 22:44:51 0243 client_waitliststatus_exit:
    2020-01-13 22:44:51 0244   Noconcatenate
    2020-01-13 22:44:51 0245   LOAD DISTINCT
    2020-01-13 22:44:51 0246   *,
    2020-01-13 22:44:51 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:51 0248   recordset_id AS 'client_WAITLISTSTATUSRECORDSET_ID_exit'
    2020-01-13 22:44:51 0249   RESIDENT client_waitliststatus
    2020-01-13 22:44:51      	14 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, %exit_recordset_id, client_WAITLISTSTATUSRECORDSET_ID_exit, 
    2020-01-13 22:44:51      1,224 lines fetched
    2020-01-13 22:44:51 0251 client_waitliststatus:
    2020-01-13 22:44:51 0252   SELECT * FROM qlik_sclient_waitliststatus
    2020-01-13 22:44:52      	12 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, 
    2020-01-13 22:44:52      2,448 lines fetched
    2020-01-13 22:44:52 0254 CustomEndFieldCheck:
    2020-01-13 22:44:52 0255   SELECT *
    2020-01-13 22:44:52 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'waitliststatusend_1'
    2020-01-13 22:44:52      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:44:52      0 lines fetched
    2020-01-13 22:44:52 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'waitliststatusend_1','waitliststatusenddate')
    2020-01-13 22:44:52 0262 RS_Exit:
    2020-01-13 22:44:52 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:52 0264   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:44:52 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:52 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:52 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:52 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:52 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:44:52 0270   WHERE 
    2020-01-13 22:44:52 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:44:52 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:52 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:44:52 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:44:52 0275   AND ((((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:44:52 0276                    OR (((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.waitliststatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.waitliststatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:44:52 0277   
    2020-01-13 22:44:52 0278   UNION
    2020-01-13 22:44:52 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:44:52 0280   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:44:52 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:52 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:44:52 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:44:52 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:52 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:44:52 0286   WHERE 
    2020-01-13 22:44:52 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:44:52 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:44:52 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:44:52 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:44:52 0291   AND ((((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:44:52 0292                    OR (((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.waitliststatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.waitliststatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:53      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:44:53      291 lines fetched
    2020-01-13 22:44:53 0296 RS_Exit_Explicit:
    2020-01-13 22:44:53 0297   Noconcatenate
    2020-01-13 22:44:53 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:44:53 0299   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:44:53 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:44:53 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:44:53 0302   WHERE 
    2020-01-13 22:44:53 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:44:53 0304   AND ((((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.waitliststatusenddate::DATE IS NULL)) 
    2020-01-13 22:44:53 0305                    OR (((ft.waitliststatusstartdate::DATE <= ee.exit_date::DATE) OR ((ft.waitliststatusstartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.waitliststatusenddate::DATE >= ee.exit_date::DATE) OR ((ft.waitliststatusenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:44:53      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:44:53      536 lines fetched
    2020-01-13 22:44:53 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:44:53 0310   LOAD
    2020-01-13 22:44:53 0311   entry_exit_id, 
    2020-01-13 22:44:53 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:53 0313   question_id as %exitquestionid,
    2020-01-13 22:44:53 0314   provider_creating_id
    2020-01-13 22:44:53 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:44:53      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:44:53      1,905,661 lines fetched
    2020-01-13 22:44:53 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:44:53 0318 INNER JOIN(client_waitliststatus_exit)
    2020-01-13 22:44:53 0319   LOAD DISTINCT
    2020-01-13 22:44:53 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:44:53 0321   recordset_id,
    2020-01-13 22:44:53 0322   provider_creating_id AS [client_WAITLISTSTATUS_Provider_Creating_Exit],
    2020-01-13 22:44:53 0323   name AS [client_WAITLISTSTATUS_Provider_Name_Creating_Exit],
    2020-01-13 22:44:53 0324   user_creating_id AS [client_WAITLISTSTATUS_User_Created_By_Id_Exit],
    2020-01-13 22:44:53 0325   user_name AS [client_WAITLISTSTATUS_User_Created_By_Exit]
    2020-01-13 22:44:53 0326   RESIDENT RS_Exit
    2020-01-13 22:44:53      	6 fields found: Entry Exit Id, recordset_id, client_WAITLISTSTATUS_Provider_Creating_Exit, client_WAITLISTSTATUS_Provider_Name_Creating_Exit, client_WAITLISTSTATUS_User_Created_By_Id_Exit, client_WAITLISTSTATUS_User_Created_By_Exit, 
    2020-01-13 22:44:53      291 lines fetched
    2020-01-13 22:44:53      Joining/Keeping
    2020-01-13 22:44:54 0328 DROP TABLE RS_Exit
    2020-01-13 22:44:54 0330 DROP FIELDS client_id FROM client_waitliststatus_exit
    2020-01-13 22:44:54 0331 DROP FIELDS recordset_id FROM client_waitliststatus_exit
    2020-01-13 22:44:54 0332 DROP FIELDS [Entry Exit Id] FROM client_waitliststatus_exit
    2020-01-13 22:44:54 0335 FieldMapSaClientExit:
    2020-01-13 22:44:54 0336   Mapping SQL
    2020-01-13 22:44:54 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:54 0338     FROM da_question dq
    2020-01-13 22:44:54 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0340     WHERE
    2020-01-13 22:44:54 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:44:54 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:44:54 0344     UNION
    2020-01-13 22:44:54 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:54 0346     FROM da_question dq
    2020-01-13 22:44:54 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0348     WHERE
    2020-01-13 22:44:54 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:44:54 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:44:54 0352      UNION
    2020-01-13 22:44:54 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:44:54 0354     FROM da_question dq
    2020-01-13 22:44:54 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0356     WHERE
    2020-01-13 22:44:54 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:44:54 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:44:54 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:54 0361     UNION
    2020-01-13 22:44:54 0362 
    2020-01-13 22:44:54 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:44:54 0364     FROM da_question dq
    2020-01-13 22:44:54 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0366     WHERE
    2020-01-13 22:44:54 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:44:54 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:44:54 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:44:54 0371     UNION   
    2020-01-13 22:44:54 0372     SELECT
    2020-01-13 22:44:54 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:44:54 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:54 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:54 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:44:54 0377     FROM da_question dq
    2020-01-13 22:44:54 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0379     WHERE
    2020-01-13 22:44:54 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:54 0382     UNION
    2020-01-13 22:44:54 0383 	SELECT
    2020-01-13 22:44:54 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:54 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:44:54 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:44:54 0387     FROM da_question dq
    2020-01-13 22:44:54 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:44:54 0389     WHERE
    2020-01-13 22:44:54 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:44:54 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:44:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:44:54      1,304 lines fetched
    2020-01-13 22:44:54 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:44:54 0394 DROP TABLE client_waitliststatus
    2020-01-13 22:44:54 0396 LET varStepName='STEPEXIT_' & 48 & '_of_' & 50
    2020-01-13 22:44:54 0397 STEPEXIT_48_of_50: select 1
    2020-01-13 22:44:54      	1 fields found: ?column?, 
    2020-01-13 22:44:54      1 lines fetched
    2020-01-13 22:44:54 0398 DROP TABLE STEPEXIT_48_of_50
    2020-01-13 22:44:54 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:44:54 0401 NEXT
    2020-01-13 22:44:54 0228 LET varRecordSetTableName=Peek('sp_table_name',49,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:54 0229 LET varRecordSetQlikName=Peek('qlik_table_name',49,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:54 0230 LET varRecordSetTableNameOnly=Peek('table_name_only',49,'RECORDSET_LIST_EXIT')
    2020-01-13 22:44:54 0231 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('workhistory') <= 20),'workhistory' & 'end_1',left('workhistory', 20)& 'end_1')
    2020-01-13 22:44:54 0232 LET varRecordSetTableNameOnlyTruncEndDate = 'workhistory' & 'enddate'
    2020-01-13 22:44:54 0233 LET varRecordSetQlikName_Entry= 'client_workhistory' & '_entry'
    2020-01-13 22:44:54 0234 LET varRecordSetQlikName_Exit='client_workhistory'& '_exit'
    2020-01-13 22:44:54 0236 LET varRecordSetQlikName_Interim='client_workhistory' & '_review'
    2020-01-13 22:44:54 0237 LET varRecordSetQlikName_Ucase_Exit=Upper(right('client_workhistory', (len('client_workhistory'))-7))
    2020-01-13 22:44:54 0239 client_workhistory:
    2020-01-13 22:44:54 0240   SELECT * FROM qlik_sclient_workhistory
    2020-01-13 22:44:57      	18 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, 
    2020-01-13 22:44:57      21,428 lines fetched
    2020-01-13 22:44:57 0243 client_workhistory_exit:
    2020-01-13 22:44:57 0244   Noconcatenate
    2020-01-13 22:44:57 0245   LOAD DISTINCT
    2020-01-13 22:44:57 0246   *,
    2020-01-13 22:44:57 0247   recordset_id as %exit_recordset_id,
    2020-01-13 22:44:57 0248   recordset_id AS 'client_WORKHISTORYRECORDSET_ID_exit'
    2020-01-13 22:44:57 0249   RESIDENT client_workhistory
    2020-01-13 22:44:58      	20 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, %exit_recordset_id, client_WORKHISTORYRECORDSET_ID_exit, 
    2020-01-13 22:44:58      21,428 lines fetched
    2020-01-13 22:44:58 0251 client_workhistory:
    2020-01-13 22:44:58 0252   SELECT * FROM qlik_sclient_workhistory
    2020-01-13 22:45:01      	18 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, 
    2020-01-13 22:45:01      42,856 lines fetched
    2020-01-13 22:45:01 0254 CustomEndFieldCheck:
    2020-01-13 22:45:01 0255   SELECT *
    2020-01-13 22:45:01 0256   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'workhistoryend_1'
    2020-01-13 22:45:01      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:45:01      0 lines fetched
    2020-01-13 22:45:01 0259 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'workhistoryend_1','workhistoryenddate')
    2020-01-13 22:45:01 0262 RS_Exit:
    2020-01-13 22:45:01 0263   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:45:01 0264   FROM qlik_sclient_workhistory ft
    2020-01-13 22:45:01 0265   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:45:01 0266   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:45:01 0267   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:45:01 0268   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:45:01 0269   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:45:01 0270   WHERE 
    2020-01-13 22:45:01 0271   --(dr.date_effective >= '2019-01-01')AND
    2020-01-13 22:45:01 0272   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:45:01 0273   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:45:01 0274   --AND (ee.exit_date IS NOT NULL) 
    2020-01-13 22:45:01 0275   AND ((((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:45:01 0276                    OR (((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.workhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.workhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))		
    2020-01-13 22:45:01 0277   
    2020-01-13 22:45:01 0278   UNION
    2020-01-13 22:45:01 0279   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,dr.question_id
    2020-01-13 22:45:01 0280   FROM qlik_sclient_workhistory ft
    2020-01-13 22:45:01 0281   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:45:01 0282   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:45:01 0283   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:45:01 0284   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:45:01 0285   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:45:01 0286   WHERE 
    2020-01-13 22:45:01 0287   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:45:01 0288   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:45:01 0289   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:45:01 0290   -- AND (ee.exit_date IS NOT NULL)  
    2020-01-13 22:45:01 0291   AND ((((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:45:01 0292                    OR (((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.workhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.workhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:45:07      	7 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, question_id, 
    2020-01-13 22:45:07      1,317 lines fetched
    2020-01-13 22:45:07 0296 RS_Exit_Explicit:
    2020-01-13 22:45:07 0297   Noconcatenate
    2020-01-13 22:45:07 0298   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.question_id,dr.provider_creating_id
    2020-01-13 22:45:07 0299   FROM qlik_sclient_workhistory ft
    2020-01-13 22:45:07 0300   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:45:07 0301   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:45:07 0302   WHERE 
    2020-01-13 22:45:07 0303   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01')) 
    2020-01-13 22:45:07 0304   AND ((((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now())AND (ee.exit_date IS NULL)))) AND (ft.workhistoryenddate::DATE IS NULL)) 
    2020-01-13 22:45:07 0305                    OR (((ft.workhistorystartdate::DATE <= ee.exit_date::DATE) OR ((ft.workhistorystartdate::DATE <= date(now()) AND (ee.exit_date IS NULL))))  AND ((ft.workhistoryenddate::DATE >= ee.exit_date::DATE) OR ((ft.workhistoryenddate::DATE >= date(now()))AND (ee.exit_date IS NULL)))))
    2020-01-13 22:45:10      	4 fields found: entry_exit_id, recordset_id, question_id, provider_creating_id, 
    2020-01-13 22:45:10      3,315 lines fetched
    2020-01-13 22:45:10 0309 CONCATENATE(Recordset_security_exit)
    2020-01-13 22:45:10 0310   LOAD
    2020-01-13 22:45:10 0311   entry_exit_id, 
    2020-01-13 22:45:10 0312   recordset_id as %exit_recordset_id,
    2020-01-13 22:45:10 0313   question_id as %exitquestionid,
    2020-01-13 22:45:10 0314   provider_creating_id
    2020-01-13 22:45:10 0315   RESIDENT RS_Exit_Explicit
    2020-01-13 22:45:11      	4 fields found: entry_exit_id, %exit_recordset_id, %exitquestionid, provider_creating_id, 
    2020-01-13 22:45:11      1,908,976 lines fetched
    2020-01-13 22:45:11 0316 DROP TABLE RS_Exit_Explicit
    2020-01-13 22:45:11 0318 INNER JOIN(client_workhistory_exit)
    2020-01-13 22:45:11 0319   LOAD DISTINCT
    2020-01-13 22:45:11 0320   entry_exit_id AS [Entry Exit Id],
    2020-01-13 22:45:11 0321   recordset_id,
    2020-01-13 22:45:11 0322   provider_creating_id AS [client_WORKHISTORY_Provider_Creating_Exit],
    2020-01-13 22:45:11 0323   name AS [client_WORKHISTORY_Provider_Name_Creating_Exit],
    2020-01-13 22:45:11 0324   user_creating_id AS [client_WORKHISTORY_User_Created_By_Id_Exit],
    2020-01-13 22:45:11 0325   user_name AS [client_WORKHISTORY_User_Created_By_Exit]
    2020-01-13 22:45:11 0326   RESIDENT RS_Exit
    2020-01-13 22:45:11      	6 fields found: Entry Exit Id, recordset_id, client_WORKHISTORY_Provider_Creating_Exit, client_WORKHISTORY_Provider_Name_Creating_Exit, client_WORKHISTORY_User_Created_By_Id_Exit, client_WORKHISTORY_User_Created_By_Exit, 
    2020-01-13 22:45:11      1,317 lines fetched
    2020-01-13 22:45:11      Joining/Keeping
    2020-01-13 22:45:11 0328 DROP TABLE RS_Exit
    2020-01-13 22:45:11 0330 DROP FIELDS client_id FROM client_workhistory_exit
    2020-01-13 22:45:11 0331 DROP FIELDS recordset_id FROM client_workhistory_exit
    2020-01-13 22:45:11 0332 DROP FIELDS [Entry Exit Id] FROM client_workhistory_exit
    2020-01-13 22:45:11 0335 FieldMapSaClientExit:
    2020-01-13 22:45:11 0336   Mapping SQL
    2020-01-13 22:45:11 0337     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:45:11 0338     FROM da_question dq
    2020-01-13 22:45:11 0339     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0340     WHERE
    2020-01-13 22:45:11 0341       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0342       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:45:11 0343       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:45:11 0344     UNION
    2020-01-13 22:45:11 0345     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:45:11 0346     FROM da_question dq
    2020-01-13 22:45:11 0347     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0348     WHERE
    2020-01-13 22:45:11 0349       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0350       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:45:11 0351       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:45:11 0352      UNION
    2020-01-13 22:45:11 0353      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_exit'  AS newnames  
    2020-01-13 22:45:11 0354     FROM da_question dq
    2020-01-13 22:45:11 0355     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0356     WHERE
    2020-01-13 22:45:11 0357       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0358       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:45:11 0359       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:45:11 0360           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:45:11 0361     UNION
    2020-01-13 22:45:11 0362 
    2020-01-13 22:45:11 0363     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_exit'  AS newnames  
    2020-01-13 22:45:11 0364     FROM da_question dq
    2020-01-13 22:45:11 0365     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0366     WHERE
    2020-01-13 22:45:11 0367       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0368       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:45:11 0369       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:45:11 0370           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:45:11 0371     UNION   
    2020-01-13 22:45:11 0372     SELECT
    2020-01-13 22:45:11 0373     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:45:11 0374 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:45:11 0375 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:45:11 0376     END AS oldnames, 'client_' || dq.virt_field_name || '_exit' AS newnames 
    2020-01-13 22:45:11 0377     FROM da_question dq
    2020-01-13 22:45:11 0378     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0379     WHERE
    2020-01-13 22:45:11 0380       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0381 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:45:11 0382     UNION
    2020-01-13 22:45:11 0383 	SELECT
    2020-01-13 22:45:11 0384     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:45:11 0385 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:45:11 0386     END AS oldnames, 'client_' || dq.virt_field_name || '1_exit' AS newnames 
    2020-01-13 22:45:11 0387     FROM da_question dq
    2020-01-13 22:45:11 0388     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:45:11 0389     WHERE
    2020-01-13 22:45:11 0390       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:45:11 0391 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:45:11      	2 fields found: oldnames, newnames, 
    2020-01-13 22:45:11      1,304 lines fetched
    2020-01-13 22:45:11 0392 Rename Fields using FieldMapSaClientExit
    2020-01-13 22:45:12 0394 DROP TABLE client_workhistory
    2020-01-13 22:45:12 0396 LET varStepName='STEPEXIT_' & 49 & '_of_' & 50
    2020-01-13 22:45:12 0397 STEPEXIT_49_of_50: select 1
    2020-01-13 22:45:12      	1 fields found: ?column?, 
    2020-01-13 22:45:12      1 lines fetched
    2020-01-13 22:45:12 0398 DROP TABLE STEPEXIT_49_of_50
    2020-01-13 22:45:12 0399 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:45:12 0401 NEXT
  2020-01-13 22:45:12 0403 DROP TABLE RECORDSET_LIST_EXIT
  2020-01-13 22:45:12 0407 DROP_ANSWER_VIEWS:
  2020-01-13 22:45:12 0408 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:45:12      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:45:12      1 lines fetched
  2020-01-13 22:45:12 0410 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:45:12 0088 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:45:12 0089 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:45:12      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:45:12      1 lines fetched
  2020-01-13 22:45:12 0004 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:45:12 0007 BUILD_RECORDSET_VIEWS:                 
  2020-01-13 22:45:12 0008 SELECT qlik_flatten_all_suba_view('1/01/2019')
  2020-01-13 22:45:16      	1 fields found: qlik_flatten_all_suba_view, 
  2020-01-13 22:45:16      1 lines fetched
  2020-01-13 22:45:16 0010 DROP TABLE BUILD_RECORDSET_VIEWS
  2020-01-13 22:45:16 0013 RECORDSET_LIST_INTERIM:
  2020-01-13 22:45:16 0014 
  2020-01-13 22:45:16 0015 SELECT table_name AS sp_table_name, 'client_' || SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS qlik_table_name,  SUBSTRING(table_name, 14, CHAR_LENGTH(table_name)) AS table_name_only
  2020-01-13 22:45:16 0016 FROM information_schema.tables
  2020-01-13 22:45:16 0017 WHERE table_name ILIKE 'qlik_sclient_%'
  2020-01-13 22:45:16 0018 ORDER BY table_name
  2020-01-13 22:45:16      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:45:16      50 lines fetched
  2020-01-13 22:45:16 0021 LET NumRows=NoOfRows('RECORDSET_LIST_INTERIM')
  2020-01-13 22:45:16 0023 FOR i=0 to 50-1
    2020-01-13 22:45:16 0025 LET varRecordSetTableName=Peek('sp_table_name',0,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:45:16 0026 LET varRecordSetQlikName=Peek('qlik_table_name',0,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:45:16 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',0,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:45:16 0029 LET varRecordSetQlikName_Interim='client_address_1' & '_review'
    2020-01-13 22:45:16 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('address_1') <= 20),'address_1' & 'end_1',left('address_1', 20)& 'end_1')
    2020-01-13 22:45:16 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'address_1' & 'enddate'
    2020-01-13 22:45:16 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_address_1', (len('client_address_1'))-7))
    2020-01-13 22:45:16 0034 client_address_1:
    2020-01-13 22:45:16 0035   SELECT * FROM qlik_sclient_address_1
    2020-01-13 22:45:41      	18 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, 
    2020-01-13 22:45:41      128,827 lines fetched
    2020-01-13 22:45:41 0038 client_address_1_review:
    2020-01-13 22:45:41 0039   Noconcatenate
    2020-01-13 22:45:41 0040   LOAD DISTINCT
    2020-01-13 22:45:41 0041   *,
    2020-01-13 22:45:41 0042   recordset_id AS 'client_ADDRESS_1RECORDSET_ID_review'
    2020-01-13 22:45:41 0043   RESIDENT client_address_1
    2020-01-13 22:45:42      	19 fields found: recordset_id, client_id, address_1startdate, address_1enddate, alternatecontact, cellphonenumber_1, clientsapartmentnumber, clientscity, clientsresidencenotes, clientszip_1, countyofresidence, dupageemailaddress_1, homephonenumber_1, addresstype, clientsstate, hud_addressdataqual, townshipoptional, streetaddress, client_ADDRESS_1RECORDSET_ID_review, 
    2020-01-13 22:45:42      128,827 lines fetched
    2020-01-13 22:45:42 0045 CustomEndFieldCheck:
    2020-01-13 22:45:42 0046   SELECT *
    2020-01-13 22:45:42 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'address_1end_1'
    2020-01-13 22:45:42      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:45:42      0 lines fetched
    2020-01-13 22:45:42 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'address_1end_1','address_1enddate')
    2020-01-13 22:45:42 0053 RS_Interim:
    2020-01-13 22:45:42 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:45:42 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:45:42 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:45:42 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:45:42 0058 	eer.entry_exit_review_id
    2020-01-13 22:45:42 0059   FROM qlik_sclient_address_1 ft
    2020-01-13 22:45:42 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:45:42 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:45:42 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:45:42 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:45:42 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:45:42 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:45:42 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:45:42 0067   WHERE 
    2020-01-13 22:45:42 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:45:42 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:45:42 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:45:42 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:45:42 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:45:42 0073     AND (ft.address_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:45:42 0074     AND ((ft.address_1enddate::DATE IS NULL) OR (ft.address_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:45:42 0075   UNION
    2020-01-13 22:45:42 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:45:42 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:45:42 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:45:42 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:45:42 0080     eer.entry_exit_review_id	
    2020-01-13 22:45:42 0081   FROM qlik_sclient_address_1 ft
    2020-01-13 22:45:42 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:45:42 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:45:42 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:45:42 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:45:42 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:45:42 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:45:42 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:45:42 0089   WHERE 
    2020-01-13 22:45:42 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:45:42 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:45:42 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:45:42 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:45:42 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:45:42 0095     AND (ft.address_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:45:42 0096     AND ((ft.address_1enddate::DATE IS NULL) OR (ft.address_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:30      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:30      9,112 lines fetched
    2020-01-13 22:46:30 0099 INNER JOIN(client_address_1_review)
    2020-01-13 22:46:30 0100   LOAD DISTINCT
    2020-01-13 22:46:30 0101   recordset_id,
    2020-01-13 22:46:30 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:30 0103   provider_creating_id AS [client_ADDRESS_1_Provider_Creating_Review],
    2020-01-13 22:46:30 0104   name AS [client_ADDRESS_1_Provider_Name_Creating_Review],
    2020-01-13 22:46:30 0105   user_creating_id AS [client_ADDRESS_1_User_Created_By_Id_Review],
    2020-01-13 22:46:30 0106   user_name AS [client_ADDRESS_1_User_Created_By_Review]
    2020-01-13 22:46:30 0107   RESIDENT RS_Interim
    2020-01-13 22:46:30      	6 fields found: recordset_id, Entry Exit Review Id, client_ADDRESS_1_Provider_Creating_Review, client_ADDRESS_1_Provider_Name_Creating_Review, client_ADDRESS_1_User_Created_By_Id_Review, client_ADDRESS_1_User_Created_By_Review, 
    2020-01-13 22:46:30      9,112 lines fetched
    2020-01-13 22:46:30      Joining/Keeping
    2020-01-13 22:46:30 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:30 0110   Noconcatenate
    2020-01-13 22:46:30 0111   LOAD DISTINCT
    2020-01-13 22:46:30 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:30 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:30 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:30 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:30 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:30 0117   RESIDENT RS_Interim
    2020-01-13 22:46:30      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:30      8,266 lines fetched
    2020-01-13 22:46:30 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:30 0121   LOAD
    2020-01-13 22:46:30 0122  [Entry Exit Id],
    2020-01-13 22:46:30 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:30 0124  [Entry Exit Review Type],
    2020-01-13 22:46:30 0125  [Entry Exit Review Date],
    2020-01-13 22:46:30 0126  [Entry Exit Review Id]
    2020-01-13 22:46:30 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:30 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:30      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:30      14,583 lines fetched
    2020-01-13 22:46:30 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:30 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:30 0135 DROP FIELDS client_id FROM client_address_1_review
    2020-01-13 22:46:30 0136 DROP FIELDS recordset_id FROM client_address_1_review
    2020-01-13 22:46:30 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:30 0140   Mapping SQL
    2020-01-13 22:46:30 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:30 0142     FROM da_question dq
    2020-01-13 22:46:30 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0144     WHERE
    2020-01-13 22:46:30 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:30 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:30 0148     UNION
    2020-01-13 22:46:30 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:30 0150     FROM da_question dq
    2020-01-13 22:46:30 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0152     WHERE
    2020-01-13 22:46:30 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:30 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:30 0156      UNION
    2020-01-13 22:46:30 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:30 0158     FROM da_question dq
    2020-01-13 22:46:30 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0160     WHERE
    2020-01-13 22:46:30 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:30 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:30 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:30 0165     UNION
    2020-01-13 22:46:30 0166 
    2020-01-13 22:46:30 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:30 0168     FROM da_question dq
    2020-01-13 22:46:30 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0170     WHERE
    2020-01-13 22:46:30 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:30 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:30 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:30 0175     UNION   
    2020-01-13 22:46:30 0176     SELECT
    2020-01-13 22:46:30 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:30 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:30 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:30 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:30 0181     FROM da_question dq
    2020-01-13 22:46:30 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0183     WHERE
    2020-01-13 22:46:30 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:30 0186     UNION
    2020-01-13 22:46:30 0187 	SELECT
    2020-01-13 22:46:30 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:30 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:30 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:30 0191     FROM da_question dq
    2020-01-13 22:46:30 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:30 0193     WHERE
    2020-01-13 22:46:30 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:30 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:31      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:31      1,304 lines fetched
    2020-01-13 22:46:31 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:31 0198 DROP TABLE client_address_1
    2020-01-13 22:46:31 0200 LET varStepName='STEPINTERIM_' & 0 & '_of_' & 50
    2020-01-13 22:46:31 0201 STEPINTERIM_0_of_50: select 1
    2020-01-13 22:46:31      	1 fields found: ?column?, 
    2020-01-13 22:46:31      1 lines fetched
    2020-01-13 22:46:31 0202 DROP TABLE STEPINTERIM_0_of_50
    2020-01-13 22:46:31 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:31 0205 NEXT
    2020-01-13 22:46:31 0025 LET varRecordSetTableName=Peek('sp_table_name',1,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:31 0026 LET varRecordSetQlikName=Peek('qlik_table_name',1,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:31 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',1,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:31 0029 LET varRecordSetQlikName_Interim='client_agesstagesquestionnai' & '_review'
    2020-01-13 22:46:31 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('agesstagesquestionnai') <= 20),'agesstagesquestionnai' & 'end_1',left('agesstagesquestionnai', 20)& 'end_1')
    2020-01-13 22:46:31 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'agesstagesquestionnai' & 'enddate'
    2020-01-13 22:46:31 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_agesstagesquestionnai', (len('client_agesstagesquestionnai'))-7))
    2020-01-13 22:46:31 0034 client_agesstagesquestionnai:
    2020-01-13 22:46:31 0035   SELECT * FROM qlik_sclient_agesstagesquestionnai
    2020-01-13 22:46:31      	9 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, 
    2020-01-13 22:46:31      244 lines fetched
    2020-01-13 22:46:31 0038 client_agesstagesquestionnai_review:
    2020-01-13 22:46:31 0039   Noconcatenate
    2020-01-13 22:46:31 0040   LOAD DISTINCT
    2020-01-13 22:46:31 0041   *,
    2020-01-13 22:46:31 0042   recordset_id AS 'client_AGESSTAGESQUESTIONNAIRECORDSET_ID_review'
    2020-01-13 22:46:31 0043   RESIDENT client_agesstagesquestionnai
    2020-01-13 22:46:31      	10 fields found: recordset_id, client_id, agesstagesquestionnaistartdate, agesstagesquestionnaienddate, communication_1, finemotor, grossmotor, personalsocial, problemsolving, client_AGESSTAGESQUESTIONNAIRECORDSET_ID_review, 
    2020-01-13 22:46:31      244 lines fetched
    2020-01-13 22:46:31 0045 CustomEndFieldCheck:
    2020-01-13 22:46:31 0046   SELECT *
    2020-01-13 22:46:31 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'agesstagesquestionnaend_1'
    2020-01-13 22:46:31      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:46:31      0 lines fetched
    2020-01-13 22:46:31 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'agesstagesquestionnaend_1','agesstagesquestionnaienddate')
    2020-01-13 22:46:31 0053 RS_Interim:
    2020-01-13 22:46:31 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:31 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:31 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:31 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:46:31 0058 	eer.entry_exit_review_id
    2020-01-13 22:46:31 0059   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:46:31 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:31 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:31 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:31 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:31 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:31 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:31 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:46:31 0067   WHERE 
    2020-01-13 22:46:31 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:46:31 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:31 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:31 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:31 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:46:31 0073     AND (ft.agesstagesquestionnaistartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:31 0074     AND ((ft.agesstagesquestionnaienddate::DATE IS NULL) OR (ft.agesstagesquestionnaienddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:31 0075   UNION
    2020-01-13 22:46:31 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:31 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:31 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:31 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:46:31 0080     eer.entry_exit_review_id	
    2020-01-13 22:46:31 0081   FROM qlik_sclient_agesstagesquestionnai ft
    2020-01-13 22:46:31 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:31 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:31 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:31 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:31 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:31 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:31 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:46:31 0089   WHERE 
    2020-01-13 22:46:31 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:46:31 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:31 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:31 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:31 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:46:31 0095     AND (ft.agesstagesquestionnaistartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:31 0096     AND ((ft.agesstagesquestionnaienddate::DATE IS NULL) OR (ft.agesstagesquestionnaienddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:32      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:32      0 lines fetched
    2020-01-13 22:46:32 0099 INNER JOIN(client_agesstagesquestionnai_review)
    2020-01-13 22:46:32 0100   LOAD DISTINCT
    2020-01-13 22:46:32 0101   recordset_id,
    2020-01-13 22:46:32 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:32 0103   provider_creating_id AS [client_AGESSTAGESQUESTIONNAI_Provider_Creating_Review],
    2020-01-13 22:46:32 0104   name AS [client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Review],
    2020-01-13 22:46:32 0105   user_creating_id AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Review],
    2020-01-13 22:46:32 0106   user_name AS [client_AGESSTAGESQUESTIONNAI_User_Created_By_Review]
    2020-01-13 22:46:32 0107   RESIDENT RS_Interim
    2020-01-13 22:46:32      	6 fields found: recordset_id, Entry Exit Review Id, client_AGESSTAGESQUESTIONNAI_Provider_Creating_Review, client_AGESSTAGESQUESTIONNAI_Provider_Name_Creating_Review, client_AGESSTAGESQUESTIONNAI_User_Created_By_Id_Review, client_AGESSTAGESQUESTIONNAI_User_Created_By_Review, 
    2020-01-13 22:46:32      0 lines fetched
    2020-01-13 22:46:32      Joining/Keeping
    2020-01-13 22:46:32 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:32 0110   Noconcatenate
    2020-01-13 22:46:32 0111   LOAD DISTINCT
    2020-01-13 22:46:32 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:32 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:32 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:32 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:32 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:32 0117   RESIDENT RS_Interim
    2020-01-13 22:46:32      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:32      0 lines fetched
    2020-01-13 22:46:32 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:32 0121   LOAD
    2020-01-13 22:46:32 0122  [Entry Exit Id],
    2020-01-13 22:46:32 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:32 0124  [Entry Exit Review Type],
    2020-01-13 22:46:32 0125  [Entry Exit Review Date],
    2020-01-13 22:46:32 0126  [Entry Exit Review Id]
    2020-01-13 22:46:32 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:32 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:32      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:32      14,583 lines fetched
    2020-01-13 22:46:32 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:32 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:32 0135 DROP FIELDS client_id FROM client_agesstagesquestionnai_review
    2020-01-13 22:46:32 0136 DROP FIELDS recordset_id FROM client_agesstagesquestionnai_review
    2020-01-13 22:46:32 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:32 0140   Mapping SQL
    2020-01-13 22:46:32 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:32 0142     FROM da_question dq
    2020-01-13 22:46:32 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0144     WHERE
    2020-01-13 22:46:32 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:32 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:32 0148     UNION
    2020-01-13 22:46:32 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:32 0150     FROM da_question dq
    2020-01-13 22:46:32 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0152     WHERE
    2020-01-13 22:46:32 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:32 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:32 0156      UNION
    2020-01-13 22:46:32 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:32 0158     FROM da_question dq
    2020-01-13 22:46:32 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0160     WHERE
    2020-01-13 22:46:32 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:32 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:32 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:32 0165     UNION
    2020-01-13 22:46:32 0166 
    2020-01-13 22:46:32 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:32 0168     FROM da_question dq
    2020-01-13 22:46:32 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0170     WHERE
    2020-01-13 22:46:32 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:32 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:32 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:32 0175     UNION   
    2020-01-13 22:46:32 0176     SELECT
    2020-01-13 22:46:32 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:32 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:32 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:32 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:32 0181     FROM da_question dq
    2020-01-13 22:46:32 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0183     WHERE
    2020-01-13 22:46:32 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:32 0186     UNION
    2020-01-13 22:46:32 0187 	SELECT
    2020-01-13 22:46:32 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:32 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:32 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:32 0191     FROM da_question dq
    2020-01-13 22:46:32 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:32 0193     WHERE
    2020-01-13 22:46:32 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:32 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:32      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:32      1,304 lines fetched
    2020-01-13 22:46:32 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:32 0198 DROP TABLE client_agesstagesquestionnai
    2020-01-13 22:46:32 0200 LET varStepName='STEPINTERIM_' & 1 & '_of_' & 50
    2020-01-13 22:46:32 0201 STEPINTERIM_1_of_50: select 1
    2020-01-13 22:46:32      	1 fields found: ?column?, 
    2020-01-13 22:46:32      1 lines fetched
    2020-01-13 22:46:32 0202 DROP TABLE STEPINTERIM_1_of_50
    2020-01-13 22:46:32 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:32 0205 NEXT
    2020-01-13 22:46:32 0025 LET varRecordSetTableName=Peek('sp_table_name',2,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:32 0026 LET varRecordSetQlikName=Peek('qlik_table_name',2,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:32 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',2,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:32 0029 LET varRecordSetQlikName_Interim='client_arrestrecord' & '_review'
    2020-01-13 22:46:32 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('arrestrecord') <= 20),'arrestrecord' & 'end_1',left('arrestrecord', 20)& 'end_1')
    2020-01-13 22:46:32 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'arrestrecord' & 'enddate'
    2020-01-13 22:46:32 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_arrestrecord', (len('client_arrestrecord'))-7))
    2020-01-13 22:46:32 0034 client_arrestrecord:
    2020-01-13 22:46:32 0035   SELECT * FROM qlik_sclient_arrestrecord
    2020-01-13 22:46:33      	9 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, 
    2020-01-13 22:46:33      249 lines fetched
    2020-01-13 22:46:33 0038 client_arrestrecord_review:
    2020-01-13 22:46:33 0039   Noconcatenate
    2020-01-13 22:46:33 0040   LOAD DISTINCT
    2020-01-13 22:46:33 0041   *,
    2020-01-13 22:46:33 0042   recordset_id AS 'client_ARRESTRECORDRECORDSET_ID_review'
    2020-01-13 22:46:33 0043   RESIDENT client_arrestrecord
    2020-01-13 22:46:33      	10 fields found: recordset_id, client_id, arrestrecordstartdate, arrestrecordenddate, arrestcharge, dateofarrest, prisonjailwheretimese, convicted, servedtime, client_ARRESTRECORDRECORDSET_ID_review, 
    2020-01-13 22:46:33      249 lines fetched
    2020-01-13 22:46:33 0045 CustomEndFieldCheck:
    2020-01-13 22:46:33 0046   SELECT *
    2020-01-13 22:46:33 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'arrestrecordend_1'
    2020-01-13 22:46:33      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:46:33      0 lines fetched
    2020-01-13 22:46:33 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'arrestrecordend_1','arrestrecordenddate')
    2020-01-13 22:46:33 0053 RS_Interim:
    2020-01-13 22:46:33 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:33 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:33 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:33 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:46:33 0058 	eer.entry_exit_review_id
    2020-01-13 22:46:33 0059   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:46:33 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:33 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:33 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:33 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:33 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:33 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:33 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:46:33 0067   WHERE 
    2020-01-13 22:46:33 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:46:33 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:33 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:33 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:33 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:46:33 0073     AND (ft.arrestrecordstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:33 0074     AND ((ft.arrestrecordenddate::DATE IS NULL) OR (ft.arrestrecordenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:33 0075   UNION
    2020-01-13 22:46:33 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:33 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:33 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:33 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:46:33 0080     eer.entry_exit_review_id	
    2020-01-13 22:46:33 0081   FROM qlik_sclient_arrestrecord ft
    2020-01-13 22:46:33 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:33 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:33 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:33 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:33 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:33 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:33 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:46:33 0089   WHERE 
    2020-01-13 22:46:33 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:46:33 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:33 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:33 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:33 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:46:33 0095     AND (ft.arrestrecordstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:33 0096     AND ((ft.arrestrecordenddate::DATE IS NULL) OR (ft.arrestrecordenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:33      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:33      0 lines fetched
    2020-01-13 22:46:33 0099 INNER JOIN(client_arrestrecord_review)
    2020-01-13 22:46:33 0100   LOAD DISTINCT
    2020-01-13 22:46:33 0101   recordset_id,
    2020-01-13 22:46:33 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:33 0103   provider_creating_id AS [client_ARRESTRECORD_Provider_Creating_Review],
    2020-01-13 22:46:33 0104   name AS [client_ARRESTRECORD_Provider_Name_Creating_Review],
    2020-01-13 22:46:33 0105   user_creating_id AS [client_ARRESTRECORD_User_Created_By_Id_Review],
    2020-01-13 22:46:33 0106   user_name AS [client_ARRESTRECORD_User_Created_By_Review]
    2020-01-13 22:46:33 0107   RESIDENT RS_Interim
    2020-01-13 22:46:33      	6 fields found: recordset_id, Entry Exit Review Id, client_ARRESTRECORD_Provider_Creating_Review, client_ARRESTRECORD_Provider_Name_Creating_Review, client_ARRESTRECORD_User_Created_By_Id_Review, client_ARRESTRECORD_User_Created_By_Review, 
    2020-01-13 22:46:33      0 lines fetched
    2020-01-13 22:46:33      Joining/Keeping
    2020-01-13 22:46:33 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:33 0110   Noconcatenate
    2020-01-13 22:46:33 0111   LOAD DISTINCT
    2020-01-13 22:46:33 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:33 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:33 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:33 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:33 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:33 0117   RESIDENT RS_Interim
    2020-01-13 22:46:33      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:33      0 lines fetched
    2020-01-13 22:46:33 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:33 0121   LOAD
    2020-01-13 22:46:33 0122  [Entry Exit Id],
    2020-01-13 22:46:33 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:33 0124  [Entry Exit Review Type],
    2020-01-13 22:46:33 0125  [Entry Exit Review Date],
    2020-01-13 22:46:33 0126  [Entry Exit Review Id]
    2020-01-13 22:46:33 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:33 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:33      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:33      14,583 lines fetched
    2020-01-13 22:46:33 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:33 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:33 0135 DROP FIELDS client_id FROM client_arrestrecord_review
    2020-01-13 22:46:33 0136 DROP FIELDS recordset_id FROM client_arrestrecord_review
    2020-01-13 22:46:33 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:33 0140   Mapping SQL
    2020-01-13 22:46:33 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:33 0142     FROM da_question dq
    2020-01-13 22:46:33 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0144     WHERE
    2020-01-13 22:46:33 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:33 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:33 0148     UNION
    2020-01-13 22:46:33 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:33 0150     FROM da_question dq
    2020-01-13 22:46:33 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0152     WHERE
    2020-01-13 22:46:33 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:33 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:33 0156      UNION
    2020-01-13 22:46:33 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:33 0158     FROM da_question dq
    2020-01-13 22:46:33 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0160     WHERE
    2020-01-13 22:46:33 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:33 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:33 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:33 0165     UNION
    2020-01-13 22:46:33 0166 
    2020-01-13 22:46:33 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:33 0168     FROM da_question dq
    2020-01-13 22:46:33 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0170     WHERE
    2020-01-13 22:46:33 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:33 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:33 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:33 0175     UNION   
    2020-01-13 22:46:33 0176     SELECT
    2020-01-13 22:46:33 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:33 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:33 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:33 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:33 0181     FROM da_question dq
    2020-01-13 22:46:33 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0183     WHERE
    2020-01-13 22:46:33 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:33 0186     UNION
    2020-01-13 22:46:33 0187 	SELECT
    2020-01-13 22:46:33 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:33 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:33 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:33 0191     FROM da_question dq
    2020-01-13 22:46:33 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:33 0193     WHERE
    2020-01-13 22:46:33 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:33 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:34      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:34      1,304 lines fetched
    2020-01-13 22:46:34 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:34 0198 DROP TABLE client_arrestrecord
    2020-01-13 22:46:34 0200 LET varStepName='STEPINTERIM_' & 2 & '_of_' & 50
    2020-01-13 22:46:34 0201 STEPINTERIM_2_of_50: select 1
    2020-01-13 22:46:34      	1 fields found: ?column?, 
    2020-01-13 22:46:34      1 lines fetched
    2020-01-13 22:46:34 0202 DROP TABLE STEPINTERIM_2_of_50
    2020-01-13 22:46:34 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:34 0205 NEXT
    2020-01-13 22:46:34 0025 LET varRecordSetTableName=Peek('sp_table_name',3,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:34 0026 LET varRecordSetQlikName=Peek('qlik_table_name',3,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:34 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',3,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:34 0029 LET varRecordSetQlikName_Interim='client_bnlstatus' & '_review'
    2020-01-13 22:46:34 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bnlstatus') <= 20),'bnlstatus' & 'end_1',left('bnlstatus', 20)& 'end_1')
    2020-01-13 22:46:34 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'bnlstatus' & 'enddate'
    2020-01-13 22:46:34 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_bnlstatus', (len('client_bnlstatus'))-7))
    2020-01-13 22:46:34 0034 client_bnlstatus:
    2020-01-13 22:46:34 0035   SELECT * FROM qlik_sclient_bnlstatus
    2020-01-13 22:46:34      	7 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, 
    2020-01-13 22:46:34      3,117 lines fetched
    2020-01-13 22:46:34 0038 client_bnlstatus_review:
    2020-01-13 22:46:34 0039   Noconcatenate
    2020-01-13 22:46:34 0040   LOAD DISTINCT
    2020-01-13 22:46:34 0041   *,
    2020-01-13 22:46:34 0042   recordset_id AS 'client_BNLSTATUSRECORDSET_ID_review'
    2020-01-13 22:46:34 0043   RESIDENT client_bnlstatus
    2020-01-13 22:46:34      	8 fields found: recordset_id, client_id, bnlstatusstartdate, bnlstatusenddate, bnlstatusenddate_1, bnlstatusstartdate_1, bnlstatussubassess, client_BNLSTATUSRECORDSET_ID_review, 
    2020-01-13 22:46:34      3,117 lines fetched
    2020-01-13 22:46:34 0045 CustomEndFieldCheck:
    2020-01-13 22:46:34 0046   SELECT *
    2020-01-13 22:46:34 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bnlstatusend_1'
    2020-01-13 22:46:34      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:46:34      0 lines fetched
    2020-01-13 22:46:34 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bnlstatusend_1','bnlstatusenddate')
    2020-01-13 22:46:34 0053 RS_Interim:
    2020-01-13 22:46:34 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:34 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:34 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:34 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:46:34 0058 	eer.entry_exit_review_id
    2020-01-13 22:46:34 0059   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:46:34 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:34 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:34 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:34 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:34 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:34 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:34 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:46:34 0067   WHERE 
    2020-01-13 22:46:34 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:46:34 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:34 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:34 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:34 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:46:34 0073     AND (ft.bnlstatusstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:34 0074     AND ((ft.bnlstatusenddate::DATE IS NULL) OR (ft.bnlstatusenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:34 0075   UNION
    2020-01-13 22:46:34 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:34 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:34 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:34 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:46:34 0080     eer.entry_exit_review_id	
    2020-01-13 22:46:34 0081   FROM qlik_sclient_bnlstatus ft
    2020-01-13 22:46:34 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:34 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:34 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:34 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:34 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:34 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:34 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:46:34 0089   WHERE 
    2020-01-13 22:46:34 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:46:34 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:34 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:34 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:34 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:46:34 0095     AND (ft.bnlstatusstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:34 0096     AND ((ft.bnlstatusenddate::DATE IS NULL) OR (ft.bnlstatusenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:35      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:35      69 lines fetched
    2020-01-13 22:46:35 0099 INNER JOIN(client_bnlstatus_review)
    2020-01-13 22:46:35 0100   LOAD DISTINCT
    2020-01-13 22:46:35 0101   recordset_id,
    2020-01-13 22:46:35 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:35 0103   provider_creating_id AS [client_BNLSTATUS_Provider_Creating_Review],
    2020-01-13 22:46:35 0104   name AS [client_BNLSTATUS_Provider_Name_Creating_Review],
    2020-01-13 22:46:35 0105   user_creating_id AS [client_BNLSTATUS_User_Created_By_Id_Review],
    2020-01-13 22:46:35 0106   user_name AS [client_BNLSTATUS_User_Created_By_Review]
    2020-01-13 22:46:35 0107   RESIDENT RS_Interim
    2020-01-13 22:46:35      	6 fields found: recordset_id, Entry Exit Review Id, client_BNLSTATUS_Provider_Creating_Review, client_BNLSTATUS_Provider_Name_Creating_Review, client_BNLSTATUS_User_Created_By_Id_Review, client_BNLSTATUS_User_Created_By_Review, 
    2020-01-13 22:46:35      69 lines fetched
    2020-01-13 22:46:35      Joining/Keeping
    2020-01-13 22:46:35 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:35 0110   Noconcatenate
    2020-01-13 22:46:35 0111   LOAD DISTINCT
    2020-01-13 22:46:35 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:35 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:35 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:35 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:35 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:35 0117   RESIDENT RS_Interim
    2020-01-13 22:46:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:35      37 lines fetched
    2020-01-13 22:46:35 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:35 0121   LOAD
    2020-01-13 22:46:35 0122  [Entry Exit Id],
    2020-01-13 22:46:35 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:35 0124  [Entry Exit Review Type],
    2020-01-13 22:46:35 0125  [Entry Exit Review Date],
    2020-01-13 22:46:35 0126  [Entry Exit Review Id]
    2020-01-13 22:46:35 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:35 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:35      14,583 lines fetched
    2020-01-13 22:46:35 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:35 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:35 0135 DROP FIELDS client_id FROM client_bnlstatus_review
    2020-01-13 22:46:35 0136 DROP FIELDS recordset_id FROM client_bnlstatus_review
    2020-01-13 22:46:35 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:35 0140   Mapping SQL
    2020-01-13 22:46:35 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:35 0142     FROM da_question dq
    2020-01-13 22:46:35 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0144     WHERE
    2020-01-13 22:46:35 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:35 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:35 0148     UNION
    2020-01-13 22:46:35 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:35 0150     FROM da_question dq
    2020-01-13 22:46:35 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0152     WHERE
    2020-01-13 22:46:35 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:35 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:35 0156      UNION
    2020-01-13 22:46:35 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:35 0158     FROM da_question dq
    2020-01-13 22:46:35 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0160     WHERE
    2020-01-13 22:46:35 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:35 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:35 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:35 0165     UNION
    2020-01-13 22:46:35 0166 
    2020-01-13 22:46:35 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:35 0168     FROM da_question dq
    2020-01-13 22:46:35 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0170     WHERE
    2020-01-13 22:46:35 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:35 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:35 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:35 0175     UNION   
    2020-01-13 22:46:35 0176     SELECT
    2020-01-13 22:46:35 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:35 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:35 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:35 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:35 0181     FROM da_question dq
    2020-01-13 22:46:35 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0183     WHERE
    2020-01-13 22:46:35 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:35 0186     UNION
    2020-01-13 22:46:35 0187 	SELECT
    2020-01-13 22:46:35 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:35 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:35 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:35 0191     FROM da_question dq
    2020-01-13 22:46:35 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:35 0193     WHERE
    2020-01-13 22:46:35 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:35 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:35      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:35      1,304 lines fetched
    2020-01-13 22:46:35 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:35 0198 DROP TABLE client_bnlstatus
    2020-01-13 22:46:36 0200 LET varStepName='STEPINTERIM_' & 3 & '_of_' & 50
    2020-01-13 22:46:36 0201 STEPINTERIM_3_of_50: select 1
    2020-01-13 22:46:36      	1 fields found: ?column?, 
    2020-01-13 22:46:36      1 lines fetched
    2020-01-13 22:46:36 0202 DROP TABLE STEPINTERIM_3_of_50
    2020-01-13 22:46:36 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:36 0205 NEXT
    2020-01-13 22:46:36 0025 LET varRecordSetTableName=Peek('sp_table_name',4,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:36 0026 LET varRecordSetQlikName=Peek('qlik_table_name',4,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:36 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',4,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:36 0029 LET varRecordSetQlikName_Interim='client_bridgeprogramcriteria' & '_review'
    2020-01-13 22:46:36 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('bridgeprogramcriteria') <= 20),'bridgeprogramcriteria' & 'end_1',left('bridgeprogramcriteria', 20)& 'end_1')
    2020-01-13 22:46:36 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'bridgeprogramcriteria' & 'enddate'
    2020-01-13 22:46:36 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_bridgeprogramcriteria', (len('client_bridgeprogramcriteria'))-7))
    2020-01-13 22:46:36 0034 client_bridgeprogramcriteria:
    2020-01-13 22:46:36 0035   SELECT * FROM qlik_sclient_bridgeprogramcriteria
    2020-01-13 22:46:36      	6 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, 
    2020-01-13 22:46:36      4,854 lines fetched
    2020-01-13 22:46:36 0038 client_bridgeprogramcriteria_review:
    2020-01-13 22:46:36 0039   Noconcatenate
    2020-01-13 22:46:36 0040   LOAD DISTINCT
    2020-01-13 22:46:36 0041   *,
    2020-01-13 22:46:36 0042   recordset_id AS 'client_BRIDGEPROGRAMCRITERIARECORDSET_ID_review'
    2020-01-13 22:46:36 0043   RESIDENT client_bridgeprogramcriteria
    2020-01-13 22:46:36      	7 fields found: recordset_id, client_id, bridgeprogramcriteriastartdate, bridgeprogramcriteriaenddate, dupagenotes, programcriteria, client_BRIDGEPROGRAMCRITERIARECORDSET_ID_review, 
    2020-01-13 22:46:36      4,854 lines fetched
    2020-01-13 22:46:36 0045 CustomEndFieldCheck:
    2020-01-13 22:46:36 0046   SELECT *
    2020-01-13 22:46:36 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'bridgeprogramcriteriend_1'
    2020-01-13 22:46:37      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:46:37      0 lines fetched
    2020-01-13 22:46:37 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'bridgeprogramcriteriend_1','bridgeprogramcriteriaenddate')
    2020-01-13 22:46:37 0053 RS_Interim:
    2020-01-13 22:46:37 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:37 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:37 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:37 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:46:37 0058 	eer.entry_exit_review_id
    2020-01-13 22:46:37 0059   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:46:37 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:37 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:37 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:37 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:37 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:37 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:37 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:46:37 0067   WHERE 
    2020-01-13 22:46:37 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:46:37 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:37 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:37 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:37 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:46:37 0073     AND (ft.bridgeprogramcriteriastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:37 0074     AND ((ft.bridgeprogramcriteriaenddate::DATE IS NULL) OR (ft.bridgeprogramcriteriaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:37 0075   UNION
    2020-01-13 22:46:37 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:37 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:37 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:37 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:46:37 0080     eer.entry_exit_review_id	
    2020-01-13 22:46:37 0081   FROM qlik_sclient_bridgeprogramcriteria ft
    2020-01-13 22:46:37 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:37 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:37 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:37 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:37 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:37 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:37 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:46:37 0089   WHERE 
    2020-01-13 22:46:37 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:46:37 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:37 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:37 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:37 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:46:37 0095     AND (ft.bridgeprogramcriteriastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:37 0096     AND ((ft.bridgeprogramcriteriaenddate::DATE IS NULL) OR (ft.bridgeprogramcriteriaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:38      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:38      5,409 lines fetched
    2020-01-13 22:46:38 0099 INNER JOIN(client_bridgeprogramcriteria_review)
    2020-01-13 22:46:38 0100   LOAD DISTINCT
    2020-01-13 22:46:38 0101   recordset_id,
    2020-01-13 22:46:38 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:38 0103   provider_creating_id AS [client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Review],
    2020-01-13 22:46:38 0104   name AS [client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Review],
    2020-01-13 22:46:38 0105   user_creating_id AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Review],
    2020-01-13 22:46:38 0106   user_name AS [client_BRIDGEPROGRAMCRITERIA_User_Created_By_Review]
    2020-01-13 22:46:38 0107   RESIDENT RS_Interim
    2020-01-13 22:46:38      	6 fields found: recordset_id, Entry Exit Review Id, client_BRIDGEPROGRAMCRITERIA_Provider_Creating_Review, client_BRIDGEPROGRAMCRITERIA_Provider_Name_Creating_Review, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Id_Review, client_BRIDGEPROGRAMCRITERIA_User_Created_By_Review, 
    2020-01-13 22:46:38      5,409 lines fetched
    2020-01-13 22:46:38      Joining/Keeping
    2020-01-13 22:46:38 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:38 0110   Noconcatenate
    2020-01-13 22:46:38 0111   LOAD DISTINCT
    2020-01-13 22:46:38 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:38 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:38 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:38 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:38 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:38 0117   RESIDENT RS_Interim
    2020-01-13 22:46:38      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:38      2,625 lines fetched
    2020-01-13 22:46:38 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:38 0121   LOAD
    2020-01-13 22:46:38 0122  [Entry Exit Id],
    2020-01-13 22:46:38 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:38 0124  [Entry Exit Review Type],
    2020-01-13 22:46:38 0125  [Entry Exit Review Date],
    2020-01-13 22:46:38 0126  [Entry Exit Review Id]
    2020-01-13 22:46:38 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:38 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:38      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:38      14,732 lines fetched
    2020-01-13 22:46:38 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:38 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:38 0135 DROP FIELDS client_id FROM client_bridgeprogramcriteria_review
    2020-01-13 22:46:38 0136 DROP FIELDS recordset_id FROM client_bridgeprogramcriteria_review
    2020-01-13 22:46:38 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:38 0140   Mapping SQL
    2020-01-13 22:46:38 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:38 0142     FROM da_question dq
    2020-01-13 22:46:38 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0144     WHERE
    2020-01-13 22:46:38 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:38 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:38 0148     UNION
    2020-01-13 22:46:38 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:38 0150     FROM da_question dq
    2020-01-13 22:46:38 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0152     WHERE
    2020-01-13 22:46:38 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:38 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:38 0156      UNION
    2020-01-13 22:46:38 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:38 0158     FROM da_question dq
    2020-01-13 22:46:38 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0160     WHERE
    2020-01-13 22:46:38 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:38 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:38 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:38 0165     UNION
    2020-01-13 22:46:38 0166 
    2020-01-13 22:46:38 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:38 0168     FROM da_question dq
    2020-01-13 22:46:38 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0170     WHERE
    2020-01-13 22:46:38 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:38 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:38 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:38 0175     UNION   
    2020-01-13 22:46:38 0176     SELECT
    2020-01-13 22:46:38 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:38 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:38 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:38 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:38 0181     FROM da_question dq
    2020-01-13 22:46:38 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0183     WHERE
    2020-01-13 22:46:38 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:38 0186     UNION
    2020-01-13 22:46:38 0187 	SELECT
    2020-01-13 22:46:38 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:38 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:38 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:38 0191     FROM da_question dq
    2020-01-13 22:46:38 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:38 0193     WHERE
    2020-01-13 22:46:38 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:38 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:38      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:38      1,304 lines fetched
    2020-01-13 22:46:38 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:38 0198 DROP TABLE client_bridgeprogramcriteria
    2020-01-13 22:46:38 0200 LET varStepName='STEPINTERIM_' & 4 & '_of_' & 50
    2020-01-13 22:46:38 0201 STEPINTERIM_4_of_50: select 1
    2020-01-13 22:46:39      	1 fields found: ?column?, 
    2020-01-13 22:46:39      1 lines fetched
    2020-01-13 22:46:39 0202 DROP TABLE STEPINTERIM_4_of_50
    2020-01-13 22:46:39 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:39 0205 NEXT
    2020-01-13 22:46:39 0025 LET varRecordSetTableName=Peek('sp_table_name',5,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:39 0026 LET varRecordSetQlikName=Peek('qlik_table_name',5,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:39 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',5,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:39 0029 LET varRecordSetQlikName_Interim='client_cedocumentationreview' & '_review'
    2020-01-13 22:46:39 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('cedocumentationreview') <= 20),'cedocumentationreview' & 'end_1',left('cedocumentationreview', 20)& 'end_1')
    2020-01-13 22:46:39 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'cedocumentationreview' & 'enddate'
    2020-01-13 22:46:39 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_cedocumentationreview', (len('client_cedocumentationreview'))-7))
    2020-01-13 22:46:39 0034 client_cedocumentationreview:
    2020-01-13 22:46:39 0035   SELECT * FROM qlik_sclient_cedocumentationreview
    2020-01-13 22:46:39      	6 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, 
    2020-01-13 22:46:39      712 lines fetched
    2020-01-13 22:46:39 0038 client_cedocumentationreview_review:
    2020-01-13 22:46:39 0039   Noconcatenate
    2020-01-13 22:46:39 0040   LOAD DISTINCT
    2020-01-13 22:46:39 0041   *,
    2020-01-13 22:46:39 0042   recordset_id AS 'client_CEDOCUMENTATIONREVIEWRECORDSET_ID_review'
    2020-01-13 22:46:39 0043   RESIDENT client_cedocumentationreview
    2020-01-13 22:46:39      	7 fields found: recordset_id, client_id, cedocumentationreviewstartdate, cedocumentationreviewenddate, documentationreviewda, documentationreviewno, client_CEDOCUMENTATIONREVIEWRECORDSET_ID_review, 
    2020-01-13 22:46:39      712 lines fetched
    2020-01-13 22:46:39 0045 CustomEndFieldCheck:
    2020-01-13 22:46:39 0046   SELECT *
    2020-01-13 22:46:39 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'cedocumentationrevieend_1'
    2020-01-13 22:46:39      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:46:39      0 lines fetched
    2020-01-13 22:46:39 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'cedocumentationrevieend_1','cedocumentationreviewenddate')
    2020-01-13 22:46:39 0053 RS_Interim:
    2020-01-13 22:46:39 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:39 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:39 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:39 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:46:39 0058 	eer.entry_exit_review_id
    2020-01-13 22:46:39 0059   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:46:39 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:39 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:39 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:39 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:39 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:39 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:39 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:46:39 0067   WHERE 
    2020-01-13 22:46:39 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:46:39 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:39 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:39 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:39 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:46:39 0073     AND (ft.cedocumentationreviewstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:39 0074     AND ((ft.cedocumentationreviewenddate::DATE IS NULL) OR (ft.cedocumentationreviewenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:39 0075   UNION
    2020-01-13 22:46:39 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:46:39 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:46:39 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:46:39 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:46:39 0080     eer.entry_exit_review_id	
    2020-01-13 22:46:39 0081   FROM qlik_sclient_cedocumentationreview ft
    2020-01-13 22:46:39 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:46:39 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:46:39 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:46:39 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:46:39 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:46:39 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:46:39 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:46:39 0089   WHERE 
    2020-01-13 22:46:39 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:46:39 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:46:39 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:46:39 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:46:39 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:46:39 0095     AND (ft.cedocumentationreviewstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:46:39 0096     AND ((ft.cedocumentationreviewenddate::DATE IS NULL) OR (ft.cedocumentationreviewenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:46:39      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:46:39      12 lines fetched
    2020-01-13 22:46:39 0099 INNER JOIN(client_cedocumentationreview_review)
    2020-01-13 22:46:39 0100   LOAD DISTINCT
    2020-01-13 22:46:39 0101   recordset_id,
    2020-01-13 22:46:39 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:46:39 0103   provider_creating_id AS [client_CEDOCUMENTATIONREVIEW_Provider_Creating_Review],
    2020-01-13 22:46:39 0104   name AS [client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Review],
    2020-01-13 22:46:39 0105   user_creating_id AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Review],
    2020-01-13 22:46:39 0106   user_name AS [client_CEDOCUMENTATIONREVIEW_User_Created_By_Review]
    2020-01-13 22:46:39 0107   RESIDENT RS_Interim
    2020-01-13 22:46:39      	6 fields found: recordset_id, Entry Exit Review Id, client_CEDOCUMENTATIONREVIEW_Provider_Creating_Review, client_CEDOCUMENTATIONREVIEW_Provider_Name_Creating_Review, client_CEDOCUMENTATIONREVIEW_User_Created_By_Id_Review, client_CEDOCUMENTATIONREVIEW_User_Created_By_Review, 
    2020-01-13 22:46:39      12 lines fetched
    2020-01-13 22:46:39      Joining/Keeping
    2020-01-13 22:46:39 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:46:39 0110   Noconcatenate
    2020-01-13 22:46:39 0111   LOAD DISTINCT
    2020-01-13 22:46:39 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:46:39 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:46:39 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:46:39 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:46:39 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:46:39 0117   RESIDENT RS_Interim
    2020-01-13 22:46:40      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:40      11 lines fetched
    2020-01-13 22:46:40 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:46:40 0121   LOAD
    2020-01-13 22:46:40 0122  [Entry Exit Id],
    2020-01-13 22:46:40 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:46:40 0124  [Entry Exit Review Type],
    2020-01-13 22:46:40 0125  [Entry Exit Review Date],
    2020-01-13 22:46:40 0126  [Entry Exit Review Id]
    2020-01-13 22:46:40 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:46:40 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:46:40      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:46:40      14,732 lines fetched
    2020-01-13 22:46:40 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:46:40 0133 DROP TABLE RS_Interim
    2020-01-13 22:46:40 0135 DROP FIELDS client_id FROM client_cedocumentationreview_review
    2020-01-13 22:46:40 0136 DROP FIELDS recordset_id FROM client_cedocumentationreview_review
    2020-01-13 22:46:40 0139 FieldMapSaClientInterim:
    2020-01-13 22:46:40 0140   Mapping SQL
    2020-01-13 22:46:40 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:40 0142     FROM da_question dq
    2020-01-13 22:46:40 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0144     WHERE
    2020-01-13 22:46:40 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:46:40 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:46:40 0148     UNION
    2020-01-13 22:46:40 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:40 0150     FROM da_question dq
    2020-01-13 22:46:40 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0152     WHERE
    2020-01-13 22:46:40 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:46:40 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:46:40 0156      UNION
    2020-01-13 22:46:40 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:46:40 0158     FROM da_question dq
    2020-01-13 22:46:40 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0160     WHERE
    2020-01-13 22:46:40 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:46:40 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:46:40 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:40 0165     UNION
    2020-01-13 22:46:40 0166 
    2020-01-13 22:46:40 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:46:40 0168     FROM da_question dq
    2020-01-13 22:46:40 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0170     WHERE
    2020-01-13 22:46:40 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:46:40 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:46:40 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:46:40 0175     UNION   
    2020-01-13 22:46:40 0176     SELECT
    2020-01-13 22:46:40 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:46:40 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:40 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:40 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:46:40 0181     FROM da_question dq
    2020-01-13 22:46:40 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0183     WHERE
    2020-01-13 22:46:40 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:40 0186     UNION
    2020-01-13 22:46:40 0187 	SELECT
    2020-01-13 22:46:40 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:40 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:46:40 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:46:40 0191     FROM da_question dq
    2020-01-13 22:46:40 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:46:40 0193     WHERE
    2020-01-13 22:46:40 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:46:40 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:46:40      	2 fields found: oldnames, newnames, 
    2020-01-13 22:46:40      1,304 lines fetched
    2020-01-13 22:46:40 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:46:40 0198 DROP TABLE client_cedocumentationreview
    2020-01-13 22:46:40 0200 LET varStepName='STEPINTERIM_' & 5 & '_of_' & 50
    2020-01-13 22:46:40 0201 STEPINTERIM_5_of_50: select 1
    2020-01-13 22:46:40      	1 fields found: ?column?, 
    2020-01-13 22:46:40      1 lines fetched
    2020-01-13 22:46:40 0202 DROP TABLE STEPINTERIM_5_of_50
    2020-01-13 22:46:40 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:46:40 0205 NEXT
    2020-01-13 22:46:40 0025 LET varRecordSetTableName=Peek('sp_table_name',6,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:40 0026 LET varRecordSetQlikName=Peek('qlik_table_name',6,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:40 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',6,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:46:40 0029 LET varRecordSetQlikName_Interim='client_disabilities_1' & '_review'
    2020-01-13 22:46:40 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('disabilities_1') <= 20),'disabilities_1' & 'end_1',left('disabilities_1', 20)& 'end_1')
    2020-01-13 22:46:40 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'disabilities_1' & 'enddate'
    2020-01-13 22:46:40 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_disabilities_1', (len('client_disabilities_1'))-7))
    2020-01-13 22:46:40 0034 client_disabilities_1:
    2020-01-13 22:46:40 0035   SELECT * FROM qlik_sclient_disabilities_1
    2020-01-13 22:47:15      	9 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, 
    2020-01-13 22:47:15      484,147 lines fetched
    2020-01-13 22:47:15 0038 client_disabilities_1_review:
    2020-01-13 22:47:15 0039   Noconcatenate
    2020-01-13 22:47:15 0040   LOAD DISTINCT
    2020-01-13 22:47:15 0041   *,
    2020-01-13 22:47:15 0042   recordset_id AS 'client_DISABILITIES_1RECORDSET_ID_review'
    2020-01-13 22:47:15 0043   RESIDENT client_disabilities_1
    2020-01-13 22:47:15      	10 fields found: recordset_id, client_id, disabilities_1startdate, disabilities_1enddate, noteondisability, disabilitydetermine, disabilitytype, hud_impairabilityliveind, hud_disabilitylongterm, client_DISABILITIES_1RECORDSET_ID_review, 
    2020-01-13 22:47:15      484,147 lines fetched
    2020-01-13 22:47:16 0045 CustomEndFieldCheck:
    2020-01-13 22:47:16 0046   SELECT *
    2020-01-13 22:47:16 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'disabilities_1end_1'
    2020-01-13 22:47:16      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:47:16      0 lines fetched
    2020-01-13 22:47:16 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'disabilities_1end_1','disabilities_1enddate')
    2020-01-13 22:47:16 0053 RS_Interim:
    2020-01-13 22:47:16 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:47:16 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:47:16 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:47:16 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:47:16 0058 	eer.entry_exit_review_id
    2020-01-13 22:47:16 0059   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:47:16 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:47:16 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:47:16 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:47:16 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:47:16 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:47:16 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:47:16 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:47:16 0067   WHERE 
    2020-01-13 22:47:16 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:47:16 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:47:16 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:47:16 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:47:16 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:47:16 0073     AND (ft.disabilities_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:47:16 0074     AND ((ft.disabilities_1enddate::DATE IS NULL) OR (ft.disabilities_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:47:16 0075   UNION
    2020-01-13 22:47:16 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:47:16 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:47:16 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:47:16 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:47:16 0080     eer.entry_exit_review_id	
    2020-01-13 22:47:16 0081   FROM qlik_sclient_disabilities_1 ft
    2020-01-13 22:47:16 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:47:16 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:47:16 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:47:16 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:47:16 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:47:16 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:47:16 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:47:16 0089   WHERE 
    2020-01-13 22:47:16 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:47:16 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:47:16 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:47:16 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:47:16 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:47:16 0095     AND (ft.disabilities_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:47:16 0096     AND ((ft.disabilities_1enddate::DATE IS NULL) OR (ft.disabilities_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:26      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:26      113,052 lines fetched
    2020-01-13 22:48:26 0099 INNER JOIN(client_disabilities_1_review)
    2020-01-13 22:48:26 0100   LOAD DISTINCT
    2020-01-13 22:48:26 0101   recordset_id,
    2020-01-13 22:48:26 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:26 0103   provider_creating_id AS [client_DISABILITIES_1_Provider_Creating_Review],
    2020-01-13 22:48:26 0104   name AS [client_DISABILITIES_1_Provider_Name_Creating_Review],
    2020-01-13 22:48:26 0105   user_creating_id AS [client_DISABILITIES_1_User_Created_By_Id_Review],
    2020-01-13 22:48:26 0106   user_name AS [client_DISABILITIES_1_User_Created_By_Review]
    2020-01-13 22:48:26 0107   RESIDENT RS_Interim
    2020-01-13 22:48:27      	6 fields found: recordset_id, Entry Exit Review Id, client_DISABILITIES_1_Provider_Creating_Review, client_DISABILITIES_1_Provider_Name_Creating_Review, client_DISABILITIES_1_User_Created_By_Id_Review, client_DISABILITIES_1_User_Created_By_Review, 
    2020-01-13 22:48:27      113,052 lines fetched
    2020-01-13 22:48:27      Joining/Keeping
    2020-01-13 22:48:27 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:27 0110   Noconcatenate
    2020-01-13 22:48:27 0111   LOAD DISTINCT
    2020-01-13 22:48:27 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:27 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:27 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:27 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:27 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:27 0117   RESIDENT RS_Interim
    2020-01-13 22:48:27      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:27      12,796 lines fetched
    2020-01-13 22:48:27 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:27 0121   LOAD
    2020-01-13 22:48:27 0122  [Entry Exit Id],
    2020-01-13 22:48:27 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:27 0124  [Entry Exit Review Type],
    2020-01-13 22:48:27 0125  [Entry Exit Review Date],
    2020-01-13 22:48:27 0126  [Entry Exit Review Id]
    2020-01-13 22:48:27 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:27 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:27      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:27      15,969 lines fetched
    2020-01-13 22:48:27 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:27 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:27 0135 DROP FIELDS client_id FROM client_disabilities_1_review
    2020-01-13 22:48:27 0136 DROP FIELDS recordset_id FROM client_disabilities_1_review
    2020-01-13 22:48:27 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:27 0140   Mapping SQL
    2020-01-13 22:48:27 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:27 0142     FROM da_question dq
    2020-01-13 22:48:27 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0144     WHERE
    2020-01-13 22:48:27 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:27 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:27 0148     UNION
    2020-01-13 22:48:27 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:27 0150     FROM da_question dq
    2020-01-13 22:48:27 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0152     WHERE
    2020-01-13 22:48:27 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:27 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:27 0156      UNION
    2020-01-13 22:48:27 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:27 0158     FROM da_question dq
    2020-01-13 22:48:27 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0160     WHERE
    2020-01-13 22:48:27 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:27 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:27 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:27 0165     UNION
    2020-01-13 22:48:27 0166 
    2020-01-13 22:48:27 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:27 0168     FROM da_question dq
    2020-01-13 22:48:27 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0170     WHERE
    2020-01-13 22:48:27 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:27 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:27 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:27 0175     UNION   
    2020-01-13 22:48:27 0176     SELECT
    2020-01-13 22:48:27 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:27 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:27 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:27 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:27 0181     FROM da_question dq
    2020-01-13 22:48:27 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0183     WHERE
    2020-01-13 22:48:27 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:27 0186     UNION
    2020-01-13 22:48:27 0187 	SELECT
    2020-01-13 22:48:27 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:27 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:27 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:27 0191     FROM da_question dq
    2020-01-13 22:48:27 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:27 0193     WHERE
    2020-01-13 22:48:27 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:27 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:28      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:28      1,304 lines fetched
    2020-01-13 22:48:28 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:28 0198 DROP TABLE client_disabilities_1
    2020-01-13 22:48:28 0200 LET varStepName='STEPINTERIM_' & 6 & '_of_' & 50
    2020-01-13 22:48:28 0201 STEPINTERIM_6_of_50: select 1
    2020-01-13 22:48:28      	1 fields found: ?column?, 
    2020-01-13 22:48:28      1 lines fetched
    2020-01-13 22:48:28 0202 DROP TABLE STEPINTERIM_6_of_50
    2020-01-13 22:48:28 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:28 0205 NEXT
    2020-01-13 22:48:28 0025 LET varRecordSetTableName=Peek('sp_table_name',7,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:28 0026 LET varRecordSetQlikName=Peek('qlik_table_name',7,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:28 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',7,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:28 0029 LET varRecordSetQlikName_Interim='client_dupagebridgeworkhistory' & '_review'
    2020-01-13 22:48:28 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagebridgeworkhistory') <= 20),'dupagebridgeworkhistory' & 'end_1',left('dupagebridgeworkhistory', 20)& 'end_1')
    2020-01-13 22:48:28 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagebridgeworkhistory' & 'enddate'
    2020-01-13 22:48:28 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_dupagebridgeworkhistory', (len('client_dupagebridgeworkhistory'))-7))
    2020-01-13 22:48:28 0034 client_dupagebridgeworkhistory:
    2020-01-13 22:48:28 0035   SELECT * FROM qlik_sclient_dupagebridgeworkhistory
    2020-01-13 22:48:30      	14 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, 
    2020-01-13 22:48:30      10,408 lines fetched
    2020-01-13 22:48:30 0038 client_dupagebridgeworkhistory_review:
    2020-01-13 22:48:30 0039   Noconcatenate
    2020-01-13 22:48:30 0040   LOAD DISTINCT
    2020-01-13 22:48:30 0041   *,
    2020-01-13 22:48:30 0042   recordset_id AS 'client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_review'
    2020-01-13 22:48:30 0043   RESIDENT client_dupagebridgeworkhistory
    2020-01-13 22:48:30      	15 fields found: recordset_id, client_id, dupagebridgeworkhistorystartdate, dupagebridgeworkhistoryenddate, dupageemployer, dupageemploymentcomments, dupagehourlywage_2, dupagehoursperweek, dupageposition, dupagebridgeemploymenttype, dupagebridgeworkhistorywhyd, dupagesourceofposition, dupageworkcity, longestjobheldbyclient, client_DUPAGEBRIDGEWORKHISTORYRECORDSET_ID_review, 
    2020-01-13 22:48:30      10,408 lines fetched
    2020-01-13 22:48:30 0045 CustomEndFieldCheck:
    2020-01-13 22:48:30 0046   SELECT *
    2020-01-13 22:48:30 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagebridgeworkhistend_1'
    2020-01-13 22:48:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:48:30      0 lines fetched
    2020-01-13 22:48:30 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagebridgeworkhistend_1','dupagebridgeworkhistoryenddate')
    2020-01-13 22:48:30 0053 RS_Interim:
    2020-01-13 22:48:30 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:30 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:30 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:30 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:48:30 0058 	eer.entry_exit_review_id
    2020-01-13 22:48:30 0059   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:48:30 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:30 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:30 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:30 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:30 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:30 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:30 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:48:30 0067   WHERE 
    2020-01-13 22:48:30 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:48:30 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:30 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:30 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:30 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:48:30 0073     AND (ft.dupagebridgeworkhistorystartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:30 0074     AND ((ft.dupagebridgeworkhistoryenddate::DATE IS NULL) OR (ft.dupagebridgeworkhistoryenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:30 0075   UNION
    2020-01-13 22:48:30 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:30 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:30 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:30 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:48:30 0080     eer.entry_exit_review_id	
    2020-01-13 22:48:30 0081   FROM qlik_sclient_dupagebridgeworkhistory ft
    2020-01-13 22:48:30 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:30 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:30 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:30 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:30 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:30 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:30 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:48:30 0089   WHERE 
    2020-01-13 22:48:30 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:48:30 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:30 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:30 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:48:30 0095     AND (ft.dupagebridgeworkhistorystartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:30 0096     AND ((ft.dupagebridgeworkhistoryenddate::DATE IS NULL) OR (ft.dupagebridgeworkhistoryenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:33      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:33      2,500 lines fetched
    2020-01-13 22:48:33 0099 INNER JOIN(client_dupagebridgeworkhistory_review)
    2020-01-13 22:48:33 0100   LOAD DISTINCT
    2020-01-13 22:48:33 0101   recordset_id,
    2020-01-13 22:48:33 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:33 0103   provider_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Review],
    2020-01-13 22:48:33 0104   name AS [client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Review],
    2020-01-13 22:48:33 0105   user_creating_id AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Review],
    2020-01-13 22:48:33 0106   user_name AS [client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Review]
    2020-01-13 22:48:33 0107   RESIDENT RS_Interim
    2020-01-13 22:48:33      	6 fields found: recordset_id, Entry Exit Review Id, client_DUPAGEBRIDGEWORKHISTORY_Provider_Creating_Review, client_DUPAGEBRIDGEWORKHISTORY_Provider_Name_Creating_Review, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Id_Review, client_DUPAGEBRIDGEWORKHISTORY_User_Created_By_Review, 
    2020-01-13 22:48:33      2,500 lines fetched
    2020-01-13 22:48:33      Joining/Keeping
    2020-01-13 22:48:33 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:33 0110   Noconcatenate
    2020-01-13 22:48:33 0111   LOAD DISTINCT
    2020-01-13 22:48:33 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:33 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:33 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:33 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:33 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:33 0117   RESIDENT RS_Interim
    2020-01-13 22:48:33      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:33      2,207 lines fetched
    2020-01-13 22:48:34 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:34 0121   LOAD
    2020-01-13 22:48:34 0122  [Entry Exit Id],
    2020-01-13 22:48:34 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:34 0124  [Entry Exit Review Type],
    2020-01-13 22:48:34 0125  [Entry Exit Review Date],
    2020-01-13 22:48:34 0126  [Entry Exit Review Id]
    2020-01-13 22:48:34 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:34 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:34      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:34      15,994 lines fetched
    2020-01-13 22:48:34 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:34 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:34 0135 DROP FIELDS client_id FROM client_dupagebridgeworkhistory_review
    2020-01-13 22:48:34 0136 DROP FIELDS recordset_id FROM client_dupagebridgeworkhistory_review
    2020-01-13 22:48:34 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:34 0140   Mapping SQL
    2020-01-13 22:48:34 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:34 0142     FROM da_question dq
    2020-01-13 22:48:34 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0144     WHERE
    2020-01-13 22:48:34 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:34 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:34 0148     UNION
    2020-01-13 22:48:34 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:34 0150     FROM da_question dq
    2020-01-13 22:48:34 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0152     WHERE
    2020-01-13 22:48:34 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:34 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:34 0156      UNION
    2020-01-13 22:48:34 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:34 0158     FROM da_question dq
    2020-01-13 22:48:34 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0160     WHERE
    2020-01-13 22:48:34 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:34 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:34 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:34 0165     UNION
    2020-01-13 22:48:34 0166 
    2020-01-13 22:48:34 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:34 0168     FROM da_question dq
    2020-01-13 22:48:34 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0170     WHERE
    2020-01-13 22:48:34 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:34 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:34 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:34 0175     UNION   
    2020-01-13 22:48:34 0176     SELECT
    2020-01-13 22:48:34 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:34 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:34 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:34 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:34 0181     FROM da_question dq
    2020-01-13 22:48:34 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0183     WHERE
    2020-01-13 22:48:34 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:34 0186     UNION
    2020-01-13 22:48:34 0187 	SELECT
    2020-01-13 22:48:34 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:34 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:34 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:34 0191     FROM da_question dq
    2020-01-13 22:48:34 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:34 0193     WHERE
    2020-01-13 22:48:34 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:34 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:34      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:34      1,304 lines fetched
    2020-01-13 22:48:34 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:34 0198 DROP TABLE client_dupagebridgeworkhistory
    2020-01-13 22:48:34 0200 LET varStepName='STEPINTERIM_' & 7 & '_of_' & 50
    2020-01-13 22:48:34 0201 STEPINTERIM_7_of_50: select 1
    2020-01-13 22:48:34      	1 fields found: ?column?, 
    2020-01-13 22:48:34      1 lines fetched
    2020-01-13 22:48:34 0202 DROP TABLE STEPINTERIM_7_of_50
    2020-01-13 22:48:34 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:34 0205 NEXT
    2020-01-13 22:48:34 0025 LET varRecordSetTableName=Peek('sp_table_name',8,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:34 0026 LET varRecordSetQlikName=Peek('qlik_table_name',8,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:34 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',8,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:34 0029 LET varRecordSetQlikName_Interim='client_dupagecoccoordinatede' & '_review'
    2020-01-13 22:48:34 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('dupagecoccoordinatede') <= 20),'dupagecoccoordinatede' & 'end_1',left('dupagecoccoordinatede', 20)& 'end_1')
    2020-01-13 22:48:34 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'dupagecoccoordinatede' & 'enddate'
    2020-01-13 22:48:34 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_dupagecoccoordinatede', (len('client_dupagecoccoordinatede'))-7))
    2020-01-13 22:48:34 0034 client_dupagecoccoordinatede:
    2020-01-13 22:48:34 0035   SELECT * FROM qlik_sclient_dupagecoccoordinatede
    2020-01-13 22:48:34      	7 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, 
    2020-01-13 22:48:34      265 lines fetched
    2020-01-13 22:48:34 0038 client_dupagecoccoordinatede_review:
    2020-01-13 22:48:34 0039   Noconcatenate
    2020-01-13 22:48:34 0040   LOAD DISTINCT
    2020-01-13 22:48:34 0041   *,
    2020-01-13 22:48:34 0042   recordset_id AS 'client_DUPAGECOCCOORDINATEDERECORDSET_ID_review'
    2020-01-13 22:48:34 0043   RESIDENT client_dupagecoccoordinatede
    2020-01-13 22:48:34      	8 fields found: recordset_id, client_id, dupagecoccoordinatedestartdate, dupagecoccoordinatedeenddate, providerassigned_1, reasonforclosure, ssonotes, client_DUPAGECOCCOORDINATEDERECORDSET_ID_review, 
    2020-01-13 22:48:34      265 lines fetched
    2020-01-13 22:48:34 0045 CustomEndFieldCheck:
    2020-01-13 22:48:34 0046   SELECT *
    2020-01-13 22:48:34 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'dupagecoccoordinatedend_1'
    2020-01-13 22:48:35      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:48:35      0 lines fetched
    2020-01-13 22:48:35 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'dupagecoccoordinatedend_1','dupagecoccoordinatedeenddate')
    2020-01-13 22:48:35 0053 RS_Interim:
    2020-01-13 22:48:35 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:35 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:35 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:35 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:48:35 0058 	eer.entry_exit_review_id
    2020-01-13 22:48:35 0059   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:48:35 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:35 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:35 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:35 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:35 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:35 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:35 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:48:35 0067   WHERE 
    2020-01-13 22:48:35 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:48:35 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:35 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:35 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:35 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:48:35 0073     AND (ft.dupagecoccoordinatedestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:35 0074     AND ((ft.dupagecoccoordinatedeenddate::DATE IS NULL) OR (ft.dupagecoccoordinatedeenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:35 0075   UNION
    2020-01-13 22:48:35 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:35 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:35 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:35 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:48:35 0080     eer.entry_exit_review_id	
    2020-01-13 22:48:35 0081   FROM qlik_sclient_dupagecoccoordinatede ft
    2020-01-13 22:48:35 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:35 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:35 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:35 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:35 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:35 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:35 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:48:35 0089   WHERE 
    2020-01-13 22:48:35 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:48:35 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:35 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:35 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:35 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:48:35 0095     AND (ft.dupagecoccoordinatedestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:35 0096     AND ((ft.dupagecoccoordinatedeenddate::DATE IS NULL) OR (ft.dupagecoccoordinatedeenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:35      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:35      406 lines fetched
    2020-01-13 22:48:35 0099 INNER JOIN(client_dupagecoccoordinatede_review)
    2020-01-13 22:48:35 0100   LOAD DISTINCT
    2020-01-13 22:48:35 0101   recordset_id,
    2020-01-13 22:48:35 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:35 0103   provider_creating_id AS [client_DUPAGECOCCOORDINATEDE_Provider_Creating_Review],
    2020-01-13 22:48:35 0104   name AS [client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Review],
    2020-01-13 22:48:35 0105   user_creating_id AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Review],
    2020-01-13 22:48:35 0106   user_name AS [client_DUPAGECOCCOORDINATEDE_User_Created_By_Review]
    2020-01-13 22:48:35 0107   RESIDENT RS_Interim
    2020-01-13 22:48:35      	6 fields found: recordset_id, Entry Exit Review Id, client_DUPAGECOCCOORDINATEDE_Provider_Creating_Review, client_DUPAGECOCCOORDINATEDE_Provider_Name_Creating_Review, client_DUPAGECOCCOORDINATEDE_User_Created_By_Id_Review, client_DUPAGECOCCOORDINATEDE_User_Created_By_Review, 
    2020-01-13 22:48:35      406 lines fetched
    2020-01-13 22:48:35      Joining/Keeping
    2020-01-13 22:48:35 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:35 0110   Noconcatenate
    2020-01-13 22:48:35 0111   LOAD DISTINCT
    2020-01-13 22:48:35 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:35 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:35 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:35 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:35 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:35 0117   RESIDENT RS_Interim
    2020-01-13 22:48:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:35      402 lines fetched
    2020-01-13 22:48:35 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:35 0121   LOAD
    2020-01-13 22:48:35 0122  [Entry Exit Id],
    2020-01-13 22:48:35 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:35 0124  [Entry Exit Review Type],
    2020-01-13 22:48:35 0125  [Entry Exit Review Date],
    2020-01-13 22:48:35 0126  [Entry Exit Review Id]
    2020-01-13 22:48:35 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:35 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:35      16,009 lines fetched
    2020-01-13 22:48:35 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:35 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:35 0135 DROP FIELDS client_id FROM client_dupagecoccoordinatede_review
    2020-01-13 22:48:35 0136 DROP FIELDS recordset_id FROM client_dupagecoccoordinatede_review
    2020-01-13 22:48:35 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:35 0140   Mapping SQL
    2020-01-13 22:48:35 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:35 0142     FROM da_question dq
    2020-01-13 22:48:35 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0144     WHERE
    2020-01-13 22:48:35 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:35 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:35 0148     UNION
    2020-01-13 22:48:35 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:35 0150     FROM da_question dq
    2020-01-13 22:48:35 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0152     WHERE
    2020-01-13 22:48:35 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:35 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:35 0156      UNION
    2020-01-13 22:48:35 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:35 0158     FROM da_question dq
    2020-01-13 22:48:35 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0160     WHERE
    2020-01-13 22:48:35 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:35 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:35 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:35 0165     UNION
    2020-01-13 22:48:35 0166 
    2020-01-13 22:48:35 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:35 0168     FROM da_question dq
    2020-01-13 22:48:35 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0170     WHERE
    2020-01-13 22:48:35 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:35 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:35 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:35 0175     UNION   
    2020-01-13 22:48:35 0176     SELECT
    2020-01-13 22:48:35 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:35 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:35 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:35 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:35 0181     FROM da_question dq
    2020-01-13 22:48:35 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0183     WHERE
    2020-01-13 22:48:35 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:35 0186     UNION
    2020-01-13 22:48:35 0187 	SELECT
    2020-01-13 22:48:35 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:35 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:35 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:35 0191     FROM da_question dq
    2020-01-13 22:48:35 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:35 0193     WHERE
    2020-01-13 22:48:35 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:35 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:36      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:36      1,304 lines fetched
    2020-01-13 22:48:36 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:36 0198 DROP TABLE client_dupagecoccoordinatede
    2020-01-13 22:48:36 0200 LET varStepName='STEPINTERIM_' & 8 & '_of_' & 50
    2020-01-13 22:48:36 0201 STEPINTERIM_8_of_50: select 1
    2020-01-13 22:48:36      	1 fields found: ?column?, 
    2020-01-13 22:48:36      1 lines fetched
    2020-01-13 22:48:36 0202 DROP TABLE STEPINTERIM_8_of_50
    2020-01-13 22:48:36 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:36 0205 NEXT
    2020-01-13 22:48:36 0025 LET varRecordSetTableName=Peek('sp_table_name',9,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:36 0026 LET varRecordSetQlikName=Peek('qlik_table_name',9,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:36 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',9,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:36 0029 LET varRecordSetQlikName_Interim='client_emergencycontacts' & '_review'
    2020-01-13 22:48:36 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('emergencycontacts') <= 20),'emergencycontacts' & 'end_1',left('emergencycontacts', 20)& 'end_1')
    2020-01-13 22:48:36 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'emergencycontacts' & 'enddate'
    2020-01-13 22:48:36 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_emergencycontacts', (len('client_emergencycontacts'))-7))
    2020-01-13 22:48:36 0034 client_emergencycontacts:
    2020-01-13 22:48:36 0035   SELECT * FROM qlik_sclient_emergencycontacts
    2020-01-13 22:48:41      	12 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, 
    2020-01-13 22:48:41      34,455 lines fetched
    2020-01-13 22:48:41 0038 client_emergencycontacts_review:
    2020-01-13 22:48:41 0039   Noconcatenate
    2020-01-13 22:48:41 0040   LOAD DISTINCT
    2020-01-13 22:48:41 0041   *,
    2020-01-13 22:48:41 0042   recordset_id AS 'client_EMERGENCYCONTACTSRECORDSET_ID_review'
    2020-01-13 22:48:41 0043   RESIDENT client_emergencycontacts
    2020-01-13 22:48:41      	13 fields found: recordset_id, client_id, emergencycontactsstartdate, emergencycontactsenddate, contactsaddress, contactscity, contactsname, phonenumber_2, relationshiptoclient, secondphonenumber, contactsstate, isthereareleaseofinfo, client_EMERGENCYCONTACTSRECORDSET_ID_review, 
    2020-01-13 22:48:41      34,455 lines fetched
    2020-01-13 22:48:41 0045 CustomEndFieldCheck:
    2020-01-13 22:48:41 0046   SELECT *
    2020-01-13 22:48:41 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'emergencycontactsend_1'
    2020-01-13 22:48:42      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:48:42      0 lines fetched
    2020-01-13 22:48:42 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'emergencycontactsend_1','emergencycontactsenddate')
    2020-01-13 22:48:42 0053 RS_Interim:
    2020-01-13 22:48:42 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:42 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:42 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:42 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:48:42 0058 	eer.entry_exit_review_id
    2020-01-13 22:48:42 0059   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:48:42 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:42 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:42 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:42 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:42 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:42 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:42 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:48:42 0067   WHERE 
    2020-01-13 22:48:42 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:48:42 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:42 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:42 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:42 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:48:42 0073     AND (ft.emergencycontactsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:42 0074     AND ((ft.emergencycontactsenddate::DATE IS NULL) OR (ft.emergencycontactsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:42 0075   UNION
    2020-01-13 22:48:42 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:42 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:42 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:42 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:48:42 0080     eer.entry_exit_review_id	
    2020-01-13 22:48:42 0081   FROM qlik_sclient_emergencycontacts ft
    2020-01-13 22:48:42 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:42 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:42 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:42 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:42 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:42 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:42 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:48:42 0089   WHERE 
    2020-01-13 22:48:42 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:48:42 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:42 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:42 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:42 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:48:42 0095     AND (ft.emergencycontactsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:42 0096     AND ((ft.emergencycontactsenddate::DATE IS NULL) OR (ft.emergencycontactsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:52      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:52      4,767 lines fetched
    2020-01-13 22:48:52 0099 INNER JOIN(client_emergencycontacts_review)
    2020-01-13 22:48:52 0100   LOAD DISTINCT
    2020-01-13 22:48:52 0101   recordset_id,
    2020-01-13 22:48:52 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:52 0103   provider_creating_id AS [client_EMERGENCYCONTACTS_Provider_Creating_Review],
    2020-01-13 22:48:52 0104   name AS [client_EMERGENCYCONTACTS_Provider_Name_Creating_Review],
    2020-01-13 22:48:52 0105   user_creating_id AS [client_EMERGENCYCONTACTS_User_Created_By_Id_Review],
    2020-01-13 22:48:52 0106   user_name AS [client_EMERGENCYCONTACTS_User_Created_By_Review]
    2020-01-13 22:48:52 0107   RESIDENT RS_Interim
    2020-01-13 22:48:52      	6 fields found: recordset_id, Entry Exit Review Id, client_EMERGENCYCONTACTS_Provider_Creating_Review, client_EMERGENCYCONTACTS_Provider_Name_Creating_Review, client_EMERGENCYCONTACTS_User_Created_By_Id_Review, client_EMERGENCYCONTACTS_User_Created_By_Review, 
    2020-01-13 22:48:52      4,767 lines fetched
    2020-01-13 22:48:52      Joining/Keeping
    2020-01-13 22:48:52 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:52 0110   Noconcatenate
    2020-01-13 22:48:52 0111   LOAD DISTINCT
    2020-01-13 22:48:52 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:52 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:52 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:52 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:52 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:52 0117   RESIDENT RS_Interim
    2020-01-13 22:48:52      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:52      4,111 lines fetched
    2020-01-13 22:48:52 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:52 0121   LOAD
    2020-01-13 22:48:52 0122  [Entry Exit Id],
    2020-01-13 22:48:52 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:52 0124  [Entry Exit Review Type],
    2020-01-13 22:48:52 0125  [Entry Exit Review Date],
    2020-01-13 22:48:52 0126  [Entry Exit Review Id]
    2020-01-13 22:48:52 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:52 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:52      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:52      16,009 lines fetched
    2020-01-13 22:48:52 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:52 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:52 0135 DROP FIELDS client_id FROM client_emergencycontacts_review
    2020-01-13 22:48:52 0136 DROP FIELDS recordset_id FROM client_emergencycontacts_review
    2020-01-13 22:48:52 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:52 0140   Mapping SQL
    2020-01-13 22:48:52 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:52 0142     FROM da_question dq
    2020-01-13 22:48:52 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0144     WHERE
    2020-01-13 22:48:52 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:52 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:52 0148     UNION
    2020-01-13 22:48:52 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:52 0150     FROM da_question dq
    2020-01-13 22:48:52 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0152     WHERE
    2020-01-13 22:48:52 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:52 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:52 0156      UNION
    2020-01-13 22:48:52 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:52 0158     FROM da_question dq
    2020-01-13 22:48:52 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0160     WHERE
    2020-01-13 22:48:52 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:52 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:52 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:52 0165     UNION
    2020-01-13 22:48:52 0166 
    2020-01-13 22:48:52 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:52 0168     FROM da_question dq
    2020-01-13 22:48:52 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0170     WHERE
    2020-01-13 22:48:52 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:52 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:52 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:52 0175     UNION   
    2020-01-13 22:48:52 0176     SELECT
    2020-01-13 22:48:52 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:52 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:52 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:52 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:52 0181     FROM da_question dq
    2020-01-13 22:48:52 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0183     WHERE
    2020-01-13 22:48:52 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:52 0186     UNION
    2020-01-13 22:48:52 0187 	SELECT
    2020-01-13 22:48:52 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:52 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:52 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:52 0191     FROM da_question dq
    2020-01-13 22:48:52 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:52 0193     WHERE
    2020-01-13 22:48:52 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:52 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:53      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:53      1,304 lines fetched
    2020-01-13 22:48:53 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:53 0198 DROP TABLE client_emergencycontacts
    2020-01-13 22:48:53 0200 LET varStepName='STEPINTERIM_' & 9 & '_of_' & 50
    2020-01-13 22:48:53 0201 STEPINTERIM_9_of_50: select 1
    2020-01-13 22:48:53      	1 fields found: ?column?, 
    2020-01-13 22:48:53      1 lines fetched
    2020-01-13 22:48:53 0202 DROP TABLE STEPINTERIM_9_of_50
    2020-01-13 22:48:53 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:53 0205 NEXT
    2020-01-13 22:48:53 0025 LET varRecordSetTableName=Peek('sp_table_name',10,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:53 0026 LET varRecordSetQlikName=Peek('qlik_table_name',10,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:53 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',10,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:53 0029 LET varRecordSetQlikName_Interim='client_employmentexperiencet' & '_review'
    2020-01-13 22:48:53 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('employmentexperiencet') <= 20),'employmentexperiencet' & 'end_1',left('employmentexperiencet', 20)& 'end_1')
    2020-01-13 22:48:53 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'employmentexperiencet' & 'enddate'
    2020-01-13 22:48:53 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_employmentexperiencet', (len('client_employmentexperiencet'))-7))
    2020-01-13 22:48:53 0034 client_employmentexperiencet:
    2020-01-13 22:48:53 0035   SELECT * FROM qlik_sclient_employmentexperiencet
    2020-01-13 22:48:53      	6 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, 
    2020-01-13 22:48:53      566 lines fetched
    2020-01-13 22:48:53 0038 client_employmentexperiencet_review:
    2020-01-13 22:48:53 0039   Noconcatenate
    2020-01-13 22:48:53 0040   LOAD DISTINCT
    2020-01-13 22:48:53 0041   *,
    2020-01-13 22:48:53 0042   recordset_id AS 'client_EMPLOYMENTEXPERIENCETRECORDSET_ID_review'
    2020-01-13 22:48:53 0043   RESIDENT client_employmentexperiencet
    2020-01-13 22:48:53      	7 fields found: recordset_id, client_id, employmentexperiencetstartdate, employmentexperiencetenddate, explainlevelofability, jobskills, client_EMPLOYMENTEXPERIENCETRECORDSET_ID_review, 
    2020-01-13 22:48:53      566 lines fetched
    2020-01-13 22:48:53 0045 CustomEndFieldCheck:
    2020-01-13 22:48:53 0046   SELECT *
    2020-01-13 22:48:53 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'employmentexperienceend_1'
    2020-01-13 22:48:53      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:48:53      0 lines fetched
    2020-01-13 22:48:53 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'employmentexperienceend_1','employmentexperiencetenddate')
    2020-01-13 22:48:53 0053 RS_Interim:
    2020-01-13 22:48:53 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:53 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:53 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:53 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:48:53 0058 	eer.entry_exit_review_id
    2020-01-13 22:48:53 0059   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:48:53 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:53 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:53 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:53 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:53 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:53 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:53 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:48:53 0067   WHERE 
    2020-01-13 22:48:53 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:48:53 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:53 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:53 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:53 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:48:53 0073     AND (ft.employmentexperiencetstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:53 0074     AND ((ft.employmentexperiencetenddate::DATE IS NULL) OR (ft.employmentexperiencetenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:53 0075   UNION
    2020-01-13 22:48:53 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:53 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:53 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:53 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:48:53 0080     eer.entry_exit_review_id	
    2020-01-13 22:48:53 0081   FROM qlik_sclient_employmentexperiencet ft
    2020-01-13 22:48:53 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:53 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:53 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:53 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:53 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:53 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:53 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:48:53 0089   WHERE 
    2020-01-13 22:48:53 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:48:53 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:53 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:53 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:53 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:48:53 0095     AND (ft.employmentexperiencetstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:53 0096     AND ((ft.employmentexperiencetenddate::DATE IS NULL) OR (ft.employmentexperiencetenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:54      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:54      104 lines fetched
    2020-01-13 22:48:54 0099 INNER JOIN(client_employmentexperiencet_review)
    2020-01-13 22:48:54 0100   LOAD DISTINCT
    2020-01-13 22:48:54 0101   recordset_id,
    2020-01-13 22:48:54 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:54 0103   provider_creating_id AS [client_EMPLOYMENTEXPERIENCET_Provider_Creating_Review],
    2020-01-13 22:48:54 0104   name AS [client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Review],
    2020-01-13 22:48:54 0105   user_creating_id AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Review],
    2020-01-13 22:48:54 0106   user_name AS [client_EMPLOYMENTEXPERIENCET_User_Created_By_Review]
    2020-01-13 22:48:54 0107   RESIDENT RS_Interim
    2020-01-13 22:48:54      	6 fields found: recordset_id, Entry Exit Review Id, client_EMPLOYMENTEXPERIENCET_Provider_Creating_Review, client_EMPLOYMENTEXPERIENCET_Provider_Name_Creating_Review, client_EMPLOYMENTEXPERIENCET_User_Created_By_Id_Review, client_EMPLOYMENTEXPERIENCET_User_Created_By_Review, 
    2020-01-13 22:48:54      104 lines fetched
    2020-01-13 22:48:54      Joining/Keeping
    2020-01-13 22:48:54 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:54 0110   Noconcatenate
    2020-01-13 22:48:54 0111   LOAD DISTINCT
    2020-01-13 22:48:54 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:54 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:54 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:54 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:54 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:54 0117   RESIDENT RS_Interim
    2020-01-13 22:48:54      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:54      96 lines fetched
    2020-01-13 22:48:54 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:54 0121   LOAD
    2020-01-13 22:48:54 0122  [Entry Exit Id],
    2020-01-13 22:48:54 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:54 0124  [Entry Exit Review Type],
    2020-01-13 22:48:54 0125  [Entry Exit Review Date],
    2020-01-13 22:48:54 0126  [Entry Exit Review Id]
    2020-01-13 22:48:54 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:54 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:54      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:54      16,009 lines fetched
    2020-01-13 22:48:54 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:54 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:54 0135 DROP FIELDS client_id FROM client_employmentexperiencet_review
    2020-01-13 22:48:54 0136 DROP FIELDS recordset_id FROM client_employmentexperiencet_review
    2020-01-13 22:48:54 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:54 0140   Mapping SQL
    2020-01-13 22:48:54 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:54 0142     FROM da_question dq
    2020-01-13 22:48:54 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0144     WHERE
    2020-01-13 22:48:54 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:54 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:54 0148     UNION
    2020-01-13 22:48:54 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:54 0150     FROM da_question dq
    2020-01-13 22:48:54 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0152     WHERE
    2020-01-13 22:48:54 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:54 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:54 0156      UNION
    2020-01-13 22:48:54 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:54 0158     FROM da_question dq
    2020-01-13 22:48:54 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0160     WHERE
    2020-01-13 22:48:54 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:54 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:54 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:54 0165     UNION
    2020-01-13 22:48:54 0166 
    2020-01-13 22:48:54 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:54 0168     FROM da_question dq
    2020-01-13 22:48:54 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0170     WHERE
    2020-01-13 22:48:54 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:54 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:54 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:54 0175     UNION   
    2020-01-13 22:48:54 0176     SELECT
    2020-01-13 22:48:54 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:54 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:54 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:54 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:54 0181     FROM da_question dq
    2020-01-13 22:48:54 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0183     WHERE
    2020-01-13 22:48:54 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:54 0186     UNION
    2020-01-13 22:48:54 0187 	SELECT
    2020-01-13 22:48:54 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:54 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:54 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:54 0191     FROM da_question dq
    2020-01-13 22:48:54 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:54 0193     WHERE
    2020-01-13 22:48:54 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:54 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:54      1,304 lines fetched
    2020-01-13 22:48:54 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:54 0198 DROP TABLE client_employmentexperiencet
    2020-01-13 22:48:54 0200 LET varStepName='STEPINTERIM_' & 10 & '_of_' & 50
    2020-01-13 22:48:54 0201 STEPINTERIM_10_of_50: select 1
    2020-01-13 22:48:54      	1 fields found: ?column?, 
    2020-01-13 22:48:54      1 lines fetched
    2020-01-13 22:48:54 0202 DROP TABLE STEPINTERIM_10_of_50
    2020-01-13 22:48:54 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:54 0205 NEXT
    2020-01-13 22:48:54 0025 LET varRecordSetTableName=Peek('sp_table_name',11,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:54 0026 LET varRecordSetQlikName=Peek('qlik_table_name',11,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:54 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',11,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:54 0029 LET varRecordSetQlikName_Interim='client_entrypointassessmentp' & '_review'
    2020-01-13 22:48:54 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('entrypointassessmentp') <= 20),'entrypointassessmentp' & 'end_1',left('entrypointassessmentp', 20)& 'end_1')
    2020-01-13 22:48:54 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'entrypointassessmentp' & 'enddate'
    2020-01-13 22:48:54 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_entrypointassessmentp', (len('client_entrypointassessmentp'))-7))
    2020-01-13 22:48:54 0034 client_entrypointassessmentp:
    2020-01-13 22:48:54 0035   SELECT * FROM qlik_sclient_entrypointassessmentp
    2020-01-13 22:48:55      	55 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, 
    2020-01-13 22:48:55      1,492 lines fetched
    2020-01-13 22:48:55 0038 client_entrypointassessmentp_review:
    2020-01-13 22:48:55 0039   Noconcatenate
    2020-01-13 22:48:55 0040   LOAD DISTINCT
    2020-01-13 22:48:55 0041   *,
    2020-01-13 22:48:55 0042   recordset_id AS 'client_ENTRYPOINTASSESSMENTPRECORDSET_ID_review'
    2020-01-13 22:48:55 0043   RESIDENT client_entrypointassessmentp
    2020-01-13 22:48:55      	56 fields found: recordset_id, client_id, entrypointassessmentpstartdate, entrypointassessmentpenddate, casemanager2, casemanageremail2, casemanageremailra, casemanageremailsa, casemanagerphone2, casemanagerphonera, casemanagerphonesa, casemanagerra, casemanagersa, domesticviolenceindic, familyvifspdatscorehh_1, homelessnesshistoryve, indvispdatscoreadulto_1, numberofadultstobehou, numberofbedroomsrequi, numberofminorchildren, part4cevispdatconsent, part5chomelesshistory, part5eincomeverificat_1, agencycompletingvispd, clientalsoworkingwith, disabilityverificatio, dvhousingpreference, entrypointprogresstra, entrypointreceivingag, entrypointsendingagen, entrypointstartstatus, hasthecevispdatconsen_1, householdtypetobehous, initiatingagency, mainstreamresourceide_1, ofamiareamedianincome, part3childandfamilyne_1, part5dveteranstatusve_1, part5gadditionaleligi, part6awhatregionsarey, statusmainstreamresou, chronichomelessnessan, isclientchbasedonhmis, part1safetyscreeningc, part2verifyhmisclient, part5acontactinformat, part5beligibilitysumm, part5fidentifyverific, part6baretherespecial, part6caretherehousing, part6daretherelegalco, part6housingpreferenc_1, specifyothermainstrea, tayvispdatscoreaged18, vulnerabilityandsever, client_ENTRYPOINTASSESSMENTPRECORDSET_ID_review, 
    2020-01-13 22:48:55      1,492 lines fetched
    2020-01-13 22:48:55 0045 CustomEndFieldCheck:
    2020-01-13 22:48:55 0046   SELECT *
    2020-01-13 22:48:55 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'entrypointassessmentend_1'
    2020-01-13 22:48:56      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:48:56      0 lines fetched
    2020-01-13 22:48:56 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'entrypointassessmentend_1','entrypointassessmentpenddate')
    2020-01-13 22:48:56 0053 RS_Interim:
    2020-01-13 22:48:56 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:56 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:56 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:56 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:48:56 0058 	eer.entry_exit_review_id
    2020-01-13 22:48:56 0059   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:48:56 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:56 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:56 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:56 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:56 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:56 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:56 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:48:56 0067   WHERE 
    2020-01-13 22:48:56 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:48:56 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:56 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:56 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:56 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:48:56 0073     AND (ft.entrypointassessmentpstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:56 0074     AND ((ft.entrypointassessmentpenddate::DATE IS NULL) OR (ft.entrypointassessmentpenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:56 0075   UNION
    2020-01-13 22:48:56 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:48:56 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:48:56 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:48:56 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:48:56 0080     eer.entry_exit_review_id	
    2020-01-13 22:48:56 0081   FROM qlik_sclient_entrypointassessmentp ft
    2020-01-13 22:48:56 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:48:56 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:48:56 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:48:56 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:48:56 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:48:56 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:48:56 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:48:56 0089   WHERE 
    2020-01-13 22:48:56 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:48:56 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:48:56 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:48:56 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:48:56 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:48:56 0095     AND (ft.entrypointassessmentpstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:48:56 0096     AND ((ft.entrypointassessmentpenddate::DATE IS NULL) OR (ft.entrypointassessmentpenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:48:57      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:48:57      225 lines fetched
    2020-01-13 22:48:57 0099 INNER JOIN(client_entrypointassessmentp_review)
    2020-01-13 22:48:57 0100   LOAD DISTINCT
    2020-01-13 22:48:57 0101   recordset_id,
    2020-01-13 22:48:57 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:48:57 0103   provider_creating_id AS [client_ENTRYPOINTASSESSMENTP_Provider_Creating_Review],
    2020-01-13 22:48:57 0104   name AS [client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Review],
    2020-01-13 22:48:57 0105   user_creating_id AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Review],
    2020-01-13 22:48:57 0106   user_name AS [client_ENTRYPOINTASSESSMENTP_User_Created_By_Review]
    2020-01-13 22:48:57 0107   RESIDENT RS_Interim
    2020-01-13 22:48:57      	6 fields found: recordset_id, Entry Exit Review Id, client_ENTRYPOINTASSESSMENTP_Provider_Creating_Review, client_ENTRYPOINTASSESSMENTP_Provider_Name_Creating_Review, client_ENTRYPOINTASSESSMENTP_User_Created_By_Id_Review, client_ENTRYPOINTASSESSMENTP_User_Created_By_Review, 
    2020-01-13 22:48:57      225 lines fetched
    2020-01-13 22:48:57      Joining/Keeping
    2020-01-13 22:48:57 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:48:57 0110   Noconcatenate
    2020-01-13 22:48:57 0111   LOAD DISTINCT
    2020-01-13 22:48:57 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:48:57 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:48:57 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:48:57 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:48:57 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:48:57 0117   RESIDENT RS_Interim
    2020-01-13 22:48:57      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:57      223 lines fetched
    2020-01-13 22:48:57 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:48:57 0121   LOAD
    2020-01-13 22:48:57 0122  [Entry Exit Id],
    2020-01-13 22:48:57 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:48:57 0124  [Entry Exit Review Type],
    2020-01-13 22:48:57 0125  [Entry Exit Review Date],
    2020-01-13 22:48:57 0126  [Entry Exit Review Id]
    2020-01-13 22:48:57 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:48:57 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:48:57      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:48:57      16,009 lines fetched
    2020-01-13 22:48:57 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:48:57 0133 DROP TABLE RS_Interim
    2020-01-13 22:48:57 0135 DROP FIELDS client_id FROM client_entrypointassessmentp_review
    2020-01-13 22:48:57 0136 DROP FIELDS recordset_id FROM client_entrypointassessmentp_review
    2020-01-13 22:48:57 0139 FieldMapSaClientInterim:
    2020-01-13 22:48:57 0140   Mapping SQL
    2020-01-13 22:48:57 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:57 0142     FROM da_question dq
    2020-01-13 22:48:57 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0144     WHERE
    2020-01-13 22:48:57 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:48:57 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:48:57 0148     UNION
    2020-01-13 22:48:57 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:57 0150     FROM da_question dq
    2020-01-13 22:48:57 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0152     WHERE
    2020-01-13 22:48:57 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:48:57 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:48:57 0156      UNION
    2020-01-13 22:48:57 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:48:57 0158     FROM da_question dq
    2020-01-13 22:48:57 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0160     WHERE
    2020-01-13 22:48:57 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:48:57 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:48:57 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:57 0165     UNION
    2020-01-13 22:48:57 0166 
    2020-01-13 22:48:57 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:48:57 0168     FROM da_question dq
    2020-01-13 22:48:57 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0170     WHERE
    2020-01-13 22:48:57 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:48:57 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:48:57 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:48:57 0175     UNION   
    2020-01-13 22:48:57 0176     SELECT
    2020-01-13 22:48:57 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:48:57 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:57 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:57 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:48:57 0181     FROM da_question dq
    2020-01-13 22:48:57 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0183     WHERE
    2020-01-13 22:48:57 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:57 0186     UNION
    2020-01-13 22:48:57 0187 	SELECT
    2020-01-13 22:48:57 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:57 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:48:57 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:48:57 0191     FROM da_question dq
    2020-01-13 22:48:57 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:48:57 0193     WHERE
    2020-01-13 22:48:57 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:48:57 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:48:58      	2 fields found: oldnames, newnames, 
    2020-01-13 22:48:58      1,304 lines fetched
    2020-01-13 22:48:58 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:48:58 0198 DROP TABLE client_entrypointassessmentp
    2020-01-13 22:48:58 0200 LET varStepName='STEPINTERIM_' & 11 & '_of_' & 50
    2020-01-13 22:48:58 0201 STEPINTERIM_11_of_50: select 1
    2020-01-13 22:48:58      	1 fields found: ?column?, 
    2020-01-13 22:48:58      1 lines fetched
    2020-01-13 22:48:58 0202 DROP TABLE STEPINTERIM_11_of_50
    2020-01-13 22:48:58 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:48:58 0205 NEXT
    2020-01-13 22:48:58 0025 LET varRecordSetTableName=Peek('sp_table_name',12,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:58 0026 LET varRecordSetQlikName=Peek('qlik_table_name',12,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:58 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',12,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:48:58 0029 LET varRecordSetQlikName_Interim='client_followuptoclient_1' & '_review'
    2020-01-13 22:48:58 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('followuptoclient_1') <= 20),'followuptoclient_1' & 'end_1',left('followuptoclient_1', 20)& 'end_1')
    2020-01-13 22:48:58 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'followuptoclient_1' & 'enddate'
    2020-01-13 22:48:58 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_followuptoclient_1', (len('client_followuptoclient_1'))-7))
    2020-01-13 22:48:58 0034 client_followuptoclient_1:
    2020-01-13 22:48:58 0035   SELECT * FROM qlik_sclient_followuptoclient_1
    2020-01-13 22:49:02      	8 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:49:02      31,809 lines fetched
    2020-01-13 22:49:02 0038 client_followuptoclient_1_review:
    2020-01-13 22:49:02 0039   Noconcatenate
    2020-01-13 22:49:02 0040   LOAD DISTINCT
    2020-01-13 22:49:02 0041   *,
    2020-01-13 22:49:02 0042   recordset_id AS 'client_FOLLOWUPTOCLIENT_1RECORDSET_ID_review'
    2020-01-13 22:49:02 0043   RESIDENT client_followuptoclient_1
    2020-01-13 22:49:03      	9 fields found: recordset_id, client_id, followuptoclient_1startdate, followuptoclient_1enddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, client_FOLLOWUPTOCLIENT_1RECORDSET_ID_review, 
    2020-01-13 22:49:03      31,809 lines fetched
    2020-01-13 22:49:03 0045 CustomEndFieldCheck:
    2020-01-13 22:49:03 0046   SELECT *
    2020-01-13 22:49:03 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'followuptoclient_1end_1'
    2020-01-13 22:49:03      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:03      0 lines fetched
    2020-01-13 22:49:03 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'followuptoclient_1end_1','followuptoclient_1enddate')
    2020-01-13 22:49:03 0053 RS_Interim:
    2020-01-13 22:49:03 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:03 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:03 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:03 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:03 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:03 0059   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:49:03 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:03 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:03 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:03 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:03 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:03 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:03 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:03 0067   WHERE 
    2020-01-13 22:49:03 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:03 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:03 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:03 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:03 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:03 0073     AND (ft.followuptoclient_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:03 0074     AND ((ft.followuptoclient_1enddate::DATE IS NULL) OR (ft.followuptoclient_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:03 0075   UNION
    2020-01-13 22:49:03 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:03 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:03 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:03 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:03 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:03 0081   FROM qlik_sclient_followuptoclient_1 ft
    2020-01-13 22:49:03 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:03 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:03 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:03 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:03 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:03 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:03 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:03 0089   WHERE 
    2020-01-13 22:49:03 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:03 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:03 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:03 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:03 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:03 0095     AND (ft.followuptoclient_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:03 0096     AND ((ft.followuptoclient_1enddate::DATE IS NULL) OR (ft.followuptoclient_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:10      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:10      149 lines fetched
    2020-01-13 22:49:10 0099 INNER JOIN(client_followuptoclient_1_review)
    2020-01-13 22:49:10 0100   LOAD DISTINCT
    2020-01-13 22:49:10 0101   recordset_id,
    2020-01-13 22:49:10 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:10 0103   provider_creating_id AS [client_FOLLOWUPTOCLIENT_1_Provider_Creating_Review],
    2020-01-13 22:49:10 0104   name AS [client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Review],
    2020-01-13 22:49:10 0105   user_creating_id AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Review],
    2020-01-13 22:49:10 0106   user_name AS [client_FOLLOWUPTOCLIENT_1_User_Created_By_Review]
    2020-01-13 22:49:10 0107   RESIDENT RS_Interim
    2020-01-13 22:49:11      	6 fields found: recordset_id, Entry Exit Review Id, client_FOLLOWUPTOCLIENT_1_Provider_Creating_Review, client_FOLLOWUPTOCLIENT_1_Provider_Name_Creating_Review, client_FOLLOWUPTOCLIENT_1_User_Created_By_Id_Review, client_FOLLOWUPTOCLIENT_1_User_Created_By_Review, 
    2020-01-13 22:49:11      149 lines fetched
    2020-01-13 22:49:11      Joining/Keeping
    2020-01-13 22:49:11 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:11 0110   Noconcatenate
    2020-01-13 22:49:11 0111   LOAD DISTINCT
    2020-01-13 22:49:11 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:11 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:11 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:11 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:11 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:11 0117   RESIDENT RS_Interim
    2020-01-13 22:49:11      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:11      67 lines fetched
    2020-01-13 22:49:11 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:11 0121   LOAD
    2020-01-13 22:49:11 0122  [Entry Exit Id],
    2020-01-13 22:49:11 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:11 0124  [Entry Exit Review Type],
    2020-01-13 22:49:11 0125  [Entry Exit Review Date],
    2020-01-13 22:49:11 0126  [Entry Exit Review Id]
    2020-01-13 22:49:11 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:11 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:11      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:11      16,009 lines fetched
    2020-01-13 22:49:11 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:11 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:11 0135 DROP FIELDS client_id FROM client_followuptoclient_1_review
    2020-01-13 22:49:11 0136 DROP FIELDS recordset_id FROM client_followuptoclient_1_review
    2020-01-13 22:49:11 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:11 0140   Mapping SQL
    2020-01-13 22:49:11 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:11 0142     FROM da_question dq
    2020-01-13 22:49:11 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0144     WHERE
    2020-01-13 22:49:11 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:11 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:11 0148     UNION
    2020-01-13 22:49:11 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:11 0150     FROM da_question dq
    2020-01-13 22:49:11 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0152     WHERE
    2020-01-13 22:49:11 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:11 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:11 0156      UNION
    2020-01-13 22:49:11 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:11 0158     FROM da_question dq
    2020-01-13 22:49:11 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0160     WHERE
    2020-01-13 22:49:11 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:11 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:11 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:11 0165     UNION
    2020-01-13 22:49:11 0166 
    2020-01-13 22:49:11 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:11 0168     FROM da_question dq
    2020-01-13 22:49:11 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0170     WHERE
    2020-01-13 22:49:11 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:11 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:11 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:11 0175     UNION   
    2020-01-13 22:49:11 0176     SELECT
    2020-01-13 22:49:11 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:11 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:11 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:11 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:11 0181     FROM da_question dq
    2020-01-13 22:49:11 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0183     WHERE
    2020-01-13 22:49:11 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:11 0186     UNION
    2020-01-13 22:49:11 0187 	SELECT
    2020-01-13 22:49:11 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:11 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:11 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:11 0191     FROM da_question dq
    2020-01-13 22:49:11 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:11 0193     WHERE
    2020-01-13 22:49:11 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:11 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:11      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:11      1,304 lines fetched
    2020-01-13 22:49:11 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:11 0198 DROP TABLE client_followuptoclient_1
    2020-01-13 22:49:11 0200 LET varStepName='STEPINTERIM_' & 12 & '_of_' & 50
    2020-01-13 22:49:11 0201 STEPINTERIM_12_of_50: select 1
    2020-01-13 22:49:11      	1 fields found: ?column?, 
    2020-01-13 22:49:11      1 lines fetched
    2020-01-13 22:49:11 0202 DROP TABLE STEPINTERIM_12_of_50
    2020-01-13 22:49:11 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:11 0205 NEXT
    2020-01-13 22:49:11 0025 LET varRecordSetTableName=Peek('sp_table_name',13,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:11 0026 LET varRecordSetQlikName=Peek('qlik_table_name',13,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:11 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',13,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:11 0029 LET varRecordSetQlikName_Interim='client_hospitalsclincis' & '_review'
    2020-01-13 22:49:11 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hospitalsclincis') <= 20),'hospitalsclincis' & 'end_1',left('hospitalsclincis', 20)& 'end_1')
    2020-01-13 22:49:11 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hospitalsclincis' & 'enddate'
    2020-01-13 22:49:11 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hospitalsclincis', (len('client_hospitalsclincis'))-7))
    2020-01-13 22:49:11 0034 client_hospitalsclincis:
    2020-01-13 22:49:11 0035   SELECT * FROM qlik_sclient_hospitalsclincis
    2020-01-13 22:49:12      	10 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, 
    2020-01-13 22:49:12      1,531 lines fetched
    2020-01-13 22:49:12 0038 client_hospitalsclincis_review:
    2020-01-13 22:49:12 0039   Noconcatenate
    2020-01-13 22:49:12 0040   LOAD DISTINCT
    2020-01-13 22:49:12 0041   *,
    2020-01-13 22:49:12 0042   recordset_id AS 'client_HOSPITALSCLINCISRECORDSET_ID_review'
    2020-01-13 22:49:12 0043   RESIDENT client_hospitalsclincis
    2020-01-13 22:49:12      	11 fields found: recordset_id, client_id, hospitalsclincisstartdate, hospitalsclincisenddate, address, name, phone, cliniccity, hospitalclinicstate_1, zip, client_HOSPITALSCLINCISRECORDSET_ID_review, 
    2020-01-13 22:49:12      1,531 lines fetched
    2020-01-13 22:49:12 0045 CustomEndFieldCheck:
    2020-01-13 22:49:12 0046   SELECT *
    2020-01-13 22:49:12 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hospitalsclincisend_1'
    2020-01-13 22:49:12      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:12      0 lines fetched
    2020-01-13 22:49:12 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hospitalsclincisend_1','hospitalsclincisenddate')
    2020-01-13 22:49:12 0053 RS_Interim:
    2020-01-13 22:49:12 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:12 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:12 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:12 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:12 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:12 0059   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:49:12 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:12 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:12 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:12 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:12 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:12 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:12 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:12 0067   WHERE 
    2020-01-13 22:49:12 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:12 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:12 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:12 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:12 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:12 0073     AND (ft.hospitalsclincisstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:12 0074     AND ((ft.hospitalsclincisenddate::DATE IS NULL) OR (ft.hospitalsclincisenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:12 0075   UNION
    2020-01-13 22:49:12 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:12 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:12 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:12 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:12 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:12 0081   FROM qlik_sclient_hospitalsclincis ft
    2020-01-13 22:49:12 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:12 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:12 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:12 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:12 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:12 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:12 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:12 0089   WHERE 
    2020-01-13 22:49:12 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:12 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:12 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:12 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:12 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:12 0095     AND (ft.hospitalsclincisstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:12 0096     AND ((ft.hospitalsclincisenddate::DATE IS NULL) OR (ft.hospitalsclincisenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:12      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:12      196 lines fetched
    2020-01-13 22:49:12 0099 INNER JOIN(client_hospitalsclincis_review)
    2020-01-13 22:49:12 0100   LOAD DISTINCT
    2020-01-13 22:49:12 0101   recordset_id,
    2020-01-13 22:49:12 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:12 0103   provider_creating_id AS [client_HOSPITALSCLINCIS_Provider_Creating_Review],
    2020-01-13 22:49:12 0104   name AS [client_HOSPITALSCLINCIS_Provider_Name_Creating_Review],
    2020-01-13 22:49:12 0105   user_creating_id AS [client_HOSPITALSCLINCIS_User_Created_By_Id_Review],
    2020-01-13 22:49:12 0106   user_name AS [client_HOSPITALSCLINCIS_User_Created_By_Review]
    2020-01-13 22:49:12 0107   RESIDENT RS_Interim
    2020-01-13 22:49:12      	6 fields found: recordset_id, Entry Exit Review Id, client_HOSPITALSCLINCIS_Provider_Creating_Review, client_HOSPITALSCLINCIS_Provider_Name_Creating_Review, client_HOSPITALSCLINCIS_User_Created_By_Id_Review, client_HOSPITALSCLINCIS_User_Created_By_Review, 
    2020-01-13 22:49:12      196 lines fetched
    2020-01-13 22:49:12      Joining/Keeping
    2020-01-13 22:49:13 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:13 0110   Noconcatenate
    2020-01-13 22:49:13 0111   LOAD DISTINCT
    2020-01-13 22:49:13 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:13 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:13 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:13 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:13 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:13 0117   RESIDENT RS_Interim
    2020-01-13 22:49:13      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:13      169 lines fetched
    2020-01-13 22:49:13 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:13 0121   LOAD
    2020-01-13 22:49:13 0122  [Entry Exit Id],
    2020-01-13 22:49:13 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:13 0124  [Entry Exit Review Type],
    2020-01-13 22:49:13 0125  [Entry Exit Review Date],
    2020-01-13 22:49:13 0126  [Entry Exit Review Id]
    2020-01-13 22:49:13 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:13 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:13      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:13      16,010 lines fetched
    2020-01-13 22:49:13 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:13 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:13 0135 DROP FIELDS client_id FROM client_hospitalsclincis_review
    2020-01-13 22:49:13 0136 DROP FIELDS recordset_id FROM client_hospitalsclincis_review
    2020-01-13 22:49:13 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:13 0140   Mapping SQL
    2020-01-13 22:49:13 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:13 0142     FROM da_question dq
    2020-01-13 22:49:13 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0144     WHERE
    2020-01-13 22:49:13 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:13 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:13 0148     UNION
    2020-01-13 22:49:13 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:13 0150     FROM da_question dq
    2020-01-13 22:49:13 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0152     WHERE
    2020-01-13 22:49:13 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:13 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:13 0156      UNION
    2020-01-13 22:49:13 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:13 0158     FROM da_question dq
    2020-01-13 22:49:13 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0160     WHERE
    2020-01-13 22:49:13 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:13 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:13 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:13 0165     UNION
    2020-01-13 22:49:13 0166 
    2020-01-13 22:49:13 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:13 0168     FROM da_question dq
    2020-01-13 22:49:13 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0170     WHERE
    2020-01-13 22:49:13 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:13 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:13 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:13 0175     UNION   
    2020-01-13 22:49:13 0176     SELECT
    2020-01-13 22:49:13 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:13 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:13 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:13 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:13 0181     FROM da_question dq
    2020-01-13 22:49:13 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0183     WHERE
    2020-01-13 22:49:13 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:13 0186     UNION
    2020-01-13 22:49:13 0187 	SELECT
    2020-01-13 22:49:13 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:13 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:13 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:13 0191     FROM da_question dq
    2020-01-13 22:49:13 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:13 0193     WHERE
    2020-01-13 22:49:13 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:13 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:13      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:13      1,304 lines fetched
    2020-01-13 22:49:13 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:13 0198 DROP TABLE client_hospitalsclincis
    2020-01-13 22:49:13 0200 LET varStepName='STEPINTERIM_' & 13 & '_of_' & 50
    2020-01-13 22:49:13 0201 STEPINTERIM_13_of_50: select 1
    2020-01-13 22:49:13      	1 fields found: ?column?, 
    2020-01-13 22:49:13      1 lines fetched
    2020-01-13 22:49:13 0202 DROP TABLE STEPINTERIM_13_of_50
    2020-01-13 22:49:13 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:13 0205 NEXT
    2020-01-13 22:49:13 0025 LET varRecordSetTableName=Peek('sp_table_name',14,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:13 0026 LET varRecordSetQlikName=Peek('qlik_table_name',14,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:13 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',14,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:13 0029 LET varRecordSetQlikName_Interim='client_housinginterestvispda' & '_review'
    2020-01-13 22:49:13 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterestvispda') <= 20),'housinginterestvispda' & 'end_1',left('housinginterestvispda', 20)& 'end_1')
    2020-01-13 22:49:13 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterestvispda' & 'enddate'
    2020-01-13 22:49:13 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_housinginterestvispda', (len('client_housinginterestvispda'))-7))
    2020-01-13 22:49:13 0034 client_housinginterestvispda:
    2020-01-13 22:49:13 0035   SELECT * FROM qlik_sclient_housinginterestvispda
    2020-01-13 22:49:13      	8 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, 
    2020-01-13 22:49:13      1,278 lines fetched
    2020-01-13 22:49:13 0038 client_housinginterestvispda_review:
    2020-01-13 22:49:13 0039   Noconcatenate
    2020-01-13 22:49:13 0040   LOAD DISTINCT
    2020-01-13 22:49:13 0041   *,
    2020-01-13 22:49:13 0042   recordset_id AS 'client_HOUSINGINTERESTVISPDARECORDSET_ID_review'
    2020-01-13 22:49:13 0043   RESIDENT client_housinginterestvispda
    2020-01-13 22:49:13      	9 fields found: recordset_id, client_id, housinginterestvispdastartdate, housinginterestvispdaenddate, assessorname, assessingagency, assessmentprojecttype, housinginterestoutcome, client_HOUSINGINTERESTVISPDARECORDSET_ID_review, 
    2020-01-13 22:49:13      1,278 lines fetched
    2020-01-13 22:49:13 0045 CustomEndFieldCheck:
    2020-01-13 22:49:13 0046   SELECT *
    2020-01-13 22:49:13 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterestvispdend_1'
    2020-01-13 22:49:14      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:14      0 lines fetched
    2020-01-13 22:49:14 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterestvispdend_1','housinginterestvispdaenddate')
    2020-01-13 22:49:14 0053 RS_Interim:
    2020-01-13 22:49:14 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:14 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:14 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:14 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:14 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:14 0059   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:49:14 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:14 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:14 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:14 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:14 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:14 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:14 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:14 0067   WHERE 
    2020-01-13 22:49:14 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:14 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:14 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:14 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:14 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:14 0073     AND (ft.housinginterestvispdastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:14 0074     AND ((ft.housinginterestvispdaenddate::DATE IS NULL) OR (ft.housinginterestvispdaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:14 0075   UNION
    2020-01-13 22:49:14 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:14 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:14 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:14 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:14 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:14 0081   FROM qlik_sclient_housinginterestvispda ft
    2020-01-13 22:49:14 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:14 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:14 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:14 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:14 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:14 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:14 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:14 0089   WHERE 
    2020-01-13 22:49:14 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:14 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:14 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:14 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:14 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:14 0095     AND (ft.housinginterestvispdastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:14 0096     AND ((ft.housinginterestvispdaenddate::DATE IS NULL) OR (ft.housinginterestvispdaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:14      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:14      297 lines fetched
    2020-01-13 22:49:14 0099 INNER JOIN(client_housinginterestvispda_review)
    2020-01-13 22:49:14 0100   LOAD DISTINCT
    2020-01-13 22:49:14 0101   recordset_id,
    2020-01-13 22:49:14 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:14 0103   provider_creating_id AS [client_HOUSINGINTERESTVISPDA_Provider_Creating_Review],
    2020-01-13 22:49:14 0104   name AS [client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Review],
    2020-01-13 22:49:14 0105   user_creating_id AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Review],
    2020-01-13 22:49:14 0106   user_name AS [client_HOUSINGINTERESTVISPDA_User_Created_By_Review]
    2020-01-13 22:49:14 0107   RESIDENT RS_Interim
    2020-01-13 22:49:14      	6 fields found: recordset_id, Entry Exit Review Id, client_HOUSINGINTERESTVISPDA_Provider_Creating_Review, client_HOUSINGINTERESTVISPDA_Provider_Name_Creating_Review, client_HOUSINGINTERESTVISPDA_User_Created_By_Id_Review, client_HOUSINGINTERESTVISPDA_User_Created_By_Review, 
    2020-01-13 22:49:14      297 lines fetched
    2020-01-13 22:49:14      Joining/Keeping
    2020-01-13 22:49:14 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:14 0110   Noconcatenate
    2020-01-13 22:49:14 0111   LOAD DISTINCT
    2020-01-13 22:49:14 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:14 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:14 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:14 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:14 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:14 0117   RESIDENT RS_Interim
    2020-01-13 22:49:14      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:14      283 lines fetched
    2020-01-13 22:49:14 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:14 0121   LOAD
    2020-01-13 22:49:14 0122  [Entry Exit Id],
    2020-01-13 22:49:14 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:14 0124  [Entry Exit Review Type],
    2020-01-13 22:49:14 0125  [Entry Exit Review Date],
    2020-01-13 22:49:14 0126  [Entry Exit Review Id]
    2020-01-13 22:49:14 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:14 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:14      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:14      16,010 lines fetched
    2020-01-13 22:49:14 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:14 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:14 0135 DROP FIELDS client_id FROM client_housinginterestvispda_review
    2020-01-13 22:49:15 0136 DROP FIELDS recordset_id FROM client_housinginterestvispda_review
    2020-01-13 22:49:15 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:15 0140   Mapping SQL
    2020-01-13 22:49:15 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:15 0142     FROM da_question dq
    2020-01-13 22:49:15 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0144     WHERE
    2020-01-13 22:49:15 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:15 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:15 0148     UNION
    2020-01-13 22:49:15 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:15 0150     FROM da_question dq
    2020-01-13 22:49:15 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0152     WHERE
    2020-01-13 22:49:15 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:15 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:15 0156      UNION
    2020-01-13 22:49:15 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:15 0158     FROM da_question dq
    2020-01-13 22:49:15 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0160     WHERE
    2020-01-13 22:49:15 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:15 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:15 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:15 0165     UNION
    2020-01-13 22:49:15 0166 
    2020-01-13 22:49:15 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:15 0168     FROM da_question dq
    2020-01-13 22:49:15 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0170     WHERE
    2020-01-13 22:49:15 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:15 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:15 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:15 0175     UNION   
    2020-01-13 22:49:15 0176     SELECT
    2020-01-13 22:49:15 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:15 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:15 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:15 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:15 0181     FROM da_question dq
    2020-01-13 22:49:15 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0183     WHERE
    2020-01-13 22:49:15 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:15 0186     UNION
    2020-01-13 22:49:15 0187 	SELECT
    2020-01-13 22:49:15 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:15 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:15 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:15 0191     FROM da_question dq
    2020-01-13 22:49:15 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:15 0193     WHERE
    2020-01-13 22:49:15 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:15 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:15      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:15      1,304 lines fetched
    2020-01-13 22:49:15 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:15 0198 DROP TABLE client_housinginterestvispda
    2020-01-13 22:49:15 0200 LET varStepName='STEPINTERIM_' & 14 & '_of_' & 50
    2020-01-13 22:49:15 0201 STEPINTERIM_14_of_50: select 1
    2020-01-13 22:49:15      	1 fields found: ?column?, 
    2020-01-13 22:49:15      1 lines fetched
    2020-01-13 22:49:15 0202 DROP TABLE STEPINTERIM_14_of_50
    2020-01-13 22:49:15 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:15 0205 NEXT
    2020-01-13 22:49:15 0025 LET varRecordSetTableName=Peek('sp_table_name',15,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:15 0026 LET varRecordSetQlikName=Peek('qlik_table_name',15,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:15 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',15,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:15 0029 LET varRecordSetQlikName_Interim='client_housinginterventionof' & '_review'
    2020-01-13 22:49:15 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housinginterventionof') <= 20),'housinginterventionof' & 'end_1',left('housinginterventionof', 20)& 'end_1')
    2020-01-13 22:49:15 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'housinginterventionof' & 'enddate'
    2020-01-13 22:49:15 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_housinginterventionof', (len('client_housinginterventionof'))-7))
    2020-01-13 22:49:15 0034 client_housinginterventionof:
    2020-01-13 22:49:15 0035   SELECT * FROM qlik_sclient_housinginterventionof
    2020-01-13 22:49:15      	21 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, 
    2020-01-13 22:49:15      977 lines fetched
    2020-01-13 22:49:15 0038 client_housinginterventionof_review:
    2020-01-13 22:49:15 0039   Noconcatenate
    2020-01-13 22:49:15 0040   LOAD DISTINCT
    2020-01-13 22:49:15 0041   *,
    2020-01-13 22:49:15 0042   recordset_id AS 'client_HOUSINGINTERVENTIONOFRECORDSET_ID_review'
    2020-01-13 22:49:15 0043   RESIDENT client_housinginterventionof
    2020-01-13 22:49:15      	22 fields found: recordset_id, client_id, housinginterventionofstartdate, housinginterventionofenddate, cereferralnotes, datehoused, datehousingunassigned, dateofferwithdrawn, dateofhousingassignme, dateracontactedsa, docreadydate, housingmatchdate, phoffernotes, acceptordeclineoffer, reasonhousingofferdec, reasonhousingreferral, reasonofferwithdrawn, receivingagencyhousin, typeofphinterventiono, receivingagencyaccept, vacancyidinoffer, client_HOUSINGINTERVENTIONOFRECORDSET_ID_review, 
    2020-01-13 22:49:15      977 lines fetched
    2020-01-13 22:49:15 0045 CustomEndFieldCheck:
    2020-01-13 22:49:15 0046   SELECT *
    2020-01-13 22:49:15 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housinginterventionoend_1'
    2020-01-13 22:49:16      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:16      0 lines fetched
    2020-01-13 22:49:16 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housinginterventionoend_1','housinginterventionofenddate')
    2020-01-13 22:49:16 0053 RS_Interim:
    2020-01-13 22:49:16 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:16 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:16 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:16 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:16 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:16 0059   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:49:16 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:16 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:16 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:16 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:16 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:16 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:16 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:16 0067   WHERE 
    2020-01-13 22:49:16 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:16 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:16 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:16 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:16 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:16 0073     AND (ft.housinginterventionofstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:16 0074     AND ((ft.housinginterventionofenddate::DATE IS NULL) OR (ft.housinginterventionofenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:16 0075   UNION
    2020-01-13 22:49:16 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:16 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:16 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:16 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:16 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:16 0081   FROM qlik_sclient_housinginterventionof ft
    2020-01-13 22:49:16 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:16 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:16 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:16 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:16 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:16 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:16 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:16 0089   WHERE 
    2020-01-13 22:49:16 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:16 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:16 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:16 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:16 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:16 0095     AND (ft.housinginterventionofstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:16 0096     AND ((ft.housinginterventionofenddate::DATE IS NULL) OR (ft.housinginterventionofenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:16      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:16      42 lines fetched
    2020-01-13 22:49:16 0099 INNER JOIN(client_housinginterventionof_review)
    2020-01-13 22:49:16 0100   LOAD DISTINCT
    2020-01-13 22:49:16 0101   recordset_id,
    2020-01-13 22:49:16 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:16 0103   provider_creating_id AS [client_HOUSINGINTERVENTIONOF_Provider_Creating_Review],
    2020-01-13 22:49:16 0104   name AS [client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Review],
    2020-01-13 22:49:16 0105   user_creating_id AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Review],
    2020-01-13 22:49:16 0106   user_name AS [client_HOUSINGINTERVENTIONOF_User_Created_By_Review]
    2020-01-13 22:49:16 0107   RESIDENT RS_Interim
    2020-01-13 22:49:16      	6 fields found: recordset_id, Entry Exit Review Id, client_HOUSINGINTERVENTIONOF_Provider_Creating_Review, client_HOUSINGINTERVENTIONOF_Provider_Name_Creating_Review, client_HOUSINGINTERVENTIONOF_User_Created_By_Id_Review, client_HOUSINGINTERVENTIONOF_User_Created_By_Review, 
    2020-01-13 22:49:16      42 lines fetched
    2020-01-13 22:49:16      Joining/Keeping
    2020-01-13 22:49:16 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:16 0110   Noconcatenate
    2020-01-13 22:49:16 0111   LOAD DISTINCT
    2020-01-13 22:49:16 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:16 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:16 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:16 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:16 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:16 0117   RESIDENT RS_Interim
    2020-01-13 22:49:16      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:16      20 lines fetched
    2020-01-13 22:49:16 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:16 0121   LOAD
    2020-01-13 22:49:16 0122  [Entry Exit Id],
    2020-01-13 22:49:16 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:16 0124  [Entry Exit Review Type],
    2020-01-13 22:49:16 0125  [Entry Exit Review Date],
    2020-01-13 22:49:16 0126  [Entry Exit Review Id]
    2020-01-13 22:49:16 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:16 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:16      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:16      16,010 lines fetched
    2020-01-13 22:49:16 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:16 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:16 0135 DROP FIELDS client_id FROM client_housinginterventionof_review
    2020-01-13 22:49:16 0136 DROP FIELDS recordset_id FROM client_housinginterventionof_review
    2020-01-13 22:49:17 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:17 0140   Mapping SQL
    2020-01-13 22:49:17 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:17 0142     FROM da_question dq
    2020-01-13 22:49:17 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0144     WHERE
    2020-01-13 22:49:17 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:17 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:17 0148     UNION
    2020-01-13 22:49:17 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:17 0150     FROM da_question dq
    2020-01-13 22:49:17 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0152     WHERE
    2020-01-13 22:49:17 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:17 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:17 0156      UNION
    2020-01-13 22:49:17 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:17 0158     FROM da_question dq
    2020-01-13 22:49:17 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0160     WHERE
    2020-01-13 22:49:17 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:17 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:17 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:17 0165     UNION
    2020-01-13 22:49:17 0166 
    2020-01-13 22:49:17 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:17 0168     FROM da_question dq
    2020-01-13 22:49:17 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0170     WHERE
    2020-01-13 22:49:17 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:17 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:17 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:17 0175     UNION   
    2020-01-13 22:49:17 0176     SELECT
    2020-01-13 22:49:17 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:17 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:17 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:17 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:17 0181     FROM da_question dq
    2020-01-13 22:49:17 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0183     WHERE
    2020-01-13 22:49:17 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:17 0186     UNION
    2020-01-13 22:49:17 0187 	SELECT
    2020-01-13 22:49:17 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:17 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:17 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:17 0191     FROM da_question dq
    2020-01-13 22:49:17 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:17 0193     WHERE
    2020-01-13 22:49:17 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:17 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:17      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:17      1,304 lines fetched
    2020-01-13 22:49:17 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:17 0198 DROP TABLE client_housinginterventionof
    2020-01-13 22:49:17 0200 LET varStepName='STEPINTERIM_' & 15 & '_of_' & 50
    2020-01-13 22:49:17 0201 STEPINTERIM_15_of_50: select 1
    2020-01-13 22:49:17      	1 fields found: ?column?, 
    2020-01-13 22:49:17      1 lines fetched
    2020-01-13 22:49:17 0202 DROP TABLE STEPINTERIM_15_of_50
    2020-01-13 22:49:17 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:17 0205 NEXT
    2020-01-13 22:49:17 0025 LET varRecordSetTableName=Peek('sp_table_name',16,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:17 0026 LET varRecordSetQlikName=Peek('qlik_table_name',16,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:17 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',16,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:17 0029 LET varRecordSetQlikName_Interim='client_housingplacementnotes' & '_review'
    2020-01-13 22:49:17 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('housingplacementnotes') <= 20),'housingplacementnotes' & 'end_1',left('housingplacementnotes', 20)& 'end_1')
    2020-01-13 22:49:17 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'housingplacementnotes' & 'enddate'
    2020-01-13 22:49:17 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_housingplacementnotes', (len('client_housingplacementnotes'))-7))
    2020-01-13 22:49:17 0034 client_housingplacementnotes:
    2020-01-13 22:49:17 0035   SELECT * FROM qlik_sclient_housingplacementnotes
    2020-01-13 22:49:17      	6 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, 
    2020-01-13 22:49:17      5,099 lines fetched
    2020-01-13 22:49:18 0038 client_housingplacementnotes_review:
    2020-01-13 22:49:18 0039   Noconcatenate
    2020-01-13 22:49:18 0040   LOAD DISTINCT
    2020-01-13 22:49:18 0041   *,
    2020-01-13 22:49:18 0042   recordset_id AS 'client_HOUSINGPLACEMENTNOTESRECORDSET_ID_review'
    2020-01-13 22:49:18 0043   RESIDENT client_housingplacementnotes
    2020-01-13 22:49:18      	7 fields found: recordset_id, client_id, housingplacementnotesstartdate, housingplacementnotesenddate, housingplacementnotes_1, placementnotesdate, client_HOUSINGPLACEMENTNOTESRECORDSET_ID_review, 
    2020-01-13 22:49:18      5,099 lines fetched
    2020-01-13 22:49:18 0045 CustomEndFieldCheck:
    2020-01-13 22:49:18 0046   SELECT *
    2020-01-13 22:49:18 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'housingplacementnoteend_1'
    2020-01-13 22:49:18      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:18      0 lines fetched
    2020-01-13 22:49:18 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'housingplacementnoteend_1','housingplacementnotesenddate')
    2020-01-13 22:49:18 0053 RS_Interim:
    2020-01-13 22:49:18 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:18 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:18 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:18 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:18 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:18 0059   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:49:18 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:18 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:18 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:18 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:18 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:18 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:18 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:18 0067   WHERE 
    2020-01-13 22:49:18 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:18 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:18 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:18 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:18 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:18 0073     AND (ft.housingplacementnotesstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:18 0074     AND ((ft.housingplacementnotesenddate::DATE IS NULL) OR (ft.housingplacementnotesenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:18 0075   UNION
    2020-01-13 22:49:18 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:18 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:18 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:18 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:18 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:18 0081   FROM qlik_sclient_housingplacementnotes ft
    2020-01-13 22:49:18 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:18 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:18 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:18 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:18 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:18 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:18 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:18 0089   WHERE 
    2020-01-13 22:49:18 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:18 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:18 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:18 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:18 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:18 0095     AND (ft.housingplacementnotesstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:18 0096     AND ((ft.housingplacementnotesenddate::DATE IS NULL) OR (ft.housingplacementnotesenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:18      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:18      457 lines fetched
    2020-01-13 22:49:18 0099 INNER JOIN(client_housingplacementnotes_review)
    2020-01-13 22:49:18 0100   LOAD DISTINCT
    2020-01-13 22:49:18 0101   recordset_id,
    2020-01-13 22:49:18 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:18 0103   provider_creating_id AS [client_HOUSINGPLACEMENTNOTES_Provider_Creating_Review],
    2020-01-13 22:49:18 0104   name AS [client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Review],
    2020-01-13 22:49:18 0105   user_creating_id AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Review],
    2020-01-13 22:49:18 0106   user_name AS [client_HOUSINGPLACEMENTNOTES_User_Created_By_Review]
    2020-01-13 22:49:18 0107   RESIDENT RS_Interim
    2020-01-13 22:49:18      	6 fields found: recordset_id, Entry Exit Review Id, client_HOUSINGPLACEMENTNOTES_Provider_Creating_Review, client_HOUSINGPLACEMENTNOTES_Provider_Name_Creating_Review, client_HOUSINGPLACEMENTNOTES_User_Created_By_Id_Review, client_HOUSINGPLACEMENTNOTES_User_Created_By_Review, 
    2020-01-13 22:49:18      457 lines fetched
    2020-01-13 22:49:18      Joining/Keeping
    2020-01-13 22:49:18 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:18 0110   Noconcatenate
    2020-01-13 22:49:18 0111   LOAD DISTINCT
    2020-01-13 22:49:18 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:18 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:18 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:18 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:18 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:18 0117   RESIDENT RS_Interim
    2020-01-13 22:49:19      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:19      21 lines fetched
    2020-01-13 22:49:19 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:19 0121   LOAD
    2020-01-13 22:49:19 0122  [Entry Exit Id],
    2020-01-13 22:49:19 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:19 0124  [Entry Exit Review Type],
    2020-01-13 22:49:19 0125  [Entry Exit Review Date],
    2020-01-13 22:49:19 0126  [Entry Exit Review Id]
    2020-01-13 22:49:19 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:19 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:19      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:19      16,010 lines fetched
    2020-01-13 22:49:19 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:19 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:19 0135 DROP FIELDS client_id FROM client_housingplacementnotes_review
    2020-01-13 22:49:19 0136 DROP FIELDS recordset_id FROM client_housingplacementnotes_review
    2020-01-13 22:49:19 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:19 0140   Mapping SQL
    2020-01-13 22:49:19 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:19 0142     FROM da_question dq
    2020-01-13 22:49:19 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0144     WHERE
    2020-01-13 22:49:19 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:19 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:19 0148     UNION
    2020-01-13 22:49:19 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:19 0150     FROM da_question dq
    2020-01-13 22:49:19 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0152     WHERE
    2020-01-13 22:49:19 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:19 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:19 0156      UNION
    2020-01-13 22:49:19 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:19 0158     FROM da_question dq
    2020-01-13 22:49:19 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0160     WHERE
    2020-01-13 22:49:19 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:19 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:19 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:19 0165     UNION
    2020-01-13 22:49:19 0166 
    2020-01-13 22:49:19 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:19 0168     FROM da_question dq
    2020-01-13 22:49:19 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0170     WHERE
    2020-01-13 22:49:19 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:19 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:19 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:19 0175     UNION   
    2020-01-13 22:49:19 0176     SELECT
    2020-01-13 22:49:19 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:19 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:19 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:19 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:19 0181     FROM da_question dq
    2020-01-13 22:49:19 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0183     WHERE
    2020-01-13 22:49:19 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:19 0186     UNION
    2020-01-13 22:49:19 0187 	SELECT
    2020-01-13 22:49:19 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:19 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:19 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:19 0191     FROM da_question dq
    2020-01-13 22:49:19 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:19 0193     WHERE
    2020-01-13 22:49:19 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:19 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:19      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:19      1,304 lines fetched
    2020-01-13 22:49:19 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:19 0198 DROP TABLE client_housingplacementnotes
    2020-01-13 22:49:19 0200 LET varStepName='STEPINTERIM_' & 16 & '_of_' & 50
    2020-01-13 22:49:19 0201 STEPINTERIM_16_of_50: select 1
    2020-01-13 22:49:19      	1 fields found: ?column?, 
    2020-01-13 22:49:19      1 lines fetched
    2020-01-13 22:49:19 0202 DROP TABLE STEPINTERIM_16_of_50
    2020-01-13 22:49:19 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:19 0205 NEXT
    2020-01-13 22:49:19 0025 LET varRecordSetTableName=Peek('sp_table_name',17,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:19 0026 LET varRecordSetQlikName=Peek('qlik_table_name',17,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:19 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',17,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:19 0029 LET varRecordSetQlikName_Interim='client_hud_childenrolldiff' & '_review'
    2020-01-13 22:49:19 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_childenrolldiff') <= 20),'hud_childenrolldiff' & 'end_1',left('hud_childenrolldiff', 20)& 'end_1')
    2020-01-13 22:49:19 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_childenrolldiff' & 'enddate'
    2020-01-13 22:49:19 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_childenrolldiff', (len('client_hud_childenrolldiff'))-7))
    2020-01-13 22:49:19 0034 client_hud_childenrolldiff:
    2020-01-13 22:49:19 0035   SELECT * FROM qlik_sclient_hud_childenrolldiff
    2020-01-13 22:49:19      	5 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, 
    2020-01-13 22:49:19      33 lines fetched
    2020-01-13 22:49:19 0038 client_hud_childenrolldiff_review:
    2020-01-13 22:49:19 0039   Noconcatenate
    2020-01-13 22:49:19 0040   LOAD DISTINCT
    2020-01-13 22:49:19 0041   *,
    2020-01-13 22:49:19 0042   recordset_id AS 'client_HUD_CHILDENROLLDIFFRECORDSET_ID_review'
    2020-01-13 22:49:19 0043   RESIDENT client_hud_childenrolldiff
    2020-01-13 22:49:19      	6 fields found: recordset_id, client_id, hud_childenrolldiffstartdate, hud_childenrolldiffenddate, enrollmentproblem, client_HUD_CHILDENROLLDIFFRECORDSET_ID_review, 
    2020-01-13 22:49:19      33 lines fetched
    2020-01-13 22:49:19 0045 CustomEndFieldCheck:
    2020-01-13 22:49:19 0046   SELECT *
    2020-01-13 22:49:19 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_childenrolldiffend_1'
    2020-01-13 22:49:20      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:20      0 lines fetched
    2020-01-13 22:49:20 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_childenrolldiffend_1','hud_childenrolldiffenddate')
    2020-01-13 22:49:20 0053 RS_Interim:
    2020-01-13 22:49:20 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:20 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:20 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:20 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:20 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:20 0059   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:49:20 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:20 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:20 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:20 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:20 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:20 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:20 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:20 0067   WHERE 
    2020-01-13 22:49:20 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:20 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:20 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:20 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:20 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:20 0073     AND (ft.hud_childenrolldiffstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:20 0074     AND ((ft.hud_childenrolldiffenddate::DATE IS NULL) OR (ft.hud_childenrolldiffenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:20 0075   UNION
    2020-01-13 22:49:20 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:20 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:20 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:20 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:20 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:20 0081   FROM qlik_sclient_hud_childenrolldiff ft
    2020-01-13 22:49:20 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:20 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:20 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:20 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:20 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:20 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:20 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:20 0089   WHERE 
    2020-01-13 22:49:20 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:20 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:20 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:20 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:20 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:20 0095     AND (ft.hud_childenrolldiffstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:20 0096     AND ((ft.hud_childenrolldiffenddate::DATE IS NULL) OR (ft.hud_childenrolldiffenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:20      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:20      4 lines fetched
    2020-01-13 22:49:20 0099 INNER JOIN(client_hud_childenrolldiff_review)
    2020-01-13 22:49:20 0100   LOAD DISTINCT
    2020-01-13 22:49:20 0101   recordset_id,
    2020-01-13 22:49:20 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:20 0103   provider_creating_id AS [client_HUD_CHILDENROLLDIFF_Provider_Creating_Review],
    2020-01-13 22:49:20 0104   name AS [client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Review],
    2020-01-13 22:49:20 0105   user_creating_id AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Review],
    2020-01-13 22:49:20 0106   user_name AS [client_HUD_CHILDENROLLDIFF_User_Created_By_Review]
    2020-01-13 22:49:20 0107   RESIDENT RS_Interim
    2020-01-13 22:49:20      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_CHILDENROLLDIFF_Provider_Creating_Review, client_HUD_CHILDENROLLDIFF_Provider_Name_Creating_Review, client_HUD_CHILDENROLLDIFF_User_Created_By_Id_Review, client_HUD_CHILDENROLLDIFF_User_Created_By_Review, 
    2020-01-13 22:49:20      4 lines fetched
    2020-01-13 22:49:20      Joining/Keeping
    2020-01-13 22:49:20 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:20 0110   Noconcatenate
    2020-01-13 22:49:20 0111   LOAD DISTINCT
    2020-01-13 22:49:20 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:20 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:20 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:20 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:20 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:20 0117   RESIDENT RS_Interim
    2020-01-13 22:49:20      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:20      4 lines fetched
    2020-01-13 22:49:20 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:20 0121   LOAD
    2020-01-13 22:49:20 0122  [Entry Exit Id],
    2020-01-13 22:49:20 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:20 0124  [Entry Exit Review Type],
    2020-01-13 22:49:20 0125  [Entry Exit Review Date],
    2020-01-13 22:49:20 0126  [Entry Exit Review Id]
    2020-01-13 22:49:20 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:20 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:20      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:20      16,010 lines fetched
    2020-01-13 22:49:20 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:20 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:20 0135 DROP FIELDS client_id FROM client_hud_childenrolldiff_review
    2020-01-13 22:49:20 0136 DROP FIELDS recordset_id FROM client_hud_childenrolldiff_review
    2020-01-13 22:49:20 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:20 0140   Mapping SQL
    2020-01-13 22:49:20 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:20 0142     FROM da_question dq
    2020-01-13 22:49:20 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0144     WHERE
    2020-01-13 22:49:20 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:20 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:20 0148     UNION
    2020-01-13 22:49:20 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:20 0150     FROM da_question dq
    2020-01-13 22:49:20 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0152     WHERE
    2020-01-13 22:49:20 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:20 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:20 0156      UNION
    2020-01-13 22:49:20 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:20 0158     FROM da_question dq
    2020-01-13 22:49:20 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0160     WHERE
    2020-01-13 22:49:20 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:20 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:20 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:20 0165     UNION
    2020-01-13 22:49:20 0166 
    2020-01-13 22:49:20 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:20 0168     FROM da_question dq
    2020-01-13 22:49:20 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0170     WHERE
    2020-01-13 22:49:20 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:20 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:20 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:20 0175     UNION   
    2020-01-13 22:49:20 0176     SELECT
    2020-01-13 22:49:20 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:20 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:20 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:20 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:20 0181     FROM da_question dq
    2020-01-13 22:49:20 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0183     WHERE
    2020-01-13 22:49:20 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:20 0186     UNION
    2020-01-13 22:49:20 0187 	SELECT
    2020-01-13 22:49:20 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:20 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:20 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:20 0191     FROM da_question dq
    2020-01-13 22:49:20 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:20 0193     WHERE
    2020-01-13 22:49:20 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:20 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:20      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:20      1,304 lines fetched
    2020-01-13 22:49:20 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:20 0198 DROP TABLE client_hud_childenrolldiff
    2020-01-13 22:49:20 0200 LET varStepName='STEPINTERIM_' & 17 & '_of_' & 50
    2020-01-13 22:49:20 0201 STEPINTERIM_17_of_50: select 1
    2020-01-13 22:49:20      	1 fields found: ?column?, 
    2020-01-13 22:49:20      1 lines fetched
    2020-01-13 22:49:20 0202 DROP TABLE STEPINTERIM_17_of_50
    2020-01-13 22:49:20 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:20 0205 NEXT
    2020-01-13 22:49:20 0025 LET varRecordSetTableName=Peek('sp_table_name',18,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:20 0026 LET varRecordSetQlikName=Peek('qlik_table_name',18,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:20 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',18,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:20 0029 LET varRecordSetQlikName_Interim='client_hud_degreesearnedinfo' & '_review'
    2020-01-13 22:49:20 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_degreesearnedinfo') <= 20),'hud_degreesearnedinfo' & 'end_1',left('hud_degreesearnedinfo', 20)& 'end_1')
    2020-01-13 22:49:20 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_degreesearnedinfo' & 'enddate'
    2020-01-13 22:49:20 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_degreesearnedinfo', (len('client_hud_degreesearnedinfo'))-7))
    2020-01-13 22:49:20 0034 client_hud_degreesearnedinfo:
    2020-01-13 22:49:20 0035   SELECT * FROM qlik_sclient_hud_degreesearnedinfo
    2020-01-13 22:49:21      	7 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, 
    2020-01-13 22:49:21      951 lines fetched
    2020-01-13 22:49:21 0038 client_hud_degreesearnedinfo_review:
    2020-01-13 22:49:21 0039   Noconcatenate
    2020-01-13 22:49:21 0040   LOAD DISTINCT
    2020-01-13 22:49:21 0041   *,
    2020-01-13 22:49:21 0042   recordset_id AS 'client_HUD_DEGREESEARNEDINFORECORDSET_ID_review'
    2020-01-13 22:49:21 0043   RESIDENT client_hud_degreesearnedinfo
    2020-01-13 22:49:21      	8 fields found: recordset_id, client_id, hud_degreesearnedinfostartdate, hud_degreesearnedinfoenddate, programdegreeearnedfr, schooldegreeearnedfrom, hud_educationdegearned, client_HUD_DEGREESEARNEDINFORECORDSET_ID_review, 
    2020-01-13 22:49:21      951 lines fetched
    2020-01-13 22:49:21 0045 CustomEndFieldCheck:
    2020-01-13 22:49:21 0046   SELECT *
    2020-01-13 22:49:21 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_degreesearnedinfend_1'
    2020-01-13 22:49:21      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:49:21      0 lines fetched
    2020-01-13 22:49:21 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_degreesearnedinfend_1','hud_degreesearnedinfoenddate')
    2020-01-13 22:49:21 0053 RS_Interim:
    2020-01-13 22:49:21 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:21 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:21 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:21 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:49:21 0058 	eer.entry_exit_review_id
    2020-01-13 22:49:21 0059   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:49:21 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:21 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:21 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:21 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:21 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:21 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:21 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:49:21 0067   WHERE 
    2020-01-13 22:49:21 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:49:21 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:21 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:21 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:21 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:49:21 0073     AND (ft.hud_degreesearnedinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:21 0074     AND ((ft.hud_degreesearnedinfoenddate::DATE IS NULL) OR (ft.hud_degreesearnedinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:21 0075   UNION
    2020-01-13 22:49:21 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:49:21 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:49:21 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:49:21 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:49:21 0080     eer.entry_exit_review_id	
    2020-01-13 22:49:21 0081   FROM qlik_sclient_hud_degreesearnedinfo ft
    2020-01-13 22:49:21 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:49:21 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:49:21 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:49:21 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:49:21 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:49:21 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:49:21 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:49:21 0089   WHERE 
    2020-01-13 22:49:21 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:49:21 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:49:21 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:49:21 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:49:21 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:49:21 0095     AND (ft.hud_degreesearnedinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:49:21 0096     AND ((ft.hud_degreesearnedinfoenddate::DATE IS NULL) OR (ft.hud_degreesearnedinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:49:21      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:49:21      64 lines fetched
    2020-01-13 22:49:21 0099 INNER JOIN(client_hud_degreesearnedinfo_review)
    2020-01-13 22:49:21 0100   LOAD DISTINCT
    2020-01-13 22:49:21 0101   recordset_id,
    2020-01-13 22:49:21 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:49:21 0103   provider_creating_id AS [client_HUD_DEGREESEARNEDINFO_Provider_Creating_Review],
    2020-01-13 22:49:21 0104   name AS [client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Review],
    2020-01-13 22:49:21 0105   user_creating_id AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Review],
    2020-01-13 22:49:21 0106   user_name AS [client_HUD_DEGREESEARNEDINFO_User_Created_By_Review]
    2020-01-13 22:49:21 0107   RESIDENT RS_Interim
    2020-01-13 22:49:21      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_DEGREESEARNEDINFO_Provider_Creating_Review, client_HUD_DEGREESEARNEDINFO_Provider_Name_Creating_Review, client_HUD_DEGREESEARNEDINFO_User_Created_By_Id_Review, client_HUD_DEGREESEARNEDINFO_User_Created_By_Review, 
    2020-01-13 22:49:21      64 lines fetched
    2020-01-13 22:49:21      Joining/Keeping
    2020-01-13 22:49:21 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:49:21 0110   Noconcatenate
    2020-01-13 22:49:21 0111   LOAD DISTINCT
    2020-01-13 22:49:21 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:49:21 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:49:21 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:49:21 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:49:21 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:49:21 0117   RESIDENT RS_Interim
    2020-01-13 22:49:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:21      64 lines fetched
    2020-01-13 22:49:21 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:49:21 0121   LOAD
    2020-01-13 22:49:21 0122  [Entry Exit Id],
    2020-01-13 22:49:21 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:49:21 0124  [Entry Exit Review Type],
    2020-01-13 22:49:21 0125  [Entry Exit Review Date],
    2020-01-13 22:49:21 0126  [Entry Exit Review Id]
    2020-01-13 22:49:21 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:49:21 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:49:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:49:21      16,010 lines fetched
    2020-01-13 22:49:21 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:49:21 0133 DROP TABLE RS_Interim
    2020-01-13 22:49:21 0135 DROP FIELDS client_id FROM client_hud_degreesearnedinfo_review
    2020-01-13 22:49:21 0136 DROP FIELDS recordset_id FROM client_hud_degreesearnedinfo_review
    2020-01-13 22:49:21 0139 FieldMapSaClientInterim:
    2020-01-13 22:49:21 0140   Mapping SQL
    2020-01-13 22:49:21 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:21 0142     FROM da_question dq
    2020-01-13 22:49:21 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:21 0144     WHERE
    2020-01-13 22:49:21 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:21 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:49:21 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:49:21 0148     UNION
    2020-01-13 22:49:21 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:21 0150     FROM da_question dq
    2020-01-13 22:49:21 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:21 0152     WHERE
    2020-01-13 22:49:21 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:21 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:49:21 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:49:21 0156      UNION
    2020-01-13 22:49:21 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:49:21 0158     FROM da_question dq
    2020-01-13 22:49:21 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:21 0160     WHERE
    2020-01-13 22:49:21 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:21 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:49:21 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:49:21 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:21 0165     UNION
    2020-01-13 22:49:21 0166 
    2020-01-13 22:49:21 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:49:21 0168     FROM da_question dq
    2020-01-13 22:49:21 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:21 0170     WHERE
    2020-01-13 22:49:21 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:21 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:49:21 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:49:21 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:49:21 0175     UNION   
    2020-01-13 22:49:21 0176     SELECT
    2020-01-13 22:49:21 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:49:21 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:21 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:21 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:49:21 0181     FROM da_question dq
    2020-01-13 22:49:21 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:21 0183     WHERE
    2020-01-13 22:49:21 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:21 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:21 0186     UNION
    2020-01-13 22:49:22 0187 	SELECT
    2020-01-13 22:49:22 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:22 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:49:22 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:49:22 0191     FROM da_question dq
    2020-01-13 22:49:22 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:49:22 0193     WHERE
    2020-01-13 22:49:22 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:49:22 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:49:22      	2 fields found: oldnames, newnames, 
    2020-01-13 22:49:22      1,304 lines fetched
    2020-01-13 22:49:22 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:49:22 0198 DROP TABLE client_hud_degreesearnedinfo
    2020-01-13 22:49:22 0200 LET varStepName='STEPINTERIM_' & 18 & '_of_' & 50
    2020-01-13 22:49:22 0201 STEPINTERIM_18_of_50: select 1
    2020-01-13 22:49:22      	1 fields found: ?column?, 
    2020-01-13 22:49:22      1 lines fetched
    2020-01-13 22:49:22 0202 DROP TABLE STEPINTERIM_18_of_50
    2020-01-13 22:49:22 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:49:22 0205 NEXT
    2020-01-13 22:49:22 0025 LET varRecordSetTableName=Peek('sp_table_name',19,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:22 0026 LET varRecordSetQlikName=Peek('qlik_table_name',19,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:22 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',19,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:49:22 0029 LET varRecordSetQlikName_Interim='client_hudhealthinsurancesuba' & '_review'
    2020-01-13 22:49:22 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hudhealthinsurancesuba') <= 20),'hudhealthinsurancesuba' & 'end_1',left('hudhealthinsurancesuba', 20)& 'end_1')
    2020-01-13 22:49:22 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hudhealthinsurancesuba' & 'enddate'
    2020-01-13 22:49:22 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hudhealthinsurancesuba', (len('client_hudhealthinsurancesuba'))-7))
    2020-01-13 22:49:22 0034 client_hudhealthinsurancesuba:
    2020-01-13 22:49:22 0035   SELECT * FROM qlik_sclient_hudhealthinsurancesuba
    2020-01-13 22:50:00      	9 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, 
    2020-01-13 22:50:00      550,217 lines fetched
    2020-01-13 22:50:00 0038 client_hudhealthinsurancesuba_review:
    2020-01-13 22:50:00 0039   Noconcatenate
    2020-01-13 22:50:00 0040   LOAD DISTINCT
    2020-01-13 22:50:00 0041   *,
    2020-01-13 22:50:00 0042   recordset_id AS 'client_HUDHEALTHINSURANCESUBARECORDSET_ID_review'
    2020-01-13 22:50:00 0043   RESIDENT client_hudhealthinsurancesuba
    2020-01-13 22:50:01      	10 fields found: recordset_id, client_id, hudhealthinsurancesubastartdate, hudhealthinsurancesubaenddate, svphudhealthinscovered, svphudhealthinsifnoreasonnotcovered, svphudhealthinsurancetype, svphudhealthinsifotherspecify, svphudhealthinsifprivatepayspecify, client_HUDHEALTHINSURANCESUBARECORDSET_ID_review, 
    2020-01-13 22:50:01      550,217 lines fetched
    2020-01-13 22:50:02 0045 CustomEndFieldCheck:
    2020-01-13 22:50:02 0046   SELECT *
    2020-01-13 22:50:02 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hudhealthinsurancesuend_1'
    2020-01-13 22:50:02      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:50:02      0 lines fetched
    2020-01-13 22:50:02 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hudhealthinsurancesuend_1','hudhealthinsurancesubaenddate')
    2020-01-13 22:50:02 0053 RS_Interim:
    2020-01-13 22:50:02 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:50:02 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:50:02 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:50:02 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:50:02 0058 	eer.entry_exit_review_id
    2020-01-13 22:50:02 0059   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:50:02 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:50:02 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:50:02 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:50:02 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:50:02 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:50:02 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:50:02 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:50:02 0067   WHERE 
    2020-01-13 22:50:02 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:50:02 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:50:02 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:50:02 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:50:02 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:50:02 0073     AND (ft.hudhealthinsurancesubastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:50:02 0074     AND ((ft.hudhealthinsurancesubaenddate::DATE IS NULL) OR (ft.hudhealthinsurancesubaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:50:02 0075   UNION
    2020-01-13 22:50:02 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:50:02 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:50:02 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:50:02 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:50:02 0080     eer.entry_exit_review_id	
    2020-01-13 22:50:02 0081   FROM qlik_sclient_hudhealthinsurancesuba ft
    2020-01-13 22:50:02 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:50:02 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:50:02 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:50:02 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:50:02 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:50:02 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:50:02 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:50:02 0089   WHERE 
    2020-01-13 22:50:02 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:50:02 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:50:02 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:50:02 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:50:02 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:50:02 0095     AND (ft.hudhealthinsurancesubastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:50:02 0096     AND ((ft.hudhealthinsurancesubaenddate::DATE IS NULL) OR (ft.hudhealthinsurancesubaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:20      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:20      144,528 lines fetched
    2020-01-13 22:51:20 0099 INNER JOIN(client_hudhealthinsurancesuba_review)
    2020-01-13 22:51:20 0100   LOAD DISTINCT
    2020-01-13 22:51:20 0101   recordset_id,
    2020-01-13 22:51:20 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:20 0103   provider_creating_id AS [client_HUDHEALTHINSURANCESUBA_Provider_Creating_Review],
    2020-01-13 22:51:20 0104   name AS [client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Review],
    2020-01-13 22:51:20 0105   user_creating_id AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Review],
    2020-01-13 22:51:20 0106   user_name AS [client_HUDHEALTHINSURANCESUBA_User_Created_By_Review]
    2020-01-13 22:51:20 0107   RESIDENT RS_Interim
    2020-01-13 22:51:20      	6 fields found: recordset_id, Entry Exit Review Id, client_HUDHEALTHINSURANCESUBA_Provider_Creating_Review, client_HUDHEALTHINSURANCESUBA_Provider_Name_Creating_Review, client_HUDHEALTHINSURANCESUBA_User_Created_By_Id_Review, client_HUDHEALTHINSURANCESUBA_User_Created_By_Review, 
    2020-01-13 22:51:20      144,528 lines fetched
    2020-01-13 22:51:20      Joining/Keeping
    2020-01-13 22:51:21 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:21 0110   Noconcatenate
    2020-01-13 22:51:21 0111   LOAD DISTINCT
    2020-01-13 22:51:21 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:21 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:21 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:21 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:21 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:21 0117   RESIDENT RS_Interim
    2020-01-13 22:51:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:21      13,691 lines fetched
    2020-01-13 22:51:21 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:21 0121   LOAD
    2020-01-13 22:51:21 0122  [Entry Exit Id],
    2020-01-13 22:51:21 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:21 0124  [Entry Exit Review Type],
    2020-01-13 22:51:21 0125  [Entry Exit Review Date],
    2020-01-13 22:51:21 0126  [Entry Exit Review Id]
    2020-01-13 22:51:21 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:21 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:21      16,089 lines fetched
    2020-01-13 22:51:21 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:21 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:21 0135 DROP FIELDS client_id FROM client_hudhealthinsurancesuba_review
    2020-01-13 22:51:21 0136 DROP FIELDS recordset_id FROM client_hudhealthinsurancesuba_review
    2020-01-13 22:51:21 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:21 0140   Mapping SQL
    2020-01-13 22:51:21 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:21 0142     FROM da_question dq
    2020-01-13 22:51:21 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0144     WHERE
    2020-01-13 22:51:21 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:21 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:21 0148     UNION
    2020-01-13 22:51:21 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:21 0150     FROM da_question dq
    2020-01-13 22:51:21 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0152     WHERE
    2020-01-13 22:51:21 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:21 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:21 0156      UNION
    2020-01-13 22:51:21 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:21 0158     FROM da_question dq
    2020-01-13 22:51:21 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0160     WHERE
    2020-01-13 22:51:21 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:21 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:21 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:21 0165     UNION
    2020-01-13 22:51:21 0166 
    2020-01-13 22:51:21 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:21 0168     FROM da_question dq
    2020-01-13 22:51:21 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0170     WHERE
    2020-01-13 22:51:21 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:21 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:21 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:21 0175     UNION   
    2020-01-13 22:51:21 0176     SELECT
    2020-01-13 22:51:21 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:21 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:21 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:21 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:21 0181     FROM da_question dq
    2020-01-13 22:51:21 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0183     WHERE
    2020-01-13 22:51:21 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:21 0186     UNION
    2020-01-13 22:51:21 0187 	SELECT
    2020-01-13 22:51:21 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:21 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:21 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:21 0191     FROM da_question dq
    2020-01-13 22:51:21 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:21 0193     WHERE
    2020-01-13 22:51:21 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:21 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:21      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:21      1,304 lines fetched
    2020-01-13 22:51:21 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:21 0198 DROP TABLE client_hudhealthinsurancesuba
    2020-01-13 22:51:21 0200 LET varStepName='STEPINTERIM_' & 19 & '_of_' & 50
    2020-01-13 22:51:21 0201 STEPINTERIM_19_of_50: select 1
    2020-01-13 22:51:22      	1 fields found: ?column?, 
    2020-01-13 22:51:22      1 lines fetched
    2020-01-13 22:51:22 0202 DROP TABLE STEPINTERIM_19_of_50
    2020-01-13 22:51:22 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:22 0205 NEXT
    2020-01-13 22:51:22 0025 LET varRecordSetTableName=Peek('sp_table_name',20,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:22 0026 LET varRecordSetQlikName=Peek('qlik_table_name',20,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:22 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',20,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:22 0029 LET varRecordSetQlikName_Interim='client_hud_militarybranchinfo' & '_review'
    2020-01-13 22:51:22 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militarybranchinfo') <= 20),'hud_militarybranchinfo' & 'end_1',left('hud_militarybranchinfo', 20)& 'end_1')
    2020-01-13 22:51:22 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militarybranchinfo' & 'enddate'
    2020-01-13 22:51:22 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_militarybranchinfo', (len('client_hud_militarybranchinfo'))-7))
    2020-01-13 22:51:22 0034 client_hud_militarybranchinfo:
    2020-01-13 22:51:22 0035   SELECT * FROM qlik_sclient_hud_militarybranchinfo
    2020-01-13 22:51:22      	5 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, 
    2020-01-13 22:51:22      2,382 lines fetched
    2020-01-13 22:51:22 0038 client_hud_militarybranchinfo_review:
    2020-01-13 22:51:22 0039   Noconcatenate
    2020-01-13 22:51:22 0040   LOAD DISTINCT
    2020-01-13 22:51:22 0041   *,
    2020-01-13 22:51:22 0042   recordset_id AS 'client_HUD_MILITARYBRANCHINFORECORDSET_ID_review'
    2020-01-13 22:51:22 0043   RESIDENT client_hud_militarybranchinfo
    2020-01-13 22:51:22      	6 fields found: recordset_id, client_id, hud_militarybranchinfostartdate, hud_militarybranchinfoenddate, militarybranch, client_HUD_MILITARYBRANCHINFORECORDSET_ID_review, 
    2020-01-13 22:51:22      2,382 lines fetched
    2020-01-13 22:51:22 0045 CustomEndFieldCheck:
    2020-01-13 22:51:22 0046   SELECT *
    2020-01-13 22:51:22 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militarybranchinend_1'
    2020-01-13 22:51:22      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:22      0 lines fetched
    2020-01-13 22:51:22 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militarybranchinend_1','hud_militarybranchinfoenddate')
    2020-01-13 22:51:22 0053 RS_Interim:
    2020-01-13 22:51:22 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:22 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:22 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:22 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:22 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:22 0059   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:51:22 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:22 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:22 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:22 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:22 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:22 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:22 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:22 0067   WHERE 
    2020-01-13 22:51:22 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:22 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:22 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:22 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:22 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:22 0073     AND (ft.hud_militarybranchinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:22 0074     AND ((ft.hud_militarybranchinfoenddate::DATE IS NULL) OR (ft.hud_militarybranchinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:22 0075   UNION
    2020-01-13 22:51:22 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:22 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:22 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:22 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:22 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:22 0081   FROM qlik_sclient_hud_militarybranchinfo ft
    2020-01-13 22:51:22 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:22 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:22 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:22 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:22 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:22 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:22 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:22 0089   WHERE 
    2020-01-13 22:51:22 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:22 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:22 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:22 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:22 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:22 0095     AND (ft.hud_militarybranchinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:22 0096     AND ((ft.hud_militarybranchinfoenddate::DATE IS NULL) OR (ft.hud_militarybranchinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:23      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:23      30 lines fetched
    2020-01-13 22:51:23 0099 INNER JOIN(client_hud_militarybranchinfo_review)
    2020-01-13 22:51:23 0100   LOAD DISTINCT
    2020-01-13 22:51:23 0101   recordset_id,
    2020-01-13 22:51:23 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:23 0103   provider_creating_id AS [client_HUD_MILITARYBRANCHINFO_Provider_Creating_Review],
    2020-01-13 22:51:23 0104   name AS [client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Review],
    2020-01-13 22:51:23 0105   user_creating_id AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Review],
    2020-01-13 22:51:23 0106   user_name AS [client_HUD_MILITARYBRANCHINFO_User_Created_By_Review]
    2020-01-13 22:51:23 0107   RESIDENT RS_Interim
    2020-01-13 22:51:23      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_MILITARYBRANCHINFO_Provider_Creating_Review, client_HUD_MILITARYBRANCHINFO_Provider_Name_Creating_Review, client_HUD_MILITARYBRANCHINFO_User_Created_By_Id_Review, client_HUD_MILITARYBRANCHINFO_User_Created_By_Review, 
    2020-01-13 22:51:23      30 lines fetched
    2020-01-13 22:51:23      Joining/Keeping
    2020-01-13 22:51:23 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:23 0110   Noconcatenate
    2020-01-13 22:51:23 0111   LOAD DISTINCT
    2020-01-13 22:51:23 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:23 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:23 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:23 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:23 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:23 0117   RESIDENT RS_Interim
    2020-01-13 22:51:23      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:23      30 lines fetched
    2020-01-13 22:51:23 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:23 0121   LOAD
    2020-01-13 22:51:23 0122  [Entry Exit Id],
    2020-01-13 22:51:23 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:23 0124  [Entry Exit Review Type],
    2020-01-13 22:51:23 0125  [Entry Exit Review Date],
    2020-01-13 22:51:23 0126  [Entry Exit Review Id]
    2020-01-13 22:51:23 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:23 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:23      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:23      16,089 lines fetched
    2020-01-13 22:51:23 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:23 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:23 0135 DROP FIELDS client_id FROM client_hud_militarybranchinfo_review
    2020-01-13 22:51:23 0136 DROP FIELDS recordset_id FROM client_hud_militarybranchinfo_review
    2020-01-13 22:51:23 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:23 0140   Mapping SQL
    2020-01-13 22:51:23 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:23 0142     FROM da_question dq
    2020-01-13 22:51:23 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0144     WHERE
    2020-01-13 22:51:23 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:23 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:23 0148     UNION
    2020-01-13 22:51:23 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:23 0150     FROM da_question dq
    2020-01-13 22:51:23 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0152     WHERE
    2020-01-13 22:51:23 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:23 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:23 0156      UNION
    2020-01-13 22:51:23 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:23 0158     FROM da_question dq
    2020-01-13 22:51:23 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0160     WHERE
    2020-01-13 22:51:23 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:23 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:23 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:23 0165     UNION
    2020-01-13 22:51:23 0166 
    2020-01-13 22:51:23 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:23 0168     FROM da_question dq
    2020-01-13 22:51:23 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0170     WHERE
    2020-01-13 22:51:23 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:23 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:23 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:23 0175     UNION   
    2020-01-13 22:51:23 0176     SELECT
    2020-01-13 22:51:23 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:23 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:23 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:23 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:23 0181     FROM da_question dq
    2020-01-13 22:51:23 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0183     WHERE
    2020-01-13 22:51:23 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:23 0186     UNION
    2020-01-13 22:51:23 0187 	SELECT
    2020-01-13 22:51:23 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:23 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:23 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:23 0191     FROM da_question dq
    2020-01-13 22:51:23 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:23 0193     WHERE
    2020-01-13 22:51:23 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:23 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:23      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:23      1,304 lines fetched
    2020-01-13 22:51:23 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:23 0198 DROP TABLE client_hud_militarybranchinfo
    2020-01-13 22:51:23 0200 LET varStepName='STEPINTERIM_' & 20 & '_of_' & 50
    2020-01-13 22:51:23 0201 STEPINTERIM_20_of_50: select 1
    2020-01-13 22:51:23      	1 fields found: ?column?, 
    2020-01-13 22:51:23      1 lines fetched
    2020-01-13 22:51:23 0202 DROP TABLE STEPINTERIM_20_of_50
    2020-01-13 22:51:23 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:23 0205 NEXT
    2020-01-13 22:51:23 0025 LET varRecordSetTableName=Peek('sp_table_name',21,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:23 0026 LET varRecordSetQlikName=Peek('qlik_table_name',21,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:23 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',21,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:23 0029 LET varRecordSetQlikName_Interim='client_hud_militaryserverainfo' & '_review'
    2020-01-13 22:51:23 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_militaryserverainfo') <= 20),'hud_militaryserverainfo' & 'end_1',left('hud_militaryserverainfo', 20)& 'end_1')
    2020-01-13 22:51:23 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_militaryserverainfo' & 'enddate'
    2020-01-13 22:51:23 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_militaryserverainfo', (len('client_hud_militaryserverainfo'))-7))
    2020-01-13 22:51:23 0034 client_hud_militaryserverainfo:
    2020-01-13 22:51:23 0035   SELECT * FROM qlik_sclient_hud_militaryserverainfo
    2020-01-13 22:51:24      	5 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, 
    2020-01-13 22:51:24      2,145 lines fetched
    2020-01-13 22:51:24 0038 client_hud_militaryserverainfo_review:
    2020-01-13 22:51:24 0039   Noconcatenate
    2020-01-13 22:51:24 0040   LOAD DISTINCT
    2020-01-13 22:51:24 0041   *,
    2020-01-13 22:51:24 0042   recordset_id AS 'client_HUD_MILITARYSERVERAINFORECORDSET_ID_review'
    2020-01-13 22:51:24 0043   RESIDENT client_hud_militaryserverainfo
    2020-01-13 22:51:24      	6 fields found: recordset_id, client_id, hud_militaryserverainfostartdate, hud_militaryserverainfoenddate, hud_militaryserviceera, client_HUD_MILITARYSERVERAINFORECORDSET_ID_review, 
    2020-01-13 22:51:24      2,145 lines fetched
    2020-01-13 22:51:24 0045 CustomEndFieldCheck:
    2020-01-13 22:51:24 0046   SELECT *
    2020-01-13 22:51:24 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_militaryserveraiend_1'
    2020-01-13 22:51:24      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:24      0 lines fetched
    2020-01-13 22:51:24 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_militaryserveraiend_1','hud_militaryserverainfoenddate')
    2020-01-13 22:51:24 0053 RS_Interim:
    2020-01-13 22:51:24 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:24 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:24 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:24 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:24 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:24 0059   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:51:24 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:24 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:24 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:24 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:24 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:24 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:24 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:24 0067   WHERE 
    2020-01-13 22:51:24 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:24 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:24 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:24 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:24 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:24 0073     AND (ft.hud_militaryserverainfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:24 0074     AND ((ft.hud_militaryserverainfoenddate::DATE IS NULL) OR (ft.hud_militaryserverainfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:24 0075   UNION
    2020-01-13 22:51:24 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:24 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:24 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:24 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:24 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:24 0081   FROM qlik_sclient_hud_militaryserverainfo ft
    2020-01-13 22:51:24 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:24 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:24 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:24 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:24 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:24 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:24 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:24 0089   WHERE 
    2020-01-13 22:51:24 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:24 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:24 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:24 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:24 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:24 0095     AND (ft.hud_militaryserverainfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:24 0096     AND ((ft.hud_militaryserverainfoenddate::DATE IS NULL) OR (ft.hud_militaryserverainfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:24      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:24      31 lines fetched
    2020-01-13 22:51:24 0099 INNER JOIN(client_hud_militaryserverainfo_review)
    2020-01-13 22:51:24 0100   LOAD DISTINCT
    2020-01-13 22:51:24 0101   recordset_id,
    2020-01-13 22:51:24 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:24 0103   provider_creating_id AS [client_HUD_MILITARYSERVERAINFO_Provider_Creating_Review],
    2020-01-13 22:51:24 0104   name AS [client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Review],
    2020-01-13 22:51:24 0105   user_creating_id AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Review],
    2020-01-13 22:51:24 0106   user_name AS [client_HUD_MILITARYSERVERAINFO_User_Created_By_Review]
    2020-01-13 22:51:24 0107   RESIDENT RS_Interim
    2020-01-13 22:51:24      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_MILITARYSERVERAINFO_Provider_Creating_Review, client_HUD_MILITARYSERVERAINFO_Provider_Name_Creating_Review, client_HUD_MILITARYSERVERAINFO_User_Created_By_Id_Review, client_HUD_MILITARYSERVERAINFO_User_Created_By_Review, 
    2020-01-13 22:51:24      31 lines fetched
    2020-01-13 22:51:24      Joining/Keeping
    2020-01-13 22:51:25 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:25 0110   Noconcatenate
    2020-01-13 22:51:25 0111   LOAD DISTINCT
    2020-01-13 22:51:25 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:25 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:25 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:25 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:25 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:25 0117   RESIDENT RS_Interim
    2020-01-13 22:51:25      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:25      24 lines fetched
    2020-01-13 22:51:25 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:25 0121   LOAD
    2020-01-13 22:51:25 0122  [Entry Exit Id],
    2020-01-13 22:51:25 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:25 0124  [Entry Exit Review Type],
    2020-01-13 22:51:25 0125  [Entry Exit Review Date],
    2020-01-13 22:51:25 0126  [Entry Exit Review Id]
    2020-01-13 22:51:25 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:25 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:25      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:25      16,089 lines fetched
    2020-01-13 22:51:25 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:25 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:25 0135 DROP FIELDS client_id FROM client_hud_militaryserverainfo_review
    2020-01-13 22:51:25 0136 DROP FIELDS recordset_id FROM client_hud_militaryserverainfo_review
    2020-01-13 22:51:25 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:25 0140   Mapping SQL
    2020-01-13 22:51:25 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:25 0142     FROM da_question dq
    2020-01-13 22:51:25 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0144     WHERE
    2020-01-13 22:51:25 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:25 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:25 0148     UNION
    2020-01-13 22:51:25 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:25 0150     FROM da_question dq
    2020-01-13 22:51:25 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0152     WHERE
    2020-01-13 22:51:25 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:25 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:25 0156      UNION
    2020-01-13 22:51:25 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:25 0158     FROM da_question dq
    2020-01-13 22:51:25 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0160     WHERE
    2020-01-13 22:51:25 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:25 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:25 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:25 0165     UNION
    2020-01-13 22:51:25 0166 
    2020-01-13 22:51:25 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:25 0168     FROM da_question dq
    2020-01-13 22:51:25 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0170     WHERE
    2020-01-13 22:51:25 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:25 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:25 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:25 0175     UNION   
    2020-01-13 22:51:25 0176     SELECT
    2020-01-13 22:51:25 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:25 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:25 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:25 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:25 0181     FROM da_question dq
    2020-01-13 22:51:25 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0183     WHERE
    2020-01-13 22:51:25 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:25 0186     UNION
    2020-01-13 22:51:25 0187 	SELECT
    2020-01-13 22:51:25 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:25 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:25 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:25 0191     FROM da_question dq
    2020-01-13 22:51:25 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:25 0193     WHERE
    2020-01-13 22:51:25 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:25 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:25      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:25      1,304 lines fetched
    2020-01-13 22:51:25 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:25 0198 DROP TABLE client_hud_militaryserverainfo
    2020-01-13 22:51:25 0200 LET varStepName='STEPINTERIM_' & 21 & '_of_' & 50
    2020-01-13 22:51:25 0201 STEPINTERIM_21_of_50: select 1
    2020-01-13 22:51:25      	1 fields found: ?column?, 
    2020-01-13 22:51:25      1 lines fetched
    2020-01-13 22:51:25 0202 DROP TABLE STEPINTERIM_21_of_50
    2020-01-13 22:51:25 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:25 0205 NEXT
    2020-01-13 22:51:25 0025 LET varRecordSetTableName=Peek('sp_table_name',22,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:25 0026 LET varRecordSetQlikName=Peek('qlik_table_name',22,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:25 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',22,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:25 0029 LET varRecordSetQlikName_Interim='client_hud_vetinfo' & '_review'
    2020-01-13 22:51:25 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_vetinfo') <= 20),'hud_vetinfo' & 'end_1',left('hud_vetinfo', 20)& 'end_1')
    2020-01-13 22:51:25 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_vetinfo' & 'enddate'
    2020-01-13 22:51:25 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_vetinfo', (len('client_hud_vetinfo'))-7))
    2020-01-13 22:51:25 0034 client_hud_vetinfo:
    2020-01-13 22:51:25 0035   SELECT * FROM qlik_sclient_hud_vetinfo
    2020-01-13 22:51:26      	14 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, 
    2020-01-13 22:51:26      2,222 lines fetched
    2020-01-13 22:51:26 0038 client_hud_vetinfo_review:
    2020-01-13 22:51:26 0039   Noconcatenate
    2020-01-13 22:51:26 0040   LOAD DISTINCT
    2020-01-13 22:51:26 0041   *,
    2020-01-13 22:51:26 0042   recordset_id AS 'client_HUD_VETINFORECORDSET_ID_review'
    2020-01-13 22:51:26 0043   RESIDENT client_hud_vetinfo
    2020-01-13 22:51:26      	15 fields found: recordset_id, client_id, hud_vetinfostartdate, hud_vetinfoenddate, hud_afghanistan, hud_dischargestatus, hud_iraqdawn, hud_iraqfreedom, hud_koreanwar, hud_militarybranch, hud_otherwar, hud_persiangulfwar, hud_vietnamwar, hud_wwii, client_HUD_VETINFORECORDSET_ID_review, 
    2020-01-13 22:51:26      2,222 lines fetched
    2020-01-13 22:51:26 0045 CustomEndFieldCheck:
    2020-01-13 22:51:26 0046   SELECT *
    2020-01-13 22:51:26 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_vetinfoend_1'
    2020-01-13 22:51:26      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:26      0 lines fetched
    2020-01-13 22:51:26 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_vetinfoend_1','hud_vetinfoenddate')
    2020-01-13 22:51:26 0053 RS_Interim:
    2020-01-13 22:51:26 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:26 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:26 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:26 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:26 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:26 0059   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:51:26 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:26 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:26 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:26 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:26 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:26 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:26 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:26 0067   WHERE 
    2020-01-13 22:51:26 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:26 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:26 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:26 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:26 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:26 0073     AND (ft.hud_vetinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:26 0074     AND ((ft.hud_vetinfoenddate::DATE IS NULL) OR (ft.hud_vetinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:26 0075   UNION
    2020-01-13 22:51:26 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:26 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:26 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:26 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:26 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:26 0081   FROM qlik_sclient_hud_vetinfo ft
    2020-01-13 22:51:26 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:26 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:26 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:26 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:26 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:26 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:26 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:26 0089   WHERE 
    2020-01-13 22:51:26 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:26 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:26 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:26 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:26 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:26 0095     AND (ft.hud_vetinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:26 0096     AND ((ft.hud_vetinfoenddate::DATE IS NULL) OR (ft.hud_vetinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:27      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:27      1 lines fetched
    2020-01-13 22:51:27 0099 INNER JOIN(client_hud_vetinfo_review)
    2020-01-13 22:51:27 0100   LOAD DISTINCT
    2020-01-13 22:51:27 0101   recordset_id,
    2020-01-13 22:51:27 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:27 0103   provider_creating_id AS [client_HUD_VETINFO_Provider_Creating_Review],
    2020-01-13 22:51:27 0104   name AS [client_HUD_VETINFO_Provider_Name_Creating_Review],
    2020-01-13 22:51:27 0105   user_creating_id AS [client_HUD_VETINFO_User_Created_By_Id_Review],
    2020-01-13 22:51:27 0106   user_name AS [client_HUD_VETINFO_User_Created_By_Review]
    2020-01-13 22:51:27 0107   RESIDENT RS_Interim
    2020-01-13 22:51:27      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_VETINFO_Provider_Creating_Review, client_HUD_VETINFO_Provider_Name_Creating_Review, client_HUD_VETINFO_User_Created_By_Id_Review, client_HUD_VETINFO_User_Created_By_Review, 
    2020-01-13 22:51:27      1 lines fetched
    2020-01-13 22:51:27      Joining/Keeping
    2020-01-13 22:51:27 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:27 0110   Noconcatenate
    2020-01-13 22:51:27 0111   LOAD DISTINCT
    2020-01-13 22:51:27 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:27 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:27 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:27 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:27 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:27 0117   RESIDENT RS_Interim
    2020-01-13 22:51:27      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:27      1 lines fetched
    2020-01-13 22:51:27 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:27 0121   LOAD
    2020-01-13 22:51:27 0122  [Entry Exit Id],
    2020-01-13 22:51:27 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:27 0124  [Entry Exit Review Type],
    2020-01-13 22:51:27 0125  [Entry Exit Review Date],
    2020-01-13 22:51:27 0126  [Entry Exit Review Id]
    2020-01-13 22:51:27 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:27 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:27      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:27      16,089 lines fetched
    2020-01-13 22:51:27 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:27 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:27 0135 DROP FIELDS client_id FROM client_hud_vetinfo_review
    2020-01-13 22:51:27 0136 DROP FIELDS recordset_id FROM client_hud_vetinfo_review
    2020-01-13 22:51:27 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:27 0140   Mapping SQL
    2020-01-13 22:51:27 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:27 0142     FROM da_question dq
    2020-01-13 22:51:27 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0144     WHERE
    2020-01-13 22:51:27 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:27 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:27 0148     UNION
    2020-01-13 22:51:27 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:27 0150     FROM da_question dq
    2020-01-13 22:51:27 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0152     WHERE
    2020-01-13 22:51:27 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:27 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:27 0156      UNION
    2020-01-13 22:51:27 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:27 0158     FROM da_question dq
    2020-01-13 22:51:27 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0160     WHERE
    2020-01-13 22:51:27 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:27 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:27 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:27 0165     UNION
    2020-01-13 22:51:27 0166 
    2020-01-13 22:51:27 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:27 0168     FROM da_question dq
    2020-01-13 22:51:27 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0170     WHERE
    2020-01-13 22:51:27 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:27 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:27 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:27 0175     UNION   
    2020-01-13 22:51:27 0176     SELECT
    2020-01-13 22:51:27 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:27 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:27 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:27 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:27 0181     FROM da_question dq
    2020-01-13 22:51:27 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0183     WHERE
    2020-01-13 22:51:27 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:27 0186     UNION
    2020-01-13 22:51:27 0187 	SELECT
    2020-01-13 22:51:27 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:27 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:27 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:27 0191     FROM da_question dq
    2020-01-13 22:51:27 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:27 0193     WHERE
    2020-01-13 22:51:27 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:27 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:27      1,304 lines fetched
    2020-01-13 22:51:27 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:27 0198 DROP TABLE client_hud_vetinfo
    2020-01-13 22:51:27 0200 LET varStepName='STEPINTERIM_' & 22 & '_of_' & 50
    2020-01-13 22:51:27 0201 STEPINTERIM_22_of_50: select 1
    2020-01-13 22:51:28      	1 fields found: ?column?, 
    2020-01-13 22:51:28      1 lines fetched
    2020-01-13 22:51:28 0202 DROP TABLE STEPINTERIM_22_of_50
    2020-01-13 22:51:28 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:28 0205 NEXT
    2020-01-13 22:51:28 0025 LET varRecordSetTableName=Peek('sp_table_name',23,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:28 0026 LET varRecordSetQlikName=Peek('qlik_table_name',23,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:28 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',23,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:28 0029 LET varRecordSetQlikName_Interim='client_hud_warzoneinfo' & '_review'
    2020-01-13 22:51:28 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('hud_warzoneinfo') <= 20),'hud_warzoneinfo' & 'end_1',left('hud_warzoneinfo', 20)& 'end_1')
    2020-01-13 22:51:28 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'hud_warzoneinfo' & 'enddate'
    2020-01-13 22:51:28 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_hud_warzoneinfo', (len('client_hud_warzoneinfo'))-7))
    2020-01-13 22:51:28 0034 client_hud_warzoneinfo:
    2020-01-13 22:51:28 0035   SELECT * FROM qlik_sclient_hud_warzoneinfo
    2020-01-13 22:51:28      	7 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, 
    2020-01-13 22:51:28      362 lines fetched
    2020-01-13 22:51:28 0038 client_hud_warzoneinfo_review:
    2020-01-13 22:51:28 0039   Noconcatenate
    2020-01-13 22:51:28 0040   LOAD DISTINCT
    2020-01-13 22:51:28 0041   *,
    2020-01-13 22:51:28 0042   recordset_id AS 'client_HUD_WARZONEINFORECORDSET_ID_review'
    2020-01-13 22:51:28 0043   RESIDENT client_hud_warzoneinfo
    2020-01-13 22:51:28      	8 fields found: recordset_id, client_id, hud_warzoneinfostartdate, hud_warzoneinfoenddate, hud_monthsservedwarzone, hud_receivedfire, hud_warzone, client_HUD_WARZONEINFORECORDSET_ID_review, 
    2020-01-13 22:51:28      362 lines fetched
    2020-01-13 22:51:28 0045 CustomEndFieldCheck:
    2020-01-13 22:51:28 0046   SELECT *
    2020-01-13 22:51:28 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'hud_warzoneinfoend_1'
    2020-01-13 22:51:28      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:28      0 lines fetched
    2020-01-13 22:51:28 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'hud_warzoneinfoend_1','hud_warzoneinfoenddate')
    2020-01-13 22:51:28 0053 RS_Interim:
    2020-01-13 22:51:28 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:28 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:28 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:28 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:28 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:28 0059   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:51:28 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:28 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:28 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:28 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:28 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:28 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:28 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:28 0067   WHERE 
    2020-01-13 22:51:28 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:28 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:28 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:28 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:28 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:28 0073     AND (ft.hud_warzoneinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:28 0074     AND ((ft.hud_warzoneinfoenddate::DATE IS NULL) OR (ft.hud_warzoneinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:28 0075   UNION
    2020-01-13 22:51:28 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:28 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:28 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:28 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:28 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:28 0081   FROM qlik_sclient_hud_warzoneinfo ft
    2020-01-13 22:51:28 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:28 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:28 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:28 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:28 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:28 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:28 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:28 0089   WHERE 
    2020-01-13 22:51:28 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:28 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:28 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:28 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:28 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:28 0095     AND (ft.hud_warzoneinfostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:28 0096     AND ((ft.hud_warzoneinfoenddate::DATE IS NULL) OR (ft.hud_warzoneinfoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:28      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:28      7 lines fetched
    2020-01-13 22:51:28 0099 INNER JOIN(client_hud_warzoneinfo_review)
    2020-01-13 22:51:28 0100   LOAD DISTINCT
    2020-01-13 22:51:28 0101   recordset_id,
    2020-01-13 22:51:28 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:28 0103   provider_creating_id AS [client_HUD_WARZONEINFO_Provider_Creating_Review],
    2020-01-13 22:51:28 0104   name AS [client_HUD_WARZONEINFO_Provider_Name_Creating_Review],
    2020-01-13 22:51:28 0105   user_creating_id AS [client_HUD_WARZONEINFO_User_Created_By_Id_Review],
    2020-01-13 22:51:28 0106   user_name AS [client_HUD_WARZONEINFO_User_Created_By_Review]
    2020-01-13 22:51:28 0107   RESIDENT RS_Interim
    2020-01-13 22:51:28      	6 fields found: recordset_id, Entry Exit Review Id, client_HUD_WARZONEINFO_Provider_Creating_Review, client_HUD_WARZONEINFO_Provider_Name_Creating_Review, client_HUD_WARZONEINFO_User_Created_By_Id_Review, client_HUD_WARZONEINFO_User_Created_By_Review, 
    2020-01-13 22:51:28      7 lines fetched
    2020-01-13 22:51:28      Joining/Keeping
    2020-01-13 22:51:28 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:28 0110   Noconcatenate
    2020-01-13 22:51:28 0111   LOAD DISTINCT
    2020-01-13 22:51:28 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:28 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:28 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:28 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:28 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:28 0117   RESIDENT RS_Interim
    2020-01-13 22:51:28      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:28      7 lines fetched
    2020-01-13 22:51:28 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:28 0121   LOAD
    2020-01-13 22:51:28 0122  [Entry Exit Id],
    2020-01-13 22:51:28 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:28 0124  [Entry Exit Review Type],
    2020-01-13 22:51:28 0125  [Entry Exit Review Date],
    2020-01-13 22:51:28 0126  [Entry Exit Review Id]
    2020-01-13 22:51:28 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:28 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:28      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:28      16,089 lines fetched
    2020-01-13 22:51:28 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:28 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:28 0135 DROP FIELDS client_id FROM client_hud_warzoneinfo_review
    2020-01-13 22:51:28 0136 DROP FIELDS recordset_id FROM client_hud_warzoneinfo_review
    2020-01-13 22:51:28 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:28 0140   Mapping SQL
    2020-01-13 22:51:28 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:28 0142     FROM da_question dq
    2020-01-13 22:51:28 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0144     WHERE
    2020-01-13 22:51:28 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:28 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:28 0148     UNION
    2020-01-13 22:51:28 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:28 0150     FROM da_question dq
    2020-01-13 22:51:28 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0152     WHERE
    2020-01-13 22:51:28 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:28 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:28 0156      UNION
    2020-01-13 22:51:28 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:28 0158     FROM da_question dq
    2020-01-13 22:51:28 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0160     WHERE
    2020-01-13 22:51:28 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:28 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:28 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:28 0165     UNION
    2020-01-13 22:51:28 0166 
    2020-01-13 22:51:28 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:28 0168     FROM da_question dq
    2020-01-13 22:51:28 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0170     WHERE
    2020-01-13 22:51:28 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:28 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:28 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:28 0175     UNION   
    2020-01-13 22:51:28 0176     SELECT
    2020-01-13 22:51:28 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:28 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:28 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:28 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:28 0181     FROM da_question dq
    2020-01-13 22:51:28 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0183     WHERE
    2020-01-13 22:51:28 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:28 0186     UNION
    2020-01-13 22:51:28 0187 	SELECT
    2020-01-13 22:51:28 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:28 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:28 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:28 0191     FROM da_question dq
    2020-01-13 22:51:28 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:28 0193     WHERE
    2020-01-13 22:51:28 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:28 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:29      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:29      1,304 lines fetched
    2020-01-13 22:51:29 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:29 0198 DROP TABLE client_hud_warzoneinfo
    2020-01-13 22:51:29 0200 LET varStepName='STEPINTERIM_' & 23 & '_of_' & 50
    2020-01-13 22:51:29 0201 STEPINTERIM_23_of_50: select 1
    2020-01-13 22:51:29      	1 fields found: ?column?, 
    2020-01-13 22:51:29      1 lines fetched
    2020-01-13 22:51:29 0202 DROP TABLE STEPINTERIM_23_of_50
    2020-01-13 22:51:29 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:29 0205 NEXT
    2020-01-13 22:51:29 0025 LET varRecordSetTableName=Peek('sp_table_name',24,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:29 0026 LET varRecordSetQlikName=Peek('qlik_table_name',24,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:29 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',24,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:29 0029 LET varRecordSetQlikName_Interim='client_medicalproblems' & '_review'
    2020-01-13 22:51:29 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medicalproblems') <= 20),'medicalproblems' & 'end_1',left('medicalproblems', 20)& 'end_1')
    2020-01-13 22:51:29 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'medicalproblems' & 'enddate'
    2020-01-13 22:51:29 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_medicalproblems', (len('client_medicalproblems'))-7))
    2020-01-13 22:51:29 0034 client_medicalproblems:
    2020-01-13 22:51:29 0035   SELECT * FROM qlik_sclient_medicalproblems
    2020-01-13 22:51:30      	11 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, 
    2020-01-13 22:51:30      3,543 lines fetched
    2020-01-13 22:51:30 0038 client_medicalproblems_review:
    2020-01-13 22:51:30 0039   Noconcatenate
    2020-01-13 22:51:30 0040   LOAD DISTINCT
    2020-01-13 22:51:30 0041   *,
    2020-01-13 22:51:30 0042   recordset_id AS 'client_MEDICALPROBLEMSRECORDSET_ID_review'
    2020-01-13 22:51:30 0043   RESIDENT client_medicalproblems
    2020-01-13 22:51:30      	12 fields found: recordset_id, client_id, medicalproblemsstartdate, medicalproblemsenddate, explainmedicalcondition, presentlevelofdistress, recentmedicalcareforc, medicalconditions, caredateunknown_1, receivedmedicalcare, requiredhospitalcare, client_MEDICALPROBLEMSRECORDSET_ID_review, 
    2020-01-13 22:51:30      3,543 lines fetched
    2020-01-13 22:51:30 0045 CustomEndFieldCheck:
    2020-01-13 22:51:30 0046   SELECT *
    2020-01-13 22:51:30 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medicalproblemsend_1'
    2020-01-13 22:51:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:30      0 lines fetched
    2020-01-13 22:51:30 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medicalproblemsend_1','medicalproblemsenddate')
    2020-01-13 22:51:30 0053 RS_Interim:
    2020-01-13 22:51:30 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:30 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:30 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:30 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:30 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:30 0059   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:51:30 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:30 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:30 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:30 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:30 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:30 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:30 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:30 0067   WHERE 
    2020-01-13 22:51:30 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:30 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:30 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:30 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:30 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:30 0073     AND (ft.medicalproblemsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:30 0074     AND ((ft.medicalproblemsenddate::DATE IS NULL) OR (ft.medicalproblemsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:30 0075   UNION
    2020-01-13 22:51:30 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:30 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:30 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:30 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:30 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:30 0081   FROM qlik_sclient_medicalproblems ft
    2020-01-13 22:51:30 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:30 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:30 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:30 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:30 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:30 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:30 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:30 0089   WHERE 
    2020-01-13 22:51:30 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:30 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:30 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:30 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:30 0095     AND (ft.medicalproblemsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:30 0096     AND ((ft.medicalproblemsenddate::DATE IS NULL) OR (ft.medicalproblemsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:31      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:31      358 lines fetched
    2020-01-13 22:51:31 0099 INNER JOIN(client_medicalproblems_review)
    2020-01-13 22:51:31 0100   LOAD DISTINCT
    2020-01-13 22:51:31 0101   recordset_id,
    2020-01-13 22:51:31 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:31 0103   provider_creating_id AS [client_MEDICALPROBLEMS_Provider_Creating_Review],
    2020-01-13 22:51:31 0104   name AS [client_MEDICALPROBLEMS_Provider_Name_Creating_Review],
    2020-01-13 22:51:31 0105   user_creating_id AS [client_MEDICALPROBLEMS_User_Created_By_Id_Review],
    2020-01-13 22:51:31 0106   user_name AS [client_MEDICALPROBLEMS_User_Created_By_Review]
    2020-01-13 22:51:31 0107   RESIDENT RS_Interim
    2020-01-13 22:51:31      	6 fields found: recordset_id, Entry Exit Review Id, client_MEDICALPROBLEMS_Provider_Creating_Review, client_MEDICALPROBLEMS_Provider_Name_Creating_Review, client_MEDICALPROBLEMS_User_Created_By_Id_Review, client_MEDICALPROBLEMS_User_Created_By_Review, 
    2020-01-13 22:51:31      358 lines fetched
    2020-01-13 22:51:31      Joining/Keeping
    2020-01-13 22:51:31 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:31 0110   Noconcatenate
    2020-01-13 22:51:31 0111   LOAD DISTINCT
    2020-01-13 22:51:31 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:31 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:31 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:31 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:31 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:31 0117   RESIDENT RS_Interim
    2020-01-13 22:51:31      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:31      231 lines fetched
    2020-01-13 22:51:31 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:31 0121   LOAD
    2020-01-13 22:51:31 0122  [Entry Exit Id],
    2020-01-13 22:51:31 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:31 0124  [Entry Exit Review Type],
    2020-01-13 22:51:31 0125  [Entry Exit Review Date],
    2020-01-13 22:51:31 0126  [Entry Exit Review Id]
    2020-01-13 22:51:31 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:31 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:31      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:31      16,089 lines fetched
    2020-01-13 22:51:31 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:31 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:31 0135 DROP FIELDS client_id FROM client_medicalproblems_review
    2020-01-13 22:51:31 0136 DROP FIELDS recordset_id FROM client_medicalproblems_review
    2020-01-13 22:51:31 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:31 0140   Mapping SQL
    2020-01-13 22:51:31 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:31 0142     FROM da_question dq
    2020-01-13 22:51:31 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0144     WHERE
    2020-01-13 22:51:31 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:31 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:31 0148     UNION
    2020-01-13 22:51:31 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:31 0150     FROM da_question dq
    2020-01-13 22:51:31 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0152     WHERE
    2020-01-13 22:51:31 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:31 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:31 0156      UNION
    2020-01-13 22:51:31 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:31 0158     FROM da_question dq
    2020-01-13 22:51:31 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0160     WHERE
    2020-01-13 22:51:31 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:31 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:31 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:31 0165     UNION
    2020-01-13 22:51:31 0166 
    2020-01-13 22:51:31 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:31 0168     FROM da_question dq
    2020-01-13 22:51:31 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0170     WHERE
    2020-01-13 22:51:31 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:31 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:31 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:31 0175     UNION   
    2020-01-13 22:51:31 0176     SELECT
    2020-01-13 22:51:31 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:31 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:31 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:31 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:31 0181     FROM da_question dq
    2020-01-13 22:51:31 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0183     WHERE
    2020-01-13 22:51:31 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:31 0186     UNION
    2020-01-13 22:51:31 0187 	SELECT
    2020-01-13 22:51:31 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:31 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:31 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:31 0191     FROM da_question dq
    2020-01-13 22:51:31 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:31 0193     WHERE
    2020-01-13 22:51:31 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:31 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:31      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:31      1,304 lines fetched
    2020-01-13 22:51:31 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:31 0198 DROP TABLE client_medicalproblems
    2020-01-13 22:51:31 0200 LET varStepName='STEPINTERIM_' & 24 & '_of_' & 50
    2020-01-13 22:51:31 0201 STEPINTERIM_24_of_50: select 1
    2020-01-13 22:51:32      	1 fields found: ?column?, 
    2020-01-13 22:51:32      1 lines fetched
    2020-01-13 22:51:32 0202 DROP TABLE STEPINTERIM_24_of_50
    2020-01-13 22:51:32 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:32 0205 NEXT
    2020-01-13 22:51:32 0025 LET varRecordSetTableName=Peek('sp_table_name',25,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:32 0026 LET varRecordSetQlikName=Peek('qlik_table_name',25,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:32 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',25,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:32 0029 LET varRecordSetQlikName_Interim='client_medication_1' & '_review'
    2020-01-13 22:51:32 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('medication_1') <= 20),'medication_1' & 'end_1',left('medication_1', 20)& 'end_1')
    2020-01-13 22:51:32 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'medication_1' & 'enddate'
    2020-01-13 22:51:32 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_medication_1', (len('client_medication_1'))-7))
    2020-01-13 22:51:32 0034 client_medication_1:
    2020-01-13 22:51:32 0035   SELECT * FROM qlik_sclient_medication_1
    2020-01-13 22:51:32      	16 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, 
    2020-01-13 22:51:32      1,605 lines fetched
    2020-01-13 22:51:32 0038 client_medication_1_review:
    2020-01-13 22:51:32 0039   Noconcatenate
    2020-01-13 22:51:32 0040   LOAD DISTINCT
    2020-01-13 22:51:32 0041   *,
    2020-01-13 22:51:32 0042   recordset_id AS 'client_MEDICATION_1RECORDSET_ID_review'
    2020-01-13 22:51:32 0043   RESIDENT client_medication_1
    2020-01-13 22:51:32      	17 fields found: recordset_id, client_id, medication_1startdate, medication_1enddate, dosage, othermedication, pharmachaddress, pharmacyname, pharmacyphonenumber, prescribingphysicianp, prescribingphysician, rationaleformedication, drugtype_1, medication_2, medicationfrequency, routeormethod, client_MEDICATION_1RECORDSET_ID_review, 
    2020-01-13 22:51:32      1,605 lines fetched
    2020-01-13 22:51:32 0045 CustomEndFieldCheck:
    2020-01-13 22:51:32 0046   SELECT *
    2020-01-13 22:51:32 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'medication_1end_1'
    2020-01-13 22:51:32      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:32      0 lines fetched
    2020-01-13 22:51:32 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'medication_1end_1','medication_1enddate')
    2020-01-13 22:51:32 0053 RS_Interim:
    2020-01-13 22:51:32 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:32 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:32 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:32 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:32 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:32 0059   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:51:32 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:32 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:32 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:32 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:32 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:32 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:32 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:32 0067   WHERE 
    2020-01-13 22:51:32 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:32 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:32 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:32 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:32 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:32 0073     AND (ft.medication_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:32 0074     AND ((ft.medication_1enddate::DATE IS NULL) OR (ft.medication_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:32 0075   UNION
    2020-01-13 22:51:32 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:32 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:32 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:32 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:32 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:32 0081   FROM qlik_sclient_medication_1 ft
    2020-01-13 22:51:32 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:32 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:32 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:32 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:32 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:32 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:32 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:32 0089   WHERE 
    2020-01-13 22:51:32 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:32 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:32 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:32 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:32 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:32 0095     AND (ft.medication_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:32 0096     AND ((ft.medication_1enddate::DATE IS NULL) OR (ft.medication_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:33      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:33      54 lines fetched
    2020-01-13 22:51:33 0099 INNER JOIN(client_medication_1_review)
    2020-01-13 22:51:33 0100   LOAD DISTINCT
    2020-01-13 22:51:33 0101   recordset_id,
    2020-01-13 22:51:33 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:33 0103   provider_creating_id AS [client_MEDICATION_1_Provider_Creating_Review],
    2020-01-13 22:51:33 0104   name AS [client_MEDICATION_1_Provider_Name_Creating_Review],
    2020-01-13 22:51:33 0105   user_creating_id AS [client_MEDICATION_1_User_Created_By_Id_Review],
    2020-01-13 22:51:33 0106   user_name AS [client_MEDICATION_1_User_Created_By_Review]
    2020-01-13 22:51:33 0107   RESIDENT RS_Interim
    2020-01-13 22:51:33      	6 fields found: recordset_id, Entry Exit Review Id, client_MEDICATION_1_Provider_Creating_Review, client_MEDICATION_1_Provider_Name_Creating_Review, client_MEDICATION_1_User_Created_By_Id_Review, client_MEDICATION_1_User_Created_By_Review, 
    2020-01-13 22:51:33      54 lines fetched
    2020-01-13 22:51:33      Joining/Keeping
    2020-01-13 22:51:33 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:33 0110   Noconcatenate
    2020-01-13 22:51:33 0111   LOAD DISTINCT
    2020-01-13 22:51:33 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:33 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:33 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:33 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:33 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:33 0117   RESIDENT RS_Interim
    2020-01-13 22:51:33      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:33      23 lines fetched
    2020-01-13 22:51:33 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:33 0121   LOAD
    2020-01-13 22:51:33 0122  [Entry Exit Id],
    2020-01-13 22:51:33 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:33 0124  [Entry Exit Review Type],
    2020-01-13 22:51:33 0125  [Entry Exit Review Date],
    2020-01-13 22:51:33 0126  [Entry Exit Review Id]
    2020-01-13 22:51:33 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:33 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:33      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:33      16,089 lines fetched
    2020-01-13 22:51:33 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:33 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:33 0135 DROP FIELDS client_id FROM client_medication_1_review
    2020-01-13 22:51:33 0136 DROP FIELDS recordset_id FROM client_medication_1_review
    2020-01-13 22:51:33 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:33 0140   Mapping SQL
    2020-01-13 22:51:33 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:33 0142     FROM da_question dq
    2020-01-13 22:51:33 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0144     WHERE
    2020-01-13 22:51:33 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:33 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:33 0148     UNION
    2020-01-13 22:51:33 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:33 0150     FROM da_question dq
    2020-01-13 22:51:33 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0152     WHERE
    2020-01-13 22:51:33 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:33 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:33 0156      UNION
    2020-01-13 22:51:33 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:33 0158     FROM da_question dq
    2020-01-13 22:51:33 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0160     WHERE
    2020-01-13 22:51:33 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:33 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:33 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:33 0165     UNION
    2020-01-13 22:51:33 0166 
    2020-01-13 22:51:33 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:33 0168     FROM da_question dq
    2020-01-13 22:51:33 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0170     WHERE
    2020-01-13 22:51:33 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:33 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:33 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:33 0175     UNION   
    2020-01-13 22:51:33 0176     SELECT
    2020-01-13 22:51:33 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:33 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:33 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:33 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:33 0181     FROM da_question dq
    2020-01-13 22:51:33 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0183     WHERE
    2020-01-13 22:51:33 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:33 0186     UNION
    2020-01-13 22:51:33 0187 	SELECT
    2020-01-13 22:51:33 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:33 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:33 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:33 0191     FROM da_question dq
    2020-01-13 22:51:33 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:33 0193     WHERE
    2020-01-13 22:51:33 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:33 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:34      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:34      1,304 lines fetched
    2020-01-13 22:51:34 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:34 0198 DROP TABLE client_medication_1
    2020-01-13 22:51:34 0200 LET varStepName='STEPINTERIM_' & 25 & '_of_' & 50
    2020-01-13 22:51:34 0201 STEPINTERIM_25_of_50: select 1
    2020-01-13 22:51:34      	1 fields found: ?column?, 
    2020-01-13 22:51:34      1 lines fetched
    2020-01-13 22:51:34 0202 DROP TABLE STEPINTERIM_25_of_50
    2020-01-13 22:51:34 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:34 0205 NEXT
    2020-01-13 22:51:34 0025 LET varRecordSetTableName=Peek('sp_table_name',26,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:34 0026 LET varRecordSetQlikName=Peek('qlik_table_name',26,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:34 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',26,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:34 0029 LET varRecordSetQlikName_Interim='client_mentalhealthassessmen_1' & '_review'
    2020-01-13 22:51:34 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthassessmen_1') <= 20),'mentalhealthassessmen_1' & 'end_1',left('mentalhealthassessmen_1', 20)& 'end_1')
    2020-01-13 22:51:34 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthassessmen_1' & 'enddate'
    2020-01-13 22:51:34 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_mentalhealthassessmen_1', (len('client_mentalhealthassessmen_1'))-7))
    2020-01-13 22:51:34 0034 client_mentalhealthassessmen_1:
    2020-01-13 22:51:34 0035   SELECT * FROM qlik_sclient_mentalhealthassessmen_1
    2020-01-13 22:51:34      	6 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, 
    2020-01-13 22:51:34      2,444 lines fetched
    2020-01-13 22:51:34 0038 client_mentalhealthassessmen_1_review:
    2020-01-13 22:51:34 0039   Noconcatenate
    2020-01-13 22:51:34 0040   LOAD DISTINCT
    2020-01-13 22:51:34 0041   *,
    2020-01-13 22:51:34 0042   recordset_id AS 'client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_review'
    2020-01-13 22:51:34 0043   RESIDENT client_mentalhealthassessmen_1
    2020-01-13 22:51:34      	7 fields found: recordset_id, client_id, mentalhealthassessmen_1startdate, mentalhealthassessmen_1enddate, assessmentdate_2, mentalhealthissueiden, client_MENTALHEALTHASSESSMEN_1RECORDSET_ID_review, 
    2020-01-13 22:51:34      2,444 lines fetched
    2020-01-13 22:51:34 0045 CustomEndFieldCheck:
    2020-01-13 22:51:34 0046   SELECT *
    2020-01-13 22:51:34 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthassessmeend_1'
    2020-01-13 22:51:35      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:35      0 lines fetched
    2020-01-13 22:51:35 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthassessmeend_1','mentalhealthassessmen_1enddate')
    2020-01-13 22:51:35 0053 RS_Interim:
    2020-01-13 22:51:35 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:35 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:35 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:35 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:35 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:35 0059   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:51:35 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:35 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:35 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:35 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:35 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:35 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:35 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:35 0067   WHERE 
    2020-01-13 22:51:35 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:35 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:35 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:35 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:35 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:35 0073     AND (ft.mentalhealthassessmen_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:35 0074     AND ((ft.mentalhealthassessmen_1enddate::DATE IS NULL) OR (ft.mentalhealthassessmen_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:35 0075   UNION
    2020-01-13 22:51:35 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:35 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:35 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:35 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:35 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:35 0081   FROM qlik_sclient_mentalhealthassessmen_1 ft
    2020-01-13 22:51:35 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:35 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:35 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:35 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:35 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:35 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:35 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:35 0089   WHERE 
    2020-01-13 22:51:35 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:35 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:35 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:35 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:35 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:35 0095     AND (ft.mentalhealthassessmen_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:35 0096     AND ((ft.mentalhealthassessmen_1enddate::DATE IS NULL) OR (ft.mentalhealthassessmen_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:35      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:35      88 lines fetched
    2020-01-13 22:51:35 0099 INNER JOIN(client_mentalhealthassessmen_1_review)
    2020-01-13 22:51:35 0100   LOAD DISTINCT
    2020-01-13 22:51:35 0101   recordset_id,
    2020-01-13 22:51:35 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:35 0103   provider_creating_id AS [client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Review],
    2020-01-13 22:51:35 0104   name AS [client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Review],
    2020-01-13 22:51:35 0105   user_creating_id AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Review],
    2020-01-13 22:51:35 0106   user_name AS [client_MENTALHEALTHASSESSMEN_1_User_Created_By_Review]
    2020-01-13 22:51:35 0107   RESIDENT RS_Interim
    2020-01-13 22:51:35      	6 fields found: recordset_id, Entry Exit Review Id, client_MENTALHEALTHASSESSMEN_1_Provider_Creating_Review, client_MENTALHEALTHASSESSMEN_1_Provider_Name_Creating_Review, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Id_Review, client_MENTALHEALTHASSESSMEN_1_User_Created_By_Review, 
    2020-01-13 22:51:35      88 lines fetched
    2020-01-13 22:51:35      Joining/Keeping
    2020-01-13 22:51:35 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:35 0110   Noconcatenate
    2020-01-13 22:51:35 0111   LOAD DISTINCT
    2020-01-13 22:51:35 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:35 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:35 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:35 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:35 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:35 0117   RESIDENT RS_Interim
    2020-01-13 22:51:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:35      75 lines fetched
    2020-01-13 22:51:35 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:35 0121   LOAD
    2020-01-13 22:51:35 0122  [Entry Exit Id],
    2020-01-13 22:51:35 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:35 0124  [Entry Exit Review Type],
    2020-01-13 22:51:35 0125  [Entry Exit Review Date],
    2020-01-13 22:51:35 0126  [Entry Exit Review Id]
    2020-01-13 22:51:35 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:35 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:35      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:35      16,089 lines fetched
    2020-01-13 22:51:35 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:35 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:35 0135 DROP FIELDS client_id FROM client_mentalhealthassessmen_1_review
    2020-01-13 22:51:35 0136 DROP FIELDS recordset_id FROM client_mentalhealthassessmen_1_review
    2020-01-13 22:51:35 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:35 0140   Mapping SQL
    2020-01-13 22:51:35 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:35 0142     FROM da_question dq
    2020-01-13 22:51:35 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0144     WHERE
    2020-01-13 22:51:35 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:35 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:35 0148     UNION
    2020-01-13 22:51:35 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:35 0150     FROM da_question dq
    2020-01-13 22:51:35 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0152     WHERE
    2020-01-13 22:51:35 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:35 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:35 0156      UNION
    2020-01-13 22:51:35 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:35 0158     FROM da_question dq
    2020-01-13 22:51:35 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0160     WHERE
    2020-01-13 22:51:35 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:35 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:35 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:35 0165     UNION
    2020-01-13 22:51:35 0166 
    2020-01-13 22:51:35 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:35 0168     FROM da_question dq
    2020-01-13 22:51:35 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0170     WHERE
    2020-01-13 22:51:35 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:35 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:35 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:35 0175     UNION   
    2020-01-13 22:51:35 0176     SELECT
    2020-01-13 22:51:35 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:35 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:35 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:35 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:35 0181     FROM da_question dq
    2020-01-13 22:51:35 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0183     WHERE
    2020-01-13 22:51:35 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:35 0186     UNION
    2020-01-13 22:51:35 0187 	SELECT
    2020-01-13 22:51:35 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:35 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:35 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:35 0191     FROM da_question dq
    2020-01-13 22:51:35 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:35 0193     WHERE
    2020-01-13 22:51:35 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:35 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:36      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:36      1,304 lines fetched
    2020-01-13 22:51:36 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:36 0198 DROP TABLE client_mentalhealthassessmen_1
    2020-01-13 22:51:36 0200 LET varStepName='STEPINTERIM_' & 26 & '_of_' & 50
    2020-01-13 22:51:36 0201 STEPINTERIM_26_of_50: select 1
    2020-01-13 22:51:36      	1 fields found: ?column?, 
    2020-01-13 22:51:36      1 lines fetched
    2020-01-13 22:51:36 0202 DROP TABLE STEPINTERIM_26_of_50
    2020-01-13 22:51:36 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:36 0205 NEXT
    2020-01-13 22:51:36 0025 LET varRecordSetTableName=Peek('sp_table_name',27,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:36 0026 LET varRecordSetQlikName=Peek('qlik_table_name',27,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:36 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',27,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:36 0029 LET varRecordSetQlikName_Interim='client_mentalhealthtreatment' & '_review'
    2020-01-13 22:51:36 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('mentalhealthtreatment') <= 20),'mentalhealthtreatment' & 'end_1',left('mentalhealthtreatment', 20)& 'end_1')
    2020-01-13 22:51:36 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'mentalhealthtreatment' & 'enddate'
    2020-01-13 22:51:36 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_mentalhealthtreatment', (len('client_mentalhealthtreatment'))-7))
    2020-01-13 22:51:36 0034 client_mentalhealthtreatment:
    2020-01-13 22:51:36 0035   SELECT * FROM qlik_sclient_mentalhealthtreatment
    2020-01-13 22:51:36      	6 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, 
    2020-01-13 22:51:36      1,655 lines fetched
    2020-01-13 22:51:36 0038 client_mentalhealthtreatment_review:
    2020-01-13 22:51:36 0039   Noconcatenate
    2020-01-13 22:51:36 0040   LOAD DISTINCT
    2020-01-13 22:51:36 0041   *,
    2020-01-13 22:51:36 0042   recordset_id AS 'client_MENTALHEALTHTREATMENTRECORDSET_ID_review'
    2020-01-13 22:51:36 0043   RESIDENT client_mentalhealthtreatment
    2020-01-13 22:51:36      	7 fields found: recordset_id, client_id, mentalhealthtreatmentstartdate, mentalhealthtreatmentenddate, locationoftreatment, treatmenttype_1, client_MENTALHEALTHTREATMENTRECORDSET_ID_review, 
    2020-01-13 22:51:36      1,655 lines fetched
    2020-01-13 22:51:36 0045 CustomEndFieldCheck:
    2020-01-13 22:51:36 0046   SELECT *
    2020-01-13 22:51:36 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'mentalhealthtreatmenend_1'
    2020-01-13 22:51:36      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:51:36      0 lines fetched
    2020-01-13 22:51:36 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'mentalhealthtreatmenend_1','mentalhealthtreatmentenddate')
    2020-01-13 22:51:36 0053 RS_Interim:
    2020-01-13 22:51:36 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:36 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:36 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:36 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:51:36 0058 	eer.entry_exit_review_id
    2020-01-13 22:51:36 0059   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:51:36 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:36 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:36 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:36 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:36 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:36 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:36 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:51:36 0067   WHERE 
    2020-01-13 22:51:36 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:51:36 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:36 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:36 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:36 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:51:36 0073     AND (ft.mentalhealthtreatmentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:36 0074     AND ((ft.mentalhealthtreatmentenddate::DATE IS NULL) OR (ft.mentalhealthtreatmentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:36 0075   UNION
    2020-01-13 22:51:36 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:51:36 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:51:36 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:51:36 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:51:36 0080     eer.entry_exit_review_id	
    2020-01-13 22:51:36 0081   FROM qlik_sclient_mentalhealthtreatment ft
    2020-01-13 22:51:36 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:51:36 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:51:36 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:51:36 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:51:36 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:51:36 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:51:36 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:51:36 0089   WHERE 
    2020-01-13 22:51:36 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:51:36 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:51:36 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:51:36 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:51:36 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:51:36 0095     AND (ft.mentalhealthtreatmentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:51:36 0096     AND ((ft.mentalhealthtreatmentenddate::DATE IS NULL) OR (ft.mentalhealthtreatmentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:51:37      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:51:37      318 lines fetched
    2020-01-13 22:51:37 0099 INNER JOIN(client_mentalhealthtreatment_review)
    2020-01-13 22:51:37 0100   LOAD DISTINCT
    2020-01-13 22:51:37 0101   recordset_id,
    2020-01-13 22:51:37 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:51:37 0103   provider_creating_id AS [client_MENTALHEALTHTREATMENT_Provider_Creating_Review],
    2020-01-13 22:51:37 0104   name AS [client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Review],
    2020-01-13 22:51:37 0105   user_creating_id AS [client_MENTALHEALTHTREATMENT_User_Created_By_Id_Review],
    2020-01-13 22:51:37 0106   user_name AS [client_MENTALHEALTHTREATMENT_User_Created_By_Review]
    2020-01-13 22:51:37 0107   RESIDENT RS_Interim
    2020-01-13 22:51:37      	6 fields found: recordset_id, Entry Exit Review Id, client_MENTALHEALTHTREATMENT_Provider_Creating_Review, client_MENTALHEALTHTREATMENT_Provider_Name_Creating_Review, client_MENTALHEALTHTREATMENT_User_Created_By_Id_Review, client_MENTALHEALTHTREATMENT_User_Created_By_Review, 
    2020-01-13 22:51:37      318 lines fetched
    2020-01-13 22:51:37      Joining/Keeping
    2020-01-13 22:51:37 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:51:37 0110   Noconcatenate
    2020-01-13 22:51:37 0111   LOAD DISTINCT
    2020-01-13 22:51:37 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:51:37 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:51:37 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:51:37 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:51:37 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:51:37 0117   RESIDENT RS_Interim
    2020-01-13 22:51:37      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:37      216 lines fetched
    2020-01-13 22:51:37 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:51:37 0121   LOAD
    2020-01-13 22:51:37 0122  [Entry Exit Id],
    2020-01-13 22:51:37 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:51:37 0124  [Entry Exit Review Type],
    2020-01-13 22:51:37 0125  [Entry Exit Review Date],
    2020-01-13 22:51:37 0126  [Entry Exit Review Id]
    2020-01-13 22:51:37 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:51:37 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:51:37      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:51:37      16,089 lines fetched
    2020-01-13 22:51:37 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:51:37 0133 DROP TABLE RS_Interim
    2020-01-13 22:51:37 0135 DROP FIELDS client_id FROM client_mentalhealthtreatment_review
    2020-01-13 22:51:37 0136 DROP FIELDS recordset_id FROM client_mentalhealthtreatment_review
    2020-01-13 22:51:37 0139 FieldMapSaClientInterim:
    2020-01-13 22:51:37 0140   Mapping SQL
    2020-01-13 22:51:37 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:37 0142     FROM da_question dq
    2020-01-13 22:51:37 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0144     WHERE
    2020-01-13 22:51:37 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:51:37 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:51:37 0148     UNION
    2020-01-13 22:51:37 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:37 0150     FROM da_question dq
    2020-01-13 22:51:37 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0152     WHERE
    2020-01-13 22:51:37 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:51:37 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:51:37 0156      UNION
    2020-01-13 22:51:37 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:51:37 0158     FROM da_question dq
    2020-01-13 22:51:37 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0160     WHERE
    2020-01-13 22:51:37 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:51:37 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:51:37 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:37 0165     UNION
    2020-01-13 22:51:37 0166 
    2020-01-13 22:51:37 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:51:37 0168     FROM da_question dq
    2020-01-13 22:51:37 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0170     WHERE
    2020-01-13 22:51:37 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:51:37 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:51:37 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:51:37 0175     UNION   
    2020-01-13 22:51:37 0176     SELECT
    2020-01-13 22:51:37 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:51:37 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:37 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:37 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:51:37 0181     FROM da_question dq
    2020-01-13 22:51:37 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0183     WHERE
    2020-01-13 22:51:37 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:37 0186     UNION
    2020-01-13 22:51:37 0187 	SELECT
    2020-01-13 22:51:37 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:37 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:51:37 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:51:37 0191     FROM da_question dq
    2020-01-13 22:51:37 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:51:37 0193     WHERE
    2020-01-13 22:51:37 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:51:37 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:51:37      	2 fields found: oldnames, newnames, 
    2020-01-13 22:51:37      1,304 lines fetched
    2020-01-13 22:51:37 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:51:37 0198 DROP TABLE client_mentalhealthtreatment
    2020-01-13 22:51:37 0200 LET varStepName='STEPINTERIM_' & 27 & '_of_' & 50
    2020-01-13 22:51:37 0201 STEPINTERIM_27_of_50: select 1
    2020-01-13 22:51:38      	1 fields found: ?column?, 
    2020-01-13 22:51:38      1 lines fetched
    2020-01-13 22:51:38 0202 DROP TABLE STEPINTERIM_27_of_50
    2020-01-13 22:51:38 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:51:38 0205 NEXT
    2020-01-13 22:51:38 0025 LET varRecordSetTableName=Peek('sp_table_name',28,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:38 0026 LET varRecordSetQlikName=Peek('qlik_table_name',28,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:38 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',28,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:51:38 0029 LET varRecordSetQlikName_Interim='client_monthlyincome' & '_review'
    2020-01-13 22:51:38 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('monthlyincome') <= 20),'monthlyincome' & 'end_1',left('monthlyincome', 20)& 'end_1')
    2020-01-13 22:51:38 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'monthlyincome' & 'enddate'
    2020-01-13 22:51:38 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_monthlyincome', (len('client_monthlyincome'))-7))
    2020-01-13 22:51:38 0034 client_monthlyincome:
    2020-01-13 22:51:38 0035   SELECT * FROM qlik_sclient_monthlyincome
    2020-01-13 22:52:32      	9 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, 
    2020-01-13 22:52:32      927,126 lines fetched
    2020-01-13 22:52:32 0038 client_monthlyincome_review:
    2020-01-13 22:52:32 0039   Noconcatenate
    2020-01-13 22:52:32 0040   LOAD DISTINCT
    2020-01-13 22:52:32 0041   *,
    2020-01-13 22:52:32 0042   recordset_id AS 'client_MONTHLYINCOMERECORDSET_ID_review'
    2020-01-13 22:52:32 0043   RESIDENT client_monthlyincome
    2020-01-13 22:52:33      	10 fields found: recordset_id, client_id, monthlyincomestartdate, monthlyincomeenddate, amountmonthlyincome, notesaboutincome, sourceofincome, svp_receivingincomesource, svp_monthlyincomeother, client_MONTHLYINCOMERECORDSET_ID_review, 
    2020-01-13 22:52:33      927,126 lines fetched
    2020-01-13 22:52:33 0045 CustomEndFieldCheck:
    2020-01-13 22:52:33 0046   SELECT *
    2020-01-13 22:52:33 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'monthlyincomeend_1'
    2020-01-13 22:52:33      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:52:33      0 lines fetched
    2020-01-13 22:52:33 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'monthlyincomeend_1','monthlyincomeenddate')
    2020-01-13 22:52:33 0053 RS_Interim:
    2020-01-13 22:52:33 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:52:33 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:52:33 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:52:33 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:52:33 0058 	eer.entry_exit_review_id
    2020-01-13 22:52:33 0059   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:52:33 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:52:33 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:52:33 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:52:33 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:52:33 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:52:33 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:52:33 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:52:33 0067   WHERE 
    2020-01-13 22:52:33 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:52:33 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:52:33 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:52:33 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:52:33 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:52:33 0073     AND (ft.monthlyincomestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:52:33 0074     AND ((ft.monthlyincomeenddate::DATE IS NULL) OR (ft.monthlyincomeenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:52:33 0075   UNION
    2020-01-13 22:52:33 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:52:33 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:52:33 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:52:33 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:52:33 0080     eer.entry_exit_review_id	
    2020-01-13 22:52:33 0081   FROM qlik_sclient_monthlyincome ft
    2020-01-13 22:52:33 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:52:33 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:52:33 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:52:33 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:52:33 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:52:33 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:52:33 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:52:33 0089   WHERE 
    2020-01-13 22:52:33 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:52:33 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:52:33 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:52:33 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:52:33 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:52:33 0095     AND (ft.monthlyincomestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:52:33 0096     AND ((ft.monthlyincomeenddate::DATE IS NULL) OR (ft.monthlyincomeenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:22      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:22      228,301 lines fetched
    2020-01-13 22:54:22 0099 INNER JOIN(client_monthlyincome_review)
    2020-01-13 22:54:22 0100   LOAD DISTINCT
    2020-01-13 22:54:22 0101   recordset_id,
    2020-01-13 22:54:22 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:22 0103   provider_creating_id AS [client_MONTHLYINCOME_Provider_Creating_Review],
    2020-01-13 22:54:22 0104   name AS [client_MONTHLYINCOME_Provider_Name_Creating_Review],
    2020-01-13 22:54:22 0105   user_creating_id AS [client_MONTHLYINCOME_User_Created_By_Id_Review],
    2020-01-13 22:54:22 0106   user_name AS [client_MONTHLYINCOME_User_Created_By_Review]
    2020-01-13 22:54:22 0107   RESIDENT RS_Interim
    2020-01-13 22:54:22      	6 fields found: recordset_id, Entry Exit Review Id, client_MONTHLYINCOME_Provider_Creating_Review, client_MONTHLYINCOME_Provider_Name_Creating_Review, client_MONTHLYINCOME_User_Created_By_Id_Review, client_MONTHLYINCOME_User_Created_By_Review, 
    2020-01-13 22:54:22      228,301 lines fetched
    2020-01-13 22:54:22      Joining/Keeping
    2020-01-13 22:54:23 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:23 0110   Noconcatenate
    2020-01-13 22:54:23 0111   LOAD DISTINCT
    2020-01-13 22:54:23 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:23 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:23 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:23 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:23 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:23 0117   RESIDENT RS_Interim
    2020-01-13 22:54:23      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:23      14,035 lines fetched
    2020-01-13 22:54:23 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:23 0121   LOAD
    2020-01-13 22:54:23 0122  [Entry Exit Id],
    2020-01-13 22:54:23 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:23 0124  [Entry Exit Review Type],
    2020-01-13 22:54:23 0125  [Entry Exit Review Date],
    2020-01-13 22:54:23 0126  [Entry Exit Review Id]
    2020-01-13 22:54:23 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:23 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:23      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:23      16,095 lines fetched
    2020-01-13 22:54:23 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:23 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:23 0135 DROP FIELDS client_id FROM client_monthlyincome_review
    2020-01-13 22:54:23 0136 DROP FIELDS recordset_id FROM client_monthlyincome_review
    2020-01-13 22:54:23 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:23 0140   Mapping SQL
    2020-01-13 22:54:23 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:23 0142     FROM da_question dq
    2020-01-13 22:54:23 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0144     WHERE
    2020-01-13 22:54:23 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:23 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:23 0148     UNION
    2020-01-13 22:54:23 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:23 0150     FROM da_question dq
    2020-01-13 22:54:23 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0152     WHERE
    2020-01-13 22:54:23 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:23 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:23 0156      UNION
    2020-01-13 22:54:23 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:23 0158     FROM da_question dq
    2020-01-13 22:54:23 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0160     WHERE
    2020-01-13 22:54:23 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:23 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:23 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:23 0165     UNION
    2020-01-13 22:54:23 0166 
    2020-01-13 22:54:23 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:23 0168     FROM da_question dq
    2020-01-13 22:54:23 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0170     WHERE
    2020-01-13 22:54:23 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:23 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:23 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:23 0175     UNION   
    2020-01-13 22:54:23 0176     SELECT
    2020-01-13 22:54:23 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:23 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:23 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:23 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:23 0181     FROM da_question dq
    2020-01-13 22:54:23 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0183     WHERE
    2020-01-13 22:54:23 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:23 0186     UNION
    2020-01-13 22:54:23 0187 	SELECT
    2020-01-13 22:54:23 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:23 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:23 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:23 0191     FROM da_question dq
    2020-01-13 22:54:23 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:23 0193     WHERE
    2020-01-13 22:54:23 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:23 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:24      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:24      1,304 lines fetched
    2020-01-13 22:54:24 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:24 0198 DROP TABLE client_monthlyincome
    2020-01-13 22:54:24 0200 LET varStepName='STEPINTERIM_' & 28 & '_of_' & 50
    2020-01-13 22:54:24 0201 STEPINTERIM_28_of_50: select 1
    2020-01-13 22:54:24      	1 fields found: ?column?, 
    2020-01-13 22:54:24      1 lines fetched
    2020-01-13 22:54:24 0202 DROP TABLE STEPINTERIM_28_of_50
    2020-01-13 22:54:24 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:24 0205 NEXT
    2020-01-13 22:54:24 0025 LET varRecordSetTableName=Peek('sp_table_name',29,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:24 0026 LET varRecordSetQlikName=Peek('qlik_table_name',29,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:24 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',29,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:24 0029 LET varRecordSetQlikName_Interim='client_npi0101employmentindi' & '_review'
    2020-01-13 22:54:24 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0101employmentindi') <= 20),'npi0101employmentindi' & 'end_1',left('npi0101employmentindi', 20)& 'end_1')
    2020-01-13 22:54:24 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0101employmentindi' & 'enddate'
    2020-01-13 22:54:24 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_npi0101employmentindi', (len('client_npi0101employmentindi'))-7))
    2020-01-13 22:54:24 0034 client_npi0101employmentindi:
    2020-01-13 22:54:24 0035   SELECT * FROM qlik_sclient_npi0101employmentindi
    2020-01-13 22:54:24      	7 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, 
    2020-01-13 22:54:24      38 lines fetched
    2020-01-13 22:54:24 0038 client_npi0101employmentindi_review:
    2020-01-13 22:54:24 0039   Noconcatenate
    2020-01-13 22:54:24 0040   LOAD DISTINCT
    2020-01-13 22:54:24 0041   *,
    2020-01-13 22:54:24 0042   recordset_id AS 'client_NPI0101EMPLOYMENTINDIRECORDSET_ID_review'
    2020-01-13 22:54:24 0043   RESIDENT client_npi0101employmentindi
    2020-01-13 22:54:24      	8 fields found: recordset_id, client_id, npi0101employmentindistartdate, npi0101employmentindienddate, progressnote, indicator, status, client_NPI0101EMPLOYMENTINDIRECORDSET_ID_review, 
    2020-01-13 22:54:24      38 lines fetched
    2020-01-13 22:54:24 0045 CustomEndFieldCheck:
    2020-01-13 22:54:24 0046   SELECT *
    2020-01-13 22:54:24 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0101employmentindend_1'
    2020-01-13 22:54:24      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:24      0 lines fetched
    2020-01-13 22:54:24 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0101employmentindend_1','npi0101employmentindienddate')
    2020-01-13 22:54:24 0053 RS_Interim:
    2020-01-13 22:54:24 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:24 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:24 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:24 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:24 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:24 0059   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:54:24 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:24 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:24 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:24 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:24 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:24 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:24 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:24 0067   WHERE 
    2020-01-13 22:54:24 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:24 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:24 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:24 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:24 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:24 0073     AND (ft.npi0101employmentindistartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:24 0074     AND ((ft.npi0101employmentindienddate::DATE IS NULL) OR (ft.npi0101employmentindienddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:24 0075   UNION
    2020-01-13 22:54:24 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:24 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:24 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:24 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:24 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:24 0081   FROM qlik_sclient_npi0101employmentindi ft
    2020-01-13 22:54:24 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:24 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:24 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:24 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:24 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:24 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:24 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:24 0089   WHERE 
    2020-01-13 22:54:24 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:24 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:24 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:24 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:24 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:24 0095     AND (ft.npi0101employmentindistartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:24 0096     AND ((ft.npi0101employmentindienddate::DATE IS NULL) OR (ft.npi0101employmentindienddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:25      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:25      96 lines fetched
    2020-01-13 22:54:25 0099 INNER JOIN(client_npi0101employmentindi_review)
    2020-01-13 22:54:25 0100   LOAD DISTINCT
    2020-01-13 22:54:25 0101   recordset_id,
    2020-01-13 22:54:25 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:25 0103   provider_creating_id AS [client_NPI0101EMPLOYMENTINDI_Provider_Creating_Review],
    2020-01-13 22:54:25 0104   name AS [client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Review],
    2020-01-13 22:54:25 0105   user_creating_id AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Review],
    2020-01-13 22:54:25 0106   user_name AS [client_NPI0101EMPLOYMENTINDI_User_Created_By_Review]
    2020-01-13 22:54:25 0107   RESIDENT RS_Interim
    2020-01-13 22:54:25      	6 fields found: recordset_id, Entry Exit Review Id, client_NPI0101EMPLOYMENTINDI_Provider_Creating_Review, client_NPI0101EMPLOYMENTINDI_Provider_Name_Creating_Review, client_NPI0101EMPLOYMENTINDI_User_Created_By_Id_Review, client_NPI0101EMPLOYMENTINDI_User_Created_By_Review, 
    2020-01-13 22:54:25      96 lines fetched
    2020-01-13 22:54:25      Joining/Keeping
    2020-01-13 22:54:25 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:25 0110   Noconcatenate
    2020-01-13 22:54:25 0111   LOAD DISTINCT
    2020-01-13 22:54:25 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:25 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:25 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:25 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:25 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:25 0117   RESIDENT RS_Interim
    2020-01-13 22:54:25      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:25      78 lines fetched
    2020-01-13 22:54:25 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:25 0121   LOAD
    2020-01-13 22:54:25 0122  [Entry Exit Id],
    2020-01-13 22:54:25 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:25 0124  [Entry Exit Review Type],
    2020-01-13 22:54:25 0125  [Entry Exit Review Date],
    2020-01-13 22:54:25 0126  [Entry Exit Review Id]
    2020-01-13 22:54:25 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:25 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:25      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:25      16,095 lines fetched
    2020-01-13 22:54:25 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:25 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:25 0135 DROP FIELDS client_id FROM client_npi0101employmentindi_review
    2020-01-13 22:54:25 0136 DROP FIELDS recordset_id FROM client_npi0101employmentindi_review
    2020-01-13 22:54:25 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:25 0140   Mapping SQL
    2020-01-13 22:54:25 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:25 0142     FROM da_question dq
    2020-01-13 22:54:25 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0144     WHERE
    2020-01-13 22:54:25 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:25 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:25 0148     UNION
    2020-01-13 22:54:25 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:25 0150     FROM da_question dq
    2020-01-13 22:54:25 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0152     WHERE
    2020-01-13 22:54:25 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:25 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:25 0156      UNION
    2020-01-13 22:54:25 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:25 0158     FROM da_question dq
    2020-01-13 22:54:25 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0160     WHERE
    2020-01-13 22:54:25 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:25 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:25 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:25 0165     UNION
    2020-01-13 22:54:25 0166 
    2020-01-13 22:54:25 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:25 0168     FROM da_question dq
    2020-01-13 22:54:25 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0170     WHERE
    2020-01-13 22:54:25 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:25 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:25 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:25 0175     UNION   
    2020-01-13 22:54:25 0176     SELECT
    2020-01-13 22:54:25 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:25 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:25 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:25 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:25 0181     FROM da_question dq
    2020-01-13 22:54:25 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0183     WHERE
    2020-01-13 22:54:25 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:25 0186     UNION
    2020-01-13 22:54:25 0187 	SELECT
    2020-01-13 22:54:25 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:25 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:25 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:25 0191     FROM da_question dq
    2020-01-13 22:54:25 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:25 0193     WHERE
    2020-01-13 22:54:25 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:25 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:25      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:25      1,304 lines fetched
    2020-01-13 22:54:25 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:25 0198 DROP TABLE client_npi0101employmentindi
    2020-01-13 22:54:25 0200 LET varStepName='STEPINTERIM_' & 29 & '_of_' & 50
    2020-01-13 22:54:25 0201 STEPINTERIM_29_of_50: select 1
    2020-01-13 22:54:25      	1 fields found: ?column?, 
    2020-01-13 22:54:25      1 lines fetched
    2020-01-13 22:54:25 0202 DROP TABLE STEPINTERIM_29_of_50
    2020-01-13 22:54:25 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:25 0205 NEXT
    2020-01-13 22:54:25 0025 LET varRecordSetTableName=Peek('sp_table_name',30,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:25 0026 LET varRecordSetQlikName=Peek('qlik_table_name',30,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:25 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',30,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:25 0029 LET varRecordSetQlikName_Interim='client_npi0102educationandco' & '_review'
    2020-01-13 22:54:25 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0102educationandco') <= 20),'npi0102educationandco' & 'end_1',left('npi0102educationandco', 20)& 'end_1')
    2020-01-13 22:54:25 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0102educationandco' & 'enddate'
    2020-01-13 22:54:25 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_npi0102educationandco', (len('client_npi0102educationandco'))-7))
    2020-01-13 22:54:25 0034 client_npi0102educationandco:
    2020-01-13 22:54:25 0035   SELECT * FROM qlik_sclient_npi0102educationandco
    2020-01-13 22:54:26      	7 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, 
    2020-01-13 22:54:26      43 lines fetched
    2020-01-13 22:54:26 0038 client_npi0102educationandco_review:
    2020-01-13 22:54:26 0039   Noconcatenate
    2020-01-13 22:54:26 0040   LOAD DISTINCT
    2020-01-13 22:54:26 0041   *,
    2020-01-13 22:54:26 0042   recordset_id AS 'client_NPI0102EDUCATIONANDCORECORDSET_ID_review'
    2020-01-13 22:54:26 0043   RESIDENT client_npi0102educationandco
    2020-01-13 22:54:26      	8 fields found: recordset_id, client_id, npi0102educationandcostartdate, npi0102educationandcoenddate, progressnote_1, indicator_1, status_1, client_NPI0102EDUCATIONANDCORECORDSET_ID_review, 
    2020-01-13 22:54:26      43 lines fetched
    2020-01-13 22:54:26 0045 CustomEndFieldCheck:
    2020-01-13 22:54:26 0046   SELECT *
    2020-01-13 22:54:26 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0102educationandcend_1'
    2020-01-13 22:54:26      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:26      0 lines fetched
    2020-01-13 22:54:26 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0102educationandcend_1','npi0102educationandcoenddate')
    2020-01-13 22:54:26 0053 RS_Interim:
    2020-01-13 22:54:26 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:26 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:26 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:26 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:26 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:26 0059   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:54:26 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:26 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:26 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:26 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:26 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:26 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:26 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:26 0067   WHERE 
    2020-01-13 22:54:26 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:26 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:26 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:26 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:26 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:26 0073     AND (ft.npi0102educationandcostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:26 0074     AND ((ft.npi0102educationandcoenddate::DATE IS NULL) OR (ft.npi0102educationandcoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:26 0075   UNION
    2020-01-13 22:54:26 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:26 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:26 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:26 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:26 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:26 0081   FROM qlik_sclient_npi0102educationandco ft
    2020-01-13 22:54:26 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:26 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:26 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:26 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:26 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:26 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:26 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:26 0089   WHERE 
    2020-01-13 22:54:26 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:26 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:26 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:26 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:26 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:26 0095     AND (ft.npi0102educationandcostartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:26 0096     AND ((ft.npi0102educationandcoenddate::DATE IS NULL) OR (ft.npi0102educationandcoenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:26      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:26      146 lines fetched
    2020-01-13 22:54:26 0099 INNER JOIN(client_npi0102educationandco_review)
    2020-01-13 22:54:26 0100   LOAD DISTINCT
    2020-01-13 22:54:26 0101   recordset_id,
    2020-01-13 22:54:26 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:26 0103   provider_creating_id AS [client_NPI0102EDUCATIONANDCO_Provider_Creating_Review],
    2020-01-13 22:54:26 0104   name AS [client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Review],
    2020-01-13 22:54:26 0105   user_creating_id AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Review],
    2020-01-13 22:54:26 0106   user_name AS [client_NPI0102EDUCATIONANDCO_User_Created_By_Review]
    2020-01-13 22:54:26 0107   RESIDENT RS_Interim
    2020-01-13 22:54:26      	6 fields found: recordset_id, Entry Exit Review Id, client_NPI0102EDUCATIONANDCO_Provider_Creating_Review, client_NPI0102EDUCATIONANDCO_Provider_Name_Creating_Review, client_NPI0102EDUCATIONANDCO_User_Created_By_Id_Review, client_NPI0102EDUCATIONANDCO_User_Created_By_Review, 
    2020-01-13 22:54:26      146 lines fetched
    2020-01-13 22:54:26      Joining/Keeping
    2020-01-13 22:54:26 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:26 0110   Noconcatenate
    2020-01-13 22:54:26 0111   LOAD DISTINCT
    2020-01-13 22:54:26 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:26 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:26 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:26 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:26 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:26 0117   RESIDENT RS_Interim
    2020-01-13 22:54:26      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:26      120 lines fetched
    2020-01-13 22:54:26 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:26 0121   LOAD
    2020-01-13 22:54:26 0122  [Entry Exit Id],
    2020-01-13 22:54:26 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:26 0124  [Entry Exit Review Type],
    2020-01-13 22:54:26 0125  [Entry Exit Review Date],
    2020-01-13 22:54:26 0126  [Entry Exit Review Id]
    2020-01-13 22:54:26 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:26 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:26      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:26      16,095 lines fetched
    2020-01-13 22:54:26 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:26 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:26 0135 DROP FIELDS client_id FROM client_npi0102educationandco_review
    2020-01-13 22:54:26 0136 DROP FIELDS recordset_id FROM client_npi0102educationandco_review
    2020-01-13 22:54:26 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:26 0140   Mapping SQL
    2020-01-13 22:54:26 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:26 0142     FROM da_question dq
    2020-01-13 22:54:26 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0144     WHERE
    2020-01-13 22:54:26 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:26 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:26 0148     UNION
    2020-01-13 22:54:26 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:26 0150     FROM da_question dq
    2020-01-13 22:54:26 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0152     WHERE
    2020-01-13 22:54:26 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:26 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:26 0156      UNION
    2020-01-13 22:54:26 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:26 0158     FROM da_question dq
    2020-01-13 22:54:26 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0160     WHERE
    2020-01-13 22:54:26 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:26 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:26 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:26 0165     UNION
    2020-01-13 22:54:26 0166 
    2020-01-13 22:54:26 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:26 0168     FROM da_question dq
    2020-01-13 22:54:26 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0170     WHERE
    2020-01-13 22:54:26 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:26 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:26 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:26 0175     UNION   
    2020-01-13 22:54:26 0176     SELECT
    2020-01-13 22:54:26 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:26 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:26 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:26 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:26 0181     FROM da_question dq
    2020-01-13 22:54:26 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0183     WHERE
    2020-01-13 22:54:26 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:26 0186     UNION
    2020-01-13 22:54:26 0187 	SELECT
    2020-01-13 22:54:26 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:26 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:26 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:26 0191     FROM da_question dq
    2020-01-13 22:54:26 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:26 0193     WHERE
    2020-01-13 22:54:26 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:26 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:27      1,304 lines fetched
    2020-01-13 22:54:27 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:27 0198 DROP TABLE client_npi0102educationandco
    2020-01-13 22:54:27 0200 LET varStepName='STEPINTERIM_' & 30 & '_of_' & 50
    2020-01-13 22:54:27 0201 STEPINTERIM_30_of_50: select 1
    2020-01-13 22:54:27      	1 fields found: ?column?, 
    2020-01-13 22:54:27      1 lines fetched
    2020-01-13 22:54:27 0202 DROP TABLE STEPINTERIM_30_of_50
    2020-01-13 22:54:27 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:27 0205 NEXT
    2020-01-13 22:54:27 0025 LET varRecordSetTableName=Peek('sp_table_name',31,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:27 0026 LET varRecordSetQlikName=Peek('qlik_table_name',31,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:27 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',31,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:27 0029 LET varRecordSetQlikName_Interim='client_npi0103incomeandasset' & '_review'
    2020-01-13 22:54:27 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0103incomeandasset') <= 20),'npi0103incomeandasset' & 'end_1',left('npi0103incomeandasset', 20)& 'end_1')
    2020-01-13 22:54:27 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0103incomeandasset' & 'enddate'
    2020-01-13 22:54:27 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_npi0103incomeandasset', (len('client_npi0103incomeandasset'))-7))
    2020-01-13 22:54:27 0034 client_npi0103incomeandasset:
    2020-01-13 22:54:27 0035   SELECT * FROM qlik_sclient_npi0103incomeandasset
    2020-01-13 22:54:27      	7 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, 
    2020-01-13 22:54:27      37 lines fetched
    2020-01-13 22:54:27 0038 client_npi0103incomeandasset_review:
    2020-01-13 22:54:27 0039   Noconcatenate
    2020-01-13 22:54:27 0040   LOAD DISTINCT
    2020-01-13 22:54:27 0041   *,
    2020-01-13 22:54:27 0042   recordset_id AS 'client_NPI0103INCOMEANDASSETRECORDSET_ID_review'
    2020-01-13 22:54:27 0043   RESIDENT client_npi0103incomeandasset
    2020-01-13 22:54:27      	8 fields found: recordset_id, client_id, npi0103incomeandassetstartdate, npi0103incomeandassetenddate, progressnote_2, indicator_2, status_2, client_NPI0103INCOMEANDASSETRECORDSET_ID_review, 
    2020-01-13 22:54:27      37 lines fetched
    2020-01-13 22:54:27 0045 CustomEndFieldCheck:
    2020-01-13 22:54:27 0046   SELECT *
    2020-01-13 22:54:27 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0103incomeandasseend_1'
    2020-01-13 22:54:27      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:27      0 lines fetched
    2020-01-13 22:54:27 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0103incomeandasseend_1','npi0103incomeandassetenddate')
    2020-01-13 22:54:27 0053 RS_Interim:
    2020-01-13 22:54:27 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:27 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:27 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:27 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:27 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:27 0059   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:54:27 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:27 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:27 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:27 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:27 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:27 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:27 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:27 0067   WHERE 
    2020-01-13 22:54:27 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:27 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:27 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:27 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:27 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:27 0073     AND (ft.npi0103incomeandassetstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:27 0074     AND ((ft.npi0103incomeandassetenddate::DATE IS NULL) OR (ft.npi0103incomeandassetenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:27 0075   UNION
    2020-01-13 22:54:27 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:27 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:27 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:27 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:27 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:27 0081   FROM qlik_sclient_npi0103incomeandasset ft
    2020-01-13 22:54:27 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:27 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:27 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:27 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:27 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:27 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:27 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:27 0089   WHERE 
    2020-01-13 22:54:27 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:27 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:27 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:27 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:27 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:27 0095     AND (ft.npi0103incomeandassetstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:27 0096     AND ((ft.npi0103incomeandassetenddate::DATE IS NULL) OR (ft.npi0103incomeandassetenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:28      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:28      112 lines fetched
    2020-01-13 22:54:28 0099 INNER JOIN(client_npi0103incomeandasset_review)
    2020-01-13 22:54:28 0100   LOAD DISTINCT
    2020-01-13 22:54:28 0101   recordset_id,
    2020-01-13 22:54:28 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:28 0103   provider_creating_id AS [client_NPI0103INCOMEANDASSET_Provider_Creating_Review],
    2020-01-13 22:54:28 0104   name AS [client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Review],
    2020-01-13 22:54:28 0105   user_creating_id AS [client_NPI0103INCOMEANDASSET_User_Created_By_Id_Review],
    2020-01-13 22:54:28 0106   user_name AS [client_NPI0103INCOMEANDASSET_User_Created_By_Review]
    2020-01-13 22:54:28 0107   RESIDENT RS_Interim
    2020-01-13 22:54:28      	6 fields found: recordset_id, Entry Exit Review Id, client_NPI0103INCOMEANDASSET_Provider_Creating_Review, client_NPI0103INCOMEANDASSET_Provider_Name_Creating_Review, client_NPI0103INCOMEANDASSET_User_Created_By_Id_Review, client_NPI0103INCOMEANDASSET_User_Created_By_Review, 
    2020-01-13 22:54:28      112 lines fetched
    2020-01-13 22:54:28      Joining/Keeping
    2020-01-13 22:54:28 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:28 0110   Noconcatenate
    2020-01-13 22:54:28 0111   LOAD DISTINCT
    2020-01-13 22:54:28 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:28 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:28 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:28 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:28 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:28 0117   RESIDENT RS_Interim
    2020-01-13 22:54:28      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:28      104 lines fetched
    2020-01-13 22:54:28 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:28 0121   LOAD
    2020-01-13 22:54:28 0122  [Entry Exit Id],
    2020-01-13 22:54:28 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:28 0124  [Entry Exit Review Type],
    2020-01-13 22:54:28 0125  [Entry Exit Review Date],
    2020-01-13 22:54:28 0126  [Entry Exit Review Id]
    2020-01-13 22:54:28 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:28 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:28      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:28      16,095 lines fetched
    2020-01-13 22:54:28 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:28 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:28 0135 DROP FIELDS client_id FROM client_npi0103incomeandasset_review
    2020-01-13 22:54:28 0136 DROP FIELDS recordset_id FROM client_npi0103incomeandasset_review
    2020-01-13 22:54:28 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:28 0140   Mapping SQL
    2020-01-13 22:54:28 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:28 0142     FROM da_question dq
    2020-01-13 22:54:28 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0144     WHERE
    2020-01-13 22:54:28 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:28 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:28 0148     UNION
    2020-01-13 22:54:28 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:28 0150     FROM da_question dq
    2020-01-13 22:54:28 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0152     WHERE
    2020-01-13 22:54:28 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:28 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:28 0156      UNION
    2020-01-13 22:54:28 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:28 0158     FROM da_question dq
    2020-01-13 22:54:28 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0160     WHERE
    2020-01-13 22:54:28 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:28 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:28 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:28 0165     UNION
    2020-01-13 22:54:28 0166 
    2020-01-13 22:54:28 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:28 0168     FROM da_question dq
    2020-01-13 22:54:28 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0170     WHERE
    2020-01-13 22:54:28 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:28 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:28 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:28 0175     UNION   
    2020-01-13 22:54:28 0176     SELECT
    2020-01-13 22:54:28 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:28 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:28 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:28 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:28 0181     FROM da_question dq
    2020-01-13 22:54:28 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0183     WHERE
    2020-01-13 22:54:28 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:28 0186     UNION
    2020-01-13 22:54:28 0187 	SELECT
    2020-01-13 22:54:28 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:28 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:28 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:28 0191     FROM da_question dq
    2020-01-13 22:54:28 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:28 0193     WHERE
    2020-01-13 22:54:28 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:28 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:28      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:28      1,304 lines fetched
    2020-01-13 22:54:28 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:28 0198 DROP TABLE client_npi0103incomeandasset
    2020-01-13 22:54:28 0200 LET varStepName='STEPINTERIM_' & 31 & '_of_' & 50
    2020-01-13 22:54:28 0201 STEPINTERIM_31_of_50: select 1
    2020-01-13 22:54:28      	1 fields found: ?column?, 
    2020-01-13 22:54:28      1 lines fetched
    2020-01-13 22:54:28 0202 DROP TABLE STEPINTERIM_31_of_50
    2020-01-13 22:54:28 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:28 0205 NEXT
    2020-01-13 22:54:28 0025 LET varRecordSetTableName=Peek('sp_table_name',32,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:28 0026 LET varRecordSetQlikName=Peek('qlik_table_name',32,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:28 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',32,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:28 0029 LET varRecordSetQlikName_Interim='client_npi0105healthandsocia' & '_review'
    2020-01-13 22:54:28 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0105healthandsocia') <= 20),'npi0105healthandsocia' & 'end_1',left('npi0105healthandsocia', 20)& 'end_1')
    2020-01-13 22:54:28 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0105healthandsocia' & 'enddate'
    2020-01-13 22:54:28 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_npi0105healthandsocia', (len('client_npi0105healthandsocia'))-7))
    2020-01-13 22:54:28 0034 client_npi0105healthandsocia:
    2020-01-13 22:54:28 0035   SELECT * FROM qlik_sclient_npi0105healthandsocia
    2020-01-13 22:54:29      	7 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, 
    2020-01-13 22:54:29      21 lines fetched
    2020-01-13 22:54:29 0038 client_npi0105healthandsocia_review:
    2020-01-13 22:54:29 0039   Noconcatenate
    2020-01-13 22:54:29 0040   LOAD DISTINCT
    2020-01-13 22:54:29 0041   *,
    2020-01-13 22:54:29 0042   recordset_id AS 'client_NPI0105HEALTHANDSOCIARECORDSET_ID_review'
    2020-01-13 22:54:29 0043   RESIDENT client_npi0105healthandsocia
    2020-01-13 22:54:29      	8 fields found: recordset_id, client_id, npi0105healthandsociastartdate, npi0105healthandsociaenddate, progressnote_4, indicator_4, status_4, client_NPI0105HEALTHANDSOCIARECORDSET_ID_review, 
    2020-01-13 22:54:29      21 lines fetched
    2020-01-13 22:54:29 0045 CustomEndFieldCheck:
    2020-01-13 22:54:29 0046   SELECT *
    2020-01-13 22:54:29 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0105healthandsociend_1'
    2020-01-13 22:54:29      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:29      0 lines fetched
    2020-01-13 22:54:29 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0105healthandsociend_1','npi0105healthandsociaenddate')
    2020-01-13 22:54:29 0053 RS_Interim:
    2020-01-13 22:54:29 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:29 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:29 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:29 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:29 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:29 0059   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:54:29 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:29 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:29 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:29 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:29 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:29 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:29 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:29 0067   WHERE 
    2020-01-13 22:54:29 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:29 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:29 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:29 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:29 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:29 0073     AND (ft.npi0105healthandsociastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:29 0074     AND ((ft.npi0105healthandsociaenddate::DATE IS NULL) OR (ft.npi0105healthandsociaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:29 0075   UNION
    2020-01-13 22:54:29 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:29 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:29 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:29 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:29 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:29 0081   FROM qlik_sclient_npi0105healthandsocia ft
    2020-01-13 22:54:29 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:29 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:29 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:29 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:29 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:29 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:29 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:29 0089   WHERE 
    2020-01-13 22:54:29 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:29 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:29 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:29 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:29 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:29 0095     AND (ft.npi0105healthandsociastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:29 0096     AND ((ft.npi0105healthandsociaenddate::DATE IS NULL) OR (ft.npi0105healthandsociaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:29      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:29      63 lines fetched
    2020-01-13 22:54:29 0099 INNER JOIN(client_npi0105healthandsocia_review)
    2020-01-13 22:54:29 0100   LOAD DISTINCT
    2020-01-13 22:54:29 0101   recordset_id,
    2020-01-13 22:54:29 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:29 0103   provider_creating_id AS [client_NPI0105HEALTHANDSOCIA_Provider_Creating_Review],
    2020-01-13 22:54:29 0104   name AS [client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Review],
    2020-01-13 22:54:29 0105   user_creating_id AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Review],
    2020-01-13 22:54:29 0106   user_name AS [client_NPI0105HEALTHANDSOCIA_User_Created_By_Review]
    2020-01-13 22:54:29 0107   RESIDENT RS_Interim
    2020-01-13 22:54:29      	6 fields found: recordset_id, Entry Exit Review Id, client_NPI0105HEALTHANDSOCIA_Provider_Creating_Review, client_NPI0105HEALTHANDSOCIA_Provider_Name_Creating_Review, client_NPI0105HEALTHANDSOCIA_User_Created_By_Id_Review, client_NPI0105HEALTHANDSOCIA_User_Created_By_Review, 
    2020-01-13 22:54:29      63 lines fetched
    2020-01-13 22:54:29      Joining/Keeping
    2020-01-13 22:54:29 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:29 0110   Noconcatenate
    2020-01-13 22:54:29 0111   LOAD DISTINCT
    2020-01-13 22:54:29 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:29 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:29 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:29 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:29 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:29 0117   RESIDENT RS_Interim
    2020-01-13 22:54:29      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:29      62 lines fetched
    2020-01-13 22:54:29 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:29 0121   LOAD
    2020-01-13 22:54:29 0122  [Entry Exit Id],
    2020-01-13 22:54:29 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:29 0124  [Entry Exit Review Type],
    2020-01-13 22:54:29 0125  [Entry Exit Review Date],
    2020-01-13 22:54:29 0126  [Entry Exit Review Id]
    2020-01-13 22:54:29 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:29 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:29      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:29      16,095 lines fetched
    2020-01-13 22:54:29 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:29 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:29 0135 DROP FIELDS client_id FROM client_npi0105healthandsocia_review
    2020-01-13 22:54:29 0136 DROP FIELDS recordset_id FROM client_npi0105healthandsocia_review
    2020-01-13 22:54:29 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:29 0140   Mapping SQL
    2020-01-13 22:54:29 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:29 0142     FROM da_question dq
    2020-01-13 22:54:29 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0144     WHERE
    2020-01-13 22:54:29 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:29 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:29 0148     UNION
    2020-01-13 22:54:29 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:29 0150     FROM da_question dq
    2020-01-13 22:54:29 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0152     WHERE
    2020-01-13 22:54:29 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:29 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:29 0156      UNION
    2020-01-13 22:54:29 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:29 0158     FROM da_question dq
    2020-01-13 22:54:29 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0160     WHERE
    2020-01-13 22:54:29 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:29 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:29 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:29 0165     UNION
    2020-01-13 22:54:29 0166 
    2020-01-13 22:54:29 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:29 0168     FROM da_question dq
    2020-01-13 22:54:29 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0170     WHERE
    2020-01-13 22:54:29 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:29 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:29 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:29 0175     UNION   
    2020-01-13 22:54:29 0176     SELECT
    2020-01-13 22:54:29 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:29 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:29 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:29 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:29 0181     FROM da_question dq
    2020-01-13 22:54:29 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0183     WHERE
    2020-01-13 22:54:29 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:29 0186     UNION
    2020-01-13 22:54:29 0187 	SELECT
    2020-01-13 22:54:29 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:29 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:29 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:29 0191     FROM da_question dq
    2020-01-13 22:54:29 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:29 0193     WHERE
    2020-01-13 22:54:29 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:29 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:30      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:30      1,304 lines fetched
    2020-01-13 22:54:30 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:30 0198 DROP TABLE client_npi0105healthandsocia
    2020-01-13 22:54:30 0200 LET varStepName='STEPINTERIM_' & 32 & '_of_' & 50
    2020-01-13 22:54:30 0201 STEPINTERIM_32_of_50: select 1
    2020-01-13 22:54:30      	1 fields found: ?column?, 
    2020-01-13 22:54:30      1 lines fetched
    2020-01-13 22:54:30 0202 DROP TABLE STEPINTERIM_32_of_50
    2020-01-13 22:54:30 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:30 0205 NEXT
    2020-01-13 22:54:30 0025 LET varRecordSetTableName=Peek('sp_table_name',33,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:30 0026 LET varRecordSetQlikName=Peek('qlik_table_name',33,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:30 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',33,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:30 0029 LET varRecordSetQlikName_Interim='client_npi0106civicengagemen' & '_review'
    2020-01-13 22:54:30 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('npi0106civicengagemen') <= 20),'npi0106civicengagemen' & 'end_1',left('npi0106civicengagemen', 20)& 'end_1')
    2020-01-13 22:54:30 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'npi0106civicengagemen' & 'enddate'
    2020-01-13 22:54:30 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_npi0106civicengagemen', (len('client_npi0106civicengagemen'))-7))
    2020-01-13 22:54:30 0034 client_npi0106civicengagemen:
    2020-01-13 22:54:30 0035   SELECT * FROM qlik_sclient_npi0106civicengagemen
    2020-01-13 22:54:30      	7 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, 
    2020-01-13 22:54:30      45 lines fetched
    2020-01-13 22:54:30 0038 client_npi0106civicengagemen_review:
    2020-01-13 22:54:30 0039   Noconcatenate
    2020-01-13 22:54:30 0040   LOAD DISTINCT
    2020-01-13 22:54:30 0041   *,
    2020-01-13 22:54:30 0042   recordset_id AS 'client_NPI0106CIVICENGAGEMENRECORDSET_ID_review'
    2020-01-13 22:54:30 0043   RESIDENT client_npi0106civicengagemen
    2020-01-13 22:54:30      	8 fields found: recordset_id, client_id, npi0106civicengagemenstartdate, npi0106civicengagemenenddate, progressnote_5, indicator_5, status_5, client_NPI0106CIVICENGAGEMENRECORDSET_ID_review, 
    2020-01-13 22:54:30      45 lines fetched
    2020-01-13 22:54:30 0045 CustomEndFieldCheck:
    2020-01-13 22:54:30 0046   SELECT *
    2020-01-13 22:54:30 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'npi0106civicengagemeend_1'
    2020-01-13 22:54:30      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:30      0 lines fetched
    2020-01-13 22:54:30 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'npi0106civicengagemeend_1','npi0106civicengagemenenddate')
    2020-01-13 22:54:30 0053 RS_Interim:
    2020-01-13 22:54:30 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:30 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:30 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:30 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:30 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:30 0059   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:54:30 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:30 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:30 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:30 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:30 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:30 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:30 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:30 0067   WHERE 
    2020-01-13 22:54:30 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:30 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:30 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:30 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:30 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:30 0073     AND (ft.npi0106civicengagemenstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:30 0074     AND ((ft.npi0106civicengagemenenddate::DATE IS NULL) OR (ft.npi0106civicengagemenenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:30 0075   UNION
    2020-01-13 22:54:30 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:30 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:30 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:30 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:30 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:30 0081   FROM qlik_sclient_npi0106civicengagemen ft
    2020-01-13 22:54:30 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:30 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:30 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:30 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:30 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:30 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:30 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:30 0089   WHERE 
    2020-01-13 22:54:30 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:30 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:30 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:30 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:30 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:30 0095     AND (ft.npi0106civicengagemenstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:30 0096     AND ((ft.npi0106civicengagemenenddate::DATE IS NULL) OR (ft.npi0106civicengagemenenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:31      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:31      157 lines fetched
    2020-01-13 22:54:31 0099 INNER JOIN(client_npi0106civicengagemen_review)
    2020-01-13 22:54:31 0100   LOAD DISTINCT
    2020-01-13 22:54:31 0101   recordset_id,
    2020-01-13 22:54:31 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:31 0103   provider_creating_id AS [client_NPI0106CIVICENGAGEMEN_Provider_Creating_Review],
    2020-01-13 22:54:31 0104   name AS [client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Review],
    2020-01-13 22:54:31 0105   user_creating_id AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Review],
    2020-01-13 22:54:31 0106   user_name AS [client_NPI0106CIVICENGAGEMEN_User_Created_By_Review]
    2020-01-13 22:54:31 0107   RESIDENT RS_Interim
    2020-01-13 22:54:31      	6 fields found: recordset_id, Entry Exit Review Id, client_NPI0106CIVICENGAGEMEN_Provider_Creating_Review, client_NPI0106CIVICENGAGEMEN_Provider_Name_Creating_Review, client_NPI0106CIVICENGAGEMEN_User_Created_By_Id_Review, client_NPI0106CIVICENGAGEMEN_User_Created_By_Review, 
    2020-01-13 22:54:31      157 lines fetched
    2020-01-13 22:54:31      Joining/Keeping
    2020-01-13 22:54:31 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:31 0110   Noconcatenate
    2020-01-13 22:54:31 0111   LOAD DISTINCT
    2020-01-13 22:54:31 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:31 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:31 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:31 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:31 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:31 0117   RESIDENT RS_Interim
    2020-01-13 22:54:31      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:31      152 lines fetched
    2020-01-13 22:54:31 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:31 0121   LOAD
    2020-01-13 22:54:31 0122  [Entry Exit Id],
    2020-01-13 22:54:31 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:31 0124  [Entry Exit Review Type],
    2020-01-13 22:54:31 0125  [Entry Exit Review Date],
    2020-01-13 22:54:31 0126  [Entry Exit Review Id]
    2020-01-13 22:54:31 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:31 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:31      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:31      16,095 lines fetched
    2020-01-13 22:54:31 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:31 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:31 0135 DROP FIELDS client_id FROM client_npi0106civicengagemen_review
    2020-01-13 22:54:31 0136 DROP FIELDS recordset_id FROM client_npi0106civicengagemen_review
    2020-01-13 22:54:31 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:31 0140   Mapping SQL
    2020-01-13 22:54:31 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:31 0142     FROM da_question dq
    2020-01-13 22:54:31 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0144     WHERE
    2020-01-13 22:54:31 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:31 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:31 0148     UNION
    2020-01-13 22:54:31 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:31 0150     FROM da_question dq
    2020-01-13 22:54:31 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0152     WHERE
    2020-01-13 22:54:31 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:31 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:31 0156      UNION
    2020-01-13 22:54:31 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:31 0158     FROM da_question dq
    2020-01-13 22:54:31 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0160     WHERE
    2020-01-13 22:54:31 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:31 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:31 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:31 0165     UNION
    2020-01-13 22:54:31 0166 
    2020-01-13 22:54:31 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:31 0168     FROM da_question dq
    2020-01-13 22:54:31 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0170     WHERE
    2020-01-13 22:54:31 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:31 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:31 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:31 0175     UNION   
    2020-01-13 22:54:31 0176     SELECT
    2020-01-13 22:54:31 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:31 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:31 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:31 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:31 0181     FROM da_question dq
    2020-01-13 22:54:31 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0183     WHERE
    2020-01-13 22:54:31 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:31 0186     UNION
    2020-01-13 22:54:31 0187 	SELECT
    2020-01-13 22:54:31 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:31 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:31 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:31 0191     FROM da_question dq
    2020-01-13 22:54:31 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:31 0193     WHERE
    2020-01-13 22:54:31 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:31 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:31      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:31      1,304 lines fetched
    2020-01-13 22:54:31 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:31 0198 DROP TABLE client_npi0106civicengagemen
    2020-01-13 22:54:31 0200 LET varStepName='STEPINTERIM_' & 33 & '_of_' & 50
    2020-01-13 22:54:31 0201 STEPINTERIM_33_of_50: select 1
    2020-01-13 22:54:31      	1 fields found: ?column?, 
    2020-01-13 22:54:31      1 lines fetched
    2020-01-13 22:54:31 0202 DROP TABLE STEPINTERIM_33_of_50
    2020-01-13 22:54:31 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:31 0205 NEXT
    2020-01-13 22:54:31 0025 LET varRecordSetTableName=Peek('sp_table_name',34,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:31 0026 LET varRecordSetQlikName=Peek('qlik_table_name',34,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:31 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',34,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:31 0029 LET varRecordSetQlikName_Interim='client_physicianinformation' & '_review'
    2020-01-13 22:54:31 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('physicianinformation') <= 20),'physicianinformation' & 'end_1',left('physicianinformation', 20)& 'end_1')
    2020-01-13 22:54:31 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'physicianinformation' & 'enddate'
    2020-01-13 22:54:31 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_physicianinformation', (len('client_physicianinformation'))-7))
    2020-01-13 22:54:31 0034 client_physicianinformation:
    2020-01-13 22:54:31 0035   SELECT * FROM qlik_sclient_physicianinformation
    2020-01-13 22:54:34      	12 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, 
    2020-01-13 22:54:34      22,428 lines fetched
    2020-01-13 22:54:34 0038 client_physicianinformation_review:
    2020-01-13 22:54:34 0039   Noconcatenate
    2020-01-13 22:54:34 0040   LOAD DISTINCT
    2020-01-13 22:54:34 0041   *,
    2020-01-13 22:54:34 0042   recordset_id AS 'client_PHYSICIANINFORMATIONRECORDSET_ID_review'
    2020-01-13 22:54:34 0043   RESIDENT client_physicianinformation
    2020-01-13 22:54:34      	13 fields found: recordset_id, client_id, physicianinformationstartdate, physicianinformationenddate, phonenumber, physicianaddress, physicianname, physiciancity, physicianstate, primarycarephysician, treatingpatientfor, zip_1, client_PHYSICIANINFORMATIONRECORDSET_ID_review, 
    2020-01-13 22:54:34      22,428 lines fetched
    2020-01-13 22:54:34 0045 CustomEndFieldCheck:
    2020-01-13 22:54:34 0046   SELECT *
    2020-01-13 22:54:34 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'physicianinformationend_1'
    2020-01-13 22:54:34      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:34      0 lines fetched
    2020-01-13 22:54:34 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'physicianinformationend_1','physicianinformationenddate')
    2020-01-13 22:54:35 0053 RS_Interim:
    2020-01-13 22:54:35 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:35 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:35 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:35 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:35 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:35 0059   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:54:35 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:35 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:35 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:35 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:35 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:35 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:35 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:35 0067   WHERE 
    2020-01-13 22:54:35 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:35 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:35 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:35 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:35 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:35 0073     AND (ft.physicianinformationstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:35 0074     AND ((ft.physicianinformationenddate::DATE IS NULL) OR (ft.physicianinformationenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:35 0075   UNION
    2020-01-13 22:54:35 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:35 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:35 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:35 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:35 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:35 0081   FROM qlik_sclient_physicianinformation ft
    2020-01-13 22:54:35 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:35 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:35 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:35 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:35 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:35 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:35 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:35 0089   WHERE 
    2020-01-13 22:54:35 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:35 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:35 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:35 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:35 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:35 0095     AND (ft.physicianinformationstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:35 0096     AND ((ft.physicianinformationenddate::DATE IS NULL) OR (ft.physicianinformationenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:40      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:40      232 lines fetched
    2020-01-13 22:54:40 0099 INNER JOIN(client_physicianinformation_review)
    2020-01-13 22:54:40 0100   LOAD DISTINCT
    2020-01-13 22:54:40 0101   recordset_id,
    2020-01-13 22:54:40 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:40 0103   provider_creating_id AS [client_PHYSICIANINFORMATION_Provider_Creating_Review],
    2020-01-13 22:54:40 0104   name AS [client_PHYSICIANINFORMATION_Provider_Name_Creating_Review],
    2020-01-13 22:54:40 0105   user_creating_id AS [client_PHYSICIANINFORMATION_User_Created_By_Id_Review],
    2020-01-13 22:54:40 0106   user_name AS [client_PHYSICIANINFORMATION_User_Created_By_Review]
    2020-01-13 22:54:40 0107   RESIDENT RS_Interim
    2020-01-13 22:54:40      	6 fields found: recordset_id, Entry Exit Review Id, client_PHYSICIANINFORMATION_Provider_Creating_Review, client_PHYSICIANINFORMATION_Provider_Name_Creating_Review, client_PHYSICIANINFORMATION_User_Created_By_Id_Review, client_PHYSICIANINFORMATION_User_Created_By_Review, 
    2020-01-13 22:54:40      232 lines fetched
    2020-01-13 22:54:40      Joining/Keeping
    2020-01-13 22:54:40 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:40 0110   Noconcatenate
    2020-01-13 22:54:40 0111   LOAD DISTINCT
    2020-01-13 22:54:40 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:40 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:40 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:40 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:40 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:40 0117   RESIDENT RS_Interim
    2020-01-13 22:54:40      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:40      162 lines fetched
    2020-01-13 22:54:40 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:40 0121   LOAD
    2020-01-13 22:54:40 0122  [Entry Exit Id],
    2020-01-13 22:54:40 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:40 0124  [Entry Exit Review Type],
    2020-01-13 22:54:40 0125  [Entry Exit Review Date],
    2020-01-13 22:54:40 0126  [Entry Exit Review Id]
    2020-01-13 22:54:40 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:40 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:40      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:40      16,095 lines fetched
    2020-01-13 22:54:40 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:40 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:40 0135 DROP FIELDS client_id FROM client_physicianinformation_review
    2020-01-13 22:54:40 0136 DROP FIELDS recordset_id FROM client_physicianinformation_review
    2020-01-13 22:54:40 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:40 0140   Mapping SQL
    2020-01-13 22:54:40 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:40 0142     FROM da_question dq
    2020-01-13 22:54:40 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0144     WHERE
    2020-01-13 22:54:40 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:40 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:40 0148     UNION
    2020-01-13 22:54:40 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:40 0150     FROM da_question dq
    2020-01-13 22:54:40 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0152     WHERE
    2020-01-13 22:54:40 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:40 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:40 0156      UNION
    2020-01-13 22:54:40 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:40 0158     FROM da_question dq
    2020-01-13 22:54:40 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0160     WHERE
    2020-01-13 22:54:40 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:40 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:40 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:40 0165     UNION
    2020-01-13 22:54:40 0166 
    2020-01-13 22:54:40 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:40 0168     FROM da_question dq
    2020-01-13 22:54:40 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0170     WHERE
    2020-01-13 22:54:40 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:40 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:40 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:40 0175     UNION   
    2020-01-13 22:54:40 0176     SELECT
    2020-01-13 22:54:40 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:40 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:40 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:40 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:40 0181     FROM da_question dq
    2020-01-13 22:54:40 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0183     WHERE
    2020-01-13 22:54:40 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:40 0186     UNION
    2020-01-13 22:54:40 0187 	SELECT
    2020-01-13 22:54:40 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:40 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:40 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:40 0191     FROM da_question dq
    2020-01-13 22:54:40 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:40 0193     WHERE
    2020-01-13 22:54:40 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:40 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:40      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:40      1,304 lines fetched
    2020-01-13 22:54:40 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:40 0198 DROP TABLE client_physicianinformation
    2020-01-13 22:54:40 0200 LET varStepName='STEPINTERIM_' & 34 & '_of_' & 50
    2020-01-13 22:54:40 0201 STEPINTERIM_34_of_50: select 1
    2020-01-13 22:54:41      	1 fields found: ?column?, 
    2020-01-13 22:54:41      1 lines fetched
    2020-01-13 22:54:41 0202 DROP TABLE STEPINTERIM_34_of_50
    2020-01-13 22:54:41 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:41 0205 NEXT
    2020-01-13 22:54:41 0025 LET varRecordSetTableName=Peek('sp_table_name',35,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:41 0026 LET varRecordSetQlikName=Peek('qlik_table_name',35,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:41 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',35,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:41 0029 LET varRecordSetQlikName_Interim='client_referredtomentalhealt_1' & '_review'
    2020-01-13 22:54:41 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('referredtomentalhealt_1') <= 20),'referredtomentalhealt_1' & 'end_1',left('referredtomentalhealt_1', 20)& 'end_1')
    2020-01-13 22:54:41 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'referredtomentalhealt_1' & 'enddate'
    2020-01-13 22:54:41 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_referredtomentalhealt_1', (len('client_referredtomentalhealt_1'))-7))
    2020-01-13 22:54:41 0034 client_referredtomentalhealt_1:
    2020-01-13 22:54:41 0035   SELECT * FROM qlik_sclient_referredtomentalhealt_1
    2020-01-13 22:54:41      	7 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, 
    2020-01-13 22:54:41      221 lines fetched
    2020-01-13 22:54:41 0038 client_referredtomentalhealt_1_review:
    2020-01-13 22:54:41 0039   Noconcatenate
    2020-01-13 22:54:41 0040   LOAD DISTINCT
    2020-01-13 22:54:41 0041   *,
    2020-01-13 22:54:41 0042   recordset_id AS 'client_REFERREDTOMENTALHEALT_1RECORDSET_ID_review'
    2020-01-13 22:54:41 0043   RESIDENT client_referredtomentalhealt_1
    2020-01-13 22:54:41      	8 fields found: recordset_id, client_id, referredtomentalhealt_1startdate, referredtomentalhealt_1enddate, datetreatementbegan_1, notesonreferral, where_3, client_REFERREDTOMENTALHEALT_1RECORDSET_ID_review, 
    2020-01-13 22:54:41      221 lines fetched
    2020-01-13 22:54:41 0045 CustomEndFieldCheck:
    2020-01-13 22:54:41 0046   SELECT *
    2020-01-13 22:54:41 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'referredtomentalhealend_1'
    2020-01-13 22:54:41      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:41      0 lines fetched
    2020-01-13 22:54:41 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'referredtomentalhealend_1','referredtomentalhealt_1enddate')
    2020-01-13 22:54:41 0053 RS_Interim:
    2020-01-13 22:54:41 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:41 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:41 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:41 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:41 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:41 0059   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:54:41 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:41 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:41 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:41 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:41 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:41 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:41 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:41 0067   WHERE 
    2020-01-13 22:54:41 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:41 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:41 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:41 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:41 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:41 0073     AND (ft.referredtomentalhealt_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:41 0074     AND ((ft.referredtomentalhealt_1enddate::DATE IS NULL) OR (ft.referredtomentalhealt_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:41 0075   UNION
    2020-01-13 22:54:41 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:41 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:41 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:41 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:41 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:41 0081   FROM qlik_sclient_referredtomentalhealt_1 ft
    2020-01-13 22:54:41 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:41 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:41 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:41 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:41 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:41 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:41 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:41 0089   WHERE 
    2020-01-13 22:54:41 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:41 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:41 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:41 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:41 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:41 0095     AND (ft.referredtomentalhealt_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:41 0096     AND ((ft.referredtomentalhealt_1enddate::DATE IS NULL) OR (ft.referredtomentalhealt_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:41      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:41      1 lines fetched
    2020-01-13 22:54:41 0099 INNER JOIN(client_referredtomentalhealt_1_review)
    2020-01-13 22:54:41 0100   LOAD DISTINCT
    2020-01-13 22:54:41 0101   recordset_id,
    2020-01-13 22:54:41 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:41 0103   provider_creating_id AS [client_REFERREDTOMENTALHEALT_1_Provider_Creating_Review],
    2020-01-13 22:54:41 0104   name AS [client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Review],
    2020-01-13 22:54:41 0105   user_creating_id AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Review],
    2020-01-13 22:54:41 0106   user_name AS [client_REFERREDTOMENTALHEALT_1_User_Created_By_Review]
    2020-01-13 22:54:41 0107   RESIDENT RS_Interim
    2020-01-13 22:54:41      	6 fields found: recordset_id, Entry Exit Review Id, client_REFERREDTOMENTALHEALT_1_Provider_Creating_Review, client_REFERREDTOMENTALHEALT_1_Provider_Name_Creating_Review, client_REFERREDTOMENTALHEALT_1_User_Created_By_Id_Review, client_REFERREDTOMENTALHEALT_1_User_Created_By_Review, 
    2020-01-13 22:54:41      1 lines fetched
    2020-01-13 22:54:41      Joining/Keeping
    2020-01-13 22:54:41 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:41 0110   Noconcatenate
    2020-01-13 22:54:41 0111   LOAD DISTINCT
    2020-01-13 22:54:41 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:41 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:41 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:41 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:41 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:41 0117   RESIDENT RS_Interim
    2020-01-13 22:54:41      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:41      1 lines fetched
    2020-01-13 22:54:41 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:41 0121   LOAD
    2020-01-13 22:54:41 0122  [Entry Exit Id],
    2020-01-13 22:54:41 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:41 0124  [Entry Exit Review Type],
    2020-01-13 22:54:41 0125  [Entry Exit Review Date],
    2020-01-13 22:54:41 0126  [Entry Exit Review Id]
    2020-01-13 22:54:41 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:41 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:41      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:41      16,095 lines fetched
    2020-01-13 22:54:41 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:41 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:41 0135 DROP FIELDS client_id FROM client_referredtomentalhealt_1_review
    2020-01-13 22:54:41 0136 DROP FIELDS recordset_id FROM client_referredtomentalhealt_1_review
    2020-01-13 22:54:41 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:41 0140   Mapping SQL
    2020-01-13 22:54:41 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:41 0142     FROM da_question dq
    2020-01-13 22:54:41 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0144     WHERE
    2020-01-13 22:54:41 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:41 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:41 0148     UNION
    2020-01-13 22:54:41 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:41 0150     FROM da_question dq
    2020-01-13 22:54:41 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0152     WHERE
    2020-01-13 22:54:41 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:41 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:41 0156      UNION
    2020-01-13 22:54:41 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:41 0158     FROM da_question dq
    2020-01-13 22:54:41 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0160     WHERE
    2020-01-13 22:54:41 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:41 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:41 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:41 0165     UNION
    2020-01-13 22:54:41 0166 
    2020-01-13 22:54:41 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:41 0168     FROM da_question dq
    2020-01-13 22:54:41 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0170     WHERE
    2020-01-13 22:54:41 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:41 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:41 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:41 0175     UNION   
    2020-01-13 22:54:41 0176     SELECT
    2020-01-13 22:54:41 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:41 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:41 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:41 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:41 0181     FROM da_question dq
    2020-01-13 22:54:41 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0183     WHERE
    2020-01-13 22:54:41 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:41 0186     UNION
    2020-01-13 22:54:41 0187 	SELECT
    2020-01-13 22:54:41 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:41 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:41 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:41 0191     FROM da_question dq
    2020-01-13 22:54:41 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:41 0193     WHERE
    2020-01-13 22:54:41 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:41 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:42      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:42      1,304 lines fetched
    2020-01-13 22:54:42 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:42 0198 DROP TABLE client_referredtomentalhealt_1
    2020-01-13 22:54:42 0200 LET varStepName='STEPINTERIM_' & 35 & '_of_' & 50
    2020-01-13 22:54:42 0201 STEPINTERIM_35_of_50: select 1
    2020-01-13 22:54:42      	1 fields found: ?column?, 
    2020-01-13 22:54:42      1 lines fetched
    2020-01-13 22:54:42 0202 DROP TABLE STEPINTERIM_35_of_50
    2020-01-13 22:54:42 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:42 0205 NEXT
    2020-01-13 22:54:42 0025 LET varRecordSetTableName=Peek('sp_table_name',36,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:42 0026 LET varRecordSetQlikName=Peek('qlik_table_name',36,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:42 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',36,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:42 0029 LET varRecordSetQlikName_Interim='client_rhymisoutreachsub' & '_review'
    2020-01-13 22:54:42 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('rhymisoutreachsub') <= 20),'rhymisoutreachsub' & 'end_1',left('rhymisoutreachsub', 20)& 'end_1')
    2020-01-13 22:54:42 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'rhymisoutreachsub' & 'enddate'
    2020-01-13 22:54:42 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_rhymisoutreachsub', (len('client_rhymisoutreachsub'))-7))
    2020-01-13 22:54:42 0034 client_rhymisoutreachsub:
    2020-01-13 22:54:42 0035   SELECT * FROM qlik_sclient_rhymisoutreachsub
    2020-01-13 22:54:42      	8 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, 
    2020-01-13 22:54:42      203 lines fetched
    2020-01-13 22:54:42 0038 client_rhymisoutreachsub_review:
    2020-01-13 22:54:42 0039   Noconcatenate
    2020-01-13 22:54:42 0040   LOAD DISTINCT
    2020-01-13 22:54:42 0041   *,
    2020-01-13 22:54:42 0042   recordset_id AS 'client_RHYMISOUTREACHSUBRECORDSET_ID_review'
    2020-01-13 22:54:42 0043   RESIDENT client_rhymisoutreachsub
    2020-01-13 22:54:42      	9 fields found: recordset_id, client_id, rhymisoutreachsubstartdate, rhymisoutreachsubenddate, rhymisnumberfood, rhymisnumberhealth, rhymisnumberwritten, rhymisnumbersheltered, client_RHYMISOUTREACHSUBRECORDSET_ID_review, 
    2020-01-13 22:54:42      203 lines fetched
    2020-01-13 22:54:42 0045 CustomEndFieldCheck:
    2020-01-13 22:54:42 0046   SELECT *
    2020-01-13 22:54:42 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'rhymisoutreachsubend_1'
    2020-01-13 22:54:43      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:43      0 lines fetched
    2020-01-13 22:54:43 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'rhymisoutreachsubend_1','rhymisoutreachsubenddate')
    2020-01-13 22:54:43 0053 RS_Interim:
    2020-01-13 22:54:43 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:43 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:43 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:43 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:43 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:43 0059   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:54:43 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:43 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:43 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:43 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:43 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:43 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:43 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:43 0067   WHERE 
    2020-01-13 22:54:43 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:43 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:43 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:43 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:43 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:43 0073     AND (ft.rhymisoutreachsubstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:43 0074     AND ((ft.rhymisoutreachsubenddate::DATE IS NULL) OR (ft.rhymisoutreachsubenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:43 0075   UNION
    2020-01-13 22:54:43 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:43 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:43 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:43 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:43 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:43 0081   FROM qlik_sclient_rhymisoutreachsub ft
    2020-01-13 22:54:43 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:43 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:43 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:43 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:43 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:43 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:43 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:43 0089   WHERE 
    2020-01-13 22:54:43 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:43 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:43 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:43 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:43 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:43 0095     AND (ft.rhymisoutreachsubstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:43 0096     AND ((ft.rhymisoutreachsubenddate::DATE IS NULL) OR (ft.rhymisoutreachsubenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:43      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:43      3 lines fetched
    2020-01-13 22:54:43 0099 INNER JOIN(client_rhymisoutreachsub_review)
    2020-01-13 22:54:43 0100   LOAD DISTINCT
    2020-01-13 22:54:43 0101   recordset_id,
    2020-01-13 22:54:43 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:43 0103   provider_creating_id AS [client_RHYMISOUTREACHSUB_Provider_Creating_Review],
    2020-01-13 22:54:43 0104   name AS [client_RHYMISOUTREACHSUB_Provider_Name_Creating_Review],
    2020-01-13 22:54:43 0105   user_creating_id AS [client_RHYMISOUTREACHSUB_User_Created_By_Id_Review],
    2020-01-13 22:54:43 0106   user_name AS [client_RHYMISOUTREACHSUB_User_Created_By_Review]
    2020-01-13 22:54:43 0107   RESIDENT RS_Interim
    2020-01-13 22:54:43      	6 fields found: recordset_id, Entry Exit Review Id, client_RHYMISOUTREACHSUB_Provider_Creating_Review, client_RHYMISOUTREACHSUB_Provider_Name_Creating_Review, client_RHYMISOUTREACHSUB_User_Created_By_Id_Review, client_RHYMISOUTREACHSUB_User_Created_By_Review, 
    2020-01-13 22:54:43      3 lines fetched
    2020-01-13 22:54:43      Joining/Keeping
    2020-01-13 22:54:43 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:43 0110   Noconcatenate
    2020-01-13 22:54:43 0111   LOAD DISTINCT
    2020-01-13 22:54:43 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:43 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:43 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:43 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:43 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:43 0117   RESIDENT RS_Interim
    2020-01-13 22:54:43      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:43      3 lines fetched
    2020-01-13 22:54:43 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:43 0121   LOAD
    2020-01-13 22:54:43 0122  [Entry Exit Id],
    2020-01-13 22:54:43 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:43 0124  [Entry Exit Review Type],
    2020-01-13 22:54:43 0125  [Entry Exit Review Date],
    2020-01-13 22:54:43 0126  [Entry Exit Review Id]
    2020-01-13 22:54:43 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:43 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:43      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:43      16,095 lines fetched
    2020-01-13 22:54:43 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:43 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:43 0135 DROP FIELDS client_id FROM client_rhymisoutreachsub_review
    2020-01-13 22:54:43 0136 DROP FIELDS recordset_id FROM client_rhymisoutreachsub_review
    2020-01-13 22:54:43 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:43 0140   Mapping SQL
    2020-01-13 22:54:43 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:43 0142     FROM da_question dq
    2020-01-13 22:54:43 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0144     WHERE
    2020-01-13 22:54:43 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:43 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:43 0148     UNION
    2020-01-13 22:54:43 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:43 0150     FROM da_question dq
    2020-01-13 22:54:43 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0152     WHERE
    2020-01-13 22:54:43 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:43 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:43 0156      UNION
    2020-01-13 22:54:43 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:43 0158     FROM da_question dq
    2020-01-13 22:54:43 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0160     WHERE
    2020-01-13 22:54:43 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:43 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:43 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:43 0165     UNION
    2020-01-13 22:54:43 0166 
    2020-01-13 22:54:43 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:43 0168     FROM da_question dq
    2020-01-13 22:54:43 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0170     WHERE
    2020-01-13 22:54:43 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:43 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:43 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:43 0175     UNION   
    2020-01-13 22:54:43 0176     SELECT
    2020-01-13 22:54:43 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:43 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:43 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:43 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:43 0181     FROM da_question dq
    2020-01-13 22:54:43 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0183     WHERE
    2020-01-13 22:54:43 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:43 0186     UNION
    2020-01-13 22:54:43 0187 	SELECT
    2020-01-13 22:54:43 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:43 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:43 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:43 0191     FROM da_question dq
    2020-01-13 22:54:43 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:43 0193     WHERE
    2020-01-13 22:54:43 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:43 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:43      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:43      1,304 lines fetched
    2020-01-13 22:54:43 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:43 0198 DROP TABLE client_rhymisoutreachsub
    2020-01-13 22:54:43 0200 LET varStepName='STEPINTERIM_' & 36 & '_of_' & 50
    2020-01-13 22:54:43 0201 STEPINTERIM_36_of_50: select 1
    2020-01-13 22:54:43      	1 fields found: ?column?, 
    2020-01-13 22:54:43      1 lines fetched
    2020-01-13 22:54:43 0202 DROP TABLE STEPINTERIM_36_of_50
    2020-01-13 22:54:43 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:43 0205 NEXT
    2020-01-13 22:54:43 0025 LET varRecordSetTableName=Peek('sp_table_name',37,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:43 0026 LET varRecordSetQlikName=Peek('qlik_table_name',37,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:43 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',37,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:43 0029 LET varRecordSetQlikName_Interim='client_schoolattendance_1' & '_review'
    2020-01-13 22:54:43 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('schoolattendance_1') <= 20),'schoolattendance_1' & 'end_1',left('schoolattendance_1', 20)& 'end_1')
    2020-01-13 22:54:43 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'schoolattendance_1' & 'enddate'
    2020-01-13 22:54:43 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_schoolattendance_1', (len('client_schoolattendance_1'))-7))
    2020-01-13 22:54:43 0034 client_schoolattendance_1:
    2020-01-13 22:54:43 0035   SELECT * FROM qlik_sclient_schoolattendance_1
    2020-01-13 22:54:44      	12 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, 
    2020-01-13 22:54:44      2,702 lines fetched
    2020-01-13 22:54:44 0038 client_schoolattendance_1_review:
    2020-01-13 22:54:44 0039   Noconcatenate
    2020-01-13 22:54:44 0040   LOAD DISTINCT
    2020-01-13 22:54:44 0041   *,
    2020-01-13 22:54:44 0042   recordset_id AS 'client_SCHOOLATTENDANCE_1RECORDSET_ID_review'
    2020-01-13 22:54:44 0043   RESIDENT client_schoolattendance_1
    2020-01-13 22:54:44      	13 fields found: recordset_id, client_id, schoolattendance_1startdate, schoolattendance_1enddate, cityofschool, degreecertificationex, expectedgraduationdate, schoolattending, schooldistrict, gradelevel_1, typeofschool, completedgraduated, client_SCHOOLATTENDANCE_1RECORDSET_ID_review, 
    2020-01-13 22:54:44      2,702 lines fetched
    2020-01-13 22:54:44 0045 CustomEndFieldCheck:
    2020-01-13 22:54:44 0046   SELECT *
    2020-01-13 22:54:44 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'schoolattendance_1end_1'
    2020-01-13 22:54:44      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:44      0 lines fetched
    2020-01-13 22:54:44 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'schoolattendance_1end_1','schoolattendance_1enddate')
    2020-01-13 22:54:44 0053 RS_Interim:
    2020-01-13 22:54:44 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:44 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:44 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:44 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:44 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:44 0059   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:54:44 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:44 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:44 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:44 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:44 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:44 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:44 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:44 0067   WHERE 
    2020-01-13 22:54:44 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:44 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:44 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:44 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:44 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:44 0073     AND (ft.schoolattendance_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:44 0074     AND ((ft.schoolattendance_1enddate::DATE IS NULL) OR (ft.schoolattendance_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:44 0075   UNION
    2020-01-13 22:54:44 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:44 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:44 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:44 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:44 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:44 0081   FROM qlik_sclient_schoolattendance_1 ft
    2020-01-13 22:54:44 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:44 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:44 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:44 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:44 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:44 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:44 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:44 0089   WHERE 
    2020-01-13 22:54:44 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:44 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:44 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:44 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:44 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:44 0095     AND (ft.schoolattendance_1startdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:44 0096     AND ((ft.schoolattendance_1enddate::DATE IS NULL) OR (ft.schoolattendance_1enddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:45      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:45      1,416 lines fetched
    2020-01-13 22:54:45 0099 INNER JOIN(client_schoolattendance_1_review)
    2020-01-13 22:54:45 0100   LOAD DISTINCT
    2020-01-13 22:54:45 0101   recordset_id,
    2020-01-13 22:54:45 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:45 0103   provider_creating_id AS [client_SCHOOLATTENDANCE_1_Provider_Creating_Review],
    2020-01-13 22:54:45 0104   name AS [client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Review],
    2020-01-13 22:54:45 0105   user_creating_id AS [client_SCHOOLATTENDANCE_1_User_Created_By_Id_Review],
    2020-01-13 22:54:45 0106   user_name AS [client_SCHOOLATTENDANCE_1_User_Created_By_Review]
    2020-01-13 22:54:45 0107   RESIDENT RS_Interim
    2020-01-13 22:54:45      	6 fields found: recordset_id, Entry Exit Review Id, client_SCHOOLATTENDANCE_1_Provider_Creating_Review, client_SCHOOLATTENDANCE_1_Provider_Name_Creating_Review, client_SCHOOLATTENDANCE_1_User_Created_By_Id_Review, client_SCHOOLATTENDANCE_1_User_Created_By_Review, 
    2020-01-13 22:54:45      1,416 lines fetched
    2020-01-13 22:54:45      Joining/Keeping
    2020-01-13 22:54:45 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:45 0110   Noconcatenate
    2020-01-13 22:54:45 0111   LOAD DISTINCT
    2020-01-13 22:54:45 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:45 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:45 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:45 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:45 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:45 0117   RESIDENT RS_Interim
    2020-01-13 22:54:46      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:46      1,271 lines fetched
    2020-01-13 22:54:46 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:46 0121   LOAD
    2020-01-13 22:54:46 0122  [Entry Exit Id],
    2020-01-13 22:54:46 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:46 0124  [Entry Exit Review Type],
    2020-01-13 22:54:46 0125  [Entry Exit Review Date],
    2020-01-13 22:54:46 0126  [Entry Exit Review Id]
    2020-01-13 22:54:46 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:46 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:46      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:46      16,095 lines fetched
    2020-01-13 22:54:46 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:46 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:46 0135 DROP FIELDS client_id FROM client_schoolattendance_1_review
    2020-01-13 22:54:46 0136 DROP FIELDS recordset_id FROM client_schoolattendance_1_review
    2020-01-13 22:54:46 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:46 0140   Mapping SQL
    2020-01-13 22:54:46 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:46 0142     FROM da_question dq
    2020-01-13 22:54:46 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0144     WHERE
    2020-01-13 22:54:46 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:46 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:46 0148     UNION
    2020-01-13 22:54:46 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:46 0150     FROM da_question dq
    2020-01-13 22:54:46 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0152     WHERE
    2020-01-13 22:54:46 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:46 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:46 0156      UNION
    2020-01-13 22:54:46 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:46 0158     FROM da_question dq
    2020-01-13 22:54:46 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0160     WHERE
    2020-01-13 22:54:46 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:46 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:46 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:46 0165     UNION
    2020-01-13 22:54:46 0166 
    2020-01-13 22:54:46 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:46 0168     FROM da_question dq
    2020-01-13 22:54:46 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0170     WHERE
    2020-01-13 22:54:46 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:46 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:46 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:46 0175     UNION   
    2020-01-13 22:54:46 0176     SELECT
    2020-01-13 22:54:46 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:46 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:46 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:46 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:46 0181     FROM da_question dq
    2020-01-13 22:54:46 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0183     WHERE
    2020-01-13 22:54:46 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:46 0186     UNION
    2020-01-13 22:54:46 0187 	SELECT
    2020-01-13 22:54:46 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:46 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:46 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:46 0191     FROM da_question dq
    2020-01-13 22:54:46 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:46 0193     WHERE
    2020-01-13 22:54:46 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:46 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:46      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:46      1,304 lines fetched
    2020-01-13 22:54:46 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:46 0198 DROP TABLE client_schoolattendance_1
    2020-01-13 22:54:46 0200 LET varStepName='STEPINTERIM_' & 37 & '_of_' & 50
    2020-01-13 22:54:46 0201 STEPINTERIM_37_of_50: select 1
    2020-01-13 22:54:46      	1 fields found: ?column?, 
    2020-01-13 22:54:46      1 lines fetched
    2020-01-13 22:54:46 0202 DROP TABLE STEPINTERIM_37_of_50
    2020-01-13 22:54:46 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:46 0205 NEXT
    2020-01-13 22:54:46 0025 LET varRecordSetTableName=Peek('sp_table_name',38,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:46 0026 LET varRecordSetQlikName=Peek('qlik_table_name',38,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:46 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',38,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:46 0029 LET varRecordSetQlikName_Interim='client_substanceabuseassessm' & '_review'
    2020-01-13 22:54:46 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabuseassessm') <= 20),'substanceabuseassessm' & 'end_1',left('substanceabuseassessm', 20)& 'end_1')
    2020-01-13 22:54:46 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabuseassessm' & 'enddate'
    2020-01-13 22:54:46 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_substanceabuseassessm', (len('client_substanceabuseassessm'))-7))
    2020-01-13 22:54:46 0034 client_substanceabuseassessm:
    2020-01-13 22:54:46 0035   SELECT * FROM qlik_sclient_substanceabuseassessm
    2020-01-13 22:54:46      	8 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, 
    2020-01-13 22:54:46      2,232 lines fetched
    2020-01-13 22:54:46 0038 client_substanceabuseassessm_review:
    2020-01-13 22:54:46 0039   Noconcatenate
    2020-01-13 22:54:46 0040   LOAD DISTINCT
    2020-01-13 22:54:46 0041   *,
    2020-01-13 22:54:46 0042   recordset_id AS 'client_SUBSTANCEABUSEASSESSMRECORDSET_ID_review'
    2020-01-13 22:54:46 0043   RESIDENT client_substanceabuseassessm
    2020-01-13 22:54:46      	9 fields found: recordset_id, client_id, substanceabuseassessmstartdate, substanceabuseassessmenddate, assessmentdate, ifsaissueidentifiedre, ifyeswastreatmentacce, saissueidentified, client_SUBSTANCEABUSEASSESSMRECORDSET_ID_review, 
    2020-01-13 22:54:46      2,232 lines fetched
    2020-01-13 22:54:46 0045 CustomEndFieldCheck:
    2020-01-13 22:54:46 0046   SELECT *
    2020-01-13 22:54:46 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabuseassessend_1'
    2020-01-13 22:54:47      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:47      0 lines fetched
    2020-01-13 22:54:47 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabuseassessend_1','substanceabuseassessmenddate')
    2020-01-13 22:54:47 0053 RS_Interim:
    2020-01-13 22:54:47 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:47 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:47 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:47 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:47 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:47 0059   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:54:47 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:47 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:47 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:47 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:47 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:47 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:47 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:47 0067   WHERE 
    2020-01-13 22:54:47 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:47 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:47 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:47 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:47 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:47 0073     AND (ft.substanceabuseassessmstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:47 0074     AND ((ft.substanceabuseassessmenddate::DATE IS NULL) OR (ft.substanceabuseassessmenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:47 0075   UNION
    2020-01-13 22:54:47 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:47 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:47 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:47 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:47 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:47 0081   FROM qlik_sclient_substanceabuseassessm ft
    2020-01-13 22:54:47 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:47 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:47 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:47 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:47 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:47 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:47 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:47 0089   WHERE 
    2020-01-13 22:54:47 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:47 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:47 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:47 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:47 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:47 0095     AND (ft.substanceabuseassessmstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:47 0096     AND ((ft.substanceabuseassessmenddate::DATE IS NULL) OR (ft.substanceabuseassessmenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:47      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:47      68 lines fetched
    2020-01-13 22:54:47 0099 INNER JOIN(client_substanceabuseassessm_review)
    2020-01-13 22:54:47 0100   LOAD DISTINCT
    2020-01-13 22:54:47 0101   recordset_id,
    2020-01-13 22:54:47 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:47 0103   provider_creating_id AS [client_SUBSTANCEABUSEASSESSM_Provider_Creating_Review],
    2020-01-13 22:54:47 0104   name AS [client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Review],
    2020-01-13 22:54:47 0105   user_creating_id AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Review],
    2020-01-13 22:54:47 0106   user_name AS [client_SUBSTANCEABUSEASSESSM_User_Created_By_Review]
    2020-01-13 22:54:47 0107   RESIDENT RS_Interim
    2020-01-13 22:54:47      	6 fields found: recordset_id, Entry Exit Review Id, client_SUBSTANCEABUSEASSESSM_Provider_Creating_Review, client_SUBSTANCEABUSEASSESSM_Provider_Name_Creating_Review, client_SUBSTANCEABUSEASSESSM_User_Created_By_Id_Review, client_SUBSTANCEABUSEASSESSM_User_Created_By_Review, 
    2020-01-13 22:54:47      68 lines fetched
    2020-01-13 22:54:47      Joining/Keeping
    2020-01-13 22:54:47 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:47 0110   Noconcatenate
    2020-01-13 22:54:47 0111   LOAD DISTINCT
    2020-01-13 22:54:47 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:47 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:47 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:47 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:47 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:47 0117   RESIDENT RS_Interim
    2020-01-13 22:54:47      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:47      54 lines fetched
    2020-01-13 22:54:47 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:47 0121   LOAD
    2020-01-13 22:54:47 0122  [Entry Exit Id],
    2020-01-13 22:54:47 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:47 0124  [Entry Exit Review Type],
    2020-01-13 22:54:47 0125  [Entry Exit Review Date],
    2020-01-13 22:54:47 0126  [Entry Exit Review Id]
    2020-01-13 22:54:47 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:47 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:47      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:47      16,095 lines fetched
    2020-01-13 22:54:47 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:47 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:47 0135 DROP FIELDS client_id FROM client_substanceabuseassessm_review
    2020-01-13 22:54:47 0136 DROP FIELDS recordset_id FROM client_substanceabuseassessm_review
    2020-01-13 22:54:47 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:47 0140   Mapping SQL
    2020-01-13 22:54:47 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:47 0142     FROM da_question dq
    2020-01-13 22:54:47 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0144     WHERE
    2020-01-13 22:54:47 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:47 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:47 0148     UNION
    2020-01-13 22:54:47 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:47 0150     FROM da_question dq
    2020-01-13 22:54:47 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0152     WHERE
    2020-01-13 22:54:47 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:47 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:47 0156      UNION
    2020-01-13 22:54:47 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:47 0158     FROM da_question dq
    2020-01-13 22:54:47 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0160     WHERE
    2020-01-13 22:54:47 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:47 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:47 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:47 0165     UNION
    2020-01-13 22:54:47 0166 
    2020-01-13 22:54:47 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:47 0168     FROM da_question dq
    2020-01-13 22:54:47 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0170     WHERE
    2020-01-13 22:54:47 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:47 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:47 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:47 0175     UNION   
    2020-01-13 22:54:47 0176     SELECT
    2020-01-13 22:54:47 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:47 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:47 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:47 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:47 0181     FROM da_question dq
    2020-01-13 22:54:47 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0183     WHERE
    2020-01-13 22:54:47 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:47 0186     UNION
    2020-01-13 22:54:47 0187 	SELECT
    2020-01-13 22:54:47 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:47 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:47 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:47 0191     FROM da_question dq
    2020-01-13 22:54:47 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:47 0193     WHERE
    2020-01-13 22:54:47 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:47 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:48      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:48      1,304 lines fetched
    2020-01-13 22:54:48 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:48 0198 DROP TABLE client_substanceabuseassessm
    2020-01-13 22:54:48 0200 LET varStepName='STEPINTERIM_' & 38 & '_of_' & 50
    2020-01-13 22:54:48 0201 STEPINTERIM_38_of_50: select 1
    2020-01-13 22:54:48      	1 fields found: ?column?, 
    2020-01-13 22:54:48      1 lines fetched
    2020-01-13 22:54:48 0202 DROP TABLE STEPINTERIM_38_of_50
    2020-01-13 22:54:48 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:48 0205 NEXT
    2020-01-13 22:54:48 0025 LET varRecordSetTableName=Peek('sp_table_name',39,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:48 0026 LET varRecordSetQlikName=Peek('qlik_table_name',39,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:48 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',39,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:48 0029 LET varRecordSetQlikName_Interim='client_substanceabusetreatment' & '_review'
    2020-01-13 22:54:48 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceabusetreatment') <= 20),'substanceabusetreatment' & 'end_1',left('substanceabusetreatment', 20)& 'end_1')
    2020-01-13 22:54:48 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceabusetreatment' & 'enddate'
    2020-01-13 22:54:48 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_substanceabusetreatment', (len('client_substanceabusetreatment'))-7))
    2020-01-13 22:54:48 0034 client_substanceabusetreatment:
    2020-01-13 22:54:48 0035   SELECT * FROM qlik_sclient_substanceabusetreatment
    2020-01-13 22:54:48      	6 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, 
    2020-01-13 22:54:48      2,102 lines fetched
    2020-01-13 22:54:48 0038 client_substanceabusetreatment_review:
    2020-01-13 22:54:48 0039   Noconcatenate
    2020-01-13 22:54:48 0040   LOAD DISTINCT
    2020-01-13 22:54:48 0041   *,
    2020-01-13 22:54:48 0042   recordset_id AS 'client_SUBSTANCEABUSETREATMENTRECORDSET_ID_review'
    2020-01-13 22:54:48 0043   RESIDENT client_substanceabusetreatment
    2020-01-13 22:54:48      	7 fields found: recordset_id, client_id, substanceabusetreatmentstartdate, substanceabusetreatmentenddate, locationofthissubstan, treatmenttype, client_SUBSTANCEABUSETREATMENTRECORDSET_ID_review, 
    2020-01-13 22:54:48      2,102 lines fetched
    2020-01-13 22:54:48 0045 CustomEndFieldCheck:
    2020-01-13 22:54:48 0046   SELECT *
    2020-01-13 22:54:48 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceabusetreatmend_1'
    2020-01-13 22:54:49      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:49      0 lines fetched
    2020-01-13 22:54:49 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceabusetreatmend_1','substanceabusetreatmentenddate')
    2020-01-13 22:54:49 0053 RS_Interim:
    2020-01-13 22:54:49 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:49 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:49 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:49 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:49 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:49 0059   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:54:49 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:49 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:49 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:49 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:49 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:49 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:49 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:49 0067   WHERE 
    2020-01-13 22:54:49 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:49 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:49 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:49 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:49 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:49 0073     AND (ft.substanceabusetreatmentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:49 0074     AND ((ft.substanceabusetreatmentenddate::DATE IS NULL) OR (ft.substanceabusetreatmentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:49 0075   UNION
    2020-01-13 22:54:49 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:49 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:49 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:49 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:49 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:49 0081   FROM qlik_sclient_substanceabusetreatment ft
    2020-01-13 22:54:49 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:49 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:49 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:49 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:49 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:49 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:49 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:49 0089   WHERE 
    2020-01-13 22:54:49 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:49 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:49 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:49 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:49 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:49 0095     AND (ft.substanceabusetreatmentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:49 0096     AND ((ft.substanceabusetreatmentenddate::DATE IS NULL) OR (ft.substanceabusetreatmentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:49      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:49      147 lines fetched
    2020-01-13 22:54:49 0099 INNER JOIN(client_substanceabusetreatment_review)
    2020-01-13 22:54:49 0100   LOAD DISTINCT
    2020-01-13 22:54:49 0101   recordset_id,
    2020-01-13 22:54:49 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:49 0103   provider_creating_id AS [client_SUBSTANCEABUSETREATMENT_Provider_Creating_Review],
    2020-01-13 22:54:49 0104   name AS [client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Review],
    2020-01-13 22:54:49 0105   user_creating_id AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Review],
    2020-01-13 22:54:49 0106   user_name AS [client_SUBSTANCEABUSETREATMENT_User_Created_By_Review]
    2020-01-13 22:54:49 0107   RESIDENT RS_Interim
    2020-01-13 22:54:49      	6 fields found: recordset_id, Entry Exit Review Id, client_SUBSTANCEABUSETREATMENT_Provider_Creating_Review, client_SUBSTANCEABUSETREATMENT_Provider_Name_Creating_Review, client_SUBSTANCEABUSETREATMENT_User_Created_By_Id_Review, client_SUBSTANCEABUSETREATMENT_User_Created_By_Review, 
    2020-01-13 22:54:49      147 lines fetched
    2020-01-13 22:54:49      Joining/Keeping
    2020-01-13 22:54:49 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:49 0110   Noconcatenate
    2020-01-13 22:54:49 0111   LOAD DISTINCT
    2020-01-13 22:54:49 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:49 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:49 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:49 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:49 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:49 0117   RESIDENT RS_Interim
    2020-01-13 22:54:49      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:49      107 lines fetched
    2020-01-13 22:54:49 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:49 0121   LOAD
    2020-01-13 22:54:49 0122  [Entry Exit Id],
    2020-01-13 22:54:49 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:49 0124  [Entry Exit Review Type],
    2020-01-13 22:54:49 0125  [Entry Exit Review Date],
    2020-01-13 22:54:49 0126  [Entry Exit Review Id]
    2020-01-13 22:54:49 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:49 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:49      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:49      16,095 lines fetched
    2020-01-13 22:54:49 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:49 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:49 0135 DROP FIELDS client_id FROM client_substanceabusetreatment_review
    2020-01-13 22:54:49 0136 DROP FIELDS recordset_id FROM client_substanceabusetreatment_review
    2020-01-13 22:54:49 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:49 0140   Mapping SQL
    2020-01-13 22:54:49 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:49 0142     FROM da_question dq
    2020-01-13 22:54:49 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0144     WHERE
    2020-01-13 22:54:49 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:49 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:49 0148     UNION
    2020-01-13 22:54:49 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:49 0150     FROM da_question dq
    2020-01-13 22:54:49 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0152     WHERE
    2020-01-13 22:54:49 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:49 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:49 0156      UNION
    2020-01-13 22:54:49 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:49 0158     FROM da_question dq
    2020-01-13 22:54:49 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0160     WHERE
    2020-01-13 22:54:49 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:49 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:49 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:49 0165     UNION
    2020-01-13 22:54:49 0166 
    2020-01-13 22:54:49 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:49 0168     FROM da_question dq
    2020-01-13 22:54:49 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0170     WHERE
    2020-01-13 22:54:49 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:49 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:49 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:49 0175     UNION   
    2020-01-13 22:54:49 0176     SELECT
    2020-01-13 22:54:49 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:49 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:49 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:49 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:49 0181     FROM da_question dq
    2020-01-13 22:54:49 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0183     WHERE
    2020-01-13 22:54:49 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:49 0186     UNION
    2020-01-13 22:54:49 0187 	SELECT
    2020-01-13 22:54:49 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:49 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:49 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:49 0191     FROM da_question dq
    2020-01-13 22:54:49 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:49 0193     WHERE
    2020-01-13 22:54:49 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:49 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:50      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:50      1,304 lines fetched
    2020-01-13 22:54:50 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:50 0198 DROP TABLE client_substanceabusetreatment
    2020-01-13 22:54:50 0200 LET varStepName='STEPINTERIM_' & 39 & '_of_' & 50
    2020-01-13 22:54:50 0201 STEPINTERIM_39_of_50: select 1
    2020-01-13 22:54:50      	1 fields found: ?column?, 
    2020-01-13 22:54:50      1 lines fetched
    2020-01-13 22:54:50 0202 DROP TABLE STEPINTERIM_39_of_50
    2020-01-13 22:54:50 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:50 0205 NEXT
    2020-01-13 22:54:50 0025 LET varRecordSetTableName=Peek('sp_table_name',40,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:50 0026 LET varRecordSetQlikName=Peek('qlik_table_name',40,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:50 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',40,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:50 0029 LET varRecordSetQlikName_Interim='client_substanceusage' & '_review'
    2020-01-13 22:54:50 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('substanceusage') <= 20),'substanceusage' & 'end_1',left('substanceusage', 20)& 'end_1')
    2020-01-13 22:54:50 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'substanceusage' & 'enddate'
    2020-01-13 22:54:50 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_substanceusage', (len('client_substanceusage'))-7))
    2020-01-13 22:54:50 0034 client_substanceusage:
    2020-01-13 22:54:50 0035   SELECT * FROM qlik_sclient_substanceusage
    2020-01-13 22:54:50      	8 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, 
    2020-01-13 22:54:50      2,463 lines fetched
    2020-01-13 22:54:50 0038 client_substanceusage_review:
    2020-01-13 22:54:50 0039   Noconcatenate
    2020-01-13 22:54:50 0040   LOAD DISTINCT
    2020-01-13 22:54:50 0041   *,
    2020-01-13 22:54:50 0042   recordset_id AS 'client_SUBSTANCEUSAGERECORDSET_ID_review'
    2020-01-13 22:54:50 0043   RESIDENT client_substanceusage
    2020-01-13 22:54:50      	9 fields found: recordset_id, client_id, substanceusagestartdate, substanceusageenddate, frequencyofuse, method_1, typeofsubstance, triggersthatledtousing, client_SUBSTANCEUSAGERECORDSET_ID_review, 
    2020-01-13 22:54:50      2,463 lines fetched
    2020-01-13 22:54:50 0045 CustomEndFieldCheck:
    2020-01-13 22:54:50 0046   SELECT *
    2020-01-13 22:54:50 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'substanceusageend_1'
    2020-01-13 22:54:50      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:50      0 lines fetched
    2020-01-13 22:54:50 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'substanceusageend_1','substanceusageenddate')
    2020-01-13 22:54:50 0053 RS_Interim:
    2020-01-13 22:54:50 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:50 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:50 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:50 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:50 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:50 0059   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:54:50 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:50 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:50 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:50 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:50 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:50 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:50 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:50 0067   WHERE 
    2020-01-13 22:54:50 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:50 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:50 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:50 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:50 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:50 0073     AND (ft.substanceusagestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:50 0074     AND ((ft.substanceusageenddate::DATE IS NULL) OR (ft.substanceusageenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:50 0075   UNION
    2020-01-13 22:54:50 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:50 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:50 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:50 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:50 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:50 0081   FROM qlik_sclient_substanceusage ft
    2020-01-13 22:54:50 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:50 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:50 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:50 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:50 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:50 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:50 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:50 0089   WHERE 
    2020-01-13 22:54:50 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:50 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:50 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:50 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:50 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:50 0095     AND (ft.substanceusagestartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:50 0096     AND ((ft.substanceusageenddate::DATE IS NULL) OR (ft.substanceusageenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:51      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:51      218 lines fetched
    2020-01-13 22:54:51 0099 INNER JOIN(client_substanceusage_review)
    2020-01-13 22:54:51 0100   LOAD DISTINCT
    2020-01-13 22:54:51 0101   recordset_id,
    2020-01-13 22:54:51 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:51 0103   provider_creating_id AS [client_SUBSTANCEUSAGE_Provider_Creating_Review],
    2020-01-13 22:54:51 0104   name AS [client_SUBSTANCEUSAGE_Provider_Name_Creating_Review],
    2020-01-13 22:54:51 0105   user_creating_id AS [client_SUBSTANCEUSAGE_User_Created_By_Id_Review],
    2020-01-13 22:54:51 0106   user_name AS [client_SUBSTANCEUSAGE_User_Created_By_Review]
    2020-01-13 22:54:51 0107   RESIDENT RS_Interim
    2020-01-13 22:54:51      	6 fields found: recordset_id, Entry Exit Review Id, client_SUBSTANCEUSAGE_Provider_Creating_Review, client_SUBSTANCEUSAGE_Provider_Name_Creating_Review, client_SUBSTANCEUSAGE_User_Created_By_Id_Review, client_SUBSTANCEUSAGE_User_Created_By_Review, 
    2020-01-13 22:54:51      218 lines fetched
    2020-01-13 22:54:51      Joining/Keeping
    2020-01-13 22:54:51 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:51 0110   Noconcatenate
    2020-01-13 22:54:51 0111   LOAD DISTINCT
    2020-01-13 22:54:51 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:51 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:51 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:51 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:51 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:51 0117   RESIDENT RS_Interim
    2020-01-13 22:54:51      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:51      177 lines fetched
    2020-01-13 22:54:51 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:51 0121   LOAD
    2020-01-13 22:54:51 0122  [Entry Exit Id],
    2020-01-13 22:54:51 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:51 0124  [Entry Exit Review Type],
    2020-01-13 22:54:51 0125  [Entry Exit Review Date],
    2020-01-13 22:54:51 0126  [Entry Exit Review Id]
    2020-01-13 22:54:51 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:51 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:51      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:51      16,095 lines fetched
    2020-01-13 22:54:51 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:51 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:51 0135 DROP FIELDS client_id FROM client_substanceusage_review
    2020-01-13 22:54:51 0136 DROP FIELDS recordset_id FROM client_substanceusage_review
    2020-01-13 22:54:51 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:51 0140   Mapping SQL
    2020-01-13 22:54:51 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:51 0142     FROM da_question dq
    2020-01-13 22:54:51 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0144     WHERE
    2020-01-13 22:54:51 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:51 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:51 0148     UNION
    2020-01-13 22:54:51 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:51 0150     FROM da_question dq
    2020-01-13 22:54:51 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0152     WHERE
    2020-01-13 22:54:51 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:51 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:51 0156      UNION
    2020-01-13 22:54:51 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:51 0158     FROM da_question dq
    2020-01-13 22:54:51 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0160     WHERE
    2020-01-13 22:54:51 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:51 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:51 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:51 0165     UNION
    2020-01-13 22:54:51 0166 
    2020-01-13 22:54:51 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:51 0168     FROM da_question dq
    2020-01-13 22:54:51 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0170     WHERE
    2020-01-13 22:54:51 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:51 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:51 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:51 0175     UNION   
    2020-01-13 22:54:51 0176     SELECT
    2020-01-13 22:54:51 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:51 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:51 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:51 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:51 0181     FROM da_question dq
    2020-01-13 22:54:51 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0183     WHERE
    2020-01-13 22:54:51 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:51 0186     UNION
    2020-01-13 22:54:51 0187 	SELECT
    2020-01-13 22:54:51 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:51 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:51 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:51 0191     FROM da_question dq
    2020-01-13 22:54:51 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:51 0193     WHERE
    2020-01-13 22:54:51 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:51 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:52      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:52      1,304 lines fetched
    2020-01-13 22:54:52 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:52 0198 DROP TABLE client_substanceusage
    2020-01-13 22:54:52 0200 LET varStepName='STEPINTERIM_' & 40 & '_of_' & 50
    2020-01-13 22:54:52 0201 STEPINTERIM_40_of_50: select 1
    2020-01-13 22:54:52      	1 fields found: ?column?, 
    2020-01-13 22:54:52      1 lines fetched
    2020-01-13 22:54:52 0202 DROP TABLE STEPINTERIM_40_of_50
    2020-01-13 22:54:52 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:52 0205 NEXT
    2020-01-13 22:54:52 0025 LET varRecordSetTableName=Peek('sp_table_name',41,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:52 0026 LET varRecordSetQlikName=Peek('qlik_table_name',41,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:52 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',41,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:52 0029 LET varRecordSetQlikName_Interim='client_svp_hud_currentlivingsituation' & '_review'
    2020-01-13 22:54:52 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_hud_currentlivingsituation') <= 20),'svp_hud_currentlivingsituation' & 'end_1',left('svp_hud_currentlivingsituation', 20)& 'end_1')
    2020-01-13 22:54:52 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_hud_currentlivingsituation' & 'enddate'
    2020-01-13 22:54:52 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svp_hud_currentlivingsituation', (len('client_svp_hud_currentlivingsituation'))-7))
    2020-01-13 22:54:52 0034 client_svp_hud_currentlivingsituation:
    2020-01-13 22:54:52 0035   SELECT * FROM qlik_sclient_svp_hud_currentlivingsituation
    2020-01-13 22:54:53      	14 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, 
    2020-01-13 22:54:53      9,421 lines fetched
    2020-01-13 22:54:53 0038 client_svp_hud_currentlivingsituation_review:
    2020-01-13 22:54:53 0039   Noconcatenate
    2020-01-13 22:54:53 0040   LOAD DISTINCT
    2020-01-13 22:54:53 0041   *,
    2020-01-13 22:54:53 0042   recordset_id AS 'client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_review'
    2020-01-13 22:54:53 0043   RESIDENT client_svp_hud_currentlivingsituation
    2020-01-13 22:54:53      	15 fields found: recordset_id, client_id, svp_hud_currentlivingsituationstartdate, svp_hud_currentlivingsituationenddate, svp_hud_cls_currentlivingsit, svp_hud_cls_havesupportnetwork, svp_hud_cls_leasein60days, svp_hud_cls_leavein14days, svp_hud_cls_livingsitverifiedby, svp_hud_cls_movedtwicein60days, svp_hud_cls_residenceindentified, svp_hud_cls_currentlivingsit_other, svp_hud_cls_infodate, svp_hud_cls_locationdetails, client_SVP_HUD_CURRENTLIVINGSITUATIONRECORDSET_ID_review, 
    2020-01-13 22:54:53      9,421 lines fetched
    2020-01-13 22:54:53 0045 CustomEndFieldCheck:
    2020-01-13 22:54:53 0046   SELECT *
    2020-01-13 22:54:53 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_hud_currentlivinend_1'
    2020-01-13 22:54:53      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:54:53      0 lines fetched
    2020-01-13 22:54:53 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_hud_currentlivinend_1','svp_hud_currentlivingsituationenddate')
    2020-01-13 22:54:53 0053 RS_Interim:
    2020-01-13 22:54:53 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:53 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:53 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:53 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:54:53 0058 	eer.entry_exit_review_id
    2020-01-13 22:54:53 0059   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:54:53 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:53 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:53 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:53 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:53 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:53 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:53 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:54:53 0067   WHERE 
    2020-01-13 22:54:53 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:54:53 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:53 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:53 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:53 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:54:53 0073     AND (ft.svp_hud_currentlivingsituationstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:53 0074     AND ((ft.svp_hud_currentlivingsituationenddate::DATE IS NULL) OR (ft.svp_hud_currentlivingsituationenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:53 0075   UNION
    2020-01-13 22:54:53 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:54:53 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:54:53 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:54:53 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:54:53 0080     eer.entry_exit_review_id	
    2020-01-13 22:54:53 0081   FROM qlik_sclient_svp_hud_currentlivingsituation ft
    2020-01-13 22:54:53 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:54:53 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:54:53 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:54:53 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:54:53 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:54:53 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:54:53 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:54:53 0089   WHERE 
    2020-01-13 22:54:53 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:54:53 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:54:53 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:54:53 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:54:54 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:54:54 0095     AND (ft.svp_hud_currentlivingsituationstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:54:54 0096     AND ((ft.svp_hud_currentlivingsituationenddate::DATE IS NULL) OR (ft.svp_hud_currentlivingsituationenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:54:56      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:54:56      848 lines fetched
    2020-01-13 22:54:56 0099 INNER JOIN(client_svp_hud_currentlivingsituation_review)
    2020-01-13 22:54:56 0100   LOAD DISTINCT
    2020-01-13 22:54:56 0101   recordset_id,
    2020-01-13 22:54:56 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:54:56 0103   provider_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Review],
    2020-01-13 22:54:56 0104   name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Review],
    2020-01-13 22:54:56 0105   user_creating_id AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Review],
    2020-01-13 22:54:56 0106   user_name AS [client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Review]
    2020-01-13 22:54:56 0107   RESIDENT RS_Interim
    2020-01-13 22:54:56      	6 fields found: recordset_id, Entry Exit Review Id, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Creating_Review, client_SVP_HUD_CURRENTLIVINGSITUATION_Provider_Name_Creating_Review, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Id_Review, client_SVP_HUD_CURRENTLIVINGSITUATION_User_Created_By_Review, 
    2020-01-13 22:54:56      848 lines fetched
    2020-01-13 22:54:56      Joining/Keeping
    2020-01-13 22:54:56 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:54:56 0110   Noconcatenate
    2020-01-13 22:54:56 0111   LOAD DISTINCT
    2020-01-13 22:54:56 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:54:56 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:54:56 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:54:56 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:54:56 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:54:56 0117   RESIDENT RS_Interim
    2020-01-13 22:54:56      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:56      513 lines fetched
    2020-01-13 22:54:56 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:54:56 0121   LOAD
    2020-01-13 22:54:56 0122  [Entry Exit Id],
    2020-01-13 22:54:56 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:54:56 0124  [Entry Exit Review Type],
    2020-01-13 22:54:56 0125  [Entry Exit Review Date],
    2020-01-13 22:54:56 0126  [Entry Exit Review Id]
    2020-01-13 22:54:56 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:54:56 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:54:56      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:54:56      16,095 lines fetched
    2020-01-13 22:54:56 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:54:56 0133 DROP TABLE RS_Interim
    2020-01-13 22:54:56 0135 DROP FIELDS client_id FROM client_svp_hud_currentlivingsituation_review
    2020-01-13 22:54:56 0136 DROP FIELDS recordset_id FROM client_svp_hud_currentlivingsituation_review
    2020-01-13 22:54:56 0139 FieldMapSaClientInterim:
    2020-01-13 22:54:56 0140   Mapping SQL
    2020-01-13 22:54:56 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:56 0142     FROM da_question dq
    2020-01-13 22:54:56 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0144     WHERE
    2020-01-13 22:54:56 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:54:56 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:54:56 0148     UNION
    2020-01-13 22:54:56 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:56 0150     FROM da_question dq
    2020-01-13 22:54:56 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0152     WHERE
    2020-01-13 22:54:56 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:54:56 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:54:56 0156      UNION
    2020-01-13 22:54:56 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:54:56 0158     FROM da_question dq
    2020-01-13 22:54:56 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0160     WHERE
    2020-01-13 22:54:56 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:54:56 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:54:56 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:56 0165     UNION
    2020-01-13 22:54:56 0166 
    2020-01-13 22:54:56 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:54:56 0168     FROM da_question dq
    2020-01-13 22:54:56 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0170     WHERE
    2020-01-13 22:54:56 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:54:56 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:54:56 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:54:56 0175     UNION   
    2020-01-13 22:54:56 0176     SELECT
    2020-01-13 22:54:56 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:54:56 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:56 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:56 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:54:56 0181     FROM da_question dq
    2020-01-13 22:54:56 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0183     WHERE
    2020-01-13 22:54:56 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:56 0186     UNION
    2020-01-13 22:54:56 0187 	SELECT
    2020-01-13 22:54:56 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:56 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:54:56 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:54:56 0191     FROM da_question dq
    2020-01-13 22:54:56 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:54:56 0193     WHERE
    2020-01-13 22:54:56 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:54:56 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:54:56      	2 fields found: oldnames, newnames, 
    2020-01-13 22:54:56      1,304 lines fetched
    2020-01-13 22:54:56 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:54:56 0198 DROP TABLE client_svp_hud_currentlivingsituation
    2020-01-13 22:54:56 0200 LET varStepName='STEPINTERIM_' & 41 & '_of_' & 50
    2020-01-13 22:54:56 0201 STEPINTERIM_41_of_50: select 1
    2020-01-13 22:54:57      	1 fields found: ?column?, 
    2020-01-13 22:54:57      1 lines fetched
    2020-01-13 22:54:57 0202 DROP TABLE STEPINTERIM_41_of_50
    2020-01-13 22:54:57 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:54:57 0205 NEXT
    2020-01-13 22:54:57 0025 LET varRecordSetTableName=Peek('sp_table_name',42,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:57 0026 LET varRecordSetQlikName=Peek('qlik_table_name',42,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:57 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',42,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:54:57 0029 LET varRecordSetQlikName_Interim='client_svp_noncashbenefits' & '_review'
    2020-01-13 22:54:57 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_noncashbenefits') <= 20),'svp_noncashbenefits' & 'end_1',left('svp_noncashbenefits', 20)& 'end_1')
    2020-01-13 22:54:57 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_noncashbenefits' & 'enddate'
    2020-01-13 22:54:57 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svp_noncashbenefits', (len('client_svp_noncashbenefits'))-7))
    2020-01-13 22:54:57 0034 client_svp_noncashbenefits:
    2020-01-13 22:54:57 0035   SELECT * FROM qlik_sclient_svp_noncashbenefits
    2020-01-13 22:55:24      	9 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, 
    2020-01-13 22:55:24      454,272 lines fetched
    2020-01-13 22:55:24 0038 client_svp_noncashbenefits_review:
    2020-01-13 22:55:24 0039   Noconcatenate
    2020-01-13 22:55:24 0040   LOAD DISTINCT
    2020-01-13 22:55:24 0041   *,
    2020-01-13 22:55:24 0042   recordset_id AS 'client_SVP_NONCASHBENEFITSRECORDSET_ID_review'
    2020-01-13 22:55:24 0043   RESIDENT client_svp_noncashbenefits
    2020-01-13 22:55:25      	10 fields found: recordset_id, client_id, svp_noncashbenefitsstartdate, svp_noncashbenefitsenddate, notesaboutnoncashbene, svp_noncashbenefitssource, svp_receivingbenefit, svp_noncashbenefitsamount, svp_noncashbenefitsother, client_SVP_NONCASHBENEFITSRECORDSET_ID_review, 
    2020-01-13 22:55:25      454,272 lines fetched
    2020-01-13 22:55:25 0045 CustomEndFieldCheck:
    2020-01-13 22:55:25 0046   SELECT *
    2020-01-13 22:55:25 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_noncashbenefitsend_1'
    2020-01-13 22:55:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:55:25      0 lines fetched
    2020-01-13 22:55:25 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_noncashbenefitsend_1','svp_noncashbenefitsenddate')
    2020-01-13 22:55:25 0053 RS_Interim:
    2020-01-13 22:55:25 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:55:25 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:55:25 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:55:25 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:55:25 0058 	eer.entry_exit_review_id
    2020-01-13 22:55:25 0059   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:55:25 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:55:25 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:55:25 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:55:25 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:55:25 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:55:25 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:55:25 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:55:25 0067   WHERE 
    2020-01-13 22:55:25 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:55:25 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:55:25 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:55:25 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:55:25 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:55:25 0073     AND (ft.svp_noncashbenefitsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:55:25 0074     AND ((ft.svp_noncashbenefitsenddate::DATE IS NULL) OR (ft.svp_noncashbenefitsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:55:25 0075   UNION
    2020-01-13 22:55:25 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:55:25 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:55:25 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:55:25 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:55:25 0080     eer.entry_exit_review_id	
    2020-01-13 22:55:25 0081   FROM qlik_sclient_svp_noncashbenefits ft
    2020-01-13 22:55:25 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:55:25 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:55:25 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:55:25 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:55:25 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:55:25 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:55:25 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:55:25 0089   WHERE 
    2020-01-13 22:55:25 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:55:25 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:55:25 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:55:25 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:55:25 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:55:25 0095     AND (ft.svp_noncashbenefitsstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:55:25 0096     AND ((ft.svp_noncashbenefitsenddate::DATE IS NULL) OR (ft.svp_noncashbenefitsenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:20      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:20      107,037 lines fetched
    2020-01-13 22:56:20 0099 INNER JOIN(client_svp_noncashbenefits_review)
    2020-01-13 22:56:20 0100   LOAD DISTINCT
    2020-01-13 22:56:20 0101   recordset_id,
    2020-01-13 22:56:20 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:20 0103   provider_creating_id AS [client_SVP_NONCASHBENEFITS_Provider_Creating_Review],
    2020-01-13 22:56:20 0104   name AS [client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Review],
    2020-01-13 22:56:20 0105   user_creating_id AS [client_SVP_NONCASHBENEFITS_User_Created_By_Id_Review],
    2020-01-13 22:56:20 0106   user_name AS [client_SVP_NONCASHBENEFITS_User_Created_By_Review]
    2020-01-13 22:56:20 0107   RESIDENT RS_Interim
    2020-01-13 22:56:20      	6 fields found: recordset_id, Entry Exit Review Id, client_SVP_NONCASHBENEFITS_Provider_Creating_Review, client_SVP_NONCASHBENEFITS_Provider_Name_Creating_Review, client_SVP_NONCASHBENEFITS_User_Created_By_Id_Review, client_SVP_NONCASHBENEFITS_User_Created_By_Review, 
    2020-01-13 22:56:20      107,037 lines fetched
    2020-01-13 22:56:20      Joining/Keeping
    2020-01-13 22:56:21 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:21 0110   Noconcatenate
    2020-01-13 22:56:21 0111   LOAD DISTINCT
    2020-01-13 22:56:21 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:21 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:21 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:21 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:21 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:21 0117   RESIDENT RS_Interim
    2020-01-13 22:56:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:21      13,327 lines fetched
    2020-01-13 22:56:21 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:21 0121   LOAD
    2020-01-13 22:56:21 0122  [Entry Exit Id],
    2020-01-13 22:56:21 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:21 0124  [Entry Exit Review Type],
    2020-01-13 22:56:21 0125  [Entry Exit Review Date],
    2020-01-13 22:56:21 0126  [Entry Exit Review Id]
    2020-01-13 22:56:21 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:21 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:21      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:21      16,097 lines fetched
    2020-01-13 22:56:21 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:21 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:21 0135 DROP FIELDS client_id FROM client_svp_noncashbenefits_review
    2020-01-13 22:56:21 0136 DROP FIELDS recordset_id FROM client_svp_noncashbenefits_review
    2020-01-13 22:56:21 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:21 0140   Mapping SQL
    2020-01-13 22:56:21 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:21 0142     FROM da_question dq
    2020-01-13 22:56:21 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0144     WHERE
    2020-01-13 22:56:21 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:21 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:21 0148     UNION
    2020-01-13 22:56:21 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:21 0150     FROM da_question dq
    2020-01-13 22:56:21 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0152     WHERE
    2020-01-13 22:56:21 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:21 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:21 0156      UNION
    2020-01-13 22:56:21 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:21 0158     FROM da_question dq
    2020-01-13 22:56:21 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0160     WHERE
    2020-01-13 22:56:21 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:21 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:21 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:21 0165     UNION
    2020-01-13 22:56:21 0166 
    2020-01-13 22:56:21 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:21 0168     FROM da_question dq
    2020-01-13 22:56:21 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0170     WHERE
    2020-01-13 22:56:21 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:21 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:21 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:21 0175     UNION   
    2020-01-13 22:56:21 0176     SELECT
    2020-01-13 22:56:21 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:21 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:21 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:21 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:21 0181     FROM da_question dq
    2020-01-13 22:56:21 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0183     WHERE
    2020-01-13 22:56:21 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:21 0186     UNION
    2020-01-13 22:56:21 0187 	SELECT
    2020-01-13 22:56:21 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:21 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:21 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:21 0191     FROM da_question dq
    2020-01-13 22:56:21 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:21 0193     WHERE
    2020-01-13 22:56:21 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:21 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:21      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:21      1,304 lines fetched
    2020-01-13 22:56:21 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:21 0198 DROP TABLE client_svp_noncashbenefits
    2020-01-13 22:56:21 0200 LET varStepName='STEPINTERIM_' & 42 & '_of_' & 50
    2020-01-13 22:56:21 0201 STEPINTERIM_42_of_50: select 1
    2020-01-13 22:56:21      	1 fields found: ?column?, 
    2020-01-13 22:56:21      1 lines fetched
    2020-01-13 22:56:21 0202 DROP TABLE STEPINTERIM_42_of_50
    2020-01-13 22:56:21 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:21 0205 NEXT
    2020-01-13 22:56:21 0025 LET varRecordSetTableName=Peek('sp_table_name',43,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:21 0026 LET varRecordSetQlikName=Peek('qlik_table_name',43,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:21 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',43,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:21 0029 LET varRecordSetQlikName_Interim='client_svp_outreach' & '_review'
    2020-01-13 22:56:21 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svp_outreach') <= 20),'svp_outreach' & 'end_1',left('svp_outreach', 20)& 'end_1')
    2020-01-13 22:56:21 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svp_outreach' & 'enddate'
    2020-01-13 22:56:21 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svp_outreach', (len('client_svp_outreach'))-7))
    2020-01-13 22:56:21 0034 client_svp_outreach:
    2020-01-13 22:56:21 0035   SELECT * FROM qlik_sclient_svp_outreach
    2020-01-13 22:56:22      	8 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, 
    2020-01-13 22:56:22      8,687 lines fetched
    2020-01-13 22:56:22 0038 client_svp_outreach_review:
    2020-01-13 22:56:22 0039   Noconcatenate
    2020-01-13 22:56:22 0040   LOAD DISTINCT
    2020-01-13 22:56:22 0041   *,
    2020-01-13 22:56:22 0042   recordset_id AS 'client_SVP_OUTREACHRECORDSET_ID_review'
    2020-01-13 22:56:22 0043   RESIDENT client_svp_outreach
    2020-01-13 22:56:22      	9 fields found: recordset_id, client_id, svp_outreachstartdate, svp_outreachenddate, actuallocationofconta, notes_16, svp_hud_contactstayonstreet, svp_outreach_date, client_SVP_OUTREACHRECORDSET_ID_review, 
    2020-01-13 22:56:22      8,687 lines fetched
    2020-01-13 22:56:22 0045 CustomEndFieldCheck:
    2020-01-13 22:56:22 0046   SELECT *
    2020-01-13 22:56:22 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svp_outreachend_1'
    2020-01-13 22:56:23      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:23      0 lines fetched
    2020-01-13 22:56:23 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svp_outreachend_1','svp_outreachenddate')
    2020-01-13 22:56:23 0053 RS_Interim:
    2020-01-13 22:56:23 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:23 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:23 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:23 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:23 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:23 0059   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:56:23 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:23 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:23 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:23 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:23 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:23 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:23 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:23 0067   WHERE 
    2020-01-13 22:56:23 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:23 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:23 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:23 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:23 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:23 0073     AND (ft.svp_outreachstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:23 0074     AND ((ft.svp_outreachenddate::DATE IS NULL) OR (ft.svp_outreachenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:23 0075   UNION
    2020-01-13 22:56:23 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:23 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:23 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:23 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:23 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:23 0081   FROM qlik_sclient_svp_outreach ft
    2020-01-13 22:56:23 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:23 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:23 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:23 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:23 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:23 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:23 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:23 0089   WHERE 
    2020-01-13 22:56:23 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:23 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:23 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:23 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:23 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:23 0095     AND (ft.svp_outreachstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:23 0096     AND ((ft.svp_outreachenddate::DATE IS NULL) OR (ft.svp_outreachenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:24      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:24      764 lines fetched
    2020-01-13 22:56:24 0099 INNER JOIN(client_svp_outreach_review)
    2020-01-13 22:56:24 0100   LOAD DISTINCT
    2020-01-13 22:56:24 0101   recordset_id,
    2020-01-13 22:56:24 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:24 0103   provider_creating_id AS [client_SVP_OUTREACH_Provider_Creating_Review],
    2020-01-13 22:56:24 0104   name AS [client_SVP_OUTREACH_Provider_Name_Creating_Review],
    2020-01-13 22:56:24 0105   user_creating_id AS [client_SVP_OUTREACH_User_Created_By_Id_Review],
    2020-01-13 22:56:24 0106   user_name AS [client_SVP_OUTREACH_User_Created_By_Review]
    2020-01-13 22:56:24 0107   RESIDENT RS_Interim
    2020-01-13 22:56:24      	6 fields found: recordset_id, Entry Exit Review Id, client_SVP_OUTREACH_Provider_Creating_Review, client_SVP_OUTREACH_Provider_Name_Creating_Review, client_SVP_OUTREACH_User_Created_By_Id_Review, client_SVP_OUTREACH_User_Created_By_Review, 
    2020-01-13 22:56:24      764 lines fetched
    2020-01-13 22:56:24      Joining/Keeping
    2020-01-13 22:56:24 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:24 0110   Noconcatenate
    2020-01-13 22:56:24 0111   LOAD DISTINCT
    2020-01-13 22:56:24 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:24 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:24 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:24 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:24 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:24 0117   RESIDENT RS_Interim
    2020-01-13 22:56:24      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:24      459 lines fetched
    2020-01-13 22:56:24 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:24 0121   LOAD
    2020-01-13 22:56:24 0122  [Entry Exit Id],
    2020-01-13 22:56:24 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:24 0124  [Entry Exit Review Type],
    2020-01-13 22:56:24 0125  [Entry Exit Review Date],
    2020-01-13 22:56:24 0126  [Entry Exit Review Id]
    2020-01-13 22:56:24 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:24 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:24      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:24      16,097 lines fetched
    2020-01-13 22:56:24 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:24 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:24 0135 DROP FIELDS client_id FROM client_svp_outreach_review
    2020-01-13 22:56:24 0136 DROP FIELDS recordset_id FROM client_svp_outreach_review
    2020-01-13 22:56:24 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:24 0140   Mapping SQL
    2020-01-13 22:56:24 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:24 0142     FROM da_question dq
    2020-01-13 22:56:24 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0144     WHERE
    2020-01-13 22:56:24 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:24 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:24 0148     UNION
    2020-01-13 22:56:24 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:24 0150     FROM da_question dq
    2020-01-13 22:56:24 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0152     WHERE
    2020-01-13 22:56:24 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:24 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:24 0156      UNION
    2020-01-13 22:56:24 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:24 0158     FROM da_question dq
    2020-01-13 22:56:24 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0160     WHERE
    2020-01-13 22:56:24 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:24 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:24 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:24 0165     UNION
    2020-01-13 22:56:24 0166 
    2020-01-13 22:56:24 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:24 0168     FROM da_question dq
    2020-01-13 22:56:24 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0170     WHERE
    2020-01-13 22:56:24 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:24 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:24 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:24 0175     UNION   
    2020-01-13 22:56:24 0176     SELECT
    2020-01-13 22:56:24 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:24 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:24 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:24 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:24 0181     FROM da_question dq
    2020-01-13 22:56:24 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0183     WHERE
    2020-01-13 22:56:24 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:24 0186     UNION
    2020-01-13 22:56:24 0187 	SELECT
    2020-01-13 22:56:24 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:24 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:24 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:24 0191     FROM da_question dq
    2020-01-13 22:56:24 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:24 0193     WHERE
    2020-01-13 22:56:24 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:24 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:24      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:24      1,304 lines fetched
    2020-01-13 22:56:24 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:24 0198 DROP TABLE client_svp_outreach
    2020-01-13 22:56:24 0200 LET varStepName='STEPINTERIM_' & 43 & '_of_' & 50
    2020-01-13 22:56:24 0201 STEPINTERIM_43_of_50: select 1
    2020-01-13 22:56:25      	1 fields found: ?column?, 
    2020-01-13 22:56:25      1 lines fetched
    2020-01-13 22:56:25 0202 DROP TABLE STEPINTERIM_43_of_50
    2020-01-13 22:56:25 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:25 0205 NEXT
    2020-01-13 22:56:25 0025 LET varRecordSetTableName=Peek('sp_table_name',44,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:25 0026 LET varRecordSetQlikName=Peek('qlik_table_name',44,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:25 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',44,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:25 0029 LET varRecordSetQlikName_Interim='client_svptayvispdatv1_0_suba' & '_review'
    2020-01-13 22:56:25 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svptayvispdatv1_0_suba') <= 20),'svptayvispdatv1_0_suba' & 'end_1',left('svptayvispdatv1_0_suba', 20)& 'end_1')
    2020-01-13 22:56:25 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svptayvispdatv1_0_suba' & 'enddate'
    2020-01-13 22:56:25 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svptayvispdatv1_0_suba', (len('client_svptayvispdatv1_0_suba'))-7))
    2020-01-13 22:56:25 0034 client_svptayvispdatv1_0_suba:
    2020-01-13 22:56:25 0035   SELECT * FROM qlik_sclient_svptayvispdatv1_0_suba
    2020-01-13 22:56:25      	51 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, 
    2020-01-13 22:56:25      292 lines fetched
    2020-01-13 22:56:25 0038 client_svptayvispdatv1_0_suba_review:
    2020-01-13 22:56:25 0039   Noconcatenate
    2020-01-13 22:56:25 0040   LOAD DISTINCT
    2020-01-13 22:56:25 0041   *,
    2020-01-13 22:56:25 0042   recordset_id AS 'client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_review'
    2020-01-13 22:56:25 0043   RESIDENT client_svptayvispdatv1_0_suba
    2020-01-13 22:56:25      	52 fields found: recordset_id, client_id, svptayvispdatv1_0_subastartdate, svptayvispdatv1_0_subaenddate, tayvispdat_sectionaq1, tayvispdat_sectionaq2, tayvispdat_sectionaq3, tayvispdat_sectionbq10, tayvispdat_sectionbq4a, tayvispdat_sectionbq4b, tayvispdat_sectionbq4c, tayvispdat_sectionbq4d, tayvispdat_sectionbq4e, tayvispdat_sectionbq4f, tayvispdat_sectionbq5, tayvispdat_sectionbq6, tayvispdat_sectionbq7, tayvispdat_sectionbq8, tayvispdat_sectionbq9, tayvispdat_sectioncq11, tayvispdat_sectioncq12, tayvispdat_sectioncq13, tayvispdat_sectioncq14, tayvispdat_sectioncq15a, tayvispdat_sectioncq15b, tayvispdat_sectioncq15c, tayvispdat_sectioncq15d, tayvispdat_sectioncq15e, tayvispdat_sectioncq15f, tayvispdat_sectiondq16, tayvispdat_sectiondq17, tayvispdat_sectiondq18, tayvispdat_sectiondq19, tayvispdat_sectiondq20, tayvispdat_sectiondq21, tayvispdat_sectiondq22, tayvispdat_sectiondq23, tayvispdat_sectiondq24, tayvispdat_sectiondq25a, tayvispdat_sectiondq25b, tayvispdat_sectiondq25c, tayvispdat_sectiondq26, tayvispdat_sectiondq27, tayvispdat_sectiondq28, tayvispdat_presurvey, tayvispdat_scoringsectiona, tayvispdat_scoringsectionb, tayvispdat_scoringsectionc, tayvispdat_scoringsectiond, tayvispdat_scoringtotal, tayvispdat_sectionaq1desc, client_SVPTAYVISPDATV1_0_SUBARECORDSET_ID_review, 
    2020-01-13 22:56:25      292 lines fetched
    2020-01-13 22:56:25 0045 CustomEndFieldCheck:
    2020-01-13 22:56:25 0046   SELECT *
    2020-01-13 22:56:25 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svptayvispdatv1_0_suend_1'
    2020-01-13 22:56:25      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:25      0 lines fetched
    2020-01-13 22:56:25 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svptayvispdatv1_0_suend_1','svptayvispdatv1_0_subaenddate')
    2020-01-13 22:56:25 0053 RS_Interim:
    2020-01-13 22:56:25 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:25 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:25 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:25 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:25 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:25 0059   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:56:25 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:25 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:25 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:25 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:25 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:25 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:25 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:25 0067   WHERE 
    2020-01-13 22:56:25 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:25 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:25 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:25 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:25 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:25 0073     AND (ft.svptayvispdatv1_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:25 0074     AND ((ft.svptayvispdatv1_0_subaenddate::DATE IS NULL) OR (ft.svptayvispdatv1_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:25 0075   UNION
    2020-01-13 22:56:25 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:25 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:25 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:25 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:25 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:25 0081   FROM qlik_sclient_svptayvispdatv1_0_suba ft
    2020-01-13 22:56:25 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:25 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:25 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:25 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:25 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:25 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:25 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:25 0089   WHERE 
    2020-01-13 22:56:25 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:25 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:25 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:25 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:25 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:25 0095     AND (ft.svptayvispdatv1_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:25 0096     AND ((ft.svptayvispdatv1_0_subaenddate::DATE IS NULL) OR (ft.svptayvispdatv1_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:26      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:26      69 lines fetched
    2020-01-13 22:56:26 0099 INNER JOIN(client_svptayvispdatv1_0_suba_review)
    2020-01-13 22:56:26 0100   LOAD DISTINCT
    2020-01-13 22:56:26 0101   recordset_id,
    2020-01-13 22:56:26 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:26 0103   provider_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Review],
    2020-01-13 22:56:26 0104   name AS [client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Review],
    2020-01-13 22:56:26 0105   user_creating_id AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Review],
    2020-01-13 22:56:26 0106   user_name AS [client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Review]
    2020-01-13 22:56:26 0107   RESIDENT RS_Interim
    2020-01-13 22:56:26      	6 fields found: recordset_id, Entry Exit Review Id, client_SVPTAYVISPDATV1_0_SUBA_Provider_Creating_Review, client_SVPTAYVISPDATV1_0_SUBA_Provider_Name_Creating_Review, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Id_Review, client_SVPTAYVISPDATV1_0_SUBA_User_Created_By_Review, 
    2020-01-13 22:56:26      69 lines fetched
    2020-01-13 22:56:26      Joining/Keeping
    2020-01-13 22:56:26 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:26 0110   Noconcatenate
    2020-01-13 22:56:26 0111   LOAD DISTINCT
    2020-01-13 22:56:26 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:26 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:26 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:26 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:26 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:26 0117   RESIDENT RS_Interim
    2020-01-13 22:56:26      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:26      69 lines fetched
    2020-01-13 22:56:26 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:26 0121   LOAD
    2020-01-13 22:56:26 0122  [Entry Exit Id],
    2020-01-13 22:56:26 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:26 0124  [Entry Exit Review Type],
    2020-01-13 22:56:26 0125  [Entry Exit Review Date],
    2020-01-13 22:56:26 0126  [Entry Exit Review Id]
    2020-01-13 22:56:26 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:26 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:26      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:26      16,097 lines fetched
    2020-01-13 22:56:26 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:26 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:26 0135 DROP FIELDS client_id FROM client_svptayvispdatv1_0_suba_review
    2020-01-13 22:56:26 0136 DROP FIELDS recordset_id FROM client_svptayvispdatv1_0_suba_review
    2020-01-13 22:56:26 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:26 0140   Mapping SQL
    2020-01-13 22:56:26 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:26 0142     FROM da_question dq
    2020-01-13 22:56:26 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0144     WHERE
    2020-01-13 22:56:26 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:26 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:26 0148     UNION
    2020-01-13 22:56:26 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:26 0150     FROM da_question dq
    2020-01-13 22:56:26 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0152     WHERE
    2020-01-13 22:56:26 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:26 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:26 0156      UNION
    2020-01-13 22:56:26 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:26 0158     FROM da_question dq
    2020-01-13 22:56:26 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0160     WHERE
    2020-01-13 22:56:26 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:26 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:26 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:26 0165     UNION
    2020-01-13 22:56:26 0166 
    2020-01-13 22:56:26 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:26 0168     FROM da_question dq
    2020-01-13 22:56:26 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0170     WHERE
    2020-01-13 22:56:26 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:26 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:26 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:26 0175     UNION   
    2020-01-13 22:56:26 0176     SELECT
    2020-01-13 22:56:26 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:26 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:26 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:26 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:26 0181     FROM da_question dq
    2020-01-13 22:56:26 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0183     WHERE
    2020-01-13 22:56:26 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:26 0186     UNION
    2020-01-13 22:56:26 0187 	SELECT
    2020-01-13 22:56:26 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:26 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:26 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:26 0191     FROM da_question dq
    2020-01-13 22:56:26 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:26 0193     WHERE
    2020-01-13 22:56:26 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:26 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:27      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:27      1,304 lines fetched
    2020-01-13 22:56:27 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:27 0198 DROP TABLE client_svptayvispdatv1_0_suba
    2020-01-13 22:56:27 0200 LET varStepName='STEPINTERIM_' & 44 & '_of_' & 50
    2020-01-13 22:56:27 0201 STEPINTERIM_44_of_50: select 1
    2020-01-13 22:56:27      	1 fields found: ?column?, 
    2020-01-13 22:56:27      1 lines fetched
    2020-01-13 22:56:27 0202 DROP TABLE STEPINTERIM_44_of_50
    2020-01-13 22:56:27 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:27 0205 NEXT
    2020-01-13 22:56:27 0025 LET varRecordSetTableName=Peek('sp_table_name',45,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:27 0026 LET varRecordSetQlikName=Peek('qlik_table_name',45,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:27 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',45,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:27 0029 LET varRecordSetQlikName_Interim='client_svpvifspdatv2_0_suba' & '_review'
    2020-01-13 22:56:27 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvifspdatv2_0_suba') <= 20),'svpvifspdatv2_0_suba' & 'end_1',left('svpvifspdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:56:27 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvifspdatv2_0_suba' & 'enddate'
    2020-01-13 22:56:27 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svpvifspdatv2_0_suba', (len('client_svpvifspdatv2_0_suba'))-7))
    2020-01-13 22:56:27 0034 client_svpvifspdatv2_0_suba:
    2020-01-13 22:56:27 0035   SELECT * FROM qlik_sclient_svpvifspdatv2_0_suba
    2020-01-13 22:56:28      	65 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, 
    2020-01-13 22:56:28      849 lines fetched
    2020-01-13 22:56:28 0038 client_svpvifspdatv2_0_suba_review:
    2020-01-13 22:56:28 0039   Noconcatenate
    2020-01-13 22:56:28 0040   LOAD DISTINCT
    2020-01-13 22:56:28 0041   *,
    2020-01-13 22:56:28 0042   recordset_id AS 'client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_review'
    2020-01-13 22:56:28 0043   RESIDENT client_svpvifspdatv2_0_suba
    2020-01-13 22:56:28      	66 fields found: recordset_id, client_id, svpvifspdatv2_0_subastartdate, svpvifspdatv2_0_subaenddate, vifspdat2_sectionaq5, vifspdat2_sectionaq6, vifspdat2_sectionaq7, vifspdat2_sectionbiq1, vifspdat2_sectionbiq2, vifspdat2_sectionbq10, vifspdat2_sectionbq11, vifspdat2_sectionbq12, vifspdat2_sectionbq13, vifspdat2_sectionbq8a, vifspdat2_sectionbq8b, vifspdat2_sectionbq8c, vifspdat2_sectionbq8d, vifspdat2_sectionbq8e, vifspdat2_sectionbq8f, vifspdat2_sectionbq9, vifspdat2_sectionchq1, vifspdat2_sectionchq2, vifspdat2_sectionchq3, vifspdat2_sectionchq4a, vifspdat2_sectionchq4b, vifspdat2_sectioncq14, vifspdat2_sectioncq15, vifspdat2_sectioncq16, vifspdat2_sectioncq17, vifspdat2_sectioncq18, vifspdat2_sectiondq19, vifspdat2_sectiondq20, vifspdat2_sectiondq21, vifspdat2_sectiondq22, vifspdat2_sectiondq23, vifspdat2_sectiondq24, vifspdat2_sectiondq25, vifspdat2_sectiondq26a, vifspdat2_sectiondq26b, vifspdat2_sectiondq26c, vifspdat2_sectiondq27, vifspdat2_sectiondq28a, vifspdat2_sectiondq29, vifspdat2_sectiondq30, vifspdat2_sectiondq31, vifspdat2_sectioneq32, vifspdat2_sectioneq33, vifspdat2_sectioneq34, vifspdat2_sectioneq35, vifspdat2_sectioneq36, vifspdat2_sectioneq37, vifspdat2_sectioneq38, vifspdat2_sectioneq39, vifspdat2_sectioneq40a, vifspdat2_sectioneq40b, vifspdat2_sectioneq41a, vifspdat2_presurvey, vifspdat2_scoringsectiona, vifspdat2_scoringsectionb, vifspdat2_scoringsectionc, vifspdat2_scoringsectiond, vifspdat2_scoringsectione, vifspdat2_scoringtotal, vifspdat2_sectionaq5desc, vifspdat2_sectionchq4desc, client_SVPVIFSPDATV2_0_SUBARECORDSET_ID_review, 
    2020-01-13 22:56:28      849 lines fetched
    2020-01-13 22:56:28 0045 CustomEndFieldCheck:
    2020-01-13 22:56:28 0046   SELECT *
    2020-01-13 22:56:28 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvifspdatv2_0_subaend_1'
    2020-01-13 22:56:28      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:28      0 lines fetched
    2020-01-13 22:56:28 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvifspdatv2_0_subaend_1','svpvifspdatv2_0_subaenddate')
    2020-01-13 22:56:28 0053 RS_Interim:
    2020-01-13 22:56:28 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:28 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:28 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:28 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:28 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:28 0059   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:56:28 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:28 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:28 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:28 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:28 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:28 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:28 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:28 0067   WHERE 
    2020-01-13 22:56:28 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:28 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:28 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:28 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:28 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:28 0073     AND (ft.svpvifspdatv2_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:28 0074     AND ((ft.svpvifspdatv2_0_subaenddate::DATE IS NULL) OR (ft.svpvifspdatv2_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:28 0075   UNION
    2020-01-13 22:56:28 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:28 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:28 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:28 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:28 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:28 0081   FROM qlik_sclient_svpvifspdatv2_0_suba ft
    2020-01-13 22:56:28 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:28 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:28 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:28 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:28 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:28 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:28 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:28 0089   WHERE 
    2020-01-13 22:56:28 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:28 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:28 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:28 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:28 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:28 0095     AND (ft.svpvifspdatv2_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:28 0096     AND ((ft.svpvifspdatv2_0_subaenddate::DATE IS NULL) OR (ft.svpvifspdatv2_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:30      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:30      416 lines fetched
    2020-01-13 22:56:30 0099 INNER JOIN(client_svpvifspdatv2_0_suba_review)
    2020-01-13 22:56:30 0100   LOAD DISTINCT
    2020-01-13 22:56:30 0101   recordset_id,
    2020-01-13 22:56:30 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:30 0103   provider_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Review],
    2020-01-13 22:56:30 0104   name AS [client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Review],
    2020-01-13 22:56:30 0105   user_creating_id AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Review],
    2020-01-13 22:56:30 0106   user_name AS [client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Review]
    2020-01-13 22:56:30 0107   RESIDENT RS_Interim
    2020-01-13 22:56:30      	6 fields found: recordset_id, Entry Exit Review Id, client_SVPVIFSPDATV2_0_SUBA_Provider_Creating_Review, client_SVPVIFSPDATV2_0_SUBA_Provider_Name_Creating_Review, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Id_Review, client_SVPVIFSPDATV2_0_SUBA_User_Created_By_Review, 
    2020-01-13 22:56:30      416 lines fetched
    2020-01-13 22:56:30      Joining/Keeping
    2020-01-13 22:56:30 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:30 0110   Noconcatenate
    2020-01-13 22:56:30 0111   LOAD DISTINCT
    2020-01-13 22:56:30 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:30 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:30 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:30 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:30 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:30 0117   RESIDENT RS_Interim
    2020-01-13 22:56:30      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:30      362 lines fetched
    2020-01-13 22:56:30 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:30 0121   LOAD
    2020-01-13 22:56:30 0122  [Entry Exit Id],
    2020-01-13 22:56:30 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:30 0124  [Entry Exit Review Type],
    2020-01-13 22:56:30 0125  [Entry Exit Review Date],
    2020-01-13 22:56:30 0126  [Entry Exit Review Id]
    2020-01-13 22:56:30 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:30 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:30      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:30      16,112 lines fetched
    2020-01-13 22:56:30 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:30 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:30 0135 DROP FIELDS client_id FROM client_svpvifspdatv2_0_suba_review
    2020-01-13 22:56:30 0136 DROP FIELDS recordset_id FROM client_svpvifspdatv2_0_suba_review
    2020-01-13 22:56:30 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:30 0140   Mapping SQL
    2020-01-13 22:56:30 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:30 0142     FROM da_question dq
    2020-01-13 22:56:30 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0144     WHERE
    2020-01-13 22:56:30 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:30 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:30 0148     UNION
    2020-01-13 22:56:30 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:30 0150     FROM da_question dq
    2020-01-13 22:56:30 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0152     WHERE
    2020-01-13 22:56:30 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:30 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:30 0156      UNION
    2020-01-13 22:56:30 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:30 0158     FROM da_question dq
    2020-01-13 22:56:30 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0160     WHERE
    2020-01-13 22:56:30 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:30 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:30 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:30 0165     UNION
    2020-01-13 22:56:30 0166 
    2020-01-13 22:56:30 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:30 0168     FROM da_question dq
    2020-01-13 22:56:30 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0170     WHERE
    2020-01-13 22:56:30 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:30 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:30 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:30 0175     UNION   
    2020-01-13 22:56:30 0176     SELECT
    2020-01-13 22:56:30 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:30 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:30 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:30 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:30 0181     FROM da_question dq
    2020-01-13 22:56:30 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0183     WHERE
    2020-01-13 22:56:30 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:30 0186     UNION
    2020-01-13 22:56:30 0187 	SELECT
    2020-01-13 22:56:30 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:30 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:30 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:30 0191     FROM da_question dq
    2020-01-13 22:56:30 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:30 0193     WHERE
    2020-01-13 22:56:30 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:30 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:30      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:30      1,304 lines fetched
    2020-01-13 22:56:30 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:31 0198 DROP TABLE client_svpvifspdatv2_0_suba
    2020-01-13 22:56:31 0200 LET varStepName='STEPINTERIM_' & 45 & '_of_' & 50
    2020-01-13 22:56:31 0201 STEPINTERIM_45_of_50: select 1
    2020-01-13 22:56:31      	1 fields found: ?column?, 
    2020-01-13 22:56:31      1 lines fetched
    2020-01-13 22:56:31 0202 DROP TABLE STEPINTERIM_45_of_50
    2020-01-13 22:56:31 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:31 0205 NEXT
    2020-01-13 22:56:31 0025 LET varRecordSetTableName=Peek('sp_table_name',46,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:31 0026 LET varRecordSetQlikName=Peek('qlik_table_name',46,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:31 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',46,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:31 0029 LET varRecordSetQlikName_Interim='client_svpvispdatv2_0_suba' & '_review'
    2020-01-13 22:56:31 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('svpvispdatv2_0_suba') <= 20),'svpvispdatv2_0_suba' & 'end_1',left('svpvispdatv2_0_suba', 20)& 'end_1')
    2020-01-13 22:56:31 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'svpvispdatv2_0_suba' & 'enddate'
    2020-01-13 22:56:31 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_svpvispdatv2_0_suba', (len('client_svpvispdatv2_0_suba'))-7))
    2020-01-13 22:56:31 0034 client_svpvispdatv2_0_suba:
    2020-01-13 22:56:31 0035   SELECT * FROM qlik_sclient_svpvispdatv2_0_suba
    2020-01-13 22:56:33      	45 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, 
    2020-01-13 22:56:33      4,059 lines fetched
    2020-01-13 22:56:33 0038 client_svpvispdatv2_0_suba_review:
    2020-01-13 22:56:33 0039   Noconcatenate
    2020-01-13 22:56:33 0040   LOAD DISTINCT
    2020-01-13 22:56:33 0041   *,
    2020-01-13 22:56:33 0042   recordset_id AS 'client_SVPVISPDATV2_0_SUBARECORDSET_ID_review'
    2020-01-13 22:56:33 0043   RESIDENT client_svpvispdatv2_0_suba
    2020-01-13 22:56:33      	46 fields found: recordset_id, client_id, svpvispdatv2_0_subastartdate, svpvispdatv2_0_subaenddate, vispdat2_sectionaq1, vispdat2_sectionaq2, vispdat2_sectionaq3, vispdat2_sectionbq4a, vispdat2_sectionbq4b, vispdat2_sectionbq4c, vispdat2_sectionbq4d, vispdat2_sectionbq4e, vispdat2_sectionbq4f, vispdat2_sectionbq5, vispdat2_sectionbq6, vispdat2_sectionbq7, vispdat2_sectionbq8, vispdat2_sectionbq9, vispdat2_sectioncq10, vispdat2_sectioncq11, vispdat2_sectioncq12, vispdat2_sectioncq13, vispdat2_sectioncq14, vispdat2_sectiondq15, vispdat2_sectiondq16, vispdat2_sectiondq17, vispdat2_sectiondq18, vispdat2_sectiondq19, vispdat2_sectiondq20, vispdat2_sectiondq21, vispdat2_sectiondq22, vispdat2_sectiondq23a, vispdat2_sectiondq23b, vispdat2_sectiondq23c, vispdat2_sectiondq24, vispdat2_sectiondq25, vispdat2_sectiondq26, vispdat2_sectiondq27, vispdat2_presurvey, vispdat2_scoringsectiona, vispdat2_scoringsectionb, vispdat2_scoringsectionc, vispdat2_scoringsectiond, vispdat2_scoringtotal, vispdat2_sectionaq1desc, client_SVPVISPDATV2_0_SUBARECORDSET_ID_review, 
    2020-01-13 22:56:33      4,059 lines fetched
    2020-01-13 22:56:33 0045 CustomEndFieldCheck:
    2020-01-13 22:56:33 0046   SELECT *
    2020-01-13 22:56:33 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'svpvispdatv2_0_subaend_1'
    2020-01-13 22:56:34      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:34      0 lines fetched
    2020-01-13 22:56:34 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'svpvispdatv2_0_subaend_1','svpvispdatv2_0_subaenddate')
    2020-01-13 22:56:34 0053 RS_Interim:
    2020-01-13 22:56:34 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:34 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:34 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:34 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:34 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:34 0059   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:56:34 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:34 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:34 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:34 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:34 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:34 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:34 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:34 0067   WHERE 
    2020-01-13 22:56:34 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:34 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:34 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:34 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:34 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:34 0073     AND (ft.svpvispdatv2_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:34 0074     AND ((ft.svpvispdatv2_0_subaenddate::DATE IS NULL) OR (ft.svpvispdatv2_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:34 0075   UNION
    2020-01-13 22:56:34 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:34 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:34 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:34 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:34 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:34 0081   FROM qlik_sclient_svpvispdatv2_0_suba ft
    2020-01-13 22:56:34 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:34 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:34 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:34 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:34 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:34 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:34 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:34 0089   WHERE 
    2020-01-13 22:56:34 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:34 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:34 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:34 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:34 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:34 0095     AND (ft.svpvispdatv2_0_subastartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:34 0096     AND ((ft.svpvispdatv2_0_subaenddate::DATE IS NULL) OR (ft.svpvispdatv2_0_subaenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:38      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:38      2,040 lines fetched
    2020-01-13 22:56:38 0099 INNER JOIN(client_svpvispdatv2_0_suba_review)
    2020-01-13 22:56:38 0100   LOAD DISTINCT
    2020-01-13 22:56:38 0101   recordset_id,
    2020-01-13 22:56:38 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:38 0103   provider_creating_id AS [client_SVPVISPDATV2_0_SUBA_Provider_Creating_Review],
    2020-01-13 22:56:38 0104   name AS [client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Review],
    2020-01-13 22:56:38 0105   user_creating_id AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Review],
    2020-01-13 22:56:38 0106   user_name AS [client_SVPVISPDATV2_0_SUBA_User_Created_By_Review]
    2020-01-13 22:56:38 0107   RESIDENT RS_Interim
    2020-01-13 22:56:38      	6 fields found: recordset_id, Entry Exit Review Id, client_SVPVISPDATV2_0_SUBA_Provider_Creating_Review, client_SVPVISPDATV2_0_SUBA_Provider_Name_Creating_Review, client_SVPVISPDATV2_0_SUBA_User_Created_By_Id_Review, client_SVPVISPDATV2_0_SUBA_User_Created_By_Review, 
    2020-01-13 22:56:38      2,040 lines fetched
    2020-01-13 22:56:38      Joining/Keeping
    2020-01-13 22:56:38 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:38 0110   Noconcatenate
    2020-01-13 22:56:38 0111   LOAD DISTINCT
    2020-01-13 22:56:38 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:38 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:38 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:38 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:38 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:38 0117   RESIDENT RS_Interim
    2020-01-13 22:56:39      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:39      1,345 lines fetched
    2020-01-13 22:56:39 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:39 0121   LOAD
    2020-01-13 22:56:39 0122  [Entry Exit Id],
    2020-01-13 22:56:39 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:39 0124  [Entry Exit Review Type],
    2020-01-13 22:56:39 0125  [Entry Exit Review Date],
    2020-01-13 22:56:39 0126  [Entry Exit Review Id]
    2020-01-13 22:56:39 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:39 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:39      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:39      16,149 lines fetched
    2020-01-13 22:56:39 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:39 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:39 0135 DROP FIELDS client_id FROM client_svpvispdatv2_0_suba_review
    2020-01-13 22:56:39 0136 DROP FIELDS recordset_id FROM client_svpvispdatv2_0_suba_review
    2020-01-13 22:56:39 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:39 0140   Mapping SQL
    2020-01-13 22:56:39 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:39 0142     FROM da_question dq
    2020-01-13 22:56:39 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0144     WHERE
    2020-01-13 22:56:39 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:39 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:39 0148     UNION
    2020-01-13 22:56:39 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:39 0150     FROM da_question dq
    2020-01-13 22:56:39 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0152     WHERE
    2020-01-13 22:56:39 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:39 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:39 0156      UNION
    2020-01-13 22:56:39 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:39 0158     FROM da_question dq
    2020-01-13 22:56:39 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0160     WHERE
    2020-01-13 22:56:39 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:39 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:39 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:39 0165     UNION
    2020-01-13 22:56:39 0166 
    2020-01-13 22:56:39 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:39 0168     FROM da_question dq
    2020-01-13 22:56:39 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0170     WHERE
    2020-01-13 22:56:39 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:39 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:39 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:39 0175     UNION   
    2020-01-13 22:56:39 0176     SELECT
    2020-01-13 22:56:39 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:39 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:39 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:39 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:39 0181     FROM da_question dq
    2020-01-13 22:56:39 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0183     WHERE
    2020-01-13 22:56:39 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:39 0186     UNION
    2020-01-13 22:56:39 0187 	SELECT
    2020-01-13 22:56:39 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:39 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:39 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:39 0191     FROM da_question dq
    2020-01-13 22:56:39 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:39 0193     WHERE
    2020-01-13 22:56:39 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:39 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:39      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:39      1,304 lines fetched
    2020-01-13 22:56:39 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:39 0198 DROP TABLE client_svpvispdatv2_0_suba
    2020-01-13 22:56:39 0200 LET varStepName='STEPINTERIM_' & 46 & '_of_' & 50
    2020-01-13 22:56:39 0201 STEPINTERIM_46_of_50: select 1
    2020-01-13 22:56:39      	1 fields found: ?column?, 
    2020-01-13 22:56:39      1 lines fetched
    2020-01-13 22:56:39 0202 DROP TABLE STEPINTERIM_46_of_50
    2020-01-13 22:56:39 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:39 0205 NEXT
    2020-01-13 22:56:39 0025 LET varRecordSetTableName=Peek('sp_table_name',47,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:39 0026 LET varRecordSetQlikName=Peek('qlik_table_name',47,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:39 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',47,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:39 0029 LET varRecordSetQlikName_Interim='client_thoughtcontent' & '_review'
    2020-01-13 22:56:39 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('thoughtcontent') <= 20),'thoughtcontent' & 'end_1',left('thoughtcontent', 20)& 'end_1')
    2020-01-13 22:56:39 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'thoughtcontent' & 'enddate'
    2020-01-13 22:56:39 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_thoughtcontent', (len('client_thoughtcontent'))-7))
    2020-01-13 22:56:39 0034 client_thoughtcontent:
    2020-01-13 22:56:39 0035   SELECT * FROM qlik_sclient_thoughtcontent
    2020-01-13 22:56:40      	10 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, 
    2020-01-13 22:56:40      2,124 lines fetched
    2020-01-13 22:56:40 0038 client_thoughtcontent_review:
    2020-01-13 22:56:40 0039   Noconcatenate
    2020-01-13 22:56:40 0040   LOAD DISTINCT
    2020-01-13 22:56:40 0041   *,
    2020-01-13 22:56:40 0042   recordset_id AS 'client_THOUGHTCONTENTRECORDSET_ID_review'
    2020-01-13 22:56:40 0043   RESIDENT client_thoughtcontent
    2020-01-13 22:56:40      	11 fields found: recordset_id, client_id, thoughtcontentstartdate, thoughtcontentenddate, affect, generalpresentation_1, intellectualfunctioni, mood_1, speech_1, thoughtstatustype, client_THOUGHTCONTENTRECORDSET_ID_review, 
    2020-01-13 22:56:40      2,124 lines fetched
    2020-01-13 22:56:40 0045 CustomEndFieldCheck:
    2020-01-13 22:56:40 0046   SELECT *
    2020-01-13 22:56:40 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'thoughtcontentend_1'
    2020-01-13 22:56:40      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:40      0 lines fetched
    2020-01-13 22:56:40 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'thoughtcontentend_1','thoughtcontentenddate')
    2020-01-13 22:56:40 0053 RS_Interim:
    2020-01-13 22:56:40 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:40 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:40 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:40 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:40 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:40 0059   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:56:40 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:40 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:40 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:40 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:40 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:40 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:40 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:40 0067   WHERE 
    2020-01-13 22:56:40 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:40 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:40 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:40 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:40 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:40 0073     AND (ft.thoughtcontentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:40 0074     AND ((ft.thoughtcontentenddate::DATE IS NULL) OR (ft.thoughtcontentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:40 0075   UNION
    2020-01-13 22:56:40 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:40 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:40 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:40 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:40 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:40 0081   FROM qlik_sclient_thoughtcontent ft
    2020-01-13 22:56:40 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:40 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:40 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:40 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:40 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:40 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:40 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:40 0089   WHERE 
    2020-01-13 22:56:40 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:40 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:40 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:40 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:40 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:40 0095     AND (ft.thoughtcontentstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:40 0096     AND ((ft.thoughtcontentenddate::DATE IS NULL) OR (ft.thoughtcontentenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:41      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:41      63 lines fetched
    2020-01-13 22:56:41 0099 INNER JOIN(client_thoughtcontent_review)
    2020-01-13 22:56:41 0100   LOAD DISTINCT
    2020-01-13 22:56:41 0101   recordset_id,
    2020-01-13 22:56:41 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:41 0103   provider_creating_id AS [client_THOUGHTCONTENT_Provider_Creating_Review],
    2020-01-13 22:56:41 0104   name AS [client_THOUGHTCONTENT_Provider_Name_Creating_Review],
    2020-01-13 22:56:41 0105   user_creating_id AS [client_THOUGHTCONTENT_User_Created_By_Id_Review],
    2020-01-13 22:56:41 0106   user_name AS [client_THOUGHTCONTENT_User_Created_By_Review]
    2020-01-13 22:56:41 0107   RESIDENT RS_Interim
    2020-01-13 22:56:41      	6 fields found: recordset_id, Entry Exit Review Id, client_THOUGHTCONTENT_Provider_Creating_Review, client_THOUGHTCONTENT_Provider_Name_Creating_Review, client_THOUGHTCONTENT_User_Created_By_Id_Review, client_THOUGHTCONTENT_User_Created_By_Review, 
    2020-01-13 22:56:41      63 lines fetched
    2020-01-13 22:56:41      Joining/Keeping
    2020-01-13 22:56:41 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:41 0110   Noconcatenate
    2020-01-13 22:56:41 0111   LOAD DISTINCT
    2020-01-13 22:56:41 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:41 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:41 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:41 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:41 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:41 0117   RESIDENT RS_Interim
    2020-01-13 22:56:41      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:41      52 lines fetched
    2020-01-13 22:56:41 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:41 0121   LOAD
    2020-01-13 22:56:41 0122  [Entry Exit Id],
    2020-01-13 22:56:41 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:41 0124  [Entry Exit Review Type],
    2020-01-13 22:56:41 0125  [Entry Exit Review Date],
    2020-01-13 22:56:41 0126  [Entry Exit Review Id]
    2020-01-13 22:56:41 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:41 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:41      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:41      16,149 lines fetched
    2020-01-13 22:56:41 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:41 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:41 0135 DROP FIELDS client_id FROM client_thoughtcontent_review
    2020-01-13 22:56:41 0136 DROP FIELDS recordset_id FROM client_thoughtcontent_review
    2020-01-13 22:56:41 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:41 0140   Mapping SQL
    2020-01-13 22:56:41 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:41 0142     FROM da_question dq
    2020-01-13 22:56:41 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0144     WHERE
    2020-01-13 22:56:41 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:41 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:41 0148     UNION
    2020-01-13 22:56:41 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:41 0150     FROM da_question dq
    2020-01-13 22:56:41 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0152     WHERE
    2020-01-13 22:56:41 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:41 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:41 0156      UNION
    2020-01-13 22:56:41 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:41 0158     FROM da_question dq
    2020-01-13 22:56:41 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0160     WHERE
    2020-01-13 22:56:41 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:41 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:41 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:41 0165     UNION
    2020-01-13 22:56:41 0166 
    2020-01-13 22:56:41 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:41 0168     FROM da_question dq
    2020-01-13 22:56:41 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0170     WHERE
    2020-01-13 22:56:41 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:41 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:41 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:41 0175     UNION   
    2020-01-13 22:56:41 0176     SELECT
    2020-01-13 22:56:41 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:41 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:41 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:41 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:41 0181     FROM da_question dq
    2020-01-13 22:56:41 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0183     WHERE
    2020-01-13 22:56:41 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:41 0186     UNION
    2020-01-13 22:56:41 0187 	SELECT
    2020-01-13 22:56:41 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:41 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:41 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:41 0191     FROM da_question dq
    2020-01-13 22:56:41 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:41 0193     WHERE
    2020-01-13 22:56:41 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:41 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:41      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:41      1,304 lines fetched
    2020-01-13 22:56:41 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:41 0198 DROP TABLE client_thoughtcontent
    2020-01-13 22:56:41 0200 LET varStepName='STEPINTERIM_' & 47 & '_of_' & 50
    2020-01-13 22:56:41 0201 STEPINTERIM_47_of_50: select 1
    2020-01-13 22:56:41      	1 fields found: ?column?, 
    2020-01-13 22:56:41      1 lines fetched
    2020-01-13 22:56:41 0202 DROP TABLE STEPINTERIM_47_of_50
    2020-01-13 22:56:41 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:41 0205 NEXT
    2020-01-13 22:56:41 0025 LET varRecordSetTableName=Peek('sp_table_name',48,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:41 0026 LET varRecordSetQlikName=Peek('qlik_table_name',48,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:41 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',48,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:41 0029 LET varRecordSetQlikName_Interim='client_waitliststatus' & '_review'
    2020-01-13 22:56:41 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('waitliststatus') <= 20),'waitliststatus' & 'end_1',left('waitliststatus', 20)& 'end_1')
    2020-01-13 22:56:41 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'waitliststatus' & 'enddate'
    2020-01-13 22:56:41 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_waitliststatus', (len('client_waitliststatus'))-7))
    2020-01-13 22:56:41 0034 client_waitliststatus:
    2020-01-13 22:56:41 0035   SELECT * FROM qlik_sclient_waitliststatus
    2020-01-13 22:56:42      	12 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, 
    2020-01-13 22:56:42      1,224 lines fetched
    2020-01-13 22:56:42 0038 client_waitliststatus_review:
    2020-01-13 22:56:42 0039   Noconcatenate
    2020-01-13 22:56:42 0040   LOAD DISTINCT
    2020-01-13 22:56:42 0041   *,
    2020-01-13 22:56:42 0042   recordset_id AS 'client_WAITLISTSTATUSRECORDSET_ID_review'
    2020-01-13 22:56:42 0043   RESIDENT client_waitliststatus
    2020-01-13 22:56:42      	13 fields found: recordset_id, client_id, waitliststatusstartdate, waitliststatusenddate, housingaccepteddate, housingofferdate, notes_14, ifnothousedwhy, providerassigned, reasonforreturn, referralsource_1, waitlistoutcome, client_WAITLISTSTATUSRECORDSET_ID_review, 
    2020-01-13 22:56:42      1,224 lines fetched
    2020-01-13 22:56:42 0045 CustomEndFieldCheck:
    2020-01-13 22:56:42 0046   SELECT *
    2020-01-13 22:56:42 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'waitliststatusend_1'
    2020-01-13 22:56:42      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:42      0 lines fetched
    2020-01-13 22:56:42 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'waitliststatusend_1','waitliststatusenddate')
    2020-01-13 22:56:42 0053 RS_Interim:
    2020-01-13 22:56:42 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:42 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:42 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:42 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:42 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:42 0059   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:56:42 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:42 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:42 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:42 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:42 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:42 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:42 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:42 0067   WHERE 
    2020-01-13 22:56:42 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:42 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:42 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:42 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:42 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:42 0073     AND (ft.waitliststatusstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:42 0074     AND ((ft.waitliststatusenddate::DATE IS NULL) OR (ft.waitliststatusenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:42 0075   UNION
    2020-01-13 22:56:42 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:42 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:42 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:42 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:42 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:42 0081   FROM qlik_sclient_waitliststatus ft
    2020-01-13 22:56:42 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:42 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:42 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:42 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:42 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:42 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:42 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:42 0089   WHERE 
    2020-01-13 22:56:42 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:42 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:42 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:42 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:42 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:42 0095     AND (ft.waitliststatusstartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:42 0096     AND ((ft.waitliststatusenddate::DATE IS NULL) OR (ft.waitliststatusenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:43      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:43      732 lines fetched
    2020-01-13 22:56:43 0099 INNER JOIN(client_waitliststatus_review)
    2020-01-13 22:56:43 0100   LOAD DISTINCT
    2020-01-13 22:56:43 0101   recordset_id,
    2020-01-13 22:56:43 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:43 0103   provider_creating_id AS [client_WAITLISTSTATUS_Provider_Creating_Review],
    2020-01-13 22:56:43 0104   name AS [client_WAITLISTSTATUS_Provider_Name_Creating_Review],
    2020-01-13 22:56:43 0105   user_creating_id AS [client_WAITLISTSTATUS_User_Created_By_Id_Review],
    2020-01-13 22:56:43 0106   user_name AS [client_WAITLISTSTATUS_User_Created_By_Review]
    2020-01-13 22:56:43 0107   RESIDENT RS_Interim
    2020-01-13 22:56:43      	6 fields found: recordset_id, Entry Exit Review Id, client_WAITLISTSTATUS_Provider_Creating_Review, client_WAITLISTSTATUS_Provider_Name_Creating_Review, client_WAITLISTSTATUS_User_Created_By_Id_Review, client_WAITLISTSTATUS_User_Created_By_Review, 
    2020-01-13 22:56:43      732 lines fetched
    2020-01-13 22:56:43      Joining/Keeping
    2020-01-13 22:56:43 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:43 0110   Noconcatenate
    2020-01-13 22:56:43 0111   LOAD DISTINCT
    2020-01-13 22:56:43 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:43 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:43 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:43 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:43 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:43 0117   RESIDENT RS_Interim
    2020-01-13 22:56:43      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:43      724 lines fetched
    2020-01-13 22:56:43 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:43 0121   LOAD
    2020-01-13 22:56:43 0122  [Entry Exit Id],
    2020-01-13 22:56:43 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:43 0124  [Entry Exit Review Type],
    2020-01-13 22:56:43 0125  [Entry Exit Review Date],
    2020-01-13 22:56:43 0126  [Entry Exit Review Id]
    2020-01-13 22:56:43 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:43 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:43      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:43      16,158 lines fetched
    2020-01-13 22:56:43 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:43 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:43 0135 DROP FIELDS client_id FROM client_waitliststatus_review
    2020-01-13 22:56:43 0136 DROP FIELDS recordset_id FROM client_waitliststatus_review
    2020-01-13 22:56:43 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:43 0140   Mapping SQL
    2020-01-13 22:56:43 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:43 0142     FROM da_question dq
    2020-01-13 22:56:43 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0144     WHERE
    2020-01-13 22:56:43 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:43 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:43 0148     UNION
    2020-01-13 22:56:43 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:43 0150     FROM da_question dq
    2020-01-13 22:56:43 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0152     WHERE
    2020-01-13 22:56:43 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:43 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:43 0156      UNION
    2020-01-13 22:56:43 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:43 0158     FROM da_question dq
    2020-01-13 22:56:43 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0160     WHERE
    2020-01-13 22:56:43 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:43 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:43 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:43 0165     UNION
    2020-01-13 22:56:43 0166 
    2020-01-13 22:56:43 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:43 0168     FROM da_question dq
    2020-01-13 22:56:43 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0170     WHERE
    2020-01-13 22:56:43 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:43 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:43 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:43 0175     UNION   
    2020-01-13 22:56:43 0176     SELECT
    2020-01-13 22:56:43 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:43 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:43 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:43 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:43 0181     FROM da_question dq
    2020-01-13 22:56:43 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0183     WHERE
    2020-01-13 22:56:43 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:43 0186     UNION
    2020-01-13 22:56:43 0187 	SELECT
    2020-01-13 22:56:43 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:43 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:43 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:43 0191     FROM da_question dq
    2020-01-13 22:56:43 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:43 0193     WHERE
    2020-01-13 22:56:43 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:43 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:43      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:43      1,304 lines fetched
    2020-01-13 22:56:43 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:43 0198 DROP TABLE client_waitliststatus
    2020-01-13 22:56:43 0200 LET varStepName='STEPINTERIM_' & 48 & '_of_' & 50
    2020-01-13 22:56:43 0201 STEPINTERIM_48_of_50: select 1
    2020-01-13 22:56:44      	1 fields found: ?column?, 
    2020-01-13 22:56:44      1 lines fetched
    2020-01-13 22:56:44 0202 DROP TABLE STEPINTERIM_48_of_50
    2020-01-13 22:56:44 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:44 0205 NEXT
    2020-01-13 22:56:44 0025 LET varRecordSetTableName=Peek('sp_table_name',49,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:44 0026 LET varRecordSetQlikName=Peek('qlik_table_name',49,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:44 0027 LET varRecordSetTableNameOnly=Peek('table_name_only',49,'RECORDSET_LIST_INTERIM')
    2020-01-13 22:56:44 0029 LET varRecordSetQlikName_Interim='client_workhistory' & '_review'
    2020-01-13 22:56:44 0030 LET varRecordSetTableNameOnlyTruncCustomEndDate = If((len('workhistory') <= 20),'workhistory' & 'end_1',left('workhistory', 20)& 'end_1')
    2020-01-13 22:56:44 0031 LET varRecordSetTableNameOnlyTruncEndDate = 'workhistory' & 'enddate'
    2020-01-13 22:56:44 0032 LET varRecordSetQlikName_Ucase_Interim = Upper(right('client_workhistory', (len('client_workhistory'))-7))
    2020-01-13 22:56:44 0034 client_workhistory:
    2020-01-13 22:56:44 0035   SELECT * FROM qlik_sclient_workhistory
    2020-01-13 22:56:47      	18 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, 
    2020-01-13 22:56:47      21,428 lines fetched
    2020-01-13 22:56:47 0038 client_workhistory_review:
    2020-01-13 22:56:47 0039   Noconcatenate
    2020-01-13 22:56:47 0040   LOAD DISTINCT
    2020-01-13 22:56:47 0041   *,
    2020-01-13 22:56:47 0042   recordset_id AS 'client_WORKHISTORYRECORDSET_ID_review'
    2020-01-13 22:56:47 0043   RESIDENT client_workhistory
    2020-01-13 22:56:47      	19 fields found: recordset_id, client_id, workhistorystartdate, workhistoryenddate, employername, hourlywage, hoursofworkperweek, notesreemployment, positionjobtitle, employmenttype_1, reasonemploymentended, secondaryreasonforjob, sourceofposition, placedbyconnections, receivinghealthinsura, retainedat30days, retainedat60days, retainedat90days, client_WORKHISTORYRECORDSET_ID_review, 
    2020-01-13 22:56:47      21,428 lines fetched
    2020-01-13 22:56:47 0045 CustomEndFieldCheck:
    2020-01-13 22:56:47 0046   SELECT *
    2020-01-13 22:56:47 0047   FROM INFORMATION_SCHEMA.columns ft Where ft.column_name ilike 'workhistoryend_1'
    2020-01-13 22:56:47      	44 fields found: table_catalog, table_schema, table_name, column_name, ordinal_position, column_default, is_nullable, data_type, character_maximum_length, character_octet_length, numeric_precision, numeric_precision_radix, numeric_scale, datetime_precision, interval_type, interval_precision, character_set_catalog, character_set_schema, character_set_name, collation_catalog, collation_schema, collation_name, domain_catalog, domain_schema, domain_name, udt_catalog, udt_schema, udt_name, scope_catalog, scope_schema, scope_name, maximum_cardinality, dtd_identifier, is_self_referencing, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle, is_generated, generation_expression, is_updatable, 
    2020-01-13 22:56:47      0 lines fetched
    2020-01-13 22:56:47 0050 LET varRecordSetTableNameOnlyUseEndDate = If(NoOfRows('CustomEndFieldCheck') <> 0,'workhistoryend_1','workhistoryenddate')
    2020-01-13 22:56:47 0053 RS_Interim:
    2020-01-13 22:56:47 0054   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:47 0055     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:47 0056     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:47 0057     eer.review_date::DATE AS entry_exit_review_date,
    2020-01-13 22:56:47 0058 	eer.entry_exit_review_id
    2020-01-13 22:56:47 0059   FROM qlik_sclient_workhistory ft
    2020-01-13 22:56:47 0060   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:47 0061   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:47 0062   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:47 0063   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:47 0064     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:47 0065     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:47 0066   INNER JOIN sp_provider_tree belowtree ON (belowtree.ancestor_provider_id = ee.provider_id)
    2020-01-13 22:56:47 0067   WHERE 
    2020-01-13 22:56:47 0068   --(dr.date_effective >= '2019-01-01')AND 
    2020-01-13 22:56:47 0069   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:47 0070     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:47 0071     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:47 0072   AND (belowtree.provider_id = dr.provider_creating_id)
    2020-01-13 22:56:47 0073     AND (ft.workhistorystartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:47 0074     AND ((ft.workhistoryenddate::DATE IS NULL) OR (ft.workhistoryenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:47 0075   UNION
    2020-01-13 22:56:47 0076   SELECT DISTINCT ee.entry_exit_id, ft.recordset_id, dr.provider_creating_id, p.name, dr.user_creating_id, u.name AS user_name,
    2020-01-13 22:56:47 0077     plv(eer.point_in_time_type_id) AS entry_exit_review_pit_type,
    2020-01-13 22:56:47 0078     plv(eer.review_type_id) AS entry_exit_review_type,
    2020-01-13 22:56:47 0079     eer.review_date::DATE AS entry_exit_review_date ,
    2020-01-13 22:56:47 0080     eer.entry_exit_review_id	
    2020-01-13 22:56:47 0081   FROM qlik_sclient_workhistory ft
    2020-01-13 22:56:47 0082   JOIN da_recordset dr ON dr.recordset_id = ft.recordset_id
    2020-01-13 22:56:47 0083   INNER JOIN sp_provider p on p.provider_id = dr.provider_creating_id
    2020-01-13 22:56:47 0084   INNER JOIN sp_user u on u.user_id = dr.user_creating_id
    2020-01-13 22:56:47 0085   INNER JOIN sp_entry_exit ee ON (ee.client_id = ft.client_id)
    2020-01-13 22:56:47 0086     INNER JOIN sp_entry_exit_review eer ON (eer.entry_exit_id = ee.entry_exit_id)
    2020-01-13 22:56:47 0087     INNER JOIN sp_picklist_value pv ON (pv.picklist_value_id = eer.point_in_time_type_id)  
    2020-01-13 22:56:47 0088   INNER JOIN sp_provider_tree abovetree ON (abovetree.provider_id = ee.provider_id)
    2020-01-13 22:56:47 0089   WHERE 
    2020-01-13 22:56:47 0090   --(dr.date_effective >= '2019-01-01'::DATE)AND
    2020-01-13 22:56:47 0091   (ee.active = TRUE) AND ((ee.exit_date IS NULL) OR (ee.exit_date >= '2019-01-01'))
    2020-01-13 22:56:47 0092     AND (eer.active = TRUE) --AND (eer.review_date >= '2019-01-01')
    2020-01-13 22:56:47 0093     AND pv.code NOT IN ('EEPOINTINTIME_EXIT','EEPOINTINTIME_ENTRY')
    2020-01-13 22:56:47 0094   AND (abovetree.ancestor_provider_id = dr.provider_creating_id)
    2020-01-13 22:56:47 0095     AND (ft.workhistorystartdate::DATE <= eer.review_date::DATE)
    2020-01-13 22:56:47 0096     AND ((ft.workhistoryenddate::DATE IS NULL) OR (ft.workhistoryenddate::DATE >= eer.review_date::DATE))
    2020-01-13 22:56:53      	10 fields found: entry_exit_id, recordset_id, provider_creating_id, name, user_creating_id, user_name, entry_exit_review_pit_type, entry_exit_review_type, entry_exit_review_date, entry_exit_review_id, 
    2020-01-13 22:56:53      891 lines fetched
    2020-01-13 22:56:54 0099 INNER JOIN(client_workhistory_review)
    2020-01-13 22:56:54 0100   LOAD DISTINCT
    2020-01-13 22:56:54 0101   recordset_id,
    2020-01-13 22:56:54 0102   entry_exit_review_id							AS [Entry Exit Review Id],
    2020-01-13 22:56:54 0103   provider_creating_id AS [client_WORKHISTORY_Provider_Creating_Review],
    2020-01-13 22:56:54 0104   name AS [client_WORKHISTORY_Provider_Name_Creating_Review],
    2020-01-13 22:56:54 0105   user_creating_id AS [client_WORKHISTORY_User_Created_By_Id_Review],
    2020-01-13 22:56:54 0106   user_name AS [client_WORKHISTORY_User_Created_By_Review]
    2020-01-13 22:56:54 0107   RESIDENT RS_Interim
    2020-01-13 22:56:54      	6 fields found: recordset_id, Entry Exit Review Id, client_WORKHISTORY_Provider_Creating_Review, client_WORKHISTORY_Provider_Name_Creating_Review, client_WORKHISTORY_User_Created_By_Id_Review, client_WORKHISTORY_User_Created_By_Review, 
    2020-01-13 22:56:54      891 lines fetched
    2020-01-13 22:56:54      Joining/Keeping
    2020-01-13 22:56:54 0109 TEMP_SUBA_REVIEW:
    2020-01-13 22:56:54 0110   Noconcatenate
    2020-01-13 22:56:54 0111   LOAD DISTINCT
    2020-01-13 22:56:54 0112   entry_exit_id 									AS [Entry Exit Id],
    2020-01-13 22:56:54 0113   entry_exit_review_pit_type						AS [Entry Exit Review PIT Type],
    2020-01-13 22:56:54 0114   entry_exit_review_type							AS [Entry Exit Review Type],
    2020-01-13 22:56:54 0115   entry_exit_review_date							AS [Entry Exit Review Date],
    2020-01-13 22:56:54 0116   entry_exit_review_id							    AS  [Entry Exit Review Id]
    2020-01-13 22:56:54 0117   RESIDENT RS_Interim
    2020-01-13 22:56:54      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:54      681 lines fetched
    2020-01-13 22:56:54 0120 CONCATENATE(FACT_Entry_Exit_Review)
    2020-01-13 22:56:54 0121   LOAD
    2020-01-13 22:56:54 0122  [Entry Exit Id],
    2020-01-13 22:56:54 0123  [Entry Exit Review PIT Type],
    2020-01-13 22:56:54 0124  [Entry Exit Review Type],
    2020-01-13 22:56:54 0125  [Entry Exit Review Date],
    2020-01-13 22:56:54 0126  [Entry Exit Review Id]
    2020-01-13 22:56:54 0127   RESIDENT TEMP_SUBA_REVIEW
    2020-01-13 22:56:54 0128   WHERE NOT EXISTS(match_review_id, [Entry Exit Review Id])
    2020-01-13 22:56:54      	5 fields found: Entry Exit Id, Entry Exit Review PIT Type, Entry Exit Review Type, Entry Exit Review Date, Entry Exit Review Id, 
    2020-01-13 22:56:54      16,166 lines fetched
    2020-01-13 22:56:54 0131 DROP TABLE TEMP_SUBA_REVIEW
    2020-01-13 22:56:54 0133 DROP TABLE RS_Interim
    2020-01-13 22:56:54 0135 DROP FIELDS client_id FROM client_workhistory_review
    2020-01-13 22:56:54 0136 DROP FIELDS recordset_id FROM client_workhistory_review
    2020-01-13 22:56:54 0139 FieldMapSaClientInterim:
    2020-01-13 22:56:54 0140   Mapping SQL
    2020-01-13 22:56:54 0141     SELECT lower(dq.virt_field_name) AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:54 0142     FROM da_question dq
    2020-01-13 22:56:54 0143     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0144     WHERE
    2020-01-13 22:56:54 0145       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0146       AND ((dq.start_date_flag = FALSE) AND (dq.end_date_flag = FALSE))
    2020-01-13 22:56:54 0147       AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:54 0148     UNION
    2020-01-13 22:56:54 0149     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:54 0150     FROM da_question dq
    2020-01-13 22:56:54 0151     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0152     WHERE
    2020-01-13 22:56:54 0153       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0154       AND ((dq.start_date_flag = FALSE) OR (dq.end_date_flag = FALSE))
    2020-01-13 22:56:54 0155       AND ((dq.virt_field_name = (dq_p.virt_field_name || 'ENDDATE'))) OR ((dq.virt_field_name = (dq_p.virt_field_name || 'STARTDATE')))  
    2020-01-13 22:56:54 0156      UNION
    2020-01-13 22:56:54 0157      SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '1_review'  AS newnames  
    2020-01-13 22:56:54 0158     FROM da_question dq
    2020-01-13 22:56:54 0159     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0160     WHERE
    2020-01-13 22:56:54 0161       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0162       AND ((dq.start_date_flag = FALSE))
    2020-01-13 22:56:54 0163       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'START')))) 
    2020-01-13 22:56:54 0164           --OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:54 0165     UNION
    2020-01-13 22:56:54 0166 
    2020-01-13 22:56:54 0167     SELECT lower(dq.virt_field_name) ||'_1' AS oldnames, 'client_' || dq.virt_field_name || '_review'  AS newnames  
    2020-01-13 22:56:54 0168     FROM da_question dq
    2020-01-13 22:56:54 0169     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0170     WHERE
    2020-01-13 22:56:54 0171       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0172       AND ((dq.end_date_flag = FALSE))
    2020-01-13 22:56:54 0173       AND (((dq.virt_field_name = (dq_p.virt_field_name || 'END'))) 
    2020-01-13 22:56:54 0174           OR (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20))	  
    2020-01-13 22:56:54 0175     UNION   
    2020-01-13 22:56:54 0176     SELECT
    2020-01-13 22:56:54 0177     CASE WHEN dq.start_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'startdate'
    2020-01-13 22:56:54 0178 		  WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = TRUE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:54 0179 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = TRUE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:54 0180     END AS oldnames, 'client_' || dq.virt_field_name || '_review' AS newnames 
    2020-01-13 22:56:54 0181     FROM da_question dq
    2020-01-13 22:56:54 0182     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0183     WHERE
    2020-01-13 22:56:54 0184       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0185 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:54 0186     UNION
    2020-01-13 22:56:54 0187 	SELECT
    2020-01-13 22:56:54 0188     CASE WHEN (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) AND dq.end_date_flag = FALSE THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:54 0189 		WHEN (dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND dq.end_date_flag = FALSE AND length(dq_p.virt_field_name) > 20) THEN lower(dq_p.virt_field_name) || 'enddate'
    2020-01-13 22:56:54 0190     END AS oldnames, 'client_' || dq.virt_field_name || '1_review' AS newnames 
    2020-01-13 22:56:54 0191     FROM da_question dq
    2020-01-13 22:56:54 0192     INNER JOIN da_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:54 0193     WHERE
    2020-01-13 22:56:54 0194       ((dq_p.reportable_flag = TRUE) OR (dq_p.ee_reportable_flag = TRUE) OR (dq_p.service_reportable_flag = TRUE))
    2020-01-13 22:56:54 0195 	  AND ((dq.start_date_flag = TRUE) OR (dq.virt_field_name = (dq_p.virt_field_name || 'END') AND length(dq_p.virt_field_name) <= 20) OR ((dq.virt_field_name = (left(dq_p.virt_field_name, (length(dq.virt_field_name) - 3)) || 'END') AND length(dq_p.virt_field_name) > 20)))
    2020-01-13 22:56:54      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:54      1,304 lines fetched
    2020-01-13 22:56:54 0196 Rename Fields using FieldMapSaClientInterim
    2020-01-13 22:56:54 0198 DROP TABLE client_workhistory
    2020-01-13 22:56:54 0200 LET varStepName='STEPINTERIM_' & 49 & '_of_' & 50
    2020-01-13 22:56:54 0201 STEPINTERIM_49_of_50: select 1
    2020-01-13 22:56:54      	1 fields found: ?column?, 
    2020-01-13 22:56:54      1 lines fetched
    2020-01-13 22:56:54 0202 DROP TABLE STEPINTERIM_49_of_50
    2020-01-13 22:56:54 0203 DROP TABLE CustomEndFieldCheck
  2020-01-13 22:56:54 0205 NEXT
  2020-01-13 22:56:54 0207 DROP TABLE RECORDSET_LIST_INTERIM
  2020-01-13 22:56:54 0210 DROP_ANSWER_VIEWS:
  2020-01-13 22:56:54 0211 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:56:55      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:56:55      1 lines fetched
  2020-01-13 22:56:55 0213 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:56:55 0214 DROP FIELDS [match_review_id] FROM FACT_Entry_Exit_Review
  2020-01-13 22:56:55 0089 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:56:55 0090 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:56:55      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:56:55      1 lines fetched
  2020-01-13 22:56:55 0003 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:56:55 0005 BUILD_WORKSHEET_VIEWS:                 
  2020-01-13 22:56:55 0006 SELECT qlik_flatten_all_ws_suba_view('1/01/2019')
  2020-01-13 22:56:55      	1 fields found: qlik_flatten_all_ws_suba_view, 
  2020-01-13 22:56:55      1 lines fetched
  2020-01-13 22:56:55 0007 DROP TABLE BUILD_WORKSHEET_VIEWS
  2020-01-13 22:56:55 0010 WORKSHEET_SERVICE_LIST:
  2020-01-13 22:56:55 0011 SELECT table_name AS sp_table_name, 'needs_' || SUBSTRING(table_name, 21, CHAR_LENGTH(table_name))  AS qlik_table_name,  SUBSTRING(table_name, 21, CHAR_LENGTH(table_name)) AS table_name_only
  2020-01-13 22:56:55 0012 FROM information_schema.tables
  2020-01-13 22:56:55 0013 WHERE table_name ILIKE 'qlik_wsrv_worksheet_%'
  2020-01-13 22:56:55 0014 ORDER BY table_name
  2020-01-13 22:56:56      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:56:56      0 lines fetched
  2020-01-13 22:56:56 0016 LET NumRows=NoOfRows('WORKSHEET_SERVICE_LIST')
  2020-01-13 22:56:56 0017 FOR i=0 to 0-1
  2020-01-13 22:56:56 0081 DROP TABLE WORKSHEET_SERVICE_LIST
  2020-01-13 22:56:56 0083 DROP_ANSWER_VIEWS:
  2020-01-13 22:56:56 0084 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:56:56      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:56:56      1 lines fetched
  2020-01-13 22:56:56 0086 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:56:56 0090 DROP_ANSWER_VIEWS:                     
  2020-01-13 22:56:56 0091 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:56:56      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:56:56      1 lines fetched
  2020-01-13 22:56:56 0003 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:56:56 0005 BUILD_WORKSHEET_VIEWS:                 
  2020-01-13 22:56:56 0006 SELECT qlik_flatten_all_ws_suba_view('1/01/2019')
  2020-01-13 22:56:56      	1 fields found: qlik_flatten_all_ws_suba_view, 
  2020-01-13 22:56:56      1 lines fetched
  2020-01-13 22:56:56 0007 DROP TABLE BUILD_WORKSHEET_VIEWS
  2020-01-13 22:56:56 0010 WORKSHEET_CALL_LIST:
  2020-01-13 22:56:56 0011 SELECT table_name AS sp_table_name, 'call' || SUBSTRING(table_name, 21, CHAR_LENGTH(table_name)) AS qlik_table_name,  SUBSTRING(table_name, 21, CHAR_LENGTH(table_name)) AS table_name_only
  2020-01-13 22:56:56 0012 FROM information_schema.tables
  2020-01-13 22:56:56 0013 WHERE table_name ILIKE 'qlik_wcall_worksheet_%'
  2020-01-13 22:56:56 0014 ORDER BY table_name
  2020-01-13 22:56:57      	3 fields found: sp_table_name, qlik_table_name, table_name_only, 
  2020-01-13 22:56:57      1 lines fetched
  2020-01-13 22:56:57 0016 LET NumRows=NoOfRows('WORKSHEET_CALL_LIST')
  2020-01-13 22:56:57 0017 FOR i=0 to 1-1
    2020-01-13 22:56:57 0019 LET varRecordSetTableName=Peek('sp_table_name',0,'WORKSHEET_CALL_LIST')
    2020-01-13 22:56:57 0020 LET varRecordSetQlikName=Peek('qlik_table_name',0,'WORKSHEET_CALL_LIST')
    2020-01-13 22:56:57 0021 LET varRecordSetTableNameOnly=Peek('table_name_only',0,'WORKSHEET_SERVICE_LIST')
    2020-01-13 22:56:57 0022 LET varRecordSetQlikName_Ucase_Entry=Upper(right('call_followuptoclient', (len('call_followuptoclient'))-4))
    2020-01-13 22:56:57 0023 LET varRecordSetQlikName_Call= 'call_followuptoclient'& '_wcall'
    2020-01-13 22:56:57 0026 call_followuptoclient:
    2020-01-13 22:56:57 0027 SELECT *
    2020-01-13 22:56:57 0028 FROM qlik_wcall_worksheet_followuptoclient
    2020-01-13 22:56:58      	8 fields found: recordset_id, call_record_id, followuptoclientstartdate, followuptoclientenddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, 
    2020-01-13 22:56:58      7,230 lines fetched
    2020-01-13 22:56:58 0031 CALL_WS_LINKAGE:
    2020-01-13 22:56:58 0032 SELECT wr.recordset_id,
    2020-01-13 22:56:58 0033 c.call_record_id as call_worskeets_link
    2020-01-13 22:56:58 0034  FROM ws_recordset wr 
    2020-01-13 22:56:58 0035 JOIN ws_worksheet_type wt on wt.worksheet_type_id = wr.worksheet_type_id 
    2020-01-13 22:56:58 0036 JOIN sp_call_record c ON c.call_record_id = wr.entity_id WHERE wt.code = 'CALLHEADERWORKSHEET'
    2020-01-13 22:56:58      	2 fields found: recordset_id, call_worskeets_link, 
    2020-01-13 22:56:58      7,252 lines fetched
    2020-01-13 22:56:58 0038 INNER JOIN(call_followuptoclient)
    2020-01-13 22:56:58 0039   LOAD DISTINCT
    2020-01-13 22:56:58 0040   call_worskeets_link as %linkwscall,
    2020-01-13 22:56:58 0041   recordset_id
    2020-01-13 22:56:58 0042   RESIDENT CALL_WS_LINKAGE
    2020-01-13 22:56:58      	2 fields found: %linkwscall, recordset_id, 
    2020-01-13 22:56:58      7,252 lines fetched
    2020-01-13 22:56:58      Joining/Keeping
    2020-01-13 22:56:58 0045 call_followuptoclient_wcall:
    2020-01-13 22:56:58 0046   Noconcatenate
    2020-01-13 22:56:58 0047   LOAD DISTINCT
    2020-01-13 22:56:58 0048   *,
    2020-01-13 22:56:58 0049   recordset_id AS 'call_FOLLOWUPTOCLIENTRECORDSET_ID_wcall'
    2020-01-13 22:56:58 0050   RESIDENT call_followuptoclient
    2020-01-13 22:56:58      	10 fields found: recordset_id, call_record_id, followuptoclientstartdate, followuptoclientenddate, followupstaffname, followuptoclientnotes, followupmethod, followuptoclientoutco, %linkwscall, call_FOLLOWUPTOCLIENTRECORDSET_ID_wcall, 
    2020-01-13 22:56:58      7,230 lines fetched
    2020-01-13 22:56:58 0054 DROP TABLE CALL_WS_LINKAGE
    2020-01-13 22:56:58 0056 DROP FIELDS call_record_id FROM call_followuptoclient_wcall
    2020-01-13 22:56:58 0057 DROP FIELDS recordset_id FROM call_followuptoclient_wcall
    2020-01-13 22:56:58 0059 DROP TABLE call_followuptoclient
    2020-01-13 22:56:58 0062 FieldMapWsCall:
    2020-01-13 22:56:58 0063   Mapping SQL
    2020-01-13 22:56:58 0064     SELECT lower(dq.virt_field_name) AS oldnames,   'call_'||dq.virt_field_name || '_wcall'  AS newnames
    2020-01-13 22:56:58 0065     FROM ws_question dq
    2020-01-13 22:56:58 0066     INNER JOIN ws_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:58 0067      UNION   
    2020-01-13 22:56:58 0068  SELECT  lower(dq.virt_field_name)|| 'date' AS oldnames,   'call_'||dq.virt_field_name || 'DATE_wcall'  AS newnames
    2020-01-13 22:56:58 0069     FROM ws_question dq
    2020-01-13 22:56:58 0070     INNER JOIN ws_question dq_p ON (dq_p.question_id = dq.parent_id)
    2020-01-13 22:56:58 0071     WHERE  ((dq.virt_field_name <> (dq_p.virt_field_name || 'ENDDATE'))) AND ((dq.virt_field_name <> (dq_p.virt_field_name || 'STARTDATE')))
    2020-01-13 22:56:58      	2 fields found: oldnames, newnames, 
    2020-01-13 22:56:58      64 lines fetched
    2020-01-13 22:56:58 0072 Rename Fields using FieldMapWsCall
    2020-01-13 22:56:58 0076 LET varStepName='STEPENTRY_' & 0 & '_of_' & 1
    2020-01-13 22:56:58 0077 STEPENTRY_0_of_1: select 1
    2020-01-13 22:56:59      	1 fields found: ?column?, 
    2020-01-13 22:56:59      1 lines fetched
    2020-01-13 22:56:59 0078 DROP TABLE STEPENTRY_0_of_1
  2020-01-13 22:56:59 0081 NEXT
  2020-01-13 22:56:59 0083 DROP TABLE WORKSHEET_CALL_LIST
  2020-01-13 22:56:59 0085 DROP_ANSWER_VIEWS:
  2020-01-13 22:56:59 0086 SELECT qlik_remove_all_qlik_view()
  2020-01-13 22:56:59      	1 fields found: qlik_remove_all_qlik_view, 
  2020-01-13 22:56:59      1 lines fetched
  2020-01-13 22:56:59 0088 DROP TABLE DROP_ANSWER_VIEWS
  2020-01-13 22:56:59 0091 END IF
2020-01-13 22:56:59 0094 Recordset_security_entry_in:
2020-01-13 22:56:59 0095 NOCONCATENATE
2020-01-13 22:56:59 0096 LOAD DISTINCT
2020-01-13 22:56:59 0097 *
2020-01-13 22:56:59 0098 RESIDENT Recordset_security_entry
2020-01-13 22:57:00      	5 fields found: entry_exit_id, entry_recordset_id, %entry_recordset_id, provider_creating_id, %entryquestionid, 
2020-01-13 22:57:00      1,661,987 lines fetched
2020-01-13 22:57:00 0007 Recordset_security_exit_in:
2020-01-13 22:57:00 0008 NOCONCATENATE
2020-01-13 22:57:00 0009 LOAD DISTINCT
2020-01-13 22:57:00 0010 *
2020-01-13 22:57:00 0011 RESIDENT Recordset_security_exit
2020-01-13 22:57:01      	5 fields found: entry_exit_id, exit_recordset_id, provider_creating_id, %exit_recordset_id, %exitquestionid, 
2020-01-13 22:57:01      1,908,976 lines fetched
2020-01-13 22:57:01 0013 Recordset_Group:
2020-01-13 22:57:01 0014 LOAD DISTINCT 
2020-01-13 22:57:01 0015  	provider_id,
2020-01-13 22:57:01 0016     visibility_group_id
2020-01-13 22:57:01 0017 RESIDENT USER_GROUP
2020-01-13 22:57:02      	2 fields found: provider_id, visibility_group_id, 
2020-01-13 22:57:02      36,026 lines fetched
2020-01-13 22:57:02 0020 INNER JOIN (Recordset_security_entry)
2020-01-13 22:57:02 0021 LOAD
2020-01-13 22:57:02 0022     recordset_id as %entry_recordset_id,
2020-01-13 22:57:02 0023     visibility_group_id,
2020-01-13 22:57:02 0024     visible
2020-01-13 22:57:02 0025 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT_RECORDSETVISIBILITY.qvd]
2020-01-13 22:57:02 0026 (qvd)
2020-01-13 22:57:04      	3 fields found: %entry_recordset_id, visibility_group_id, visible, 
2020-01-13 22:57:04      1,722,396 lines fetched
2020-01-13 22:57:04      Joining/Keeping
2020-01-13 22:57:05 0028 INNER JOIN (Recordset_security_exit)
2020-01-13 22:57:05 0029 LOAD
2020-01-13 22:57:05 0030     recordset_id as %exit_recordset_id,
2020-01-13 22:57:05 0031     visibility_group_id,
2020-01-13 22:57:05 0032     visible
2020-01-13 22:57:05 0033 FROM [lib://SPData_Beta/Extract/sp5_il_nil_qlik/E_SP5_IL_NIL_QLIK_SP_CLIENT_RECORDSETVISIBILITY.qvd]
2020-01-13 22:57:05 0034 (qvd)
2020-01-13 22:57:07      	3 fields found: %exit_recordset_id, visibility_group_id, visible, 
2020-01-13 22:57:07      1,722,396 lines fetched
2020-01-13 22:57:07      Joining/Keeping
2020-01-13 22:57:09 0036 Recordset:
2020-01-13 22:57:09 0037 NOCONCATENATE
2020-01-13 22:57:09 0038 LOAD
2020-01-13 22:57:09 0039 * 
2020-01-13 22:57:09 0040 RESIDENT Recordset_security_entry
2020-01-13 22:57:09      	7 fields found: %entry_recordset_id, entry_exit_id, entry_recordset_id, provider_creating_id, %entryquestionid, visibility_group_id, visible, 
2020-01-13 22:57:09      914,509 lines fetched
2020-01-13 22:57:09 0041 DROP TABLE Recordset_security_entry
2020-01-13 22:57:09 0044 CONCATENATE(Recordset)
2020-01-13 22:57:09 0045 LOAD
2020-01-13 22:57:09 0046 * 
2020-01-13 22:57:09 0047 RESIDENT Recordset_security_exit
2020-01-13 22:57:10      	7 fields found: %exit_recordset_id, entry_exit_id, exit_recordset_id, provider_creating_id, %exitquestionid, visibility_group_id, visible, 
2020-01-13 22:57:10      1,961,978 lines fetched
2020-01-13 22:57:10 0048 DROP TABLE Recordset_security_exit
2020-01-13 22:57:10 0050 Recordset_visibility:
2020-01-13 22:57:10 0051 LEFT JOIN (Recordset_Group)
2020-01-13 22:57:10 0052 LOAD DISTINCT
2020-01-13 22:57:10 0053 	*
2020-01-13 22:57:10 0054 RESIDENT Recordset
2020-01-13 22:57:12      	10 fields found: %entry_recordset_id, entry_exit_id, entry_recordset_id, provider_creating_id, %entryquestionid, visibility_group_id, visible, exit_recordset_id, %exit_recordset_id, %exitquestionid, 
2020-01-13 22:57:12      1,961,485 lines fetched
2020-01-13 22:57:12      Joining/Keeping
2020-01-13 22:57:34 0056 DROP TABLE Recordset
2020-01-13 22:57:35 0058 Visible:
2020-01-13 22:57:35 0059 Load DISTINCT
2020-01-13 22:57:35 0060 *,
2020-01-13 22:57:35 0061     1 AS Visible
2020-01-13 22:57:35 0062 RESIDENT Recordset_Group
2020-01-13 22:57:35 0063 WHERE visible = 1
2020-01-13 22:58:52      	12 fields found: visibility_group_id, provider_id, %entry_recordset_id, entry_exit_id, entry_recordset_id, provider_creating_id, %entryquestionid, visible, exit_recordset_id, %exit_recordset_id, %exitquestionid, Visible, 
2020-01-13 22:58:52      115,059,384 lines fetched
2020-01-13 22:58:52 0066 LEFT JOIN(Visible)
2020-01-13 22:58:52 0067 Load DISTINCT
2020-01-13 22:58:52 0068 *,
2020-01-13 22:58:52 0069     1 AS not_Visible
2020-01-13 22:58:52 0070 RESIDENT Recordset_Group
2020-01-13 22:58:52 0071 WHERE visible = 0
2020-01-13 23:00:23      	12 fields found: visibility_group_id, provider_id, %entry_recordset_id, entry_exit_id, entry_recordset_id, provider_creating_id, %entryquestionid, visible, exit_recordset_id, %exit_recordset_id, %exitquestionid, not_Visible, 
2020-01-13 23:00:23      56,178 lines fetched
2020-01-13 23:00:23      Joining/Keeping
2020-01-13 23:01:01 0073 DROP TABLE Recordset_Group
2020-01-13 23:01:02 0076 Recordset_visibility:
2020-01-13 23:01:02 0077 NOCONCATENATE
2020-01-13 23:01:02 0078 LOAD DISTINCT
2020-01-13 23:01:02 0079 *,
2020-01-13 23:01:02 0080 	entry_exit_id AS [Entry Exit Id]
2020-01-13 23:01:02 0081 RESIDENT Visible
2020-01-13 23:01:02 0082 WHERE match(Visible, 1)  AND isNull(not_Visible)
2020-01-13 23:01:53      	14 fields found: provider_id, visibility_group_id, entry_exit_id, entry_recordset_id, exit_recordset_id, %entry_recordset_id, provider_creating_id, %entryquestionid, %exit_recordset_id, %exitquestionid, visible, Visible, not_Visible, Entry Exit Id, 
2020-01-13 23:01:53      115,059,384 lines fetched
2020-01-13 23:01:53 0084 DROP TABLE Visible
2020-01-13 23:01:53 0095 EE_RECORDSET_ACCESS:
2020-01-13 23:01:53 0096 NOCONCATENATE
2020-01-13 23:01:53 0097 LOAD DISTINCT
2020-01-13 23:01:53 0098 	TIER_LINK,
2020-01-13 23:01:53 0099     [Client Provider Created By Id]
2020-01-13 23:01:53 0100 RESIDENT INHERENT_SECURITY
2020-01-13 23:01:56      	2 fields found: TIER_LINK, Client Provider Created By Id, 
2020-01-13 23:01:56      13,848,823 lines fetched
2020-01-13 23:01:56 0009 CONCATENATE(Recordset_security_entry_in)
2020-01-13 23:01:56 0010 LOAD
2020-01-13 23:01:56 0011 * 
2020-01-13 23:01:56 0012 RESIDENT Recordset_security_exit_in
2020-01-13 23:01:58      	5 fields found: entry_exit_id, exit_recordset_id, provider_creating_id, %exit_recordset_id, %exitquestionid, 
2020-01-13 23:01:58      3,570,963 lines fetched
2020-01-13 23:01:58 0013 DROP TABLE Recordset_security_exit_in
2020-01-13 23:01:58 0015 RENAME TABLE Recordset_security_entry_in to Recordset_security
2020-01-13 23:01:58 0017 INNER JOIN(EE_RECORDSET_ACCESS)
2020-01-13 23:01:58 0018 LOAD    
2020-01-13 23:01:58 0019 *,
2020-01-13 23:01:58 0020     provider_creating_id AS [Client Provider Created By Id],
2020-01-13 23:01:58 0021 	entry_exit_id AS [Entry Exit Id]
2020-01-13 23:01:58 0022 RESIDENT Recordset_security
2020-01-13 23:01:59      	10 fields found: entry_exit_id, entry_recordset_id, %entry_recordset_id, provider_creating_id, %entryquestionid, exit_recordset_id, %exit_recordset_id, %exitquestionid, Client Provider Created By Id, Entry Exit Id, 
2020-01-13 23:01:59      3,570,963 lines fetched
2020-01-13 23:01:59      Joining/Keeping
2020-01-14 05:05:51 0023 DROP TABLE Recordset_security
2020-01-14 05:10:30 0096 EERECORDSET_ACCESS:
2020-01-14 05:10:30 0097 LOAD DISTINCT 
2020-01-14 05:10:30 0098     %entry_recordset_id,
2020-01-14 05:10:30 0099 	[TIER_LINK] & '|' & [Entry Exit Id] AS %SA_EE_TEST,
2020-01-14 05:10:30 0100     %exit_recordset_id
2020-01-14 05:10:30 0101 RESIDENT EE_RECORDSET_ACCESS
